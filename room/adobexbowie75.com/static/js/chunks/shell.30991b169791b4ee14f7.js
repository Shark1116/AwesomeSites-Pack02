(self.webpackChunk=self.webpackChunk||[]).push([[204],{2025:(n,e,t)=>{"use strict";t.d(e,{Z:()=>_});var i=t(5782),o=t(8159),s=t(1485),a=t(1892),r=t.n(a),l=t(5760),c=t.n(l),d=t(8311),p=t.n(d),h=t(8192),u=t.n(h),m=t(8060),g=t.n(m),b=t(4865),f=t.n(b),x=t(2464),A={};A.styleTagTransform=f(),A.setAttributes=u(),A.insert=p().bind(null,"head"),A.domAPI=c(),A.insertStyleElement=g();r()(x.Z,A);x.Z&&x.Z.locals&&x.Z.locals;var C,$=t(9667),w=t(7292),v=t(7966),y=t(2856),B=t(3478),k=t(298),z=t(3907);const S=({context:n,options:e,props:t})=>i.dy`
        <button
            class="btnCircle ${e.className}"
            @click=${n.onClick}
            @pointerenter=${n.onPointerEnter}
            @pointerleave=${n.onPointerLeave}
            ?visible=${t.visible}
        >
            <canvas data-ui="canvas"></canvas>
            <div data-ui="icon">${t.icon?(0,w.Z)(t.icon,"btnCircle__icon"):null}</div>
            <div class="btnCircle__text" data-ui="text">${e.text}</div>
        </button>
    `;const _=(0,o.c1)(s.Z)(C=(0,o.c1)((0,y.E4)())(C=class extends o.wA{constructor(...n){super(...n),this.options={template:S,onClick:()=>{},className:"",text:v.Z.get("game-close-overlay")},this.props={visible:!1,active:!1,over:!1,disabled:!1,icon:"close",cIcon:"#ffffff",cBg:"#000000",size:[]},this.assets={buttonOver:"static/audio/interaction/button-over.mp3#audio",buttonOut:"static/audio/interaction/button-off.mp3#audio",buttonClick:"static/audio/interaction/button-click.mp3#audio"},this.onClick=()=>{this.props.disabled||(this.options.onClick(),z.Z.play(this.assets.buttonClick,{clone:!0}))},this.onPointerEnter=()=>{this.props.disabled||(this.props.over=!0)},this.onPointerLeave=()=>{this.props.disabled||(this.props.over=!1)},this.draw=()=>{const[n,e]=this.props.size,t=this.cx,{radius:i}=this.circleMask;this.radClamp=Math.max(.5*n-2,0),t.clearRect(0,0,n,e),this.drawOutCircle(t),this.drawInCircles(t),t.save(),t.globalCompositeOperation="destination-in",(0,B.Z)(t,.5*n,.5*e,this.radClamp*i),t.fill(),t.restore()}}async onSetup(){this.cv=this.ui.canvas,this.cx=this.cv.getContext("2d"),this.observer=new ResizeObserver((n=>{const{contentRect:e}=n[0];this.props.size=[1.3*e.width,1.3*e.height]})),this.observer.observe(this.el),$.ZP.set(this.cv,{left:"50%",top:"50%",position:"absolute"}),this.setupShapes()}setupShapes(){this.circleMask={radius:1},this.circleOut={color:this.props.cBg,radius:1};const n=["#fad5eb","#aedc7e"];this.circlesIn=n.map(((e,t)=>({i:t,color:n[t],radius:0,lineWidth:0})))}setActive(n,{firstTrigger:e}){if(e)return $.ZP.set(this.circleMask,{radius:0}),void $.ZP.set([this.ui.icon,this.ui.text],{opacity:0});const{circleMask:t,circlesIn:i,ui:o}=this,[s]=this.props.size;this.tlActive?.kill();const a=this.tlActive=$.ZP.timeline({onStart:()=>this.props.visible=!0,onComplete:()=>this.props.visible=n,onUpdate:this.draw}).to(t,{radius:n?.8:0,duration:.6,ease:n?"back.out":"back.in"},0).to(o.text,{opacity:+n,duration:.2,stagger:.08,ease:"sine.out"},n?.1:0);n?a.set(o.icon,{opacity:1},.1).set(i,{radius:0,lineWidth:0},0).call((n=>this.updateIconColor(n)),[this.props.cIcon],0).to(i,{lineWidth:s,duration:1,ease:"power3.out",stagger:.2},0).to(i,{radius:1,duration:1,ease:"power3.out",stagger:.2},0).to(i,{lineWidth:0,duration:1,ease:"power3.out",stagger:.2},.2):a.to(o.icon,{opacity:0,duration:.2,stagger:.08,ease:"sine.out"},0)}setOver(n,{firstTrigger:e}){if(e)return;const[t]=this.props.size,{circlesIn:i,circleMask:o,circleOut:s,ui:a}=this;this.tlOver?.kill();const r=this.tlOver=$.ZP.timeline({onUpdate:this.draw});n?(z.Z.play(this.assets.buttonOver,{clone:!0}),r.set(i,{radius:0,lineWidth:0}).to(o,{radius:1,duration:1.1,ease:"expo.out"},0).to(i,{lineWidth:t-2,duration:1.1,ease:"power3.out",stagger:.2},0).to(i,{radius:1,duration:1,ease:"power3.out",stagger:.2},0).to(i,{lineWidth:0,duration:1,ease:"power3.out",stagger:.2},.2).to(s,{lineWidth:2,duration:1,ease:"power3.out"},.5).to(a.text,{x:-4,duration:.7,ease:"power2.out"},0).call((n=>this.updateIconColor(n)),["#ffffff"==this.props.cIcon?"#000000":"#ffffff"],.5)):(z.Z.play(this.assets.buttonOut,{clone:!0}),r.to(s,{lineWidth:t-2,duration:1,ease:"power3.out"},0).to(i,{lineWidth:0,duration:.6,ease:"power3.out"},0).to(o,{radius:.8,duration:1.6,ease:"expo.out"},.2).to(a.text,{x:0,duration:.7,ease:"power2.out"},0).call((n=>this.updateIconColor(n)),[this.props.cIcon],.3))}setColor(n){this.updateIconColor(n)}updateIconColor(n){this.el.style.setProperty("--btnColor",n)}setCBg(n){this.el.style.setProperty("--btnBgColor",n)}setSize([n,e]){(0,k.Z)(this.cx,n,e),$.ZP.set(this.cv,{marginLeft:-n/2,marginTop:-e/2}),this.circleOut.lineWidth=n-2,this.props.visible&&this.draw()}drawOutCircle(n){const[e,t]=this.props.size,{color:i,radius:o,lineWidth:s}=this.circleOut;n.save(),n.strokeStyle=i,n.lineWidth=s,(0,B.Z)(n,.5*e,.5*t,this.radClamp*o),n.stroke(),n.restore()}drawInCircles(n){const[e,t]=this.props.size;for(let i=0;i<this.circlesIn.length;i++){const o=this.circlesIn[i],{color:s,radius:a,lineWidth:r}=o;r&&(n.save(),n.strokeStyle=s,n.lineWidth=r,(0,B.Z)(n,.5*e,.5*t,this.radClamp*a),n.stroke(),n.restore())}}onDestroy(){this.observer.disconnect()}})||C)||C},5451:(n,e,t)=>{"use strict";t.d(e,{Z:()=>_});var i=t(5782),o=t(8159),s=t(1485),a=t(1892),r=t.n(a),l=t(5760),c=t.n(l),d=t(8311),p=t.n(d),h=t(8192),u=t.n(h),m=t(8060),g=t.n(m),b=t(4865),f=t.n(b),x=t(1121),A={};A.styleTagTransform=f(),A.setAttributes=u(),A.insert=p().bind(null,"head"),A.domAPI=c(),A.insertStyleElement=g();r()(x.Z,A);x.Z&&x.Z.locals&&x.Z.locals;var C,$=t(9667),w=t(7292),v=t(298),y=t(6597),B=t(3478),k=t(3907),z=t(2856);const S=({context:n,options:e,props:t})=>i.dy`
        <button
            class="btnMain ${e.className}"
            @click=${n.onClick}
            @pointerenter=${n.onPointerEnter}
            @pointerleave=${n.onPointerLeave}
            ?visible=${t.visible}
        >
            <canvas data-ui="canvas"></canvas>
            <p class="btnMain__text" data-ui="text">
                <span>${t.text}</span>${t.icon?(0,w.Z)(t.icon,"btnMain__icon"):null}
            </p>
            ${e.link?i.dy` <a href="${e.link}" ?download=${e.download}></a> `:null}
        </button>
    `;const _=(0,o.c1)(s.Z)(C=(0,o.c1)((0,z.E4)())(C=class extends o.wA{constructor(...n){super(...n),this.options={template:S,onClick:()=>{},className:""},this.props={icon:"",text:"Button Main",visible:!1,active:!1,over:!1,color:"#ffffff",bgColor:"#000000",size:[80,80]},this.assets={buttonOver:"static/audio/interaction/button-over.mp3#audio",buttonOut:"static/audio/interaction/button-off.mp3#audio",buttonClick:"static/audio/interaction/button-click.mp3#audio"},this.onClick=()=>{this.options.onClick(),k.Z.play(this.assets.buttonClick,{clone:!0})},this.onPointerEnter=()=>{this.props.over=!0},this.onPointerLeave=()=>{this.props.over=!1},this.draw=()=>{const[n,e]=this.props.size,t=this.cx;t.clearRect(0,0,n,e),this.drawOutRect(t),this.drawInCircles(t),t.save(),t.globalCompositeOperation="destination-in",this.drawOutRect(t),t.restore()}}async onSetup(){this.cv=this.ui.canvas,this.cx=this.cv.getContext("2d"),this.observer=new ResizeObserver((n=>{const{contentRect:e}=n[0];e.width&&(this.props.size=[e.width,e.height])})),this.observer.observe(this.el),this.setupShapes()}setupShapes(){this.rectOut={color:"#000000",scale:1};const n=["#fad5eb","#aedc7e"];this.circlesIn=n.map(((e,t)=>({i:t,color:n[t],radius:0,lineWidth:0})))}setActive(n,{firstTrigger:e}){const{ui:t,rectOut:i,circlesIn:o}=this;if(e&&($.ZP.set(i,{scale:0},0),!this.options.forceAnimation))return;const[s]=this.props.size;this.tlActive?.kill();const a=this.tlActive=$.ZP.timeline({onStart:()=>this.props.visible=!0,onComplete:()=>this.props.visible=n,onUpdate:this.draw}).to(i,{scale:n?.9:0,duration:1,ease:"expo.out"},n?0:.2).to(t.text.children,{opacity:+n,duration:.2,stagger:.06,ease:"sine.out"},n?.1:0);n&&a.set(o,{radius:0,lineWidth:0},0).to(o,{lineWidth:s,duration:1,ease:"power3.out",stagger:.2},0).to(o,{radius:1,duration:1,ease:"power3.out",stagger:.2},0).to(o,{lineWidth:0,duration:1,ease:"power3.out",stagger:.2},.2)}setOver(n,{firstTrigger:e}){if(e)return;const[t]=this.props.size,{circlesIn:i,rectOut:o}=this;this.tlOver?.kill();const s=this.tlOver=$.ZP.timeline({onUpdate:this.draw});n?(k.Z.play(this.assets.buttonOver,{clone:!0}),s.set(i,{radius:0,lineWidth:0},0).to(i,{lineWidth:t,duration:1.1,ease:"power3.out",stagger:.2},0).to(i,{radius:1,duration:1,ease:"power3.out",stagger:.2},0).to(i,{lineWidth:0,duration:1,ease:"power3.out",stagger:.2},.2).to(o,{scale:1,duration:1.1,ease:"expo.out"},0)):(k.Z.play(this.assets.buttonOut,{clone:!0}),s.to(i,{lineWidth:0,duration:.6,ease:"power3.out"},0).to(o,{scale:.9,duration:1.6,ease:"expo.out"},0))}setColor(n){this.el.style.setProperty("--btnColor",n)}setBgColor(n){this.el.style.setProperty("--btnBgColor",n)}setSize([n,e]){(0,v.Z)(this.cx,n,e),this.rectOut.lineWidth=n-2,this.draw()}drawOutRect(n){const{color:e,scale:t}=this.rectOut,[i,o]=this.props.size,s=i*t,a=o*t,r=.55*a;n.save(),n.fillStyle=e,(0,y.Z)(n,.5*(i-s),.5*(o-a),s,a,r,r,r,r),n.fill(),n.restore()}drawInCircles(n){const[e,t]=this.props.size;for(let i=0;i<this.circlesIn.length;i++){const o=this.circlesIn[i],{color:s,radius:a,lineWidth:r}=o;r&&(n.save(),n.strokeStyle=s,n.lineWidth=r,(0,B.Z)(n,.5*e,.5*t,Math.max(.5*e-2,0)*a),n.stroke(),n.restore())}}onDestroy(){this.observer.disconnect()}})||C)||C},9613:(n,e,t)=>{"use strict";t.d(e,{Z:()=>k});var i=t(7292),o=t(8159),s=t(1485),a=t(5782),r=t(1892),l=t.n(r),c=t(5760),d=t.n(c),p=t(8311),h=t.n(p),u=t(8192),m=t.n(u),g=t(8060),b=t.n(g),f=t(4865),x=t.n(f),A=t(9062),C={};C.styleTagTransform=x(),C.setAttributes=m(),C.insert=h().bind(null,"head"),C.domAPI=d(),C.insertStyleElement=b();l()(A.Z,C);A.Z&&A.Z.locals&&A.Z.locals;var $,w=t(7966),v=t(5451),y=t(9667);const B=({props:n})=>a.dy`
    <div class="downloadOverlay" ?visible=${n.visible}>
        ${(0,i.Z)("download-desktop","downloadOverlay__icon")}
        <p class="downloadOverlay__text">${w.Z.get("game-mobile-download-info")}</p>
        <div class="downloadOverlay__btnWrapper" data-ui="btnWrapper"></div>
    </div>
`;const k=(0,o.c1)(s.Z)($=class extends o.wA{constructor(...n){super(...n),this.options={template:B,link:null},this.props={visible:!1,active:!1,activeTrigger:!1}}async onSetup(){const{link:n}=this.options;n&&await this.resetButton({link:n})}async setActive(n,{firstTrigger:e}){e||(this.props.visible=!0,y.ZP.killTweensOf(this.el),y.ZP.to(this.el,{alpha:+n,duration:.5,ease:"quad.out",delay:n?.1:0,onComplete:()=>this.props.visible=n}))}async resetButton({link:n}={}){this.btnDownload?.destroy(),this.btnDownload=null,this.btnDownload=await(new v.Z).setup({options:{appendTo:this.ui.btnWrapper,className:"downloadOverlay__btn",onClick:()=>this.props.activeTrigger=!1,forceAnimation:!0,download:n,link:n},props:{active:()=>this.props.active,text:w.Z.getValue("game-mobile-download-ok-cta")}})}})||$},2736:(n,e,t)=>{"use strict";t.d(e,{Z:()=>m});var i,o,s=t(8159),a=t(4398),r=t(6078),l=t(8937),c=t(6852),d=t(7111),p=t(6976),h=t(6771),u=t(3765);const m=(0,s.c1)(a.Z)((o=class n extends s.wA{constructor(...n){super(...n),this.options={appendTo:document.body},this.props={active:!0,width:1,height:1,viewport:()=>(0,u.Z)().state.viewport,fov:()=>(0,u.Z)().state.camera.fov,moveSpeed:.1}}async onSetup(){const{width:e,height:t}=this.props.viewport;this.clock=new h.S,this.renderer=new r.C({antialias:!1}),this.renderer.setPixelRatio((0,u.Z)().state.dpr),this.renderer.setSize(e,t),this.renderer.setClearColor(0),this.renderer.setClearAlpha(0),this.renderer.autoClear=!1,this.options.appendTo.appendChild(this.renderer.domElement),this.scene=new l.x,this.scene.name="MainScene",n.instance=this,this.renderer.clear(),await this.setupCameras(),this.addEvents()}addEvents(){this.keysPressed={KeyW:!1,KeyA:!1,KeyS:!1,KeyD:!1,ArrowLeft:!1,ArrowRight:!1},document.addEventListener("keydown",(n=>{this.keysPressed[n.code]=!0}),!1),document.addEventListener("keyup",(n=>{this.keysPressed[n.code]=!1}),!1)}async setupCameras(){const{width:n,height:e}=this.props.viewport;this.orthographicCamera=new c.i(1,1,1,1,.1,30),this.orthographicCamera.position.set(0,0,1),this.orbitCamera=new d.c(40,n/e,.1,30),this.orbitCamera.position.set(0,3,3),this.controls=new p.z(this.orbitCamera,this.renderer.domElement),this.controls.enabled=!1}render(){const{renderer:n,scene:e,orthographicCamera:t}=this;this.controls.update()}setViewport({width:n,height:e,dpr:t}){this.renderer.setSize(n,e),this.renderer.setPixelRatio(t),this.orbitCamera.aspect=n/e,this.orbitCamera.updateProjectionMatrix(),this.orthographicCamera.left=-n/2,this.orthographicCamera.right=n/2,this.orthographicCamera.top=e/2,this.orthographicCamera.bottom=-e/2,this.orthographicCamera.updateProjectionMatrix()}setFov(n){this.orbitCamera.fov=n,this.orbitCamera.updateProjectionMatrix()}static getInstance(){return n.instance}static getRenderer(){return n.instance.renderer}},o.instance=void 0,o.renderer=void 0,i=o))||i},1925:(n,e,t)=>{"use strict";t.d(e,{Z:()=>Q});var i=t(5782),o=t(8159),s=t(1485),a=t(1892),r=t.n(a),l=t(5760),c=t.n(l),d=t(8311),p=t.n(d),h=t(8192),u=t.n(h),m=t(8060),g=t.n(m),b=t(4865),f=t.n(b),x=t(2568),A={};A.styleTagTransform=f(),A.setAttributes=u(),A.insert=p().bind(null,"head"),A.domAPI=c(),A.insertStyleElement=g();r()(x.Z,A);x.Z&&x.Z.locals&&x.Z.locals;var C=t(9667),$=t(9550),w=t(7067),v={};v.styleTagTransform=f(),v.setAttributes=u(),v.insert=p().bind(null,"head"),v.domAPI=c(),v.insertStyleElement=g();r()(w.Z,v);w.Z&&w.Z.locals&&w.Z.locals;var y=t(4737),B=(t(9715),t(3181)),k=t(5451),z=t(7966),S=t(2025),_=t(6376),Z=t(9611),T=t(1682),D=t(977),I=t(3765),E=t(3907),W=t(4939),F=t(4655);const O=navigator.userAgent.includes("OS 14");console.log("🚀 ~ isIOS14",O);const V=O;var P;(0,_.gn)();const U=({options:n,props:e})=>i.dy`
        <div class="treasureCard">
            <!-- <div data-ui="bg" class="treasureCard__bg"></div> -->
            <div data-ui="title" class="treasureCard__title"></div>
            <div data-ui="treasure" class="treasureCard__treasure">
                ${V?i.dy` <img data-ui="img" alt="" /> `:i.dy` <video data-ui="video" loop muted playsinline></video> `}
            </div>

            <div data-ui="adobeIcons" class="treasureCard__adobeIcons">
                <span class="treasureCard__adobeIconText">${z.Z.get("game-available-in")}</span>
                <!--                 <img
                    class="treasureCard__adobeIcon"
                    src="${"/"}static/images/treasure/adobe-photoshop.png"
                    alt=""
                /> -->
                <img class="treasureCard__adobeIcon" src="${"/"}static/images/treasure/adobe-designer.png" alt="" />
            </div>
        </div>
    `;const M=(0,o.c1)(s.Z)(P=class extends o.wA{constructor(...n){super(...n),this.options={template:U,data:y.Z[0],closeBtn:!1,onClose:()=>{}},this.props={active:!1,locked:!0,lang:()=>(0,I.Z)().state.lang}}async onSetup(){const{color:n,titleId:e,downloadSrc:t}=this.options.data;this.vo=await this.setupVoiceOver(),this.title=await(new B.Z).setup({options:{appendTo:this.ui.title,text:z.Z.getValue(e)}}),this.btnClose=await(new S.Z).setup({options:{appendTo:this.el,className:"btnClose",onClick:this.options.onClose},props:{color:n}}),this.btnDownload=await(new k.Z).setup({options:{appendTo:this.el,className:"btnDownload",link:_.Vq?null:t,download:!0,onClick:()=>{_.Vq&&I.x.emit("downloadOverlayOpen",{downloadSrc:t});const n=this.options.data.id.replace("treasure_","");(0,F.L9)("game",`download_${n}`)}},props:{color:n,text:z.Z.getValue("game-download-cta"),icon:"download"}})}setLang(n){this.btnDownload.props.text=z.Z.getValue("game-download-cta"),this.title.ui.text.innerText=z.Z.getValue(this.options.data.titleId)}async setupVoiceOver(){const{id:n}=this.options.data,e=T.fV.find((e=>e.treasureId===n));return(new D.Z).setup({options:{...e,color:"black",appendTo:this.el,onEnded:n=>{E.Z.setVolume("treasureRevealBgLoop",1,!0,1)}}})}setupMedia(){const{videoSrc:n,imgSrc:e}=this.options.data;if(this.ui.video){const e=(0,Z.WV)(`<source src="${n}.mp4" type='video/mp4; codecs="hvc1"' />`),t=(0,Z.WV)(`<source src="${n}.webm" type="video/webm" />`);this.ui.video.appendChild(e),this.ui.video.appendChild(t)}else this.ui.img.src=e}show({delay:n=1,treasureDelay:e=0,initialScale:t=0}={}){this.props.active=!0,this.title.show({delay:n+.6,initialScale:1.18,duration:2}),this.ui.video&&this.ui.video.play();const i=_.Vq?.75:.5;C.ZP.killTweensOf(this.ui.treasure),C.ZP.fromTo(this.ui.treasure,{scale:t},{scale:i,duration:2,delay:e,ease:"expo.out"}),C.ZP.to(this.ui.treasure,{alpha:1,duration:.2,delay:e}),this.secondPhaseDelay?.kill(),this.secondPhaseDelay=C.ZP.delayedCall(n,(()=>{C.ZP.killTweensOf(this.ui.treasure,"scale"),C.ZP.to(this.ui.treasure,{scale:1,duration:1.5,ease:"power3.inOut"})})),C.ZP.delayedCall(n+.85,(()=>{this.btnClose.props.active=!0,this.btnDownload.props.active=!0,C.ZP.to(this.ui.adobeIcons,{alpha:1}),this.vo.props.active=!0,E.Z.play("treasureRevealBgLoop",{loop:!0,volume:.4})}));const{id:o}=this.options.data,s=o.replace("treasure_","");(0,F.Kq)(`/treasure-overview/${s}`,`Treasure detail ${s}`),(0,F.L9)("game",`found_${o}`)}hide(){this.btnClose.props.active=!1,this.btnDownload.props.active=!1;const n=.25,e="power2.inOut";this.title.hide({duration:n,scale:.6,ease:e}),this.secondPhaseDelay?.kill(),C.ZP.killTweensOf([this.ui.treasure,this.ui.adobeIcons]),C.ZP.to(this.ui.treasure,{scale:.6,alpha:0,duration:n,delay:.05,ease:e}),C.ZP.to(this.ui.adobeIcons,{alpha:0,duration:n}),this.vo.props.active=!1,E.Z.pause("treasureRevealBgLoop"),C.ZP.delayedCall(.4,(()=>{this.props.active=!1,this.ui.video&&this.ui.video.pause()}))}onActive(){this.options.appendTo.appendChild(this.el)}offActive(){this.options.appendTo.contains(this.el)&&this.options.appendTo.removeChild(this.el)}})||P;var R,L=t(7124),G=t(9656),q=t(8036),N=t(2856);const Y=({options:n,props:e})=>i.dy`
    <div class="treasureReveal">
        <div data-ui="treasureFound" class="treasureReveal__treasureFound  textTitle1">
            ${z.Z.get("game-treasure-found")}
            <div data-ui="treasureFoundText" class="treasureReveal__treasureFoundText"></div>
        </div>
    </div>
`,j={};y.Z.forEach(((n,e)=>{const t=(0,q.Z)(e+1,2);j[n.id]=`static/audio/experience/treasure-${t}-overlay.mp3#audio`}));let H=(0,o.c1)(s.Z)(R=(0,o.c1)((0,N.E4)())(R=class extends o.wA{constructor(...n){super(...n),this.options={template:Y,inGallery:!1,onClose:()=>{},onCloseComplete:()=>{}},this.props={active:!1,visible:!1,text:()=>({lang:(0,I.Z)().state.lang,totalItemsCollected:$.h8.props.totalItemsCollected})},this.assets=j,this.card=null,this.handleLoadSecondaryItems=()=>{this.cards.forEach((n=>n.setupMedia()))},this.handleShowTreasure=n=>{this.showTreasure(n)}}async onSetup(){this.cards=await this.setupCards(),this.colorMask=await(new L.Z).setup({options:{appendTo:this.el}}),I.x.on("loadSecondaryItems",this.handleLoadSecondaryItems),I.x.on("showTreasure",this.handleShowTreasure)}setText({totalItemsCollected:n}){const e=z.Z.getValue("game-treasure-count",{"total-found":n});this.ui.treasureFoundText.innerText=e,this.ui.treasureFound.innerText=z.Z.getValue("game-treasure-found")}setupCards(){return Promise.all(y.Z.map((n=>(new M).setup({options:{appendTo:this.el,data:n,closeBtn:!0,onClose:()=>{this.props.active=!1,this.options.onClose(),I.x.emit("treasureRevealClose")}},props:{locked:!1}}))))}async showTreasure({data:n,duration:e=1,stagger:t=.25,inGallery:i=!1}={}){const o=n||y.Z[(0,G.Z)(0,y.Z.length-1)];this.props.active=!0;const s=i?.1:.65,a=i?.11:1.8,r=i?.4:.2;this.ui.treasureFound.style.color=n.inverseColor?"black":"white",this.colorMask.show({data:o,duration:e,stagger:t}),this.currentCard=this.cards.find((n=>n.options.data.id===o.id)),this.currentCard.show({delay:a,treasureDelay:s,initialScale:r}),i||(C.ZP.fromTo(this.ui.treasureFound,{scale:1.2},{scale:1,duration:1.5,delay:s+.22,ease:"expo.out"}),C.ZP.to(this.ui.treasureFound,{alpha:1,duration:.3,delay:s+.22}),C.ZP.to(this.ui.treasureFound,{alpha:0,scale:.98,duration:.3,delay:a+.1})),this.delay?.kill();const l=o.id.replace("-","_"),c=this.assets[l];W.W.stopAllAudio(),E.Z.play(c)}async removeTreasure(){this.colorMask.hide(),this.currentCard?.hide(),this.delay?.kill(),this.delay=C.ZP.delayedCall(1,(()=>this.props.visible=!1))}setActive(n){this.el.style.pointerEvents=n?"auto":"none"}setVisible(n){this.el.style.visibility=n?"visible":"hidden"}onActive(){this.props.visible=!0,$.h8.pause(),(0,I.Z)().state.pauseRenderer=!0}offActive({firstTrigger:n}){n||this.removeTreasure()}offVisible({firstTrigger:n}){n||(this.options.onCloseComplete(),I.x.emit("treasureRevealCloseComplete"))}})||R)||R;const Q=H},2835:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>Ln});var i=t(5782),o=t(301),s=t(1431),a=t(8159),r=t(1485),l=t(2856),c=t(470),d=t(1853);t(5994);var p=t(7501),h=t(4148);let u,m;function g(n,e){if(!e&&!m)throw new Error("No renderer set to init textures.  Pass in a renderer or use the initLoadTexture global before calling loadTexture. ");return Promise.all([t.e(604),t.e(766),t.e(937)]).then(t.bind(t,1937)).catch((()=>{console.warn("Could not load TextureLoader, is three installed?")})).then((({TextureLoader:e})=>(u||(u=new e),new Promise(((e,t)=>{u.load(n,(n=>{e(n)}),(()=>{}),(n=>{t(n)}))})))))}var b=t(6859),f=t(402),x=t(1364),A=t(5301),C=t(8185),$=t(6376),w=t(2736);var v=t(3765),y=t(4937),B=t(6905),k=t(6451),z=t(7361),S=t(9550),_=t(2148),Z=t(5549),T=t(1892),D=t.n(T),I=t(5760),E=t.n(I),W=t(8311),F=t.n(W),O=t(8192),V=t.n(O),P=t(8060),U=t.n(P),M=t(4865),R=t.n(M),L=t(3616),G={};G.styleTagTransform=R(),G.setAttributes=V(),G.insert=F().bind(null,"head"),G.domAPI=E(),G.insertStyleElement=U();D()(L.Z,G);L.Z&&L.Z.locals&&L.Z.locals;var q=t(9667),N=t(7292),Y=t(9519),j={};j.styleTagTransform=R(),j.setAttributes=V(),j.insert=F().bind(null,"head"),j.domAPI=E(),j.insertStyleElement=U();D()(Y.Z,j);Y.Z&&Y.Z.locals&&Y.Z.locals;var H=t(7966),Q=t(4176),J={};J.styleTagTransform=R(),J.setAttributes=V(),J.insert=F().bind(null,"head"),J.domAPI=E(),J.insertStyleElement=U();D()(Q.Z,J);Q.Z&&Q.Z.locals&&Q.Z.locals;const K=({text:n="Text",id:e="",required:t=!0,options:o=["Lorem"],defaultOption:s,onChange:a=null}={})=>{let r=!1;const l=o.indexOf(s)>=0?s:o[0];return H.Z.setLang(l),i.dy`
        <div class="formSelect">
            <!-- ${i.dy` -->
                  <!-- `} -->
            <ul class="js-dropdown  formSelect__dropdown">
                ${o.map((n=>i.dy`<li class="text-body2" @click=${e=>((n,e)=>{const t=e.currentTarget.parentNode.parentNode,i=t.querySelector(".js-placeholder"),o=t.querySelector(".js-dropdown");i.innerText=n,console.log("🚀 ~ selectItem ~ option",n),H.Z.setLang(n),a&&a(n),o.style.display="none"})(n,e)}>${n}</li>`))}
            </ul>

            <div class="formSelect__selectedText" @click=${n=>{const e=n.currentTarget.parentNode.querySelector(".js-dropdown");r=!r,e.style.display=r?"block":"none"}}>
                <div class="js-placeholder  formSelect__placeholder text-body2">${l}</div>
                ${(0,N.Z)("arrow-down","formSelect__arrow")}
            </div>
        </div>
    `};var X;const nn=({context:n})=>i.dy`
        <div class="languageSelect">
            ${K({options:Object.values(Z.bn),defaultOption:(0,v.Z)().state.lang,onChange:n.onChange})}
        </div>
    `;const en=(0,a.c1)(r.Z)(X=class extends a.wA{constructor(...n){super(...n),this.options={template:nn},this.props={},this.onChange=n=>{(0,v.Z)().state.lang=n}}async onSetup(){}})||X;var tn=t(409),on={};on.styleTagTransform=R(),on.setAttributes=V(),on.insert=F().bind(null,"head"),on.domAPI=E(),on.insertStyleElement=U();D()(tn.Z,on);tn.Z&&tn.Z.locals&&tn.Z.locals;var sn;const an=({context:n,props:e})=>i.dy`
    <div class="soundToggle" @click=${n.handleClick}>
        ${(0,N.Z)("sound-on","soundToggle__icon")} ${(0,N.Z)("sound-off","soundToggle__icon")}
    </div>
`;const rn=(0,a.c1)(r.Z)(sn=class extends a.wA{constructor(...n){super(...n),this.options={template:an},this.props={muted:()=>(0,v.Z)().state.muted},this.handleClick=()=>{(0,v.Z)().state.muted=!(0,v.Z)().state.muted}}async onSetup(){}setMuted(n){this.ui["sound-on"].style.visibility=n?"hidden":"visible",this.ui["sound-off"].style.visibility=n?"visible":"hidden"}})||sn;var ln,cn=t(4655);const dn=[{textId:"landing-subscribe-instagram",urlId:"landing-subscribe-instagram-url"}],pn=({props:n,context:e})=>i.dy`
        <footer class="footer">
            <div class="footer__left" style=${(0,i.Ve)({visibility:n.hideUI?"hidden":"visible"})}>
                <p data-ui="socialTitle" class="footer__socialTitle">
                    ${H.Z.get("landing-subscribe-updates")}
                    ${dn.map((n=>i.dy`
                            <span class="footer__socialLink">
                                ${H.Z.get(n.textId)} ${(0,N.Z)("arrow-external","footer__socialLinkIcon")}
                                <a
                                    href="${H.Z.getValue(n.urlId)}"
                                    target="_blank"
                                    @click=${e.handleSocialLinkClick}
                                >
                                </a>
                            </span>
                        `))}
                </p>
            </div>

            <div
                class="footer__right"
                @pointerenter=${$.Vq?null:e.onPointerEnter}
                @pointerleave=${$.Vq?null:e.onPointerLeave}
            >
                <div class="footer__buttons" style=${(0,i.Ve)({visibility:n.hideUI?"hidden":"visible"})}>
                    <button class="footer__externalLink">
                        ${H.Z.get("global-terms")}
                        <a data-ui="termsLink" href="" target="_blank"></a>
                    </button>
                    <button class="footer__externalLink">
                        ${H.Z.get("global-privacy")}
                        <a data-ui="privacyLink" href="" target="_blank"></a>
                    </button>
                </div>

                <div data-ui="langSelect" class="footer__langSelect"></div>

                <div data-ui="sound" class="footer__sound"></div>
            </div>
        </footer>
    `;const hn=(0,a.c1)(r.Z)(ln=class extends a.wA{constructor(...n){super(...n),this.options={template:pn,onClick:()=>{}},this.props={active:!1,lang:()=>(0,v.Z)().state.lang,hideUI:n=>!n.active||(0,v.Z)().state.state===Z.PO.EXPERIENCE,hideSocialLink:n=>(0,v.Z)().state.countdown.ended},this.onPointerEnter=()=>{v.x.emit("footer-rollover",!0)},this.onPointerLeave=()=>{v.x.emit("footer-rollover",!1)},this.handleSocialLinkClick=()=>{(0,cn.L9)("general","follow_click")}}async onSetup(){this.languageSelect=await(new en).setup({options:{appendTo:this.ui.langSelect}}),this.soundToggle=await(new rn).setup({options:{appendTo:this.ui.sound}})}setActive(n){q.ZP.set(this.el,{visibility:n?"visible":"hidden"})}setLang(n){this.ui.termsLink.href=H.Z.getValue("global-terms-url"),this.ui.privacyLink.href=H.Z.getValue("global-privacy-url")}onHideSocialLink({firstTrigger:n}){n?this.ui.socialTitle.style.display="none":q.ZP.to(this.ui.socialTitle,{autoAlpha:0})}})||ln;var un=t(2157),mn=t(9571),gn=t(9815),bn={};bn.styleTagTransform=R(),bn.setAttributes=V(),bn.insert=F().bind(null,"head"),bn.domAPI=E(),bn.insertStyleElement=U();D()(gn.Z,bn);gn.Z&&gn.Z.locals&&gn.Z.locals;var fn;const xn=({context:n,props:e})=>i.dy` <div class="logo">${(0,N.Z)("adobe-bowie","logo__icon")}</div> `;const An=(0,a.c1)(r.Z)(fn=class extends a.wA{constructor(...n){super(...n),this.options={template:xn},this.props={logoColor:()=>(0,v.Z)().state.logoColor}}async onSetup(){}setLogoColor(n){n?this.el.style.transition="color 0.3s":q.ZP.delayedCall(.3,(()=>{this.el.style.transition=""})),this.el.style.setProperty("--logoColor",n)}})||fn;var Cn=t(5226),$n=t(2826),wn=t(3907),vn=t(6603),yn=t(9767),Bn={};Bn.styleTagTransform=R(),Bn.setAttributes=V(),Bn.insert=F().bind(null,"head"),Bn.domAPI=E(),Bn.insertStyleElement=U();D()(yn.Z,Bn);yn.Z&&yn.Z.locals&&yn.Z.locals;var kn;const zn=({context:n,props:e})=>i.dy`
    <div class="cookieGate" style=${(0,i.Ve)({display:e.visible?"flex":"none"})}>
        <p class="cookieGate__text">
            ${H.Z.get("global-cookie-copy")}
            <a data-ui="learnMore" class="cookieGate__link" href="" target="_blank"
                >${H.Z.get("global-cookie-link")}</a
            >
        </p>
        <button class="cookieGate__btn" @click=${n.handleBtnClick}>${H.Z.get("global-cookie-ok")}</button>
    </div>
`;const Sn=(0,a.c1)(r.Z)(kn=class extends a.wA{constructor(...n){super(...n),this.options={template:zn},this.props={visible:!1,acceptCookies:!1,lang:()=>(0,v.Z)().state.lang},this.handleBtnClick=()=>{this.props.acceptCookies=!0,this.allow()}}async onSetup(){const n=localStorage.getItem("user-accept-cookies");null===n?this.props.visible=!0:"true"===n&&(this.props.acceptCookies=!0)}setLang(n){this.ui.learnMore.href=H.Z.getValue("global-cookie-link-url")}allow(){localStorage.setItem("user-accept-cookies",!0),this.props.visible=!1,this.props.acceptCookies=!0}onAcceptCookies(){console.log("onAcceptCookies"),k.Z.disableAnalytics||vn.Z.initialize({gaID:k.Z.gaID}),(0,cn.r_)(),this.options.appendTo.removeChild(this.el),this.destroy()}})||kn;var _n=t(7422),Zn={};Zn.styleTagTransform=R(),Zn.setAttributes=V(),Zn.insert=F().bind(null,"head"),Zn.domAPI=E(),Zn.insertStyleElement=U();D()(_n.Z,Zn);_n.Z&&_n.Z.locals&&_n.Z.locals;var Tn;t(2956);const Dn=({options:n})=>i.dy`
    <div class="noticeOverlay">
        <h2 class="noticeOverlay__title  text-heading4">${H.Z.get("global-rotate-device")}</h2>
    </div>
`;const In=(0,a.c1)(r.Z)(Tn=class extends a.wA{constructor(...n){super(...n),this.options={template:Dn}}async onSetup(){}})||Tn;var En,Wn,Fn=t(754),On=t(1925),Vn=t(9613),Pn=t(4496);function Un(n,e,t,i,o){var s={};return Object.keys(i).forEach((function(n){s[n]=i[n]})),s.enumerable=!!s.enumerable,s.configurable=!!s.configurable,("value"in s||s.initializer)&&(s.writable=!0),s=t.slice().reverse().reduce((function(t,i){return i(n,e,t)||t}),s),o&&void 0!==s.initializer&&(s.value=s.initializer?s.initializer.call(o):void 0,s.initializer=void 0),void 0===s.initializer&&(Object.defineProperty(n,e,s),s=null),s}const Mn=$.tq?"mobile":$.Em||$.Vq?"tablet":"desktop",Rn=()=>i.dy`
    <div class="root" lang=${(0,v.Z)().state.lang} device="${Mn}">
        <div data-ui="gl" class="gl"></div>
        <div data-ui="ui" class="ui"></div>
    </div>
`;const Ln=(0,a.c1)((0,un.Z)(B.o,{expanded:!0,withoutViews:"renderer scene1 scene2 landing intro experience end rotateOverlay",withoutKeys:"active state",keysOptions:{fov:{min:20,max:70,step:1}}}))(En=(0,a.c1)((0,l.E4)("core"))(En=(0,a.c1)((0,A.Z)(v.Z))(En=(0,a.c1)(r.Z)((Un((Wn=class extends a.wA{constructor(...n){super(...n),this.options={template:Rn,appendTo:document.body},this.props={active:!0,state:k.Z.state,controls:k.Z.controls,color:()=>(0,v.Z)().state.color,cursor:()=>(0,v.Z)().state.cursor,muted:()=>(0,v.Z)().state.muted},this.assets={mapNoise:"static/textures/compressed/webp/noise.webp#txt",mapLensDirt:"static/textures/compressed/webp/lens-dirt-soft.webp#txt",loaderSound:"static/audio/loaded.mp3#audio",treasureRevealBgLoop:"static/audio/experience/treasure-overlay-background-loop.mp3#audio"},this.page=void 0,this.handleDownloadOverlayOpen=({downloadSrc:n}={})=>{this.downloadOverlay&&(this.downloadOverlay.resetButton({link:n}),this.downloadOverlay.props.activeTrigger=!0)}}async onSetup(){$.Dt&&(0,b.gt)().patchAndroid(),Fn.H.setContext(d.Z.context),(0,l.fi)(y.Z.CDN),(0,c.y)(!1),l.Sp.addLoaders({txt:g,txto:g,ct:p.Z,gltf:h.Z}),q.ZP.registerPlugin(Pn.t),(0,Cn.fo)(),(0,S.rv)(),2===k.Z.phase&&await voiceOverShell.setup({options:{appendTo:this.ui.ui}}),k.Z.lowDpr&&((0,v.Z)().state.dpr=1),await this.addComponents(),await this.addRenderer(),this.setupAudio(),this.addListeners(),this.resize()}async onAfterSetup(){const{preloader:n,whilePreloading:e}=this.options;await l.Sp.preloadAll(this.onPreloaderProgress),e&&await e(),(0,x.c2)().add(this.render),n&&(await n.prompt(),n.hide()),this.page&&await this.page.enter(),q.ZP.delayedCall(2.5,(()=>v.x.emit("loadSecondaryItems")))}async setupDev(){B.o&&this.addGUI(),await(new mn.Z).setup({options:{store:(0,v.Z)(),appendTo:document.body},props:{store:()=>(0,v.Z)()}})}addGUI(){this.folder.addInput(this.props,"state",{options:{LANDING:Z.PO.LANDING,INTRO:Z.PO.INTRO,EXPERIENCE:Z.PO.EXPERIENCE,END:Z.PO.END}})}onAssetsPreloaderComplete(){const{mapNoise:n}=this.assets;n&&(n.generateMipmaps=!1,n.minFilter=$n.TyD,n.wrapS=n.wrapT=$n.rpg)}setupAudio(){(0,_.Z)(d.Z.context).then((n=>{console.log("🚀 ~ unlockAudioContext ~ ctx",n.state),(0,v.Z)().state.muted=!1}))}setMuted(n,{firstTrigger:e}){n?wn.Z.fadeOut():wn.Z.fadeIn()}setState(n){(0,v.Z)().state.state=n}setColor(n){document.body.style.setProperty("--color",n)}setFov(n){(0,v.Z)().state.camera.fov=n}setControls(n){(0,v.Z)().state.camera.controls=n}setCursor(n,{prevValue:e}){switch((0,v.Z)().state.cursorPrev=e,n){case"none":document.body.setAttribute("cursor","none");break;case"pointer":document.body.setAttribute("cursor","pointer");break;case"grab":document.body.setAttribute("cursor","grab");break;default:document.body.removeAttribute("cursor")}}onPreloaderProgress(n){this.options.preloader&&(this.options.preloader.props.progress=100*n)}async addComponents(){(0,C.Z)()||(this.logo=await(new An).setup({options:{appendTo:this.ui.ui}}),this.footer=await(new hn).setup({options:{appendTo:this.ui.ui},props:{active:()=>(0,v.Z)().state.state!==Z.PO.END}}),this.rotateOverlay=await(new In).setup({options:{appendTo:this.ui.ui}}),$.Vq&&(this.downloadOverlay=await(new Vn.Z).setup({options:{appendTo:this.el},props:{activeTrigger:!1,active:n=>this.props.active&&n.activeTrigger}})),this.treasureReveal=await(new On.Z).setup({options:{appendTo:this.el}}),await(new Sn).setup({options:{appendTo:this.ui.ui}}))}addShareBtns(){const n=document.createElement("div");this.el.appendChild(n),Object.assign(n.style,{right:"0px",bottom:"0px",position:"absolute",display:"flex",color:"white",fontSize:"20px"});["twitter","facebook","native"].forEach((e=>{const t=document.createElement("button");t.textContent=e,Object.assign(t.style,{padding:"10px"}),t.onclick=()=>{if("native"===e)navigator.share({title:"Adobe x Bowie",text:"Here's to cool sharable text #sharingiscaring",url:window.location.origin});else{(0,z.Z[e])(window.location.origin,"Here's to cool sharable text #sharingiscaring")}},n.appendChild(t)}))}async addRenderer(){const n=this.renderer=await(new w.Z).setup({options:{appendTo:this.ui.gl},props:{width:(0,f.Z0)().windowWidth,height:(0,f.Z0)().windowHeight,pr:.7}});!function(n){m=n}(n.renderer),(0,h.e)(n.renderer),(0,p.T)(n.renderer)}addListeners(){this.resize=(0,o.Ds)(this.resize,400),v.x.on("downloadOverlayOpen",this.handleDownloadOverlayOpen),(0,f.Z0)().add(this.resize)}removeListeners(){(0,f.Z0)().remove(this.resize),v.x.off("downloadOverlayOpen",this.handleDownloadOverlayOpen)}async onNavigationUpdate(n,e,i){if(n.match.page===String(n.previous.match&&n.previous.match.page))return;const o=await(async n=>await t(4960)(`./${n}/index.js`))(n.match.page),s=await(new o.default).setup({options:{appendTo:this.ui.ui}});e||Object.keys(l.Sp.manifests).length>0&&await l.Sp.preloadAll(),!i&&this.page&&this.page.leave&&await this.page.leave(),this.page&&this.page.destroy(),this.page=null,s.enter&&!e&&(i?s.enter(e):await s.enter(e)),this.page=s}render(n){this.renderer.render(n),this.page&&this.page.render&&this.page.render(n),B.x&&B.x.begin(),B.x&&B.x.end()}resize(){(0,v.Z)().state.vw=document.documentElement.clientWidth,(0,v.Z)().state.vh=document.documentElement.clientHeight,this.page?.resize()}onDestroy(){this.removeListeners()}}).prototype,"onPreloaderProgress",[s.Nj],Object.getOwnPropertyDescriptor(Wn.prototype,"onPreloaderProgress"),Wn.prototype),Un(Wn.prototype,"render",[s.Nj],Object.getOwnPropertyDescriptor(Wn.prototype,"render"),Wn.prototype),Un(Wn.prototype,"resize",[s.Nj],Object.getOwnPropertyDescriptor(Wn.prototype,"resize"),Wn.prototype),En=Wn))||En)||En)||En)||En},3181:(n,e,t)=>{"use strict";t.d(e,{Z:()=>B});var i=t(5782),o=t(8159),s=t(1485),a=t(1892),r=t.n(a),l=t(5760),c=t.n(l),d=t(8311),p=t.n(d),h=t(8192),u=t.n(h),m=t(8060),g=t.n(m),b=t(4865),f=t.n(b),x=t(5046),A={};A.styleTagTransform=f(),A.setAttributes=u(),A.insert=p().bind(null,"head"),A.domAPI=c(),A.insertStyleElement=g();r()(x.Z,A);x.Z&&x.Z.locals&&x.Z.locals;var C,$=t(9715),w=t(3765),v=t(9667);const y=({options:n,props:e})=>i.dy`
        <div class="titleLarge">
            <div class="titleLarge__inner">
                <h1 data-ui="text" class="titleLarge__text  textTitle1">${n.text}</h1>
            </div>
        </div>
    `;const B=(0,o.c1)(s.Z)(C=class extends o.wA{constructor(...n){super(...n),this.options={template:y,text:"Title Large"},this.props={width:1,height:1,maxScale:1.5,maxWidth:()=>.8*(0,w.Z)().state.vw,scale:n=>Math.min(n.maxScale,n.maxWidth/n.width)},this.handleTitleResize=n=>{const{width:e,height:t}=n.contentRect;this.props.width=e,this.props.height=t}}async onSetup(){$.m.observe(this.ui.text,this.handleTitleResize)}show({duration:n=1.8,delay:e=0,initialScale:t=1.08}={}){v.ZP.killTweensOf(this.el),v.ZP.fromTo(this.el,{scale:t},{scale:1,duration:n,delay:e,ease:"expo.out"}),v.ZP.fromTo(this.el,{alpha:0},{alpha:1,duration:.4,delay:e}),this.el.style.visibility="visible"}hide({duration:n=.5,scale:e=1,delay:t=0,ease:i="power3.in"}={}){return new Promise((o=>{v.ZP.killTweensOf(this.el),v.ZP.to(this.el,{scale:e,alpha:0,duration:n,delay:t,ease:i,onComplete:()=>{this.el.style.visibility="hidden",o()}})}))}setScale(n){this.ui.text.style.transform=`scale(${n})`}})||C},977:(n,e,t)=>{"use strict";t.d(e,{Z:()=>T});var i=t(5782),o=t(8159),s=t(1485),a=t(1892),r=t.n(a),l=t(5760),c=t.n(l),d=t(8311),p=t.n(d),h=t(8192),u=t.n(h),m=t(8060),g=t.n(m),b=t(4865),f=t.n(b),x=t(4212),A={};A.styleTagTransform=f(),A.setAttributes=u(),A.insert=p().bind(null,"head"),A.domAPI=c(),A.insertStyleElement=g();r()(x.Z,A);x.Z&&x.Z.locals&&x.Z.locals;var C,$=t(4937),w=t(6905),v=t(3765),y=(t(3907),t(1853)),B=t(9611),k=t(5549),z=t(7966);const S={src:`${$.Z.CDN}static/audio/audio-1/audio.mp3`,subtitles:[{id:"en",label:"English",src:`${$.Z.CDN}static/audio/audio-1/audio-en.vtt`},{id:"de",label:"German",src:`${$.Z.CDN}static/audio/audio-1/audio-de.vtt`}]},_=({options:n,props:e})=>i.dy`
    <div class="voiceOver">
        <div data-ui="subtitles" class="voiceOver__subtitles">
            <p data-ui="speaker" class="voiceOver__speaker">${z.Z.getValue(n.titleId)}</p>
            <p data-ui="subtitle" class="voiceOver__subtitle"></p>
        </div>
    </div>
`;let Z=(0,o.c1)(s.Z)(C=class extends o.wA{constructor(...n){super(...n),this.options={template:_,onEnded:()=>{},src:S.src,subtitles:null,color:"white",titleId:"Speaker"},this.props={toggleSubtitles:!1,audioVolume:.5,lang:()=>(0,v.Z)().state.lang,active:!1,muted:()=>(0,v.Z)().state.muted},this.assets={},this.sounds=[],this.handleCueChange=n=>{const e=n.target.activeCues[0],t=e?e.text:"";this.ui.subtitle.innerText=t,this.ui.speaker.style.opacity=t.length?1:0},this.handleEnded=()=>{this.props.active=!1,this.options.onEnded(this.options.id),this.onComplete&&this.onComplete(this.options.type)}}async onSetup(){this.currentTrack=null,this.el.style.setProperty("--color",this.options.color),y.Z.unlocked.then((()=>{this.media.muted=!1})),this.setupSubtitles(),this.setupVideo()}setupSubtitles(){const{folder:n,id:e,subtitles:t}=this.options;this.subtitles=t||k.a2.map((t=>{const i=`${`${n}subtitles/`}vtt-${t.id}/${e}-${t.id}.vtt`;return{id:t.id,src:i}}))}setupVideo(){const{src:n}=this.options,{lang:e}=this.props,t=`<video data-ui="media" class="voiceOver__media" muted playsinline>\n                        <source type="audio/mp3" src="${n}" />\n\n                        ${this.subtitles.map(((n,t)=>`\n                                <track\n                                    label="${n.label}"\n                                    kind="subtitles"\n                                    srclang="${n.id}"\n                                    src="${n.src}"\n                                    ${n.id===e?"default":""}\n                                />\n                            `))}\n                    </video>`;this.media=(0,B.WV)(t)}play(n=null){this.media.play(),this.onComplete=n}setMuted(n){this.media.volume=n?0:1}stop(){this.media.pause(),this.media.currentTime=0}setSrc(n,{firstTrigger:e}){e||(this.hideSubtitles(),this.el.currentTime=0,this.el.src=n,this.setLang(this.props.lang),this.props.toggleSubtitles&&this.el.play())}setLang(n){this.ui.speaker.innerText=z.Z.getValue(this.options.titleId);const{media:e}=this;for(let t=0;t<e.textTracks.length;t++){const i=e.textTracks[t];i.language==n?(i.mode="showing",this.setCurrentTrack(i)):i.mode="hidden"}}hideSubtitles(){const{media:n}=this;for(let e=0;e<n.textTracks.length;e++){n.textTracks[e].mode="hidden"}}setCurrentTrack(n){this.currentTrack?.removeEventListener("cuechange",this.handleCueChange),this.currentTrack=n,this.currentTrack.addEventListener("cuechange",this.handleCueChange)}setAudioVolume(n){}setupPane(){w.o.addInput(this.props,"lang",{options:{...LANG}});w.o.addButton({title:"Toggle Subtitles"}).on("click",(()=>{const{media:n}=this;this.props.toggleSubtitles=!this.props.toggleSubtitles,n.paused?n.play():n.pause(),n.style.opacity=n.paused?0:1}))}onActive(){this.options.appendTo.appendChild(this.el),this.media.addEventListener("ended",this.handleEnded),this.play()}offActive(){this.options.appendTo.removeChild(this.el),this.stop(),this.media.removeEventListener("ended",this.handleEnded)}})||C;const T=Z},4939:(n,e,t)=>{"use strict";t.d(e,{W:()=>l});var i=t(8159),o=(t(2856),t(2736),t(977)),s=t(1682),a=t(6659);class r extends i.wA{constructor(...n){super(...n),this.props={},this.event=new a.EventEmitter}async onSetup(){this.items=await this.setupItems()}setupItems(){return Promise.all(s.kI.map((n=>(new o.Z).setup({options:{...n,appendTo:this.options.appendTo,onEnded:e=>{this.event.emit("voiceOverEnded",n)}}}))))}getItem(n){const e=this.items.find((e=>e.options.id===n));return e||console.warn(`VoiceOverShell: no item found with id ${n}`),e}playAudio(n){const e=this.getItem(n);e&&(this.currentItem&&(this.currentItem.props.active=!1),this.currentItem=e,e.props.active=!0)}stopAllAudio(){this.items.forEach((n=>n.props.active=!1)),this.currentItem=null}}const l=new r;window.voiceOverShell=l},5226:(n,e,t)=>{"use strict";t.d(e,{VA:()=>p,fo:()=>d});var i=t(3765),o=t(5549),s=t(4661),a=t(6451),r=t(6659);class l extends r.EventEmitter{constructor(){super(),this._time=new Date,this.countDownTo=1/0,this.onTick=()=>{this.setStoreValues()},null!==a.Z.countdownTo?this.setCountDownTo(this.epoch+(0,s.p7)(a.Z.countdownTo)):this.setCountDownTo(o.De),this.start(),this.setStoreValues()}get epoch(){return Date.now()}get time(){return this._time.setTime(this.epoch),this._time}get timeToEvent(){return this.countDownTo-this.epoch}get timeToEventClamped(){return Math.max(0,this.countDownTo-this.epoch)}get active(){return this.timeToEventClamped>0}get countdownEnded(){return this.epoch>=this.countDownTo}start(){this.intervalId||(this.intervalId=setInterval(this.onTick,50))}setCountDownTo(n){this.countDownTo="number"==typeof n?n:n.getTime(),this.isComplete&&(this.isComplete=!1,this.emit("countdown-reset",{}))}setStoreValues(){(0,i.Z)().state.countdown.active=this.active,(0,i.Z)().state.countdown.ended=this.countdownEnded,(0,i.Z)().state.countdown.timeToEvent=this.timeToEvent,(0,i.Z)().state.countdown.timeToEventClamped=this.timeToEventClamped}}let c=null;const d=()=>c||(c=new l,window.countdown=c,c),p=()=>d()},9550:(n,e,t)=>{"use strict";t.d(e,{h8:()=>h,rv:()=>u});var i=t(8159),o=t(6376),s=t(9656),a=t(2736),r=t(1682),l=t(4737),c=t(6659),d=t(9667);class p extends i.wA{constructor(...n){super(...n),this.finalCountdownElapsed=0,this.finalCountdownStartTime=0,this.props={started:!1,paused:!1,itemsRemaining:[...l.Z],itemsCollected:[],totalItems:l.Z.length,totalItemsRemaining:n=>n.itemsRemaining.length,totalItemsCollected:n=>n.itemsCollected.length,collectedAllItems:n=>n.itemsCollected.length===l.Z.length,finalCountdown:!1,finalCountdownThreshold:n=>n.itemsCollected.length>=l.Z.length-2,finalCountdownTimeLeft:0},this.event=new c.EventEmitter,this.interactions=o.Vq?[{id:"panning",complete:!1,card:"twofingerstomove"},{id:"zooming",complete:!1,card:"pinchtozoom"},{id:"looking",complete:!1,card:"fingertolookaround"},{id:"collect",complete:!1,card:"taptocollect"}]:[{id:"panning",complete:!1,card:"dragandmove"},{id:"zooming",complete:!1,card:"clickandhold"},{id:"collect",complete:!1,card:"taptocollect"}],this.clues=r.St.map((n=>({id:n.id,treasureId:n.treasureId,complete:!1}))),this.handleNextTutorialDelayComplete=()=>{const n=this.interactions.find((n=>!n.complete));n&&this.event.emit("showTutorial",n)},this.handleNextClueDelayComplete=()=>{const n=this.clues.filter((n=>!n.complete)),e=this.getClosestTreasure(n),t=n.find((n=>n.treasureId===e));this.event.emit("nextClue",t)}}async onSetup(){}start(){this.props.started=!0,this.props.paused=!1}stop(){this.props.started=!1,this.props.finalCountdown=!1}onStarted(){this.interactionsComplete?this.startNextClueTimer():this.startNextTutorialTimer(2)}pause(){this.props.paused=!0,this.playDurationTimer?.pause(),this.nextTutorialDelay?.pause(),this.nextClueDelay?.pause()}resume(){this.props.paused=!1,this.playDurationTimer?.resume(),this.nextTutorialDelay?.resume(),this.nextClueDelay?.resume()}startNextTutorialTimer(n=1.5){this.nextTutorialDelay?.kill(),this.nextTutorialDelay=d.ZP.delayedCall(n,this.handleNextTutorialDelayComplete)}startNextClueTimer(){this.clues.filter((n=>!n.complete)).length&&(this.nextClueDelay?.kill(),this.nextClueDelay=d.ZP.delayedCall(15,this.handleNextClueDelayComplete))}completeInteraction(n){if(!this.props.started)return;const e=this.interactions.find((e=>e.id==n));e.complete||(e.complete=!0,this.event.emit("interactionCompleted",n))}completeClue(n){this.clues.find((e=>e.treasureId==n)).complete=!0}onFinalCountdownThreshold(){this.props.finalCountdown=!0}onCollectedAllItems(){this.event.emit("completeAllItems")}onFinalCountdown(){this.finalCountdownStartTime=(new Date).getTime()}whileFinalCountdown(){const n=a.Z.getInstance().clock.getDelta();if(this.props.paused)return;this.finalCountdownElapsed+=n;const e=45-this.finalCountdownElapsed;this.props.finalCountdownTimeLeft=Math.ceil(e),e<=0&&(this.props.finalCountdown=!1,this.event.emit("finalCountdownComplete"))}reset(){this.props.itemsRemaining=[...l.Z],this.props.itemsCollected=[],this.props.finalCountdown=!1,this.props.started=!1,this.event.emit("reset"),this.finalCountdownElapsed=0,this.playDurationTimer?.kill(),this.clues.forEach((n=>n.complete=!1))}collectRandomItem(){const n=this.getRemainingItems();if(0===n.length)return;const e=n[(0,s.Z)(0,n.length-1)];this.collectItem(e.id)}collectItem(n){if(!n)return console.warn("collectItem: no id found!");const{itemsRemaining:e,itemsCollected:t}=this.props,i=this.getCollectedItemById(n);if(i)this.event.emit("itemAlreadyFound",i);else{const i=this.getRemainingItemById(n);if(!i)return console.warn(`collectItem: couldn't find item with id (${n})!`);{const n=e.indexOf(i);e.splice(n,1),t.push(i),this.completeClue(i.id),this.event.emit("itemCollected",i),this.completeInteraction("collect")}}}get interactionsComplete(){return!this.interactions.find((n=>!n.complete))}get cluesComplete(){return!this.clues.find((n=>!n.complete))}getItem(n){this.props.itemsCollected.find((e=>e.id===n))}getRemainingItemById(n){return this.props.itemsRemaining.find((e=>e.id===n))}getCollectedItemById(n){return this.props.itemsCollected.find((e=>e.id===n))}getRemainingItems(){return this.props.itemsRemaining}setTreasureItems(n){this.treasureItems=n}setCeilingLamp(n){}setDrawerItems(n){this.drawerItems=n}setEarringBox(n){this.earringBox=n}getClosestTreasure(n){const e=this.treasureItems.filter((e=>n.find((n=>n.treasureId===e.options.name)))).reduce(((n,e)=>e.angleToCamera>n.angleToCamera?e:n));if(window.coenProps.showingHint=e.mesh,window.coenProps.hintSize=2,d.ZP.to(window.coenProps,{duration:2,hintSize:0,ease:"linear"}),"treasure_amulet"==e.props.name)if(this.drawerItems[1].props.open)e.showHint();else{this.drawerItems[1].showHint(),window.coenProps.showingHint=this.drawerItems[1].mesh;window.coenProps.showingHint.position.x,window.coenProps.showingHint.position.z}else"treasure_earrings"==e.props.name?(e.showHint(),this.earringBox.showHint()):e.showHint();return e.options.name}}const h=new p;window.gameApi=h;const u=async()=>{await h.setup()}},1682:(n,e,t)=>{"use strict";t.d(e,{St:()=>r,fV:()=>a,kI:()=>l});t(7966);var i=t(4737);const o="/static/audio/vo/",s=i.Z.map(((n,e)=>{const t=n.voPrefix;return new Array(2).fill().map(((e,i)=>{const s=i?"clue":"found",a=`${t}-${s}`;return{id:a,type:s,treasureId:n.id,titleId:"voice-over-narrator",folder:o,src:`${o}${a}.mp3`}}))})),a=s.map((([n])=>n)),r=s.map((([n,e])=>e)),l=[{id:"vo-introduction",src:`${o}vo-introduction.mp3`,titleId:"voice-over-narrator",folder:o},{id:"vo-someone",src:`${o}vo-someone.mp3`,titleId:"voice-over-outside-door",folder:o},{id:"vo-thank-you",src:`${o}vo-thank-you.mp3`,titleId:"voice-over-bowie",folder:o},...r]},2148:(n,e,t)=>{"use strict";t.d(e,{Z:()=>a});var i=t(6376),o=!1,s=!1;const a=async n=>new Promise((e=>{const t=n||new(window.AudioContext||window.webkitAudioContext)({sampleRate:48e3});if("suspended"!==t.state)return void e(t);const o=document.body,s=["touchstart","touchend","mousedown","keydown"],a=()=>{(0,i.gn)()&&r(t),t.resume().then((()=>{e(t),l()}))},l=()=>{s.forEach((n=>o.removeEventListener(n,a)))};s.forEach((n=>o.addEventListener(n,a,!1)))})),r=n=>{const e=n.createBuffer(1,1,22050),t=n.createBufferSource();t.buffer=e,t.connect(n.destination),t.onended=function(){console.log("WebAudio unlocked!"),(o=!0)&&s&&console.log("WebAudio unlocked and playable w/ mute toggled on!")},t.start();const i=document.createElement("audio");i.controls=!1,i.preload="auto",i.loop=!1,i.src="data:audio/mp3;base64,//MkxAAHiAICWABElBeKPL/RANb2w+yiT1g/gTok//lP/W/l3h8QO/OCdCqCW2Cw//MkxAQHkAIWUAhEmAQXWUOFW2dxPu//9mr60ElY5sseQ+xxesmHKtZr7bsqqX2L//MkxAgFwAYiQAhEAC2hq22d3///9FTV6tA36JdgBJoOGgc+7qvqej5Zu7/7uI9l//MkxBQHAAYi8AhEAO193vt9KGOq+6qcT7hhfN5FTInmwk8RkqKImTM55pRQHQSq//MkxBsGkgoIAABHhTACIJLf99nVI///yuW1uBqWfEu7CgNPWGpUadBmZ////4sL//MkxCMHMAH9iABEmAsKioqKigsLCwtVTEFNRTMuOTkuNVVVVVVVVVVVVVVVVVVV//MkxCkECAUYCAAAAFVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV",i.onended=function(){console.log("HTMLAudio unlocked!"),s=!0,o&&s&&console.log("WebAudio unlocked and playable w/ mute toggled on!")};const a=i.play();a&&a.then((function(){console.log("play success")}),(function(n){console.log("play failed",n)}))}},7501:(n,e,t)=>{"use strict";t.d(e,{T:()=>s,Z:()=>a});t(4937);let i,o;const s=n=>{o=n};function a(n,e=null){return t.e(483).then(t.bind(t,1483)).catch((()=>{console.warn("Could not load KTX2Loader. Is three installed?")})).then((({KTX2Loader:t})=>{if(i||(i=new t,i.setTranscoderPath("/static/three/basis/")),!e&&!o)throw new Error("No renderer set to detect compressed texture format.  Pass in a renderer or use the initLoadCompressed global before calling loadCompressed. ");let s=e||o;return i.detectSupport(s),n=(n=(n=(n=n.replace(/#txt/,"")).replace(/#ct/,"")).replace(/\.jpg$/,".ktx2")).replace(/\.png$/,".ktx2"),new Promise(((e,t)=>{i.load(n,(n=>{s.initTexture(n),e(n)}),(()=>{}),(e=>{throw t(e),new Error("Whoops! → "+n+" → "+e)}))}))}))}},4148:(n,e,t)=>{"use strict";t.d(e,{Z:()=>r,e:()=>a});t(7501);let i,o,s;const a=n=>{s=n};function r(n,e=null){return Promise.all([Promise.all([t.e(766),t.e(331)]).then(t.bind(t,8331)),t.e(483).then(t.bind(t,1483))]).catch((()=>{console.warn("could not load GLTFLoader, is three installed?")})).then((([{GLTFLoader:t},{KTX2Loader:a}])=>{if(!e&&!s)throw new Error("No renderer set to detect compressed texture format.  Pass in a renderer or use the initLoadGLTF global before calling loadGLTF. ");let r=e||s;return i||(i=new t),o||(o=new a,o.setTranscoderPath("/static/three/basis/"),o.detectSupport(r)),i.setKTX2Loader(o),new Promise((e=>{i.load(n,(n=>{e(n)}))}))}))}},6905:(n,e,t)=>{"use strict";t.d(e,{o:()=>a,x:()=>r});var i=t(735),o=t(4201),s=t(1809);let a,r=null;i.Z.get("gui")&&(a=(0,o.x)(),a.registerPlugin(s),r=a.addBlade({view:"fpsgraph",label:"fps",lineCount:2}))},9715:(n,e,t)=>{"use strict";t.d(e,{m:()=>s});var i=t(6659);class o extends i.EventEmitter{constructor(){super(),this.handleObserve=n=>{this.emit("resize",n);for(let e of n){const n=this.all.find((n=>n.el===e.target));n&&n.handler(e)}},this.all=[],this.observer=new ResizeObserver(this.handleObserve)}observe(n,e){this.all.push({el:n,handler:e}),this.observer.observe(n)}unobserve(n){const e=this.all.find((e=>e.el===n));if(e){const n=this.all.indexOf(e);this.all.slice(n,1)}this.observer.unobserve(n)}}const s=new o},2464:(n,e,t)=>{"use strict";t.d(e,{Z:()=>r});var i=t(559),o=t.n(i),s=t(3476),a=t.n(s)()(o());a.push([n.id,'.btnCircle{--btnColor: rgb(255, 255, 255);--btnBgColor: rgb(0, 0, 0);position:absolute;top:var(--sideMargin);right:var(--sideMargin);pointer-events:auto;width:var(--btnHeight);height:var(--btnHeight);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:"Adobe Clean",system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",sans-serif;font-weight:600;color:#000;color:var(--btnBgColor, #000)}.btnCircle:not([visible]){visibility:hidden}.btnCircle__text{top:0;right:100%;margin-right:0.5rem;height:100%;position:absolute;display:flex;align-items:center;white-space:nowrap;color:currentColor}@media only screen and (max-width: 768px){.btnCircle__text{display:none}}.btnCircle__icon{fill:#fff;fill:var(--btnColor, #fff);top:50%;left:50%;position:absolute;transform:translate(-50%, -50%);width:.8rem;height:.8rem;z-index:1}.btn-Circle--gallery .btnCircle__icon{width:1.2rem;height:1.2rem}\n',"",{version:3,sources:["webpack://./component/btn-circle/index.scss","webpack://./style/mixins/utils.scss","webpack://./style/mixins/fonts.scss"],names:[],mappings:"AAGA,WACI,8BAAW,CACX,0BAAa,CAEb,iBAAkB,CAClB,qBAAsB,CACtB,uBAAwB,CAExB,mBAAoB,CC4GpB,sBD1GgC,CC2GhC,uBD3GgC,CEThC,iCAAkC,CAClC,kCAAmC,CAmBnC,gOAZ0C,CAa1C,eAAgB,CFPhB,UAAO,CAAP,6BAAsC,CAf1C,0BAasB,iBAAkB,CAAI,iBAKpC,KAAM,CACN,UAAW,CACX,mBAAoB,CACpB,WAAY,CACZ,iBAAkB,CAClB,YAAa,CACb,kBAAmB,CACnB,kBAAmB,CACnB,kBAAmB,CAItB,0CAbD,iBAWQ,YAAa,CAEpB,CAED,iBACI,SAAyC,CAAzC,0BAAyC,CCgB7C,OAAQ,CACR,QAAS,CACT,iBAAkB,CAClB,+BAAgC,CAgEhC,WDjF0B,CCkF1B,YDlF0B,CACtB,SAAU,CAEV,sCC8EJ,YD9EmD,CC+EnD,aD/EmD",sourcesContent:["$CDN:\"/\";\n@import 'style/shared';\n\n.btnCircle {\n    --btnColor: rgb(255, 255, 255);\n    --btnBgColor: rgb(0, 0, 0);\n\n    position: absolute;\n    top: var(--sideMargin);\n    right: var(--sideMargin);\n    \n    pointer-events: auto;\n    \n    @include square(var(--btnHeight));\n    @include fontAdobeBold;\n\n    &:not([visible]){ visibility: hidden; }\n\n    color: var(--btnBgColor, rgb(0, 0, 0));\n\n    &__text {\n        top: 0;\n        right: 100%;\n        margin-right: 0.5rem;\n        height: 100%;\n        position: absolute;\n        display: flex;\n        align-items: center;\n        white-space: nowrap;\n        color: currentColor;\n        @include mobile {\n            display: none;\n        }\n    }\n    \n    &__icon {\n        fill: var(--btnColor, rgb(255, 255, 255));\n        @include centerAlignTransform;\n        @include square(0.8rem);\n        z-index: 1;\n        \n        .btn-Circle--gallery & { @include square(1.2rem); }\n    }\n}\n","// -----------------------------------\n// Layout\n// -----------------------------------\n\n// Fills to the bounds of the container element\n@mixin fill($position: absolute) {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    position: $position;\n}\n\n// Fills to the bounds of the container element, including an offset (grow or shrink the bounds)\n@mixin fillContainer($offset: 0, $position: absolute) {\n    inset: $offset;\n    position: $position;\n}\n\n// Sets the elements position to either top-left|top-right|bottom-left|bottom-right\n@mixin position($ruleA: top, $ruleB: left, $position: absolute) {\n    #{$ruleA}: 0;\n    #{$ruleB}: 0;\n\n    position: $position;\n}\n\n// USAGE -------\n// @mixin aspectRatio( $aspect-16x9 );\n\n@mixin aspectRatio($ratio) {\n    &::before {\n        content: '';\n        display: block;\n        padding-top: ($ratio * 100%);\n    }\n}\n\n// USAGE -------\n// @mixin centerAlign(100px, 100px);\n\n// Center aligns the element within its container, given a width & height\n@mixin centerAlign($width: 0, $height: 0) {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    margin-top: -$height/2;\n    margin-left: -$width/2;\n}\n\n// Center aligns the element within its container, regardless of width & height\n@mixin centerAlignTransform() {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    transform: translate(-50%, -50%);\n}\n\n// Centers the children within the element. $direction variable can be row|column\n@mixin flexCenter($direction: column) {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: $direction;\n}\n\n// Old school technique to vertically center content\n@mixin addVerticalCentering() {\n    &::before {\n        content: '';\n        display: inline-block;\n        vertical-align: middle;\n        width: 0;\n        height: 100%;\n    }\n}\n\n// Full width element which centers when viewport width > $max-width\n@mixin constrainWidth($max-width: $app-width) {\n    margin: auto;\n    position: relative;\n\n    width: 100%;\n    max-width: $max-width;\n}\n\n// Full width element which centers when viewport width > $max-width, plus fills height\n@mixin constrainWidthFillHeight {\n    @include constrainWidth();\n\n    height: 100%;\n}\n\n@mixin imgFillContainer($align: top-left) {\n    @if $align = top-left {\n        top: 0;\n        left: 0;\n    } @else if $align = center {\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    max-width: 100%;\n    max-height: 100%;\n    min-width: 100%;\n    min-height: 100%;\n    position: absolute;\n}\n\n// Creates a circle element with $size width and height\n@mixin circle($size) {\n    width: $size;\n    height: $size;\n    border-radius: 50%;\n}\n\n// Creates a square element with $size width and height\n@mixin square($size) {\n    width: $size;\n    height: $size;\n}\n\n// Images\n// -----------------------------------\n\n// Background image fully covers element\n@mixin fillCenteredBg($url: '', $position: center) {\n    background-size: cover;\n    background-image: url($url);\n    background-position: $position;\n    background-repeat: no-repeat;\n}\n\n// Background image sits contained inside the element (letterbox effect)\n@mixin containCenteredBg($url: '', $position: center) {\n    background-size: contain;\n    background-image: url($url);\n    background-position: $position;\n    background-repeat: no-repeat;\n}\n\n// Other\n// -----------------------------------// Units\n// -----------------------------------\n\n// Proportianal font scaling  based of $baseWidth, base font size is 10px when viewport width === $baseWidth\n@mixin baseFontSizeVW($baseWidth: 1920) {\n    $base-font-size: 10;\n\n    font-size: $base-font-size / $baseWidth * 100 + 0vw;\n}\n\n// Use letter spacing value from Photoshop\n// @mixin letterSpacing( 100 );\n@mixin letterSpacing($spacing: 0) {\n    letter-spacing: $spacing / 1000 * 1em;\n    // text-indent: $spacing / 1000 * 1em;\n}\n\n@mixin svgStroke($width: 2, $color: currentColor) {\n    stroke: $color;\n    stroke-width: $width;\n    // stroke-linecap: round;\n    // stroke-linejoin: round;\n}\n\n// USAGE -------\n// @mixin sudo(before, {\n//      width: 100px;\n//      height: 100px;\n// });\n\n// Creates a sudo element, $type can be before|after\n@mixin sudo($type: before) {\n    &:#{$type} {\n        content: '';\n        @content;\n    }\n}\n\n// Selector for desktop/devices with mouse\n@mixin pointerDevice {\n    @media (pointer: fine) {\n        @content;\n    }\n\n    .desktop.ie &,\n    .desktop.firefox & {\n        @content;\n    }\n}\n\n// Selector for touch devices\n@mixin touchDevice {\n    @media (any-pointer: coarse) {\n        @content;\n    }\n}\n\n// Aligns hover action between touch and pointer devices\n@mixin hover {\n    @include pointerDevice {\n        &:hover {\n            @content;\n        }\n    }\n    @include touchDevice {\n        &:active,\n        &.android-active {\n            @content;\n        }\n    }\n}\n\n// USAGE -------\n// @mixin pxToRem( font-size, 24px );\n\n// Converts a css $property from px to rem\n@mixin pxToRem($property: 'margin-bottom', $value: 0) {\n    $pxValue: unit($value, px);\n    $remValue: unit($value / 10, rem);\n    #{$property}: $pxValue;\n    #{$property}: $remValue;\n}\n\n// Sets cursor to grabbing\n@mixin grabbingCursor() {\n    cursor: grab;\n    cursor: -webkit-grab;\n    &:active {\n        cursor: grabbing;\n        cursor: -webkit-grabbing;\n    }\n}\n","// Font configuration\n// ------------------\n\n@mixin fontSmoothing() {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n}\n\n// Font faces\n// ----------\n\n$fallbackFont: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans',\n    'Droid Sans', 'Helvetica Neue', sans-serif;\n\n@mixin fontAdobeRegular() {\n    @include fontSmoothing;\n\n    font-family: 'Adobe Clean', $fallbackFont;\n    font-weight: 400;\n}\n\n@mixin fontAdobeBold() {\n    @include fontSmoothing;\n\n    font-family: 'Adobe Clean', $fallbackFont;\n    font-weight: 600;\n}\n\n// @mixin fontAdobeBoldCondensed() {\n//     @include fontSmoothing;\n\n//     font-family: 'Adobe Clean Semi Condensed', $fallbackFont;\n//     font-weight: 400;\n// }\n\n\n@mixin fontBold() {\n    @include fontSmoothing;\n\n    font-family: 'Greed', $fallbackFont;\n    font-weight: 500;\n}\n\n// @mixin fontHeavy() {\n//     @include fontSmoothing;\n\n//     font-family: 'Greed', $fallbackFont;\n//     font-weight: 700;\n// }\n\n@mixin fontBody {\n    font-size: 1.6rem;\n\n    // letter-spacing: 0.015em;\n\n    @include fontAdobeBold;\n}\n\n@mixin fontTitle1 {\n    font-size: 15.5rem;\n    line-height: 0.77;\n    margin-left: -0.04em;\n    letter-spacing: -0.035em;\n    text-transform: uppercase;\n\n    @include fontBold;\n\n    @include mobile {\n        font-size: 5.5rem;\n    }\n}\n\n@mixin fontTitle2 {\n    font-size: 1.6rem;\n    text-transform: uppercase;\n    \n    // font-size: 1.6rem;\n    // margin-left: -0.04em;\n    // letter-spacing: -0.01em;\n\n    @include fontAdobeBold;\n\n    @include mobile {\n        font-size: 1.6rem;\n    }\n}\n"],sourceRoot:""}]);const r=a},1121:(n,e,t)=>{"use strict";t.d(e,{Z:()=>r});var i=t(559),o=t.n(i),s=t(3476),a=t.n(s)()(o());a.push([n.id,'.btnMain{height:var(--btnHeight);padding-bottom:0.1rem;display:flex;align-items:center;position:relative;pointer-events:auto;color:white;color:var(--btnColor, white);font-size:1.6rem;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:"Adobe Clean",system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",sans-serif;font-weight:600}.btnMain canvas{top:0;left:0;width:100%;height:100%;position:absolute}.btnMain:not([visible]){visibility:hidden}.btnMain__text{z-index:1;padding:0 2rem}.btnMain__icon{margin-left:1rem;width:1.2rem;height:1.2rem}.btnMain a{top:0;left:0;width:100%;height:100%;position:absolute;z-index:2}\n',"",{version:3,sources:["webpack://./component/btn-main/index.scss","webpack://./style/mixins/fonts.scss","webpack://./style/mixins/utils.scss"],names:[],mappings:"AAGA,SACI,uBAAwB,CACxB,qBAAsB,CACtB,YAAa,CACb,kBAAmB,CACnB,iBAAkB,CAElB,mBAAoB,CACpB,WAA6B,CAA7B,4BAA6B,CAC7B,gBAAiB,CCRjB,iCAAkC,CAClC,kCAAmC,CAmBnC,gOAZ0C,CAa1C,eAAgB,CDtBpB,gBEGI,KAAM,CACN,MAAO,CACP,UAAW,CACX,WAAY,CACZ,iBAL2B,CFF/B,wBAesB,iBAAkB,CAAI,eAGpC,SAAU,CACV,cAAe,CAClB,eAGG,gBAAiB,CE6FrB,YF5F0B,CE6F1B,aF7F0B,CAxB9B,WEGI,KAAM,CACN,MAAO,CACP,UAAW,CACX,WAAY,CACZ,iBAL2B,CF4BvB,SAAU",sourcesContent:["$CDN:\"/\";\n@import 'style/shared';\n\n.btnMain {\n    height: var(--btnHeight);\n    padding-bottom: 0.1rem;\n    display: flex;\n    align-items: center;\n    position: relative;\n    \n    pointer-events: auto;\n    color: var(--btnColor, white);\n    font-size: 1.6rem;\n\n    @include fontAdobeBold;\n\n    canvas  { @include fill; }\n\n    &:not([visible]){ visibility: hidden; }\n    \n    &__text {  \n        z-index: 1; \n        padding: 0 2rem;\n    }\n\n    &__icon {\n        margin-left: 1rem;\n        @include square(1.2rem);\n    }\n\n    a {\n        @include fill;\n        \n        z-index: 2;\n    }\n}\n","// Font configuration\n// ------------------\n\n@mixin fontSmoothing() {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n}\n\n// Font faces\n// ----------\n\n$fallbackFont: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans',\n    'Droid Sans', 'Helvetica Neue', sans-serif;\n\n@mixin fontAdobeRegular() {\n    @include fontSmoothing;\n\n    font-family: 'Adobe Clean', $fallbackFont;\n    font-weight: 400;\n}\n\n@mixin fontAdobeBold() {\n    @include fontSmoothing;\n\n    font-family: 'Adobe Clean', $fallbackFont;\n    font-weight: 600;\n}\n\n// @mixin fontAdobeBoldCondensed() {\n//     @include fontSmoothing;\n\n//     font-family: 'Adobe Clean Semi Condensed', $fallbackFont;\n//     font-weight: 400;\n// }\n\n\n@mixin fontBold() {\n    @include fontSmoothing;\n\n    font-family: 'Greed', $fallbackFont;\n    font-weight: 500;\n}\n\n// @mixin fontHeavy() {\n//     @include fontSmoothing;\n\n//     font-family: 'Greed', $fallbackFont;\n//     font-weight: 700;\n// }\n\n@mixin fontBody {\n    font-size: 1.6rem;\n\n    // letter-spacing: 0.015em;\n\n    @include fontAdobeBold;\n}\n\n@mixin fontTitle1 {\n    font-size: 15.5rem;\n    line-height: 0.77;\n    margin-left: -0.04em;\n    letter-spacing: -0.035em;\n    text-transform: uppercase;\n\n    @include fontBold;\n\n    @include mobile {\n        font-size: 5.5rem;\n    }\n}\n\n@mixin fontTitle2 {\n    font-size: 1.6rem;\n    text-transform: uppercase;\n    \n    // font-size: 1.6rem;\n    // margin-left: -0.04em;\n    // letter-spacing: -0.01em;\n\n    @include fontAdobeBold;\n\n    @include mobile {\n        font-size: 1.6rem;\n    }\n}\n","// -----------------------------------\n// Layout\n// -----------------------------------\n\n// Fills to the bounds of the container element\n@mixin fill($position: absolute) {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    position: $position;\n}\n\n// Fills to the bounds of the container element, including an offset (grow or shrink the bounds)\n@mixin fillContainer($offset: 0, $position: absolute) {\n    inset: $offset;\n    position: $position;\n}\n\n// Sets the elements position to either top-left|top-right|bottom-left|bottom-right\n@mixin position($ruleA: top, $ruleB: left, $position: absolute) {\n    #{$ruleA}: 0;\n    #{$ruleB}: 0;\n\n    position: $position;\n}\n\n// USAGE -------\n// @mixin aspectRatio( $aspect-16x9 );\n\n@mixin aspectRatio($ratio) {\n    &::before {\n        content: '';\n        display: block;\n        padding-top: ($ratio * 100%);\n    }\n}\n\n// USAGE -------\n// @mixin centerAlign(100px, 100px);\n\n// Center aligns the element within its container, given a width & height\n@mixin centerAlign($width: 0, $height: 0) {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    margin-top: -$height/2;\n    margin-left: -$width/2;\n}\n\n// Center aligns the element within its container, regardless of width & height\n@mixin centerAlignTransform() {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    transform: translate(-50%, -50%);\n}\n\n// Centers the children within the element. $direction variable can be row|column\n@mixin flexCenter($direction: column) {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: $direction;\n}\n\n// Old school technique to vertically center content\n@mixin addVerticalCentering() {\n    &::before {\n        content: '';\n        display: inline-block;\n        vertical-align: middle;\n        width: 0;\n        height: 100%;\n    }\n}\n\n// Full width element which centers when viewport width > $max-width\n@mixin constrainWidth($max-width: $app-width) {\n    margin: auto;\n    position: relative;\n\n    width: 100%;\n    max-width: $max-width;\n}\n\n// Full width element which centers when viewport width > $max-width, plus fills height\n@mixin constrainWidthFillHeight {\n    @include constrainWidth();\n\n    height: 100%;\n}\n\n@mixin imgFillContainer($align: top-left) {\n    @if $align = top-left {\n        top: 0;\n        left: 0;\n    } @else if $align = center {\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    max-width: 100%;\n    max-height: 100%;\n    min-width: 100%;\n    min-height: 100%;\n    position: absolute;\n}\n\n// Creates a circle element with $size width and height\n@mixin circle($size) {\n    width: $size;\n    height: $size;\n    border-radius: 50%;\n}\n\n// Creates a square element with $size width and height\n@mixin square($size) {\n    width: $size;\n    height: $size;\n}\n\n// Images\n// -----------------------------------\n\n// Background image fully covers element\n@mixin fillCenteredBg($url: '', $position: center) {\n    background-size: cover;\n    background-image: url($url);\n    background-position: $position;\n    background-repeat: no-repeat;\n}\n\n// Background image sits contained inside the element (letterbox effect)\n@mixin containCenteredBg($url: '', $position: center) {\n    background-size: contain;\n    background-image: url($url);\n    background-position: $position;\n    background-repeat: no-repeat;\n}\n\n// Other\n// -----------------------------------// Units\n// -----------------------------------\n\n// Proportianal font scaling  based of $baseWidth, base font size is 10px when viewport width === $baseWidth\n@mixin baseFontSizeVW($baseWidth: 1920) {\n    $base-font-size: 10;\n\n    font-size: $base-font-size / $baseWidth * 100 + 0vw;\n}\n\n// Use letter spacing value from Photoshop\n// @mixin letterSpacing( 100 );\n@mixin letterSpacing($spacing: 0) {\n    letter-spacing: $spacing / 1000 * 1em;\n    // text-indent: $spacing / 1000 * 1em;\n}\n\n@mixin svgStroke($width: 2, $color: currentColor) {\n    stroke: $color;\n    stroke-width: $width;\n    // stroke-linecap: round;\n    // stroke-linejoin: round;\n}\n\n// USAGE -------\n// @mixin sudo(before, {\n//      width: 100px;\n//      height: 100px;\n// });\n\n// Creates a sudo element, $type can be before|after\n@mixin sudo($type: before) {\n    &:#{$type} {\n        content: '';\n        @content;\n    }\n}\n\n// Selector for desktop/devices with mouse\n@mixin pointerDevice {\n    @media (pointer: fine) {\n        @content;\n    }\n\n    .desktop.ie &,\n    .desktop.firefox & {\n        @content;\n    }\n}\n\n// Selector for touch devices\n@mixin touchDevice {\n    @media (any-pointer: coarse) {\n        @content;\n    }\n}\n\n// Aligns hover action between touch and pointer devices\n@mixin hover {\n    @include pointerDevice {\n        &:hover {\n            @content;\n        }\n    }\n    @include touchDevice {\n        &:active,\n        &.android-active {\n            @content;\n        }\n    }\n}\n\n// USAGE -------\n// @mixin pxToRem( font-size, 24px );\n\n// Converts a css $property from px to rem\n@mixin pxToRem($property: 'margin-bottom', $value: 0) {\n    $pxValue: unit($value, px);\n    $remValue: unit($value / 10, rem);\n    #{$property}: $pxValue;\n    #{$property}: $remValue;\n}\n\n// Sets cursor to grabbing\n@mixin grabbingCursor() {\n    cursor: grab;\n    cursor: -webkit-grab;\n    &:active {\n        cursor: grabbing;\n        cursor: -webkit-grabbing;\n    }\n}\n"],sourceRoot:""}]);const r=a},9767:(n,e,t)=>{"use strict";t.d(e,{Z:()=>r});var i=t(559),o=t.n(i),s=t(3476),a=t.n(s)()(o());a.push([n.id,'.cookieGate{bottom:0;right:0;position:absolute;width:100%;padding:1.5rem;display:flex;align-items:center;z-index:1001;background-color:#FFFBF4;cursor:auto;font-size:1.5rem}@media only screen and (min-width: 769px){.cookieGate{width:44.2rem;padding:1.8rem 3rem;font-size:1.6rem;bottom:0;right:0;position:absolute}}.cookieGate__text{flex:1;margin-right:1rem;color:black;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:"Adobe Clean",system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",sans-serif;font-weight:400}.cookieGate__link{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:"Adobe Clean",system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",sans-serif;font-weight:600;text-decoration:underline}.cookieGate__btn{height:var(--btnHeight);padding:0 2.5rem;border-radius:calc(var(--btnHeight) * 0.5);color:white;background-color:black}\n',"",{version:3,sources:["webpack://./component/cookie-gate/index.scss","webpack://./style/mixins/utils.scss","webpack://./style/base/variables.scss","webpack://./style/mixins/fonts.scss"],names:[],mappings:"AAGA,YCkBI,QAAY,CACZ,OAAY,CAEZ,iBAJ0D,CDd1D,UAAW,CACX,cAAe,CACf,YAAa,CACb,kBAAmB,CACnB,YEYa,CFXb,wBAAyB,CAEzB,WAAY,CACZ,gBAAiB,CA+BpB,0CA1CD,YAcQ,aAAc,CACd,mBAAoB,CACpB,gBAAiB,CCErB,QAAY,CACZ,OAAY,CAEZ,iBAJ0D,CDyB7D,CArBG,kBACI,MAAO,CACP,iBAAkB,CAClB,WAAY,CGvBhB,iCAAkC,CAClC,kCAAmC,CAYnC,gOAL0C,CAM1C,eAAgB,CHYf,kBG1BD,iCAAkC,CAClC,kCAAmC,CAmBnC,gOAZ0C,CAa1C,eAAgB,CHSZ,yBAA0B,CAC7B,iBAGG,uBAAwB,CACxB,gBAAiB,CACjB,0CAA2C,CAE3C,WAAY,CACZ,sBAAuB",sourcesContent:["$CDN:\"/\";\n@import 'style/shared';\n\n.cookieGate {\n    @include position(bottom, right);\n    \n    width: 100%;\n    padding: 1.5rem;\n    display: flex;\n    align-items: center;\n    z-index: $z-index-max;\n    background-color: #FFFBF4;\n    \n    cursor: auto;\n    font-size: 1.5rem;\n    \n    @include desktop {\n        width: 44.2rem;\n        padding: 1.8rem 3rem;\n        font-size: 1.6rem;\n        \n        @include position(bottom, right);\n    }\n\n    &__text  {\n        flex: 1;\n        margin-right: 1rem;\n        color: black;\n\n        @include fontAdobeRegular;\n    }\n    \n    &__link {\n        @include fontAdobeBold;\n        text-decoration: underline;\n    }\n\n    &__btn  {\n        height: var(--btnHeight);\n        padding: 0 2.5rem;\n        border-radius: calc(var(--btnHeight) * 0.5);\n\n        color: white;\n        background-color: black;\n    }\n}\n","// -----------------------------------\n// Layout\n// -----------------------------------\n\n// Fills to the bounds of the container element\n@mixin fill($position: absolute) {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    position: $position;\n}\n\n// Fills to the bounds of the container element, including an offset (grow or shrink the bounds)\n@mixin fillContainer($offset: 0, $position: absolute) {\n    inset: $offset;\n    position: $position;\n}\n\n// Sets the elements position to either top-left|top-right|bottom-left|bottom-right\n@mixin position($ruleA: top, $ruleB: left, $position: absolute) {\n    #{$ruleA}: 0;\n    #{$ruleB}: 0;\n\n    position: $position;\n}\n\n// USAGE -------\n// @mixin aspectRatio( $aspect-16x9 );\n\n@mixin aspectRatio($ratio) {\n    &::before {\n        content: '';\n        display: block;\n        padding-top: ($ratio * 100%);\n    }\n}\n\n// USAGE -------\n// @mixin centerAlign(100px, 100px);\n\n// Center aligns the element within its container, given a width & height\n@mixin centerAlign($width: 0, $height: 0) {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    margin-top: -$height/2;\n    margin-left: -$width/2;\n}\n\n// Center aligns the element within its container, regardless of width & height\n@mixin centerAlignTransform() {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    transform: translate(-50%, -50%);\n}\n\n// Centers the children within the element. $direction variable can be row|column\n@mixin flexCenter($direction: column) {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: $direction;\n}\n\n// Old school technique to vertically center content\n@mixin addVerticalCentering() {\n    &::before {\n        content: '';\n        display: inline-block;\n        vertical-align: middle;\n        width: 0;\n        height: 100%;\n    }\n}\n\n// Full width element which centers when viewport width > $max-width\n@mixin constrainWidth($max-width: $app-width) {\n    margin: auto;\n    position: relative;\n\n    width: 100%;\n    max-width: $max-width;\n}\n\n// Full width element which centers when viewport width > $max-width, plus fills height\n@mixin constrainWidthFillHeight {\n    @include constrainWidth();\n\n    height: 100%;\n}\n\n@mixin imgFillContainer($align: top-left) {\n    @if $align = top-left {\n        top: 0;\n        left: 0;\n    } @else if $align = center {\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    max-width: 100%;\n    max-height: 100%;\n    min-width: 100%;\n    min-height: 100%;\n    position: absolute;\n}\n\n// Creates a circle element with $size width and height\n@mixin circle($size) {\n    width: $size;\n    height: $size;\n    border-radius: 50%;\n}\n\n// Creates a square element with $size width and height\n@mixin square($size) {\n    width: $size;\n    height: $size;\n}\n\n// Images\n// -----------------------------------\n\n// Background image fully covers element\n@mixin fillCenteredBg($url: '', $position: center) {\n    background-size: cover;\n    background-image: url($url);\n    background-position: $position;\n    background-repeat: no-repeat;\n}\n\n// Background image sits contained inside the element (letterbox effect)\n@mixin containCenteredBg($url: '', $position: center) {\n    background-size: contain;\n    background-image: url($url);\n    background-position: $position;\n    background-repeat: no-repeat;\n}\n\n// Other\n// -----------------------------------// Units\n// -----------------------------------\n\n// Proportianal font scaling  based of $baseWidth, base font size is 10px when viewport width === $baseWidth\n@mixin baseFontSizeVW($baseWidth: 1920) {\n    $base-font-size: 10;\n\n    font-size: $base-font-size / $baseWidth * 100 + 0vw;\n}\n\n// Use letter spacing value from Photoshop\n// @mixin letterSpacing( 100 );\n@mixin letterSpacing($spacing: 0) {\n    letter-spacing: $spacing / 1000 * 1em;\n    // text-indent: $spacing / 1000 * 1em;\n}\n\n@mixin svgStroke($width: 2, $color: currentColor) {\n    stroke: $color;\n    stroke-width: $width;\n    // stroke-linecap: round;\n    // stroke-linejoin: round;\n}\n\n// USAGE -------\n// @mixin sudo(before, {\n//      width: 100px;\n//      height: 100px;\n// });\n\n// Creates a sudo element, $type can be before|after\n@mixin sudo($type: before) {\n    &:#{$type} {\n        content: '';\n        @content;\n    }\n}\n\n// Selector for desktop/devices with mouse\n@mixin pointerDevice {\n    @media (pointer: fine) {\n        @content;\n    }\n\n    .desktop.ie &,\n    .desktop.firefox & {\n        @content;\n    }\n}\n\n// Selector for touch devices\n@mixin touchDevice {\n    @media (any-pointer: coarse) {\n        @content;\n    }\n}\n\n// Aligns hover action between touch and pointer devices\n@mixin hover {\n    @include pointerDevice {\n        &:hover {\n            @content;\n        }\n    }\n    @include touchDevice {\n        &:active,\n        &.android-active {\n            @content;\n        }\n    }\n}\n\n// USAGE -------\n// @mixin pxToRem( font-size, 24px );\n\n// Converts a css $property from px to rem\n@mixin pxToRem($property: 'margin-bottom', $value: 0) {\n    $pxValue: unit($value, px);\n    $remValue: unit($value / 10, rem);\n    #{$property}: $pxValue;\n    #{$property}: $remValue;\n}\n\n// Sets cursor to grabbing\n@mixin grabbingCursor() {\n    cursor: grab;\n    cursor: -webkit-grab;\n    &:active {\n        cursor: grabbing;\n        cursor: -webkit-grabbing;\n    }\n}\n","// Aspect ratio\n// ------\n$aspect-1x1: 1;\n$aspect-2x3: 3/2;\n$aspect-3x2: 2/3;\n$aspect-3x4: 4/3;\n$aspect-4x3: 3/4;\n$aspect-16x9: 9/16;\n$aspect-9x16: 16/9;\n\n// Z-index\n// -------\n$z-index-0: 0;\n$z-index-1: 100;\n$z-index-2: 200;\n$z-index-3: 300;\n$z-index-4: 400;\n$z-index-5: 500;\n$z-index-6: 600;\n$z-index-7: 700;\n$z-index-8: 800;\n$z-index-9: 900;\n$z-index-10: 1000;\n\n// Easings\n// -------\n// Linear\n$ease-linear: cubic-bezier(0.25, 0.25, 0.75, 0.75);\n// Sine\n$ease-in-sine: cubic-bezier(0.47, 0, 0.745, 0.715);\n$ease-out-sine: cubic-bezier(0.39, 0.575, 0.565, 1);\n$ease-in-out-sine: cubic-bezier(0.445, 0.05, 0.55, 0.95);\n// Quad\n$ease-in-quad: cubic-bezier(0.55, 0.085, 0.68, 0.53);\n$ease-out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94);\n$ease-in-out-quad: cubic-bezier(0.455, 0.03, 0.515, 0.955);\n// Cubic\n$ease-in-cubic: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n$ease-out-cubic: cubic-bezier(0.215, 0.61, 0.355, 1);\n$ease-in-out-cubic: cubic-bezier(0.645, 0.045, 0.355, 1);\n// Quart\n$ease-in-quart: cubic-bezier(0.895, 0.03, 0.685, 0.22);\n$ease-out-quart: cubic-bezier(0.165, 0.84, 0.44, 1);\n$ease-in-out-quart: cubic-bezier(0.77, 0, 0.175, 1);\n// Quint\n$ease-in-quint: cubic-bezier(0.755, 0.05, 0.855, 0.06);\n$ease-out-quint: cubic-bezier(0.23, 1, 0.32, 1);\n$ease-in-out-quint: cubic-bezier(0.86, 0, 0.07, 1);\n// Expo\n$ease-in-expo: cubic-bezier(0.95, 0.05, 0.795, 0.035);\n$ease-out-expo: cubic-bezier(0.19, 1, 0.22, 1);\n$ease-in-out-expo: cubic-bezier(1, 0, 0, 1);\n// Circ\n$ease-in-circ: cubic-bezier(0.6, 0.04, 0.98, 0.335);\n$ease-out-circ: cubic-bezier(0.075, 0.82, 0.165, 1);\n$ease-in-out-circ: cubic-bezier(0.785, 0.135, 0.15, 0.86);\n// Back\n$ease-in-back: cubic-bezier(0.6, -0.28, 0.735, 0.045);\n$ease-out-back: cubic-bezier(0.175, 0.885, 0.32, 1.275);\n$ease-in-out-back: cubic-bezier(0.68, -0.55, 0.265, 1.55);\n","// Font configuration\n// ------------------\n\n@mixin fontSmoothing() {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n}\n\n// Font faces\n// ----------\n\n$fallbackFont: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans',\n    'Droid Sans', 'Helvetica Neue', sans-serif;\n\n@mixin fontAdobeRegular() {\n    @include fontSmoothing;\n\n    font-family: 'Adobe Clean', $fallbackFont;\n    font-weight: 400;\n}\n\n@mixin fontAdobeBold() {\n    @include fontSmoothing;\n\n    font-family: 'Adobe Clean', $fallbackFont;\n    font-weight: 600;\n}\n\n// @mixin fontAdobeBoldCondensed() {\n//     @include fontSmoothing;\n\n//     font-family: 'Adobe Clean Semi Condensed', $fallbackFont;\n//     font-weight: 400;\n// }\n\n\n@mixin fontBold() {\n    @include fontSmoothing;\n\n    font-family: 'Greed', $fallbackFont;\n    font-weight: 500;\n}\n\n// @mixin fontHeavy() {\n//     @include fontSmoothing;\n\n//     font-family: 'Greed', $fallbackFont;\n//     font-weight: 700;\n// }\n\n@mixin fontBody {\n    font-size: 1.6rem;\n\n    // letter-spacing: 0.015em;\n\n    @include fontAdobeBold;\n}\n\n@mixin fontTitle1 {\n    font-size: 15.5rem;\n    line-height: 0.77;\n    margin-left: -0.04em;\n    letter-spacing: -0.035em;\n    text-transform: uppercase;\n\n    @include fontBold;\n\n    @include mobile {\n        font-size: 5.5rem;\n    }\n}\n\n@mixin fontTitle2 {\n    font-size: 1.6rem;\n    text-transform: uppercase;\n    \n    // font-size: 1.6rem;\n    // margin-left: -0.04em;\n    // letter-spacing: -0.01em;\n\n    @include fontAdobeBold;\n\n    @include mobile {\n        font-size: 1.6rem;\n    }\n}\n"],sourceRoot:""}]);const r=a},9062:(n,e,t)=>{"use strict";t.d(e,{Z:()=>r});var i=t(559),o=t.n(i),s=t(3476),a=t.n(s)()(o());a.push([n.id,'.downloadOverlay{top:0;left:0;width:100%;height:100%;position:fixed;display:flex;align-items:center;justify-content:center;flex-direction:column;color:black;background-color:#fffbf4;z-index:1001;padding:0 3rem;opacity:0;display:flex}.downloadOverlay:not([visible]){display:none}.downloadOverlay__text{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:"Adobe Clean",system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",sans-serif;font-weight:400;text-align:center;padding:3rem 0}.downloadOverlay__icon{width:11rem;height:6rem;fill:none}.downloadOverlay__btnWrapper{position:absolute;bottom:8rem}.downloadOverlay button.downloadOverlay__btn{position:relative;top:0;left:0}\n',"",{version:3,sources:["webpack://./component/download-overlay/index.scss","webpack://./style/mixins/utils.scss","webpack://./style/base/variables.scss","webpack://./style/mixins/fonts.scss"],names:[],mappings:"AAGA,iBCGI,KAAM,CACN,MAAO,CACP,UAAW,CACX,WAAY,CACZ,cDNmB,CCwDnB,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,qBAJgC,CDpDhC,WAAY,CACZ,wBAAyB,CACzB,YEaa,CFZb,cAAe,CACf,SAAU,CAGV,YAAa,CAXjB,gCAUsB,YAAa,CAAI,uBGTnC,iCAAkC,CAClC,kCAAmC,CAYnC,gOAL0C,CAM1C,eAAgB,CHAR,iBAAkB,CAClB,cAAe,CAClB,uBAGG,WAAY,CACZ,WAAY,CACZ,SAAU,CACb,6BAGG,iBAAkB,CAClB,WAAY,CA3BxB,6CA+BY,iBAAkB,CAClB,KAAM,CACN,MAAO",sourcesContent:["$CDN:\"/\";\n@import 'style/shared';\n\n.downloadOverlay {\n    @include fill(fixed);\n    @include flexCenter();\n    \n    color: black;\n    background-color: #fffbf4;\n    z-index: $z-index-max;\n    padding: 0 3rem;\n    opacity: 0;\n\n    &:not([visible]){ display: none; }\n    display: flex;\n\n        &__text {\n            @include fontAdobeRegular;\n            text-align: center;\n            padding: 3rem 0;\n        }\n    \n        &__icon {\n            width: 11rem;\n            height: 6rem;\n            fill: none;\n        }\n\n        &__btnWrapper {\n            position: absolute;\n            bottom: 8rem;\n        }\n\n        button.downloadOverlay__btn {\n            position: relative;\n            top: 0;\n            left: 0;\n        }\n}\n","// -----------------------------------\n// Layout\n// -----------------------------------\n\n// Fills to the bounds of the container element\n@mixin fill($position: absolute) {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    position: $position;\n}\n\n// Fills to the bounds of the container element, including an offset (grow or shrink the bounds)\n@mixin fillContainer($offset: 0, $position: absolute) {\n    inset: $offset;\n    position: $position;\n}\n\n// Sets the elements position to either top-left|top-right|bottom-left|bottom-right\n@mixin position($ruleA: top, $ruleB: left, $position: absolute) {\n    #{$ruleA}: 0;\n    #{$ruleB}: 0;\n\n    position: $position;\n}\n\n// USAGE -------\n// @mixin aspectRatio( $aspect-16x9 );\n\n@mixin aspectRatio($ratio) {\n    &::before {\n        content: '';\n        display: block;\n        padding-top: ($ratio * 100%);\n    }\n}\n\n// USAGE -------\n// @mixin centerAlign(100px, 100px);\n\n// Center aligns the element within its container, given a width & height\n@mixin centerAlign($width: 0, $height: 0) {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    margin-top: -$height/2;\n    margin-left: -$width/2;\n}\n\n// Center aligns the element within its container, regardless of width & height\n@mixin centerAlignTransform() {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    transform: translate(-50%, -50%);\n}\n\n// Centers the children within the element. $direction variable can be row|column\n@mixin flexCenter($direction: column) {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: $direction;\n}\n\n// Old school technique to vertically center content\n@mixin addVerticalCentering() {\n    &::before {\n        content: '';\n        display: inline-block;\n        vertical-align: middle;\n        width: 0;\n        height: 100%;\n    }\n}\n\n// Full width element which centers when viewport width > $max-width\n@mixin constrainWidth($max-width: $app-width) {\n    margin: auto;\n    position: relative;\n\n    width: 100%;\n    max-width: $max-width;\n}\n\n// Full width element which centers when viewport width > $max-width, plus fills height\n@mixin constrainWidthFillHeight {\n    @include constrainWidth();\n\n    height: 100%;\n}\n\n@mixin imgFillContainer($align: top-left) {\n    @if $align = top-left {\n        top: 0;\n        left: 0;\n    } @else if $align = center {\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    max-width: 100%;\n    max-height: 100%;\n    min-width: 100%;\n    min-height: 100%;\n    position: absolute;\n}\n\n// Creates a circle element with $size width and height\n@mixin circle($size) {\n    width: $size;\n    height: $size;\n    border-radius: 50%;\n}\n\n// Creates a square element with $size width and height\n@mixin square($size) {\n    width: $size;\n    height: $size;\n}\n\n// Images\n// -----------------------------------\n\n// Background image fully covers element\n@mixin fillCenteredBg($url: '', $position: center) {\n    background-size: cover;\n    background-image: url($url);\n    background-position: $position;\n    background-repeat: no-repeat;\n}\n\n// Background image sits contained inside the element (letterbox effect)\n@mixin containCenteredBg($url: '', $position: center) {\n    background-size: contain;\n    background-image: url($url);\n    background-position: $position;\n    background-repeat: no-repeat;\n}\n\n// Other\n// -----------------------------------// Units\n// -----------------------------------\n\n// Proportianal font scaling  based of $baseWidth, base font size is 10px when viewport width === $baseWidth\n@mixin baseFontSizeVW($baseWidth: 1920) {\n    $base-font-size: 10;\n\n    font-size: $base-font-size / $baseWidth * 100 + 0vw;\n}\n\n// Use letter spacing value from Photoshop\n// @mixin letterSpacing( 100 );\n@mixin letterSpacing($spacing: 0) {\n    letter-spacing: $spacing / 1000 * 1em;\n    // text-indent: $spacing / 1000 * 1em;\n}\n\n@mixin svgStroke($width: 2, $color: currentColor) {\n    stroke: $color;\n    stroke-width: $width;\n    // stroke-linecap: round;\n    // stroke-linejoin: round;\n}\n\n// USAGE -------\n// @mixin sudo(before, {\n//      width: 100px;\n//      height: 100px;\n// });\n\n// Creates a sudo element, $type can be before|after\n@mixin sudo($type: before) {\n    &:#{$type} {\n        content: '';\n        @content;\n    }\n}\n\n// Selector for desktop/devices with mouse\n@mixin pointerDevice {\n    @media (pointer: fine) {\n        @content;\n    }\n\n    .desktop.ie &,\n    .desktop.firefox & {\n        @content;\n    }\n}\n\n// Selector for touch devices\n@mixin touchDevice {\n    @media (any-pointer: coarse) {\n        @content;\n    }\n}\n\n// Aligns hover action between touch and pointer devices\n@mixin hover {\n    @include pointerDevice {\n        &:hover {\n            @content;\n        }\n    }\n    @include touchDevice {\n        &:active,\n        &.android-active {\n            @content;\n        }\n    }\n}\n\n// USAGE -------\n// @mixin pxToRem( font-size, 24px );\n\n// Converts a css $property from px to rem\n@mixin pxToRem($property: 'margin-bottom', $value: 0) {\n    $pxValue: unit($value, px);\n    $remValue: unit($value / 10, rem);\n    #{$property}: $pxValue;\n    #{$property}: $remValue;\n}\n\n// Sets cursor to grabbing\n@mixin grabbingCursor() {\n    cursor: grab;\n    cursor: -webkit-grab;\n    &:active {\n        cursor: grabbing;\n        cursor: -webkit-grabbing;\n    }\n}\n","// Aspect ratio\n// ------\n$aspect-1x1: 1;\n$aspect-2x3: 3/2;\n$aspect-3x2: 2/3;\n$aspect-3x4: 4/3;\n$aspect-4x3: 3/4;\n$aspect-16x9: 9/16;\n$aspect-9x16: 16/9;\n\n// Z-index\n// -------\n$z-index-0: 0;\n$z-index-1: 100;\n$z-index-2: 200;\n$z-index-3: 300;\n$z-index-4: 400;\n$z-index-5: 500;\n$z-index-6: 600;\n$z-index-7: 700;\n$z-index-8: 800;\n$z-index-9: 900;\n$z-index-10: 1000;\n\n// Easings\n// -------\n// Linear\n$ease-linear: cubic-bezier(0.25, 0.25, 0.75, 0.75);\n// Sine\n$ease-in-sine: cubic-bezier(0.47, 0, 0.745, 0.715);\n$ease-out-sine: cubic-bezier(0.39, 0.575, 0.565, 1);\n$ease-in-out-sine: cubic-bezier(0.445, 0.05, 0.55, 0.95);\n// Quad\n$ease-in-quad: cubic-bezier(0.55, 0.085, 0.68, 0.53);\n$ease-out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94);\n$ease-in-out-quad: cubic-bezier(0.455, 0.03, 0.515, 0.955);\n// Cubic\n$ease-in-cubic: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n$ease-out-cubic: cubic-bezier(0.215, 0.61, 0.355, 1);\n$ease-in-out-cubic: cubic-bezier(0.645, 0.045, 0.355, 1);\n// Quart\n$ease-in-quart: cubic-bezier(0.895, 0.03, 0.685, 0.22);\n$ease-out-quart: cubic-bezier(0.165, 0.84, 0.44, 1);\n$ease-in-out-quart: cubic-bezier(0.77, 0, 0.175, 1);\n// Quint\n$ease-in-quint: cubic-bezier(0.755, 0.05, 0.855, 0.06);\n$ease-out-quint: cubic-bezier(0.23, 1, 0.32, 1);\n$ease-in-out-quint: cubic-bezier(0.86, 0, 0.07, 1);\n// Expo\n$ease-in-expo: cubic-bezier(0.95, 0.05, 0.795, 0.035);\n$ease-out-expo: cubic-bezier(0.19, 1, 0.22, 1);\n$ease-in-out-expo: cubic-bezier(1, 0, 0, 1);\n// Circ\n$ease-in-circ: cubic-bezier(0.6, 0.04, 0.98, 0.335);\n$ease-out-circ: cubic-bezier(0.075, 0.82, 0.165, 1);\n$ease-in-out-circ: cubic-bezier(0.785, 0.135, 0.15, 0.86);\n// Back\n$ease-in-back: cubic-bezier(0.6, -0.28, 0.735, 0.045);\n$ease-out-back: cubic-bezier(0.175, 0.885, 0.32, 1.275);\n$ease-in-out-back: cubic-bezier(0.68, -0.55, 0.265, 1.55);\n","// Font configuration\n// ------------------\n\n@mixin fontSmoothing() {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n}\n\n// Font faces\n// ----------\n\n$fallbackFont: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans',\n    'Droid Sans', 'Helvetica Neue', sans-serif;\n\n@mixin fontAdobeRegular() {\n    @include fontSmoothing;\n\n    font-family: 'Adobe Clean', $fallbackFont;\n    font-weight: 400;\n}\n\n@mixin fontAdobeBold() {\n    @include fontSmoothing;\n\n    font-family: 'Adobe Clean', $fallbackFont;\n    font-weight: 600;\n}\n\n// @mixin fontAdobeBoldCondensed() {\n//     @include fontSmoothing;\n\n//     font-family: 'Adobe Clean Semi Condensed', $fallbackFont;\n//     font-weight: 400;\n// }\n\n\n@mixin fontBold() {\n    @include fontSmoothing;\n\n    font-family: 'Greed', $fallbackFont;\n    font-weight: 500;\n}\n\n// @mixin fontHeavy() {\n//     @include fontSmoothing;\n\n//     font-family: 'Greed', $fallbackFont;\n//     font-weight: 700;\n// }\n\n@mixin fontBody {\n    font-size: 1.6rem;\n\n    // letter-spacing: 0.015em;\n\n    @include fontAdobeBold;\n}\n\n@mixin fontTitle1 {\n    font-size: 15.5rem;\n    line-height: 0.77;\n    margin-left: -0.04em;\n    letter-spacing: -0.035em;\n    text-transform: uppercase;\n\n    @include fontBold;\n\n    @include mobile {\n        font-size: 5.5rem;\n    }\n}\n\n@mixin fontTitle2 {\n    font-size: 1.6rem;\n    text-transform: uppercase;\n    \n    // font-size: 1.6rem;\n    // margin-left: -0.04em;\n    // letter-spacing: -0.01em;\n\n    @include fontAdobeBold;\n\n    @include mobile {\n        font-size: 1.6rem;\n    }\n}\n"],sourceRoot:""}]);const r=a},3616:(n,e,t)=>{"use strict";t.d(e,{Z:()=>r});var i=t(559),o=t.n(i),s=t(3476),a=t.n(s)()(o());a.push([n.id,'.footer{left:var(--sideMargin);right:var(--sideMargin);bottom:var(--sideMargin);position:absolute;display:flex;flex-wrap:wrap;justify-content:space-between;z-index:200;line-height:0.9;pointer-events:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:"Adobe Clean",system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",sans-serif;font-weight:600}.footer__left,.footer__right{margin-top:0.8rem}.footer__left{display:flex;align-items:center}@media only screen and (max-width: 768px){.footer__left{width:25rem;line-height:1.2}}@media only screen and (min-width: 769px){.footer__left{margin-right:2rem}}.footer__socialTitle{margin-right:0.4rem}.footer__socialLinks{display:flex}.footer__socialLink{cursor:pointer;position:relative;display:inline-block;pointer-events:auto}@media (pointer: fine){.footer__socialLink:hover{text-decoration:underline}}.desktop.ie .footer__socialLink:hover,.desktop.firefox .footer__socialLink:hover{text-decoration:underline}@media (any-pointer: coarse){.footer__socialLink:active,.footer__socialLink.android-active{text-decoration:underline}}.footer__socialLink:not(:first-child){margin-left:1rem}.footer__socialLink a{top:-1rem;right:-1rem;bottom:-1rem;left:-1rem;position:absolute}.footer__socialLinkIcon{top:0.1rem;position:relative;margin-left:0.2rem;width:.9rem;height:.9rem}.footer__right{display:flex;align-items:center;font-size:14px;cursor:auto;pointer-events:auto;position:relative}@media only screen and (max-width: 768px){.footer__right{width:100%;margin-top:3.4rem}}@media only screen and (min-width: 769px){.footer__right:before{content:\'\';top:-2.5rem;right:-2.5rem;bottom:-2.5rem;left:-2.5rem;position:absolute;position:absolute}}.footer__buttons{margin-right:auto}@media only screen and (min-width: 769px){.footer__buttons{margin-right:38px}}.footer__externalLink{position:relative}@media only screen and (max-width: 768px){.footer__externalLink{font-size:10px}}.footer__externalLink:not(:last-of-type){margin-right:12px}@media only screen and (min-width: 769px){.footer__externalLink:not(:last-of-type){margin-right:16px}}.footer__externalLink a{top:0;left:0;width:100%;height:100%;position:absolute}@media (pointer: fine){.footer__externalLink:hover{text-decoration:underline}}.desktop.ie .footer__externalLink:hover,.desktop.firefox .footer__externalLink:hover{text-decoration:underline}@media (any-pointer: coarse){.footer__externalLink:active,.footer__externalLink.android-active{text-decoration:underline}}.footer__langSelect{margin-right:15px;margin-left:auto}\n',"",{version:3,sources:["webpack://./component/footer/index.scss","webpack://./style/base/variables.scss","webpack://./style/mixins/fonts.scss","webpack://./style/mixins/breakpoints.scss","webpack://./style/mixins/utils.scss"],names:[],mappings:"AAGA,QACI,sBAAuB,CACvB,uBAAwB,CACxB,wBAAyB,CACzB,iBAAkB,CAElB,YAAa,CACb,cAAe,CACf,6BAA8B,CAE9B,WCCW,CDAX,eAAgB,CAChB,mBAAoB,CEXpB,iCAAkC,CAClC,kCAAmC,CAmBnC,gOAZ0C,CAa1C,eAAgB,CFPhB,6BAEI,iBAAkB,CACrB,cAGG,YAAa,CACb,kBAAmB,CAUtB,0CAZD,cAKQ,WAAY,CACZ,eAAgB,CAMvB,CGMD,0CHlBA,cAUQ,iBAAkB,CAEzB,CAEG,qBACI,mBAAoB,CACvB,qBAGG,YAAa,CAChB,oBAGO,cAAe,CACf,iBAAkB,CAClB,oBAAqB,CACrB,mBAAoB,CASvB,uBAbA,0BAMoB,yBAA0B,CI0JlD,CAlBL,iFJxI6B,yBAA0B,CIgJvD,6BJtJS,8DAMoB,yBAA0B,CIgKlD,CJtKI,sCASO,gBAAiB,CATxB,sBI9BT,SJ0C4C,CI1C5C,WJ0C4C,CI1C5C,YJ0C4C,CI1C5C,UJ0C4C,CIzC5C,iBAFgD,CJ2CC,wBAIjC,UAAW,CACX,iBAAkB,CAClB,kBAAmB,CIwDnC,WJtDsC,CIuDtC,YJvDsC,CACzB,eAKT,YAAa,CACb,kBAAmB,CAEnB,cAAe,CACf,WAAY,CACZ,mBAAoB,CACpB,iBAAkB,CAcrB,0CArBD,eAUQ,UAAW,CACX,iBAAkB,CAUzB,CGlDD,0CH6BC,sBI0GG,UAAW,CAjKf,WJuE0C,CIvE1C,aJuE0C,CIvE1C,cJuE0C,CIvE1C,YJuE0C,CItE1C,iBAFgD,CJyEpC,iBAAkB,CI2F7B,CJrFG,iBACI,iBAAkB,CAKrB,0CAND,iBAIQ,iBAAkB,CAEzB,CAEG,sBACI,iBAAkB,CAiBrB,0CAlBD,sBAIQ,cAAe,CActB,CAlBA,yCAQO,iBAAkB,CAKrB,0CAbJ,yCAWW,iBAAkB,CAEzB,CAbJ,wBI/FT,KAAM,CACN,MAAO,CACP,UAAW,CACX,WAAY,CACZ,iBAL2B,CJ+GO,uBAfzB,4BAiBoB,yBAA0B,CIuFlD,CAlBL,qFJrE6B,yBAA0B,CI6EvD,6BJ9FS,kEAiBoB,yBAA0B,CI6FlD,CJzFD,oBACI,iBAAkB,CAClB,gBAAiB",sourcesContent:["$CDN:\"/\";\n@import 'style/shared';\n\n.footer {\n    left: var(--sideMargin);\n    right: var(--sideMargin);\n    bottom: var(--sideMargin);\n    position: absolute;\n\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n\n    z-index: $z-index-shell;\n    line-height: 0.9;\n    pointer-events: none;\n    \n    @include fontAdobeBold;\n    &__left,\n    &__right {\n        margin-top: 0.8rem;\n    }\n\n    &__left {\n        display: flex;\n        align-items: center;\n\n        @include mobile {\n            width: 25rem;\n            line-height: 1.2;\n        }\n\n        @include desktop {\n            margin-right: 2rem;\n        }\n    }\n\n        &__socialTitle {\n            margin-right: 0.4rem;\n        }\n\n        &__socialLinks {\n            display: flex;\n        }\n\n            &__socialLink {\n                cursor: pointer;\n                position: relative;\n                display: inline-block;\n                pointer-events: auto;\n                \n                @include hover { text-decoration: underline; }\n                \n                &:not(:first-child) {\n                    margin-left: 1rem;\n                }\n                \n                a { @include fillContainer(-1rem); }\n            }\n\n                &__socialLinkIcon {\n                    top: 0.1rem;\n                    position: relative;\n                    margin-left: 0.2rem;\n                    \n                    @include square(0.9rem);\n                }\n\n\n\n    &__right {\n        display: flex;\n        align-items: center;\n        \n        font-size: 14px;\n        cursor: auto;\n        pointer-events: auto;\n        position: relative;\n        \n        @include mobile {\n            width: 100%;\n            margin-top: 3.4rem;\n        }\n\n        @include desktop {\n            @include sudo {\n                @include fillContainer(-2.5rem);\n                position: absolute;\n            }\n        }\n    \n    }\n\n        &__buttons {\n            margin-right: auto;\n\n            @include desktop {\n                margin-right: 38px;\n            }\n        }\n\n            &__externalLink {\n                position: relative;\n        \n                @include mobile {\n                    font-size: 10px;\n                }\n                \n                &:not(:last-of-type) {\n                    margin-right: 12px;\n\n                    @include desktop {\n                        margin-right: 16px;\n                    }\n                }\n                \n                a { @include  fill; }\n                \n                @include hover { text-decoration: underline; }\n            }\n\n        \n        &__langSelect {\n            margin-right: 15px;\n            margin-left: auto;\n        }\n}\n","// Aspect ratio\n// ------\n$aspect-1x1: 1;\n$aspect-2x3: 3/2;\n$aspect-3x2: 2/3;\n$aspect-3x4: 4/3;\n$aspect-4x3: 3/4;\n$aspect-16x9: 9/16;\n$aspect-9x16: 16/9;\n\n// Z-index\n// -------\n$z-index-0: 0;\n$z-index-1: 100;\n$z-index-2: 200;\n$z-index-3: 300;\n$z-index-4: 400;\n$z-index-5: 500;\n$z-index-6: 600;\n$z-index-7: 700;\n$z-index-8: 800;\n$z-index-9: 900;\n$z-index-10: 1000;\n\n// Easings\n// -------\n// Linear\n$ease-linear: cubic-bezier(0.25, 0.25, 0.75, 0.75);\n// Sine\n$ease-in-sine: cubic-bezier(0.47, 0, 0.745, 0.715);\n$ease-out-sine: cubic-bezier(0.39, 0.575, 0.565, 1);\n$ease-in-out-sine: cubic-bezier(0.445, 0.05, 0.55, 0.95);\n// Quad\n$ease-in-quad: cubic-bezier(0.55, 0.085, 0.68, 0.53);\n$ease-out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94);\n$ease-in-out-quad: cubic-bezier(0.455, 0.03, 0.515, 0.955);\n// Cubic\n$ease-in-cubic: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n$ease-out-cubic: cubic-bezier(0.215, 0.61, 0.355, 1);\n$ease-in-out-cubic: cubic-bezier(0.645, 0.045, 0.355, 1);\n// Quart\n$ease-in-quart: cubic-bezier(0.895, 0.03, 0.685, 0.22);\n$ease-out-quart: cubic-bezier(0.165, 0.84, 0.44, 1);\n$ease-in-out-quart: cubic-bezier(0.77, 0, 0.175, 1);\n// Quint\n$ease-in-quint: cubic-bezier(0.755, 0.05, 0.855, 0.06);\n$ease-out-quint: cubic-bezier(0.23, 1, 0.32, 1);\n$ease-in-out-quint: cubic-bezier(0.86, 0, 0.07, 1);\n// Expo\n$ease-in-expo: cubic-bezier(0.95, 0.05, 0.795, 0.035);\n$ease-out-expo: cubic-bezier(0.19, 1, 0.22, 1);\n$ease-in-out-expo: cubic-bezier(1, 0, 0, 1);\n// Circ\n$ease-in-circ: cubic-bezier(0.6, 0.04, 0.98, 0.335);\n$ease-out-circ: cubic-bezier(0.075, 0.82, 0.165, 1);\n$ease-in-out-circ: cubic-bezier(0.785, 0.135, 0.15, 0.86);\n// Back\n$ease-in-back: cubic-bezier(0.6, -0.28, 0.735, 0.045);\n$ease-out-back: cubic-bezier(0.175, 0.885, 0.32, 1.275);\n$ease-in-out-back: cubic-bezier(0.68, -0.55, 0.265, 1.55);\n","// Font configuration\n// ------------------\n\n@mixin fontSmoothing() {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n}\n\n// Font faces\n// ----------\n\n$fallbackFont: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans',\n    'Droid Sans', 'Helvetica Neue', sans-serif;\n\n@mixin fontAdobeRegular() {\n    @include fontSmoothing;\n\n    font-family: 'Adobe Clean', $fallbackFont;\n    font-weight: 400;\n}\n\n@mixin fontAdobeBold() {\n    @include fontSmoothing;\n\n    font-family: 'Adobe Clean', $fallbackFont;\n    font-weight: 600;\n}\n\n// @mixin fontAdobeBoldCondensed() {\n//     @include fontSmoothing;\n\n//     font-family: 'Adobe Clean Semi Condensed', $fallbackFont;\n//     font-weight: 400;\n// }\n\n\n@mixin fontBold() {\n    @include fontSmoothing;\n\n    font-family: 'Greed', $fallbackFont;\n    font-weight: 500;\n}\n\n// @mixin fontHeavy() {\n//     @include fontSmoothing;\n\n//     font-family: 'Greed', $fallbackFont;\n//     font-weight: 700;\n// }\n\n@mixin fontBody {\n    font-size: 1.6rem;\n\n    // letter-spacing: 0.015em;\n\n    @include fontAdobeBold;\n}\n\n@mixin fontTitle1 {\n    font-size: 15.5rem;\n    line-height: 0.77;\n    margin-left: -0.04em;\n    letter-spacing: -0.035em;\n    text-transform: uppercase;\n\n    @include fontBold;\n\n    @include mobile {\n        font-size: 5.5rem;\n    }\n}\n\n@mixin fontTitle2 {\n    font-size: 1.6rem;\n    text-transform: uppercase;\n    \n    // font-size: 1.6rem;\n    // margin-left: -0.04em;\n    // letter-spacing: -0.01em;\n\n    @include fontAdobeBold;\n\n    @include mobile {\n        font-size: 1.6rem;\n    }\n}\n",'// Breakpoints\n// -----------\n\n$bp-mobile-threshold: 768px;\n\n// Mixins\n// ------\n\n/*\n    These mixins apply styles only when within the specified breakpoint\n    ---\n    1. Predefined breakpoints\n    2. Custom breakpoints for width\n    3. Custom breakpoints for height\n*/\n\n@mixin portrait() {\n    @media only screen and (orientation: portrait) {\n        @content;\n    }\n}\n\n@mixin landscape() {\n    @media only screen and (orientation: landscape) {\n        @content;\n    }\n}\n\n@mixin mobile() {\n    // @media only screen and (max-aspect-ratio: 3/4) {\n    //     @content;\n    // }\n    @media only screen and (max-width: $bp-mobile-threshold) {\n        @content;\n    }\n}\n\n@mixin desktop() {\n    // @media only screen and (min-aspect-ratio: 301/400) {\n    //     @content;\n    // }\n    @media only screen and (min-width: $bp-mobile-threshold + 1) {\n        @content;\n    }\n}\n\n@mixin handheldDevice {\n    .root[device="mobile"] &,\n    .root[device="tablet"] & {\n        @content;\n    }\n}\n\n@mixin desktopDevice {\n    .root[device="desktop"] & {\n        @content;\n    }\n}\n\n@mixin phoneLandscape() {\n    @media only screen and (orientation: landscape) {\n        .phone & {\n            @content;\n        }\n    }\n}\n\n@mixin fullscreen() {\n    .fullscreen & {\n        @content;\n    }\n}\n\n@mixin breakpoint($point) {\n    @if $point == mobile {\n        @include mobile();\n    }\n    @if $point == desktop {\n        @include desktop();\n    }\n}\n\n// Min width and Max width\n@mixin breakpoint-width($min, $max) {\n    @media only screen and (min-width: $min) and (max-width: $max) {\n        @content;\n    }\n}\n// Min width\n@mixin breakpoint-width-min($min) {\n    @media only screen and (min-width: $min) {\n        @content;\n    }\n}\n// Max width\n@mixin breakpoint-width-max($max) {\n    @media only screen and (max-width: $max) {\n        @content;\n    }\n}\n\n// Min height and Max height\n@mixin breakpoint-height($min, $max) {\n    @media only screen and (min-height: $min) and (max-height: $max) {\n        @content;\n    }\n}\n// Min height\n@mixin breakpoint-height-min($min) {\n    @media only screen and (min-height: $min) {\n        @content;\n    }\n}\n// Max height\n@mixin breakpoint-height-max($max) {\n    @media only screen and (max-height: $max) {\n        @content;\n    }\n}\n',"// -----------------------------------\n// Layout\n// -----------------------------------\n\n// Fills to the bounds of the container element\n@mixin fill($position: absolute) {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    position: $position;\n}\n\n// Fills to the bounds of the container element, including an offset (grow or shrink the bounds)\n@mixin fillContainer($offset: 0, $position: absolute) {\n    inset: $offset;\n    position: $position;\n}\n\n// Sets the elements position to either top-left|top-right|bottom-left|bottom-right\n@mixin position($ruleA: top, $ruleB: left, $position: absolute) {\n    #{$ruleA}: 0;\n    #{$ruleB}: 0;\n\n    position: $position;\n}\n\n// USAGE -------\n// @mixin aspectRatio( $aspect-16x9 );\n\n@mixin aspectRatio($ratio) {\n    &::before {\n        content: '';\n        display: block;\n        padding-top: ($ratio * 100%);\n    }\n}\n\n// USAGE -------\n// @mixin centerAlign(100px, 100px);\n\n// Center aligns the element within its container, given a width & height\n@mixin centerAlign($width: 0, $height: 0) {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    margin-top: -$height/2;\n    margin-left: -$width/2;\n}\n\n// Center aligns the element within its container, regardless of width & height\n@mixin centerAlignTransform() {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    transform: translate(-50%, -50%);\n}\n\n// Centers the children within the element. $direction variable can be row|column\n@mixin flexCenter($direction: column) {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: $direction;\n}\n\n// Old school technique to vertically center content\n@mixin addVerticalCentering() {\n    &::before {\n        content: '';\n        display: inline-block;\n        vertical-align: middle;\n        width: 0;\n        height: 100%;\n    }\n}\n\n// Full width element which centers when viewport width > $max-width\n@mixin constrainWidth($max-width: $app-width) {\n    margin: auto;\n    position: relative;\n\n    width: 100%;\n    max-width: $max-width;\n}\n\n// Full width element which centers when viewport width > $max-width, plus fills height\n@mixin constrainWidthFillHeight {\n    @include constrainWidth();\n\n    height: 100%;\n}\n\n@mixin imgFillContainer($align: top-left) {\n    @if $align = top-left {\n        top: 0;\n        left: 0;\n    } @else if $align = center {\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    max-width: 100%;\n    max-height: 100%;\n    min-width: 100%;\n    min-height: 100%;\n    position: absolute;\n}\n\n// Creates a circle element with $size width and height\n@mixin circle($size) {\n    width: $size;\n    height: $size;\n    border-radius: 50%;\n}\n\n// Creates a square element with $size width and height\n@mixin square($size) {\n    width: $size;\n    height: $size;\n}\n\n// Images\n// -----------------------------------\n\n// Background image fully covers element\n@mixin fillCenteredBg($url: '', $position: center) {\n    background-size: cover;\n    background-image: url($url);\n    background-position: $position;\n    background-repeat: no-repeat;\n}\n\n// Background image sits contained inside the element (letterbox effect)\n@mixin containCenteredBg($url: '', $position: center) {\n    background-size: contain;\n    background-image: url($url);\n    background-position: $position;\n    background-repeat: no-repeat;\n}\n\n// Other\n// -----------------------------------// Units\n// -----------------------------------\n\n// Proportianal font scaling  based of $baseWidth, base font size is 10px when viewport width === $baseWidth\n@mixin baseFontSizeVW($baseWidth: 1920) {\n    $base-font-size: 10;\n\n    font-size: $base-font-size / $baseWidth * 100 + 0vw;\n}\n\n// Use letter spacing value from Photoshop\n// @mixin letterSpacing( 100 );\n@mixin letterSpacing($spacing: 0) {\n    letter-spacing: $spacing / 1000 * 1em;\n    // text-indent: $spacing / 1000 * 1em;\n}\n\n@mixin svgStroke($width: 2, $color: currentColor) {\n    stroke: $color;\n    stroke-width: $width;\n    // stroke-linecap: round;\n    // stroke-linejoin: round;\n}\n\n// USAGE -------\n// @mixin sudo(before, {\n//      width: 100px;\n//      height: 100px;\n// });\n\n// Creates a sudo element, $type can be before|after\n@mixin sudo($type: before) {\n    &:#{$type} {\n        content: '';\n        @content;\n    }\n}\n\n// Selector for desktop/devices with mouse\n@mixin pointerDevice {\n    @media (pointer: fine) {\n        @content;\n    }\n\n    .desktop.ie &,\n    .desktop.firefox & {\n        @content;\n    }\n}\n\n// Selector for touch devices\n@mixin touchDevice {\n    @media (any-pointer: coarse) {\n        @content;\n    }\n}\n\n// Aligns hover action between touch and pointer devices\n@mixin hover {\n    @include pointerDevice {\n        &:hover {\n            @content;\n        }\n    }\n    @include touchDevice {\n        &:active,\n        &.android-active {\n            @content;\n        }\n    }\n}\n\n// USAGE -------\n// @mixin pxToRem( font-size, 24px );\n\n// Converts a css $property from px to rem\n@mixin pxToRem($property: 'margin-bottom', $value: 0) {\n    $pxValue: unit($value, px);\n    $remValue: unit($value / 10, rem);\n    #{$property}: $pxValue;\n    #{$property}: $remValue;\n}\n\n// Sets cursor to grabbing\n@mixin grabbingCursor() {\n    cursor: grab;\n    cursor: -webkit-grab;\n    &:active {\n        cursor: grabbing;\n        cursor: -webkit-grabbing;\n    }\n}\n"],sourceRoot:""}]);const r=a},4176:(n,e,t)=>{"use strict";t.d(e,{Z:()=>r});var i=t(559),o=t.n(i),s=t(3476),a=t.n(s)()(o());a.push([n.id,".formSelect{position:relative;cursor:pointer}.formSelect__select{border:none;background:transparent;z-index:1;opacity:0;cursor:pointer;top:0;left:0;width:100%;height:100%;position:absolute}.formSelect__dropdown{position:absolute;bottom:100%;text-transform:uppercase;line-height:1.5;padding-bottom:8px;display:none}.formSelect__dropdown li:hover{text-decoration:underline}.formSelect__selectedText{display:flex;align-items:center;justify-content:space-between;position:relative}.formSelect__placeholder{height:100%;flex:1;display:flex;align-items:center;z-index:1;pointer-events:none;padding-right:5px;text-transform:uppercase}.formSelect__arrow{width:10px;height:10px;position:relative;transform:translateY(1px)}\n","",{version:3,sources:["webpack://./component/language-select/form-select/index.scss","webpack://./style/mixins/utils.scss"],names:[],mappings:"AAGA,YACI,iBAAkB,CAClB,cAAe,CAEf,oBACI,WAAY,CACZ,sBAAuB,CAEvB,SAAU,CACV,SAAU,CACV,cAAe,CCPnB,KAAM,CACN,MAAO,CACP,UAAW,CACX,WAAY,CACZ,iBAL2B,CDW1B,sBAGG,iBAAkB,CAClB,WAAY,CACZ,wBAAyB,CACzB,eAAgB,CAChB,kBAAmB,CACnB,YAAa,CANhB,+BAQO,yBAA0B,CAC7B,0BAID,YAAa,CACb,kBAAmB,CACnB,6BAA8B,CAC9B,iBAAkB,CACrB,yBAIO,WAAY,CAEZ,MAAO,CACP,YAAa,CACb,kBAAmB,CACnB,SAAU,CACV,mBAAoB,CAEpB,iBAAkB,CAClB,wBAAyB,CAK5B,mBCkEL,UD/D4B,CCgE5B,WDhE4B,CAIpB,iBAAkB,CAClB,yBAA0B",sourcesContent:["$CDN:\"/\";\n@import 'style/shared';\n\n.formSelect {\n    position: relative;\n    cursor: pointer;\n\n    &__select {\n        border: none;\n        background: transparent;\n\n        z-index: 1;\n        opacity: 0;\n        cursor: pointer;\n\n        @include fill;\n    }\n\n    &__dropdown {\n        position: absolute;\n        bottom: 100%;\n        text-transform: uppercase;\n        line-height: 1.5;\n        padding-bottom: 8px;\n        display: none;\n        li:hover { \n            text-decoration: underline; \n        }\n    }\n    \n    &__selectedText {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        position: relative;\n    }\n\n        &__placeholder {\n            // @include fill;\n            height: 100%;\n\n            flex: 1;\n            display: flex;\n            align-items: center;\n            z-index: 1;\n            pointer-events: none;\n\n            padding-right: 5px;\n            text-transform: uppercase;\n\n            // .hasText ~ &,\n            // .formSelect__select:focus ~ & {\n            // }\n        }\n\n        &__arrow {\n            @include square(10px);\n            // @include svgStroke(1.6);\n            // stroke: currentColor;\n\n            position: relative;\n            transform: translateY(1px);\n        }\n}\n","// -----------------------------------\n// Layout\n// -----------------------------------\n\n// Fills to the bounds of the container element\n@mixin fill($position: absolute) {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    position: $position;\n}\n\n// Fills to the bounds of the container element, including an offset (grow or shrink the bounds)\n@mixin fillContainer($offset: 0, $position: absolute) {\n    inset: $offset;\n    position: $position;\n}\n\n// Sets the elements position to either top-left|top-right|bottom-left|bottom-right\n@mixin position($ruleA: top, $ruleB: left, $position: absolute) {\n    #{$ruleA}: 0;\n    #{$ruleB}: 0;\n\n    position: $position;\n}\n\n// USAGE -------\n// @mixin aspectRatio( $aspect-16x9 );\n\n@mixin aspectRatio($ratio) {\n    &::before {\n        content: '';\n        display: block;\n        padding-top: ($ratio * 100%);\n    }\n}\n\n// USAGE -------\n// @mixin centerAlign(100px, 100px);\n\n// Center aligns the element within its container, given a width & height\n@mixin centerAlign($width: 0, $height: 0) {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    margin-top: -$height/2;\n    margin-left: -$width/2;\n}\n\n// Center aligns the element within its container, regardless of width & height\n@mixin centerAlignTransform() {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    transform: translate(-50%, -50%);\n}\n\n// Centers the children within the element. $direction variable can be row|column\n@mixin flexCenter($direction: column) {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: $direction;\n}\n\n// Old school technique to vertically center content\n@mixin addVerticalCentering() {\n    &::before {\n        content: '';\n        display: inline-block;\n        vertical-align: middle;\n        width: 0;\n        height: 100%;\n    }\n}\n\n// Full width element which centers when viewport width > $max-width\n@mixin constrainWidth($max-width: $app-width) {\n    margin: auto;\n    position: relative;\n\n    width: 100%;\n    max-width: $max-width;\n}\n\n// Full width element which centers when viewport width > $max-width, plus fills height\n@mixin constrainWidthFillHeight {\n    @include constrainWidth();\n\n    height: 100%;\n}\n\n@mixin imgFillContainer($align: top-left) {\n    @if $align = top-left {\n        top: 0;\n        left: 0;\n    } @else if $align = center {\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    max-width: 100%;\n    max-height: 100%;\n    min-width: 100%;\n    min-height: 100%;\n    position: absolute;\n}\n\n// Creates a circle element with $size width and height\n@mixin circle($size) {\n    width: $size;\n    height: $size;\n    border-radius: 50%;\n}\n\n// Creates a square element with $size width and height\n@mixin square($size) {\n    width: $size;\n    height: $size;\n}\n\n// Images\n// -----------------------------------\n\n// Background image fully covers element\n@mixin fillCenteredBg($url: '', $position: center) {\n    background-size: cover;\n    background-image: url($url);\n    background-position: $position;\n    background-repeat: no-repeat;\n}\n\n// Background image sits contained inside the element (letterbox effect)\n@mixin containCenteredBg($url: '', $position: center) {\n    background-size: contain;\n    background-image: url($url);\n    background-position: $position;\n    background-repeat: no-repeat;\n}\n\n// Other\n// -----------------------------------// Units\n// -----------------------------------\n\n// Proportianal font scaling  based of $baseWidth, base font size is 10px when viewport width === $baseWidth\n@mixin baseFontSizeVW($baseWidth: 1920) {\n    $base-font-size: 10;\n\n    font-size: $base-font-size / $baseWidth * 100 + 0vw;\n}\n\n// Use letter spacing value from Photoshop\n// @mixin letterSpacing( 100 );\n@mixin letterSpacing($spacing: 0) {\n    letter-spacing: $spacing / 1000 * 1em;\n    // text-indent: $spacing / 1000 * 1em;\n}\n\n@mixin svgStroke($width: 2, $color: currentColor) {\n    stroke: $color;\n    stroke-width: $width;\n    // stroke-linecap: round;\n    // stroke-linejoin: round;\n}\n\n// USAGE -------\n// @mixin sudo(before, {\n//      width: 100px;\n//      height: 100px;\n// });\n\n// Creates a sudo element, $type can be before|after\n@mixin sudo($type: before) {\n    &:#{$type} {\n        content: '';\n        @content;\n    }\n}\n\n// Selector for desktop/devices with mouse\n@mixin pointerDevice {\n    @media (pointer: fine) {\n        @content;\n    }\n\n    .desktop.ie &,\n    .desktop.firefox & {\n        @content;\n    }\n}\n\n// Selector for touch devices\n@mixin touchDevice {\n    @media (any-pointer: coarse) {\n        @content;\n    }\n}\n\n// Aligns hover action between touch and pointer devices\n@mixin hover {\n    @include pointerDevice {\n        &:hover {\n            @content;\n        }\n    }\n    @include touchDevice {\n        &:active,\n        &.android-active {\n            @content;\n        }\n    }\n}\n\n// USAGE -------\n// @mixin pxToRem( font-size, 24px );\n\n// Converts a css $property from px to rem\n@mixin pxToRem($property: 'margin-bottom', $value: 0) {\n    $pxValue: unit($value, px);\n    $remValue: unit($value / 10, rem);\n    #{$property}: $pxValue;\n    #{$property}: $remValue;\n}\n\n// Sets cursor to grabbing\n@mixin grabbingCursor() {\n    cursor: grab;\n    cursor: -webkit-grab;\n    &:active {\n        cursor: grabbing;\n        cursor: -webkit-grabbing;\n    }\n}\n"],sourceRoot:""}]);const r=a},9519:(n,e,t)=>{"use strict";t.d(e,{Z:()=>r});var i=t(559),o=t.n(i),s=t(3476),a=t.n(s)()(o());a.push([n.id,".languageSelect{position:relative}\n","",{version:3,sources:["webpack://./component/language-select/index.scss"],names:[],mappings:"AAGA,gBACI,iBAAkB",sourcesContent:["$CDN:\"/\";\n@import 'style/shared';\n\n.languageSelect {\n    position: relative;\n}\n"],sourceRoot:""}]);const r=a},9815:(n,e,t)=>{"use strict";t.d(e,{Z:()=>r});var i=t(559),o=t.n(i),s=t(3476),a=t.n(s)()(o());a.push([n.id,".logo{top:2.5rem;left:var(--sideMargin);position:absolute;z-index:400;color:var(--logoColor)}.logo__icon{width:20.4rem;height:3.3rem;margin-left:-3px}\n","",{version:3,sources:["webpack://./component/logo/index.scss","webpack://./style/base/variables.scss"],names:[],mappings:"AAGA,MACI,UAAW,CACX,sBAAuB,CACvB,iBAAkB,CAClB,WCSW,CDPX,sBAAuB,CAEvB,YACI,aAAc,CACd,aAAc,CACd,gBAAiB",sourcesContent:["$CDN:\"/\";\n@import 'style/shared';\n\n.logo {\n    top: 2.5rem;\n    left: var(--sideMargin);\n    position: absolute;\n    z-index: $z-index-logo;\n\n    color: var(--logoColor);\n\n    &__icon {\n        width: 20.4rem;\n        height: 3.3rem;\n        margin-left: -3px;\n    }\n}\n","// Aspect ratio\n// ------\n$aspect-1x1: 1;\n$aspect-2x3: 3/2;\n$aspect-3x2: 2/3;\n$aspect-3x4: 4/3;\n$aspect-4x3: 3/4;\n$aspect-16x9: 9/16;\n$aspect-9x16: 16/9;\n\n// Z-index\n// -------\n$z-index-0: 0;\n$z-index-1: 100;\n$z-index-2: 200;\n$z-index-3: 300;\n$z-index-4: 400;\n$z-index-5: 500;\n$z-index-6: 600;\n$z-index-7: 700;\n$z-index-8: 800;\n$z-index-9: 900;\n$z-index-10: 1000;\n\n// Easings\n// -------\n// Linear\n$ease-linear: cubic-bezier(0.25, 0.25, 0.75, 0.75);\n// Sine\n$ease-in-sine: cubic-bezier(0.47, 0, 0.745, 0.715);\n$ease-out-sine: cubic-bezier(0.39, 0.575, 0.565, 1);\n$ease-in-out-sine: cubic-bezier(0.445, 0.05, 0.55, 0.95);\n// Quad\n$ease-in-quad: cubic-bezier(0.55, 0.085, 0.68, 0.53);\n$ease-out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94);\n$ease-in-out-quad: cubic-bezier(0.455, 0.03, 0.515, 0.955);\n// Cubic\n$ease-in-cubic: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n$ease-out-cubic: cubic-bezier(0.215, 0.61, 0.355, 1);\n$ease-in-out-cubic: cubic-bezier(0.645, 0.045, 0.355, 1);\n// Quart\n$ease-in-quart: cubic-bezier(0.895, 0.03, 0.685, 0.22);\n$ease-out-quart: cubic-bezier(0.165, 0.84, 0.44, 1);\n$ease-in-out-quart: cubic-bezier(0.77, 0, 0.175, 1);\n// Quint\n$ease-in-quint: cubic-bezier(0.755, 0.05, 0.855, 0.06);\n$ease-out-quint: cubic-bezier(0.23, 1, 0.32, 1);\n$ease-in-out-quint: cubic-bezier(0.86, 0, 0.07, 1);\n// Expo\n$ease-in-expo: cubic-bezier(0.95, 0.05, 0.795, 0.035);\n$ease-out-expo: cubic-bezier(0.19, 1, 0.22, 1);\n$ease-in-out-expo: cubic-bezier(1, 0, 0, 1);\n// Circ\n$ease-in-circ: cubic-bezier(0.6, 0.04, 0.98, 0.335);\n$ease-out-circ: cubic-bezier(0.075, 0.82, 0.165, 1);\n$ease-in-out-circ: cubic-bezier(0.785, 0.135, 0.15, 0.86);\n// Back\n$ease-in-back: cubic-bezier(0.6, -0.28, 0.735, 0.045);\n$ease-out-back: cubic-bezier(0.175, 0.885, 0.32, 1.275);\n$ease-in-out-back: cubic-bezier(0.68, -0.55, 0.265, 1.55);\n"],sourceRoot:""}]);const r=a},7422:(n,e,t)=>{"use strict";t.d(e,{Z:()=>r});var i=t(559),o=t.n(i),s=t(3476),a=t.n(s)()(o());a.push([n.id,'.noticeOverlay{top:0;left:0;width:100%;height:100%;position:fixed;display:flex;align-items:center;justify-content:center;flex-direction:column;color:black;background-color:#ec3030;z-index:9999;display:none}@media only screen and (orientation: landscape){[device="mobile"] .noticeOverlay{display:flex}}.noticeOverlay__title{text-align:center;padding:4rem 0}@media only screen and (min-width: 769px){.noticeOverlay__title{font-size:3rem}}.noticeOverlay__icon{width:11rem;height:6rem;display:none}[device="mobile"] .noticeOverlay__icon{display:block}\n',"",{version:3,sources:["webpack://./component/rotate-overlay/index.scss","webpack://./style/mixins/utils.scss","webpack://./style/app/variables.scss","webpack://./style/mixins/breakpoints.scss"],names:[],mappings:"AAGA,eCGI,KAAM,CACN,MAAO,CACP,UAAW,CACX,WAAY,CACZ,cDNmB,CCwDnB,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,qBAJgC,CDpDhC,WAAY,CACZ,wBEee,CFdf,YAAa,CAEb,YAAa,CAyChB,gDG7BiD,iCHItC,YAAa,CAEpB,CAGG,sBAEI,iBAAkB,CAClB,cAAe,CAKlB,0CARD,sBAMQ,cAAe,CAEtB,CAED,qBACI,WAAY,CACZ,WAAY,CACZ,YAAa,CAKhB,uCAFO,aAAc",sourcesContent:['$CDN:"/";\n@import \'style/shared\';\n\n.noticeOverlay {\n    @include fill(fixed);\n    @include flexCenter();\n    \n    color: black;\n    background-color: $color-red;\n    z-index: 9999;\n\n    display: none;\n    \n    // [device="desktop"] & {\n    //     @include breakpoint-width-max(767px) {\n    //         display: flex;\n    //     }\n    // }\n\n    // [device="tablet"] & {\n    //     @include portrait() {\n    //         // display: flex;\n    //     }\n    // }\n\n    [device="mobile"] & {\n        @include landscape() {\n            display: flex;\n        }\n    }\n\n\n        &__title {\n            // margin-top: 4rem;\n            text-align: center;\n            padding: 4rem 0;\n            \n            @include desktop {\n                font-size: 3rem;\n            }\n        }\n    \n        &__icon {\n            width: 11rem;\n            height: 6rem;\n            display: none;\n\n            [device="mobile"] & {\n                display: block;\n            }\n        }\n\n}\n',"// -----------------------------------\n// Layout\n// -----------------------------------\n\n// Fills to the bounds of the container element\n@mixin fill($position: absolute) {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    position: $position;\n}\n\n// Fills to the bounds of the container element, including an offset (grow or shrink the bounds)\n@mixin fillContainer($offset: 0, $position: absolute) {\n    inset: $offset;\n    position: $position;\n}\n\n// Sets the elements position to either top-left|top-right|bottom-left|bottom-right\n@mixin position($ruleA: top, $ruleB: left, $position: absolute) {\n    #{$ruleA}: 0;\n    #{$ruleB}: 0;\n\n    position: $position;\n}\n\n// USAGE -------\n// @mixin aspectRatio( $aspect-16x9 );\n\n@mixin aspectRatio($ratio) {\n    &::before {\n        content: '';\n        display: block;\n        padding-top: ($ratio * 100%);\n    }\n}\n\n// USAGE -------\n// @mixin centerAlign(100px, 100px);\n\n// Center aligns the element within its container, given a width & height\n@mixin centerAlign($width: 0, $height: 0) {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    margin-top: -$height/2;\n    margin-left: -$width/2;\n}\n\n// Center aligns the element within its container, regardless of width & height\n@mixin centerAlignTransform() {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    transform: translate(-50%, -50%);\n}\n\n// Centers the children within the element. $direction variable can be row|column\n@mixin flexCenter($direction: column) {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: $direction;\n}\n\n// Old school technique to vertically center content\n@mixin addVerticalCentering() {\n    &::before {\n        content: '';\n        display: inline-block;\n        vertical-align: middle;\n        width: 0;\n        height: 100%;\n    }\n}\n\n// Full width element which centers when viewport width > $max-width\n@mixin constrainWidth($max-width: $app-width) {\n    margin: auto;\n    position: relative;\n\n    width: 100%;\n    max-width: $max-width;\n}\n\n// Full width element which centers when viewport width > $max-width, plus fills height\n@mixin constrainWidthFillHeight {\n    @include constrainWidth();\n\n    height: 100%;\n}\n\n@mixin imgFillContainer($align: top-left) {\n    @if $align = top-left {\n        top: 0;\n        left: 0;\n    } @else if $align = center {\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    max-width: 100%;\n    max-height: 100%;\n    min-width: 100%;\n    min-height: 100%;\n    position: absolute;\n}\n\n// Creates a circle element with $size width and height\n@mixin circle($size) {\n    width: $size;\n    height: $size;\n    border-radius: 50%;\n}\n\n// Creates a square element with $size width and height\n@mixin square($size) {\n    width: $size;\n    height: $size;\n}\n\n// Images\n// -----------------------------------\n\n// Background image fully covers element\n@mixin fillCenteredBg($url: '', $position: center) {\n    background-size: cover;\n    background-image: url($url);\n    background-position: $position;\n    background-repeat: no-repeat;\n}\n\n// Background image sits contained inside the element (letterbox effect)\n@mixin containCenteredBg($url: '', $position: center) {\n    background-size: contain;\n    background-image: url($url);\n    background-position: $position;\n    background-repeat: no-repeat;\n}\n\n// Other\n// -----------------------------------// Units\n// -----------------------------------\n\n// Proportianal font scaling  based of $baseWidth, base font size is 10px when viewport width === $baseWidth\n@mixin baseFontSizeVW($baseWidth: 1920) {\n    $base-font-size: 10;\n\n    font-size: $base-font-size / $baseWidth * 100 + 0vw;\n}\n\n// Use letter spacing value from Photoshop\n// @mixin letterSpacing( 100 );\n@mixin letterSpacing($spacing: 0) {\n    letter-spacing: $spacing / 1000 * 1em;\n    // text-indent: $spacing / 1000 * 1em;\n}\n\n@mixin svgStroke($width: 2, $color: currentColor) {\n    stroke: $color;\n    stroke-width: $width;\n    // stroke-linecap: round;\n    // stroke-linejoin: round;\n}\n\n// USAGE -------\n// @mixin sudo(before, {\n//      width: 100px;\n//      height: 100px;\n// });\n\n// Creates a sudo element, $type can be before|after\n@mixin sudo($type: before) {\n    &:#{$type} {\n        content: '';\n        @content;\n    }\n}\n\n// Selector for desktop/devices with mouse\n@mixin pointerDevice {\n    @media (pointer: fine) {\n        @content;\n    }\n\n    .desktop.ie &,\n    .desktop.firefox & {\n        @content;\n    }\n}\n\n// Selector for touch devices\n@mixin touchDevice {\n    @media (any-pointer: coarse) {\n        @content;\n    }\n}\n\n// Aligns hover action between touch and pointer devices\n@mixin hover {\n    @include pointerDevice {\n        &:hover {\n            @content;\n        }\n    }\n    @include touchDevice {\n        &:active,\n        &.android-active {\n            @content;\n        }\n    }\n}\n\n// USAGE -------\n// @mixin pxToRem( font-size, 24px );\n\n// Converts a css $property from px to rem\n@mixin pxToRem($property: 'margin-bottom', $value: 0) {\n    $pxValue: unit($value, px);\n    $remValue: unit($value / 10, rem);\n    #{$property}: $pxValue;\n    #{$property}: $remValue;\n}\n\n// Sets cursor to grabbing\n@mixin grabbingCursor() {\n    cursor: grab;\n    cursor: -webkit-grab;\n    &:active {\n        cursor: grabbing;\n        cursor: -webkit-grabbing;\n    }\n}\n","// Margins\n// -------\n\n$margin-desktop: 4rem;\n$margin-mobile: 2rem;\n\n// Z-index\n// -------\n\n$z-index-preloader: $z-index-10;\n$z-index-shell: $z-index-2;\n$z-index-overlay: $z-index-3;\n$z-index-logo: $z-index-4;\n$z-index-treasure-reveal: $z-index-5;\n$z-index-vo: $z-index-6;\n$z-index-max: $z-index-10 + 1;\n\n// Colors\n// ------\n$color-white: #fff;\n$color-black: #000;\n$color-gray: #9b9b9b;\n$color-light-gray: #828282;\n$color-red: #ec3030;\n",'// Breakpoints\n// -----------\n\n$bp-mobile-threshold: 768px;\n\n// Mixins\n// ------\n\n/*\n    These mixins apply styles only when within the specified breakpoint\n    ---\n    1. Predefined breakpoints\n    2. Custom breakpoints for width\n    3. Custom breakpoints for height\n*/\n\n@mixin portrait() {\n    @media only screen and (orientation: portrait) {\n        @content;\n    }\n}\n\n@mixin landscape() {\n    @media only screen and (orientation: landscape) {\n        @content;\n    }\n}\n\n@mixin mobile() {\n    // @media only screen and (max-aspect-ratio: 3/4) {\n    //     @content;\n    // }\n    @media only screen and (max-width: $bp-mobile-threshold) {\n        @content;\n    }\n}\n\n@mixin desktop() {\n    // @media only screen and (min-aspect-ratio: 301/400) {\n    //     @content;\n    // }\n    @media only screen and (min-width: $bp-mobile-threshold + 1) {\n        @content;\n    }\n}\n\n@mixin handheldDevice {\n    .root[device="mobile"] &,\n    .root[device="tablet"] & {\n        @content;\n    }\n}\n\n@mixin desktopDevice {\n    .root[device="desktop"] & {\n        @content;\n    }\n}\n\n@mixin phoneLandscape() {\n    @media only screen and (orientation: landscape) {\n        .phone & {\n            @content;\n        }\n    }\n}\n\n@mixin fullscreen() {\n    .fullscreen & {\n        @content;\n    }\n}\n\n@mixin breakpoint($point) {\n    @if $point == mobile {\n        @include mobile();\n    }\n    @if $point == desktop {\n        @include desktop();\n    }\n}\n\n// Min width and Max width\n@mixin breakpoint-width($min, $max) {\n    @media only screen and (min-width: $min) and (max-width: $max) {\n        @content;\n    }\n}\n// Min width\n@mixin breakpoint-width-min($min) {\n    @media only screen and (min-width: $min) {\n        @content;\n    }\n}\n// Max width\n@mixin breakpoint-width-max($max) {\n    @media only screen and (max-width: $max) {\n        @content;\n    }\n}\n\n// Min height and Max height\n@mixin breakpoint-height($min, $max) {\n    @media only screen and (min-height: $min) and (max-height: $max) {\n        @content;\n    }\n}\n// Min height\n@mixin breakpoint-height-min($min) {\n    @media only screen and (min-height: $min) {\n        @content;\n    }\n}\n// Max height\n@mixin breakpoint-height-max($max) {\n    @media only screen and (max-height: $max) {\n        @content;\n    }\n}\n'],sourceRoot:""}]);const r=a},2568:(n,e,t)=>{"use strict";t.d(e,{Z:()=>r});var i=t(559),o=t.n(i),s=t(3476),a=t.n(s)()(o());a.push([n.id,".treasureReveal{top:0;left:0;width:100%;height:100%;position:absolute;display:flex;align-items:center;justify-content:center;flex-direction:column;cursor:auto;pointer-events:auto;z-index:500}.treasureReveal__treasureFound{top:50%;left:50%;position:absolute;transform:translate(-50%, -50%);display:flex;align-items:center;justify-content:center;flex-direction:column;opacity:0;font-size:2.6rem;color:white;z-index:2}@media only screen and (min-width: 769px){.treasureReveal__treasureFound{font-size:7.7rem}}@media only screen and (max-width: 768px){.treasureReveal__treasureFoundText{font-size:5rem}}.treasureReveal .colorMask{z-index:-1}\n","",{version:3,sources:["webpack://./component/sections/experience/treasure-reveal/index.scss","webpack://./style/mixins/utils.scss","webpack://./style/base/variables.scss","webpack://./style/mixins/breakpoints.scss"],names:[],mappings:"AAGA,gBCGI,KAAM,CACN,MAAO,CACP,UAAW,CACX,WAAY,CACZ,iBAL2B,CAuD3B,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,qBAJgC,CDpDhC,WAAY,CACZ,mBAAoB,CACpB,WEQW,CFNX,+BCyCA,OAAQ,CACR,QAAS,CACT,iBAAkB,CAClB,+BAAgC,CAKhC,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,qBAJgC,CD5C5B,SAAU,CACV,gBAAiB,CACjB,WAAY,CACZ,SAAU,CAKb,0CAZD,+BAUQ,gBAAiB,CAExB,CGSD,0CHPI,mCAEQ,cAAe,CAEtB,CA1BT,2BA6BQ,UAAW",sourcesContent:["$CDN:\"/\";\n@import 'style/shared';\n\n.treasureReveal {\n    @include fill;\n    @include flexCenter;\n\n    cursor: auto;\n    pointer-events: auto;\n    z-index: $z-index-treasure-reveal;\n\n    &__treasureFound {\n        @include centerAlignTransform;\n        @include flexCenter;\n\n        opacity: 0;\n        font-size: 2.6rem;\n        color: white;\n        z-index: 2;\n\n        @include desktop {\n            font-size: 7.7rem;\n        }\n    }\n\n        &__treasureFoundText {\n            @include mobile {\n                font-size: 5rem;\n            }   \n        }\n\n    .colorMask {\n        z-index: -1;\n    }\n}\n","// -----------------------------------\n// Layout\n// -----------------------------------\n\n// Fills to the bounds of the container element\n@mixin fill($position: absolute) {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    position: $position;\n}\n\n// Fills to the bounds of the container element, including an offset (grow or shrink the bounds)\n@mixin fillContainer($offset: 0, $position: absolute) {\n    inset: $offset;\n    position: $position;\n}\n\n// Sets the elements position to either top-left|top-right|bottom-left|bottom-right\n@mixin position($ruleA: top, $ruleB: left, $position: absolute) {\n    #{$ruleA}: 0;\n    #{$ruleB}: 0;\n\n    position: $position;\n}\n\n// USAGE -------\n// @mixin aspectRatio( $aspect-16x9 );\n\n@mixin aspectRatio($ratio) {\n    &::before {\n        content: '';\n        display: block;\n        padding-top: ($ratio * 100%);\n    }\n}\n\n// USAGE -------\n// @mixin centerAlign(100px, 100px);\n\n// Center aligns the element within its container, given a width & height\n@mixin centerAlign($width: 0, $height: 0) {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    margin-top: -$height/2;\n    margin-left: -$width/2;\n}\n\n// Center aligns the element within its container, regardless of width & height\n@mixin centerAlignTransform() {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    transform: translate(-50%, -50%);\n}\n\n// Centers the children within the element. $direction variable can be row|column\n@mixin flexCenter($direction: column) {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: $direction;\n}\n\n// Old school technique to vertically center content\n@mixin addVerticalCentering() {\n    &::before {\n        content: '';\n        display: inline-block;\n        vertical-align: middle;\n        width: 0;\n        height: 100%;\n    }\n}\n\n// Full width element which centers when viewport width > $max-width\n@mixin constrainWidth($max-width: $app-width) {\n    margin: auto;\n    position: relative;\n\n    width: 100%;\n    max-width: $max-width;\n}\n\n// Full width element which centers when viewport width > $max-width, plus fills height\n@mixin constrainWidthFillHeight {\n    @include constrainWidth();\n\n    height: 100%;\n}\n\n@mixin imgFillContainer($align: top-left) {\n    @if $align = top-left {\n        top: 0;\n        left: 0;\n    } @else if $align = center {\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    max-width: 100%;\n    max-height: 100%;\n    min-width: 100%;\n    min-height: 100%;\n    position: absolute;\n}\n\n// Creates a circle element with $size width and height\n@mixin circle($size) {\n    width: $size;\n    height: $size;\n    border-radius: 50%;\n}\n\n// Creates a square element with $size width and height\n@mixin square($size) {\n    width: $size;\n    height: $size;\n}\n\n// Images\n// -----------------------------------\n\n// Background image fully covers element\n@mixin fillCenteredBg($url: '', $position: center) {\n    background-size: cover;\n    background-image: url($url);\n    background-position: $position;\n    background-repeat: no-repeat;\n}\n\n// Background image sits contained inside the element (letterbox effect)\n@mixin containCenteredBg($url: '', $position: center) {\n    background-size: contain;\n    background-image: url($url);\n    background-position: $position;\n    background-repeat: no-repeat;\n}\n\n// Other\n// -----------------------------------// Units\n// -----------------------------------\n\n// Proportianal font scaling  based of $baseWidth, base font size is 10px when viewport width === $baseWidth\n@mixin baseFontSizeVW($baseWidth: 1920) {\n    $base-font-size: 10;\n\n    font-size: $base-font-size / $baseWidth * 100 + 0vw;\n}\n\n// Use letter spacing value from Photoshop\n// @mixin letterSpacing( 100 );\n@mixin letterSpacing($spacing: 0) {\n    letter-spacing: $spacing / 1000 * 1em;\n    // text-indent: $spacing / 1000 * 1em;\n}\n\n@mixin svgStroke($width: 2, $color: currentColor) {\n    stroke: $color;\n    stroke-width: $width;\n    // stroke-linecap: round;\n    // stroke-linejoin: round;\n}\n\n// USAGE -------\n// @mixin sudo(before, {\n//      width: 100px;\n//      height: 100px;\n// });\n\n// Creates a sudo element, $type can be before|after\n@mixin sudo($type: before) {\n    &:#{$type} {\n        content: '';\n        @content;\n    }\n}\n\n// Selector for desktop/devices with mouse\n@mixin pointerDevice {\n    @media (pointer: fine) {\n        @content;\n    }\n\n    .desktop.ie &,\n    .desktop.firefox & {\n        @content;\n    }\n}\n\n// Selector for touch devices\n@mixin touchDevice {\n    @media (any-pointer: coarse) {\n        @content;\n    }\n}\n\n// Aligns hover action between touch and pointer devices\n@mixin hover {\n    @include pointerDevice {\n        &:hover {\n            @content;\n        }\n    }\n    @include touchDevice {\n        &:active,\n        &.android-active {\n            @content;\n        }\n    }\n}\n\n// USAGE -------\n// @mixin pxToRem( font-size, 24px );\n\n// Converts a css $property from px to rem\n@mixin pxToRem($property: 'margin-bottom', $value: 0) {\n    $pxValue: unit($value, px);\n    $remValue: unit($value / 10, rem);\n    #{$property}: $pxValue;\n    #{$property}: $remValue;\n}\n\n// Sets cursor to grabbing\n@mixin grabbingCursor() {\n    cursor: grab;\n    cursor: -webkit-grab;\n    &:active {\n        cursor: grabbing;\n        cursor: -webkit-grabbing;\n    }\n}\n","// Aspect ratio\n// ------\n$aspect-1x1: 1;\n$aspect-2x3: 3/2;\n$aspect-3x2: 2/3;\n$aspect-3x4: 4/3;\n$aspect-4x3: 3/4;\n$aspect-16x9: 9/16;\n$aspect-9x16: 16/9;\n\n// Z-index\n// -------\n$z-index-0: 0;\n$z-index-1: 100;\n$z-index-2: 200;\n$z-index-3: 300;\n$z-index-4: 400;\n$z-index-5: 500;\n$z-index-6: 600;\n$z-index-7: 700;\n$z-index-8: 800;\n$z-index-9: 900;\n$z-index-10: 1000;\n\n// Easings\n// -------\n// Linear\n$ease-linear: cubic-bezier(0.25, 0.25, 0.75, 0.75);\n// Sine\n$ease-in-sine: cubic-bezier(0.47, 0, 0.745, 0.715);\n$ease-out-sine: cubic-bezier(0.39, 0.575, 0.565, 1);\n$ease-in-out-sine: cubic-bezier(0.445, 0.05, 0.55, 0.95);\n// Quad\n$ease-in-quad: cubic-bezier(0.55, 0.085, 0.68, 0.53);\n$ease-out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94);\n$ease-in-out-quad: cubic-bezier(0.455, 0.03, 0.515, 0.955);\n// Cubic\n$ease-in-cubic: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n$ease-out-cubic: cubic-bezier(0.215, 0.61, 0.355, 1);\n$ease-in-out-cubic: cubic-bezier(0.645, 0.045, 0.355, 1);\n// Quart\n$ease-in-quart: cubic-bezier(0.895, 0.03, 0.685, 0.22);\n$ease-out-quart: cubic-bezier(0.165, 0.84, 0.44, 1);\n$ease-in-out-quart: cubic-bezier(0.77, 0, 0.175, 1);\n// Quint\n$ease-in-quint: cubic-bezier(0.755, 0.05, 0.855, 0.06);\n$ease-out-quint: cubic-bezier(0.23, 1, 0.32, 1);\n$ease-in-out-quint: cubic-bezier(0.86, 0, 0.07, 1);\n// Expo\n$ease-in-expo: cubic-bezier(0.95, 0.05, 0.795, 0.035);\n$ease-out-expo: cubic-bezier(0.19, 1, 0.22, 1);\n$ease-in-out-expo: cubic-bezier(1, 0, 0, 1);\n// Circ\n$ease-in-circ: cubic-bezier(0.6, 0.04, 0.98, 0.335);\n$ease-out-circ: cubic-bezier(0.075, 0.82, 0.165, 1);\n$ease-in-out-circ: cubic-bezier(0.785, 0.135, 0.15, 0.86);\n// Back\n$ease-in-back: cubic-bezier(0.6, -0.28, 0.735, 0.045);\n$ease-out-back: cubic-bezier(0.175, 0.885, 0.32, 1.275);\n$ease-in-out-back: cubic-bezier(0.68, -0.55, 0.265, 1.55);\n",'// Breakpoints\n// -----------\n\n$bp-mobile-threshold: 768px;\n\n// Mixins\n// ------\n\n/*\n    These mixins apply styles only when within the specified breakpoint\n    ---\n    1. Predefined breakpoints\n    2. Custom breakpoints for width\n    3. Custom breakpoints for height\n*/\n\n@mixin portrait() {\n    @media only screen and (orientation: portrait) {\n        @content;\n    }\n}\n\n@mixin landscape() {\n    @media only screen and (orientation: landscape) {\n        @content;\n    }\n}\n\n@mixin mobile() {\n    // @media only screen and (max-aspect-ratio: 3/4) {\n    //     @content;\n    // }\n    @media only screen and (max-width: $bp-mobile-threshold) {\n        @content;\n    }\n}\n\n@mixin desktop() {\n    // @media only screen and (min-aspect-ratio: 301/400) {\n    //     @content;\n    // }\n    @media only screen and (min-width: $bp-mobile-threshold + 1) {\n        @content;\n    }\n}\n\n@mixin handheldDevice {\n    .root[device="mobile"] &,\n    .root[device="tablet"] & {\n        @content;\n    }\n}\n\n@mixin desktopDevice {\n    .root[device="desktop"] & {\n        @content;\n    }\n}\n\n@mixin phoneLandscape() {\n    @media only screen and (orientation: landscape) {\n        .phone & {\n            @content;\n        }\n    }\n}\n\n@mixin fullscreen() {\n    .fullscreen & {\n        @content;\n    }\n}\n\n@mixin breakpoint($point) {\n    @if $point == mobile {\n        @include mobile();\n    }\n    @if $point == desktop {\n        @include desktop();\n    }\n}\n\n// Min width and Max width\n@mixin breakpoint-width($min, $max) {\n    @media only screen and (min-width: $min) and (max-width: $max) {\n        @content;\n    }\n}\n// Min width\n@mixin breakpoint-width-min($min) {\n    @media only screen and (min-width: $min) {\n        @content;\n    }\n}\n// Max width\n@mixin breakpoint-width-max($max) {\n    @media only screen and (max-width: $max) {\n        @content;\n    }\n}\n\n// Min height and Max height\n@mixin breakpoint-height($min, $max) {\n    @media only screen and (min-height: $min) and (max-height: $max) {\n        @content;\n    }\n}\n// Min height\n@mixin breakpoint-height-min($min) {\n    @media only screen and (min-height: $min) {\n        @content;\n    }\n}\n// Max height\n@mixin breakpoint-height-max($max) {\n    @media only screen and (max-height: $max) {\n        @content;\n    }\n}\n'],sourceRoot:""}]);const r=a},409:(n,e,t)=>{"use strict";t.d(e,{Z:()=>r});var i=t(559),o=t.n(i),s=t(3476),a=t.n(s)()(o());a.push([n.id,".soundToggle{cursor:pointer;position:relative;width:14px;height:12px}.soundToggle__icon{margin-top:1px;top:0;left:0;width:100%;height:100%;position:absolute;stroke:currentColor;stroke-width:2.1}\n","",{version:3,sources:["webpack://./component/sound-toggle/index.scss","webpack://./style/mixins/utils.scss"],names:[],mappings:"AAGA,aACI,cAAe,CACf,iBAAkB,CAClB,UAAW,CACX,WAAY,CAEZ,mBACI,cAAe,CCJnB,KAAM,CACN,MAAO,CACP,UAAW,CACX,WAAY,CACZ,iBAL2B,CA4J3B,mBAD4C,CAE5C,gBDrJ0B",sourcesContent:["$CDN:\"/\";\n@import 'style/shared';\n\n.soundToggle {\n    cursor: pointer;\n    position: relative;\n    width: 14px;\n    height: 12px;\n\n    &__icon {\n        margin-top: 1px;\n        \n        @include fill;\n        @include svgStroke(2.1);\n    }\n}\n","// -----------------------------------\n// Layout\n// -----------------------------------\n\n// Fills to the bounds of the container element\n@mixin fill($position: absolute) {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    position: $position;\n}\n\n// Fills to the bounds of the container element, including an offset (grow or shrink the bounds)\n@mixin fillContainer($offset: 0, $position: absolute) {\n    inset: $offset;\n    position: $position;\n}\n\n// Sets the elements position to either top-left|top-right|bottom-left|bottom-right\n@mixin position($ruleA: top, $ruleB: left, $position: absolute) {\n    #{$ruleA}: 0;\n    #{$ruleB}: 0;\n\n    position: $position;\n}\n\n// USAGE -------\n// @mixin aspectRatio( $aspect-16x9 );\n\n@mixin aspectRatio($ratio) {\n    &::before {\n        content: '';\n        display: block;\n        padding-top: ($ratio * 100%);\n    }\n}\n\n// USAGE -------\n// @mixin centerAlign(100px, 100px);\n\n// Center aligns the element within its container, given a width & height\n@mixin centerAlign($width: 0, $height: 0) {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    margin-top: -$height/2;\n    margin-left: -$width/2;\n}\n\n// Center aligns the element within its container, regardless of width & height\n@mixin centerAlignTransform() {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    transform: translate(-50%, -50%);\n}\n\n// Centers the children within the element. $direction variable can be row|column\n@mixin flexCenter($direction: column) {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: $direction;\n}\n\n// Old school technique to vertically center content\n@mixin addVerticalCentering() {\n    &::before {\n        content: '';\n        display: inline-block;\n        vertical-align: middle;\n        width: 0;\n        height: 100%;\n    }\n}\n\n// Full width element which centers when viewport width > $max-width\n@mixin constrainWidth($max-width: $app-width) {\n    margin: auto;\n    position: relative;\n\n    width: 100%;\n    max-width: $max-width;\n}\n\n// Full width element which centers when viewport width > $max-width, plus fills height\n@mixin constrainWidthFillHeight {\n    @include constrainWidth();\n\n    height: 100%;\n}\n\n@mixin imgFillContainer($align: top-left) {\n    @if $align = top-left {\n        top: 0;\n        left: 0;\n    } @else if $align = center {\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    max-width: 100%;\n    max-height: 100%;\n    min-width: 100%;\n    min-height: 100%;\n    position: absolute;\n}\n\n// Creates a circle element with $size width and height\n@mixin circle($size) {\n    width: $size;\n    height: $size;\n    border-radius: 50%;\n}\n\n// Creates a square element with $size width and height\n@mixin square($size) {\n    width: $size;\n    height: $size;\n}\n\n// Images\n// -----------------------------------\n\n// Background image fully covers element\n@mixin fillCenteredBg($url: '', $position: center) {\n    background-size: cover;\n    background-image: url($url);\n    background-position: $position;\n    background-repeat: no-repeat;\n}\n\n// Background image sits contained inside the element (letterbox effect)\n@mixin containCenteredBg($url: '', $position: center) {\n    background-size: contain;\n    background-image: url($url);\n    background-position: $position;\n    background-repeat: no-repeat;\n}\n\n// Other\n// -----------------------------------// Units\n// -----------------------------------\n\n// Proportianal font scaling  based of $baseWidth, base font size is 10px when viewport width === $baseWidth\n@mixin baseFontSizeVW($baseWidth: 1920) {\n    $base-font-size: 10;\n\n    font-size: $base-font-size / $baseWidth * 100 + 0vw;\n}\n\n// Use letter spacing value from Photoshop\n// @mixin letterSpacing( 100 );\n@mixin letterSpacing($spacing: 0) {\n    letter-spacing: $spacing / 1000 * 1em;\n    // text-indent: $spacing / 1000 * 1em;\n}\n\n@mixin svgStroke($width: 2, $color: currentColor) {\n    stroke: $color;\n    stroke-width: $width;\n    // stroke-linecap: round;\n    // stroke-linejoin: round;\n}\n\n// USAGE -------\n// @mixin sudo(before, {\n//      width: 100px;\n//      height: 100px;\n// });\n\n// Creates a sudo element, $type can be before|after\n@mixin sudo($type: before) {\n    &:#{$type} {\n        content: '';\n        @content;\n    }\n}\n\n// Selector for desktop/devices with mouse\n@mixin pointerDevice {\n    @media (pointer: fine) {\n        @content;\n    }\n\n    .desktop.ie &,\n    .desktop.firefox & {\n        @content;\n    }\n}\n\n// Selector for touch devices\n@mixin touchDevice {\n    @media (any-pointer: coarse) {\n        @content;\n    }\n}\n\n// Aligns hover action between touch and pointer devices\n@mixin hover {\n    @include pointerDevice {\n        &:hover {\n            @content;\n        }\n    }\n    @include touchDevice {\n        &:active,\n        &.android-active {\n            @content;\n        }\n    }\n}\n\n// USAGE -------\n// @mixin pxToRem( font-size, 24px );\n\n// Converts a css $property from px to rem\n@mixin pxToRem($property: 'margin-bottom', $value: 0) {\n    $pxValue: unit($value, px);\n    $remValue: unit($value / 10, rem);\n    #{$property}: $pxValue;\n    #{$property}: $remValue;\n}\n\n// Sets cursor to grabbing\n@mixin grabbingCursor() {\n    cursor: grab;\n    cursor: -webkit-grab;\n    &:active {\n        cursor: grabbing;\n        cursor: -webkit-grabbing;\n    }\n}\n"],sourceRoot:""}]);const r=a},5046:(n,e,t)=>{"use strict";t.d(e,{Z:()=>r});var i=t(559),o=t.n(i),s=t(3476),a=t.n(s)()(o());a.push([n.id,".titleLarge{width:100vw;display:flex;justify-content:center;visibility:hidden}.titleLarge__inner{width:200rem;flex:0 0 auto;display:flex;justify-content:center}.titleLarge__text{font-size:22.1rem;text-align:center;flex:0 0 auto}\n","",{version:3,sources:["webpack://./component/title-large/index.scss"],names:[],mappings:"AAGA,YACI,WAAY,CACZ,YAAa,CACb,sBAAuB,CACvB,iBAAkB,CAElB,mBACI,YAAa,CACb,aAAc,CAEd,YAAa,CACb,sBAAuB,CAC1B,kBAGG,iBAAkB,CAClB,iBAAkB,CAClB,aAAc",sourcesContent:["$CDN:\"/\";\n@import 'style/shared';\n\n.titleLarge {\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    visibility: hidden;\n    \n    &__inner {\n        width: 200rem;\n        flex: 0 0 auto;\n        \n        display: flex;\n        justify-content: center;\n    }\n    \n    &__text {\n        font-size: 22.1rem;\n        text-align: center;\n        flex: 0 0 auto;\n        // max-width: 100vw;\n        // white-space: nowrap;\n    }\n}\n"],sourceRoot:""}]);const r=a},7067:(n,e,t)=>{"use strict";t.d(e,{Z:()=>r});var i=t(559),o=t.n(i),s=t(3476),a=t.n(s)()(o());a.push([n.id,".treasureCard{display:flex;align-items:center;justify-content:center;flex-direction:column;top:14px;right:14px;bottom:14px;left:14px;position:absolute;color:black;z-index:0;pointer-events:auto;cursor:auto;overflow:hidden}.treasureCard .btnClose{top:var(--sideMargin);right:var(--sideMargin);position:absolute}.treasureCard .btnDownload{right:calc(var(--sideMargin) - 1rem);bottom:var(--sideMargin);position:absolute}.treasureCard__title{margin-bottom:50px}.treasureCard__treasure{top:0;right:0;bottom:0;left:0;position:absolute;bottom:50px;opacity:0}@media only screen and (max-width: 768px){.treasureCard__treasure{display:flex;align-items:center;justify-content:center;flex-direction:column}}@media only screen and (min-width: 769px){.treasureCard__treasure{top:0;left:0;width:100%;height:100%;position:absolute}}.treasureCard__treasure img,.treasureCard__treasure video{flex:0 0 auto;-o-object-fit:contain;object-fit:contain}@media only screen and (max-width: 768px){.treasureCard__treasure img,.treasureCard__treasure video{width:auto;height:25rem}}@media only screen and (min-width: 769px){.treasureCard__treasure img,.treasureCard__treasure video{top:0;left:0;width:100%;height:100%;position:absolute}}.treasureCard__adobeIcons{display:flex;align-items:center;flex-wrap:wrap;left:var(--sideMargin);bottom:var(--sideMargin);position:absolute;opacity:0}@media only screen and (max-width: 768px){.treasureCard__adobeIcons{width:15rem}}.treasureCard__adobeIconText{font-size:14px;margin-right:1rem;opacity:0.5}@media only screen and (max-width: 768px){.treasureCard__adobeIconText{width:100%;margin-bottom:0.8rem}}.treasureCard__adobeIcon{width:3rem;height:3rem}.treasureCard__adobeIcon:not(:last-child){margin-right:0.6rem}\n","",{version:3,sources:["webpack://./component/treasure-card/index.scss","webpack://./style/mixins/utils.scss","webpack://./style/mixins/breakpoints.scss"],names:[],mappings:"AAGA,cCyDI,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,qBAJgC,CA5ChC,QDV2B,CCU3B,UDV2B,CCU3B,WDV2B,CCU3B,SDV2B,CCW3B,iBAFgD,CDPhD,WAAY,CACZ,SAAU,CACV,mBAAoB,CACpB,WAAY,CACZ,eAAgB,CARpB,wBAWQ,qBAAsB,CACtB,uBAAwB,CACxB,iBAAkB,CAb1B,2BAiBQ,oCAAqC,CACrC,wBAAyB,CACzB,iBAAkB,CACrB,qBAGG,kBAAmB,CACtB,wBCZD,KDgB4B,CChB5B,ODgB4B,CChB5B,QDgB4B,CChB5B,MDgB4B,CCf5B,iBAFgD,CDmB5C,WAAY,CACZ,SAAU,CAwBb,0CA7BD,wBC+BA,YAAa,CACb,kBAAmB,CACnB,sBAAuB,CACvB,qBAJgC,CDD/B,CEjBD,0CFZA,wBCvBA,KAAM,CACN,MAAO,CACP,UAAW,CACX,WAAY,CACZ,iBAL2B,CDqD1B,CA7BA,0DAiBO,aAAc,CACd,qBAAY,CAAZ,kBAAmB,CAUtB,0CA5BJ,0DAqBW,UAAW,CACX,YAAa,CAMpB,CEhBL,0CFZC,0DCvBD,KAAM,CACN,MAAO,CACP,UAAW,CACX,WAAY,CACZ,iBAL2B,CDoDtB,CAGL,0BACI,YAAa,CACb,kBAAmB,CACnB,cAAe,CAEf,sBAAuB,CACvB,wBAAyB,CACzB,iBAAkB,CAElB,SAAU,CAKb,0CAdD,0BAYQ,WAAY,CAEnB,CAEG,6BACI,cAAe,CACf,iBAAkB,CAClB,WAAY,CAMf,0CATD,6BAMQ,UAAW,CACX,oBAAqB,CAE5B,CAED,yBCgCJ,UD/B4B,CCgC5B,WDhC4B,CADvB,0CAIO,mBAAoB",sourcesContent:["$CDN:\"/\";\n@import 'style/shared';\n\n.treasureCard {\n    @include flexCenter;\n    @include fillContainer(14px);\n    \n    color: black;\n    z-index: 0;\n    pointer-events: auto;\n    cursor: auto;\n    overflow: hidden;\n    \n    .btnClose {\n        top: var(--sideMargin);\n        right: var(--sideMargin);\n        position: absolute;\n    }\n\n    .btnDownload {\n        right: calc(var(--sideMargin) - 1rem);\n        bottom: var(--sideMargin);\n        position: absolute;\n    }\n\n    &__title {\n        margin-bottom: 50px;\n    }\n\n    &__treasure {\n        // @include centerAlignTransform;\n        @include fillContainer(0);\n\n        bottom: 50px;\n        opacity: 0;\n        // will-change: transform;\n            \n        @include mobile {\n            @include flexCenter;\n        }\n            \n        @include desktop {\n            @include fill;\n        }\n\n        img, video {\n            flex: 0 0 auto;\n            object-fit: contain;\n            \n            @include mobile {\n                width: auto;\n                height: 25rem;\n            }\n            \n            @include desktop {\n                @include fill;\n            }\n        }\n    }\n\n    &__adobeIcons {\n        display: flex;\n        align-items: center;\n        flex-wrap: wrap;\n        \n        left: var(--sideMargin);\n        bottom: var(--sideMargin);\n        position: absolute;\n\n        opacity: 0;\n\n        @include mobile {\n            width: 15rem;\n        }\n    }\n\n        &__adobeIconText {\n            font-size: 14px;\n            margin-right: 1rem;\n            opacity: 0.5;\n\n            @include mobile {\n                width: 100%;\n                margin-bottom: 0.8rem;\n            }\n        }\n\n        &__adobeIcon {\n            @include square(3rem);\n\n            &:not(:last-child) {\n                margin-right: 0.6rem;\n            }\n        }\n\n}","// -----------------------------------\n// Layout\n// -----------------------------------\n\n// Fills to the bounds of the container element\n@mixin fill($position: absolute) {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    position: $position;\n}\n\n// Fills to the bounds of the container element, including an offset (grow or shrink the bounds)\n@mixin fillContainer($offset: 0, $position: absolute) {\n    inset: $offset;\n    position: $position;\n}\n\n// Sets the elements position to either top-left|top-right|bottom-left|bottom-right\n@mixin position($ruleA: top, $ruleB: left, $position: absolute) {\n    #{$ruleA}: 0;\n    #{$ruleB}: 0;\n\n    position: $position;\n}\n\n// USAGE -------\n// @mixin aspectRatio( $aspect-16x9 );\n\n@mixin aspectRatio($ratio) {\n    &::before {\n        content: '';\n        display: block;\n        padding-top: ($ratio * 100%);\n    }\n}\n\n// USAGE -------\n// @mixin centerAlign(100px, 100px);\n\n// Center aligns the element within its container, given a width & height\n@mixin centerAlign($width: 0, $height: 0) {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    margin-top: -$height/2;\n    margin-left: -$width/2;\n}\n\n// Center aligns the element within its container, regardless of width & height\n@mixin centerAlignTransform() {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    transform: translate(-50%, -50%);\n}\n\n// Centers the children within the element. $direction variable can be row|column\n@mixin flexCenter($direction: column) {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: $direction;\n}\n\n// Old school technique to vertically center content\n@mixin addVerticalCentering() {\n    &::before {\n        content: '';\n        display: inline-block;\n        vertical-align: middle;\n        width: 0;\n        height: 100%;\n    }\n}\n\n// Full width element which centers when viewport width > $max-width\n@mixin constrainWidth($max-width: $app-width) {\n    margin: auto;\n    position: relative;\n\n    width: 100%;\n    max-width: $max-width;\n}\n\n// Full width element which centers when viewport width > $max-width, plus fills height\n@mixin constrainWidthFillHeight {\n    @include constrainWidth();\n\n    height: 100%;\n}\n\n@mixin imgFillContainer($align: top-left) {\n    @if $align = top-left {\n        top: 0;\n        left: 0;\n    } @else if $align = center {\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    max-width: 100%;\n    max-height: 100%;\n    min-width: 100%;\n    min-height: 100%;\n    position: absolute;\n}\n\n// Creates a circle element with $size width and height\n@mixin circle($size) {\n    width: $size;\n    height: $size;\n    border-radius: 50%;\n}\n\n// Creates a square element with $size width and height\n@mixin square($size) {\n    width: $size;\n    height: $size;\n}\n\n// Images\n// -----------------------------------\n\n// Background image fully covers element\n@mixin fillCenteredBg($url: '', $position: center) {\n    background-size: cover;\n    background-image: url($url);\n    background-position: $position;\n    background-repeat: no-repeat;\n}\n\n// Background image sits contained inside the element (letterbox effect)\n@mixin containCenteredBg($url: '', $position: center) {\n    background-size: contain;\n    background-image: url($url);\n    background-position: $position;\n    background-repeat: no-repeat;\n}\n\n// Other\n// -----------------------------------// Units\n// -----------------------------------\n\n// Proportianal font scaling  based of $baseWidth, base font size is 10px when viewport width === $baseWidth\n@mixin baseFontSizeVW($baseWidth: 1920) {\n    $base-font-size: 10;\n\n    font-size: $base-font-size / $baseWidth * 100 + 0vw;\n}\n\n// Use letter spacing value from Photoshop\n// @mixin letterSpacing( 100 );\n@mixin letterSpacing($spacing: 0) {\n    letter-spacing: $spacing / 1000 * 1em;\n    // text-indent: $spacing / 1000 * 1em;\n}\n\n@mixin svgStroke($width: 2, $color: currentColor) {\n    stroke: $color;\n    stroke-width: $width;\n    // stroke-linecap: round;\n    // stroke-linejoin: round;\n}\n\n// USAGE -------\n// @mixin sudo(before, {\n//      width: 100px;\n//      height: 100px;\n// });\n\n// Creates a sudo element, $type can be before|after\n@mixin sudo($type: before) {\n    &:#{$type} {\n        content: '';\n        @content;\n    }\n}\n\n// Selector for desktop/devices with mouse\n@mixin pointerDevice {\n    @media (pointer: fine) {\n        @content;\n    }\n\n    .desktop.ie &,\n    .desktop.firefox & {\n        @content;\n    }\n}\n\n// Selector for touch devices\n@mixin touchDevice {\n    @media (any-pointer: coarse) {\n        @content;\n    }\n}\n\n// Aligns hover action between touch and pointer devices\n@mixin hover {\n    @include pointerDevice {\n        &:hover {\n            @content;\n        }\n    }\n    @include touchDevice {\n        &:active,\n        &.android-active {\n            @content;\n        }\n    }\n}\n\n// USAGE -------\n// @mixin pxToRem( font-size, 24px );\n\n// Converts a css $property from px to rem\n@mixin pxToRem($property: 'margin-bottom', $value: 0) {\n    $pxValue: unit($value, px);\n    $remValue: unit($value / 10, rem);\n    #{$property}: $pxValue;\n    #{$property}: $remValue;\n}\n\n// Sets cursor to grabbing\n@mixin grabbingCursor() {\n    cursor: grab;\n    cursor: -webkit-grab;\n    &:active {\n        cursor: grabbing;\n        cursor: -webkit-grabbing;\n    }\n}\n",'// Breakpoints\n// -----------\n\n$bp-mobile-threshold: 768px;\n\n// Mixins\n// ------\n\n/*\n    These mixins apply styles only when within the specified breakpoint\n    ---\n    1. Predefined breakpoints\n    2. Custom breakpoints for width\n    3. Custom breakpoints for height\n*/\n\n@mixin portrait() {\n    @media only screen and (orientation: portrait) {\n        @content;\n    }\n}\n\n@mixin landscape() {\n    @media only screen and (orientation: landscape) {\n        @content;\n    }\n}\n\n@mixin mobile() {\n    // @media only screen and (max-aspect-ratio: 3/4) {\n    //     @content;\n    // }\n    @media only screen and (max-width: $bp-mobile-threshold) {\n        @content;\n    }\n}\n\n@mixin desktop() {\n    // @media only screen and (min-aspect-ratio: 301/400) {\n    //     @content;\n    // }\n    @media only screen and (min-width: $bp-mobile-threshold + 1) {\n        @content;\n    }\n}\n\n@mixin handheldDevice {\n    .root[device="mobile"] &,\n    .root[device="tablet"] & {\n        @content;\n    }\n}\n\n@mixin desktopDevice {\n    .root[device="desktop"] & {\n        @content;\n    }\n}\n\n@mixin phoneLandscape() {\n    @media only screen and (orientation: landscape) {\n        .phone & {\n            @content;\n        }\n    }\n}\n\n@mixin fullscreen() {\n    .fullscreen & {\n        @content;\n    }\n}\n\n@mixin breakpoint($point) {\n    @if $point == mobile {\n        @include mobile();\n    }\n    @if $point == desktop {\n        @include desktop();\n    }\n}\n\n// Min width and Max width\n@mixin breakpoint-width($min, $max) {\n    @media only screen and (min-width: $min) and (max-width: $max) {\n        @content;\n    }\n}\n// Min width\n@mixin breakpoint-width-min($min) {\n    @media only screen and (min-width: $min) {\n        @content;\n    }\n}\n// Max width\n@mixin breakpoint-width-max($max) {\n    @media only screen and (max-width: $max) {\n        @content;\n    }\n}\n\n// Min height and Max height\n@mixin breakpoint-height($min, $max) {\n    @media only screen and (min-height: $min) and (max-height: $max) {\n        @content;\n    }\n}\n// Min height\n@mixin breakpoint-height-min($min) {\n    @media only screen and (min-height: $min) {\n        @content;\n    }\n}\n// Max height\n@mixin breakpoint-height-max($max) {\n    @media only screen and (max-height: $max) {\n        @content;\n    }\n}\n'],sourceRoot:""}]);const r=a},4212:(n,e,t)=>{"use strict";t.d(e,{Z:()=>r});var i=t(559),o=t.n(i),s=t(3476),a=t.n(s)()(o());a.push([n.id,'.voiceOver{bottom:0;left:0;position:absolute;width:100%;color:var(--color);z-index:600;margin-bottom:9rem;pointer-events:none}@media only screen and (min-width: 769px){.voiceOver{margin-bottom:4rem}}.voiceOver__subtitles{width:100%;text-align:center;padding:0 2rem;bottom:0;left:0;position:absolute}@media only screen and (min-width: 769px){.voiceOver__subtitles{padding:0 4rem}}.voiceOver__speaker{text-transform:uppercase;margin-bottom:0.5rem;font-size:14px}.voiceOver__subtitle{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:"Adobe Clean",system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",sans-serif;font-weight:400;margin:auto;max-width:90rem}.voiceOver__media{display:none}\n',"",{version:3,sources:["webpack://./component/voice-over/index.scss","webpack://./style/mixins/utils.scss","webpack://./style/base/variables.scss","webpack://./style/mixins/fonts.scss"],names:[],mappings:"AAGA,WCkBI,QAAY,CACZ,MAAY,CAEZ,iBAJ0D,CDd1D,UAAW,CACX,kBAAmB,CACnB,WEUW,CFTX,kBAAmB,CACnB,mBAAoB,CAqCvB,0CA5CD,WAUQ,kBAAmB,CAkC1B,CA5BG,sBACI,UAAW,CACX,iBAAkB,CAClB,cAAe,CCDnB,QAAY,CACZ,MAAY,CAEZ,iBAJ0D,CDSzD,0CAVD,sBAQQ,cAAe,CAEtB,CAED,oBACI,wBAAyB,CACzB,oBAAqB,CACrB,cAAe,CAClB,qBG/BD,iCAAkC,CAClC,kCAAmC,CAYnC,gOAL0C,CAM1C,eAAgB,CHsBZ,WAAY,CACZ,eAAgB,CACnB,kBAGG,YAAa",sourcesContent:["$CDN:\"/\";\n@import 'style/shared';\n\n.voiceOver {\n    @include position(bottom, left);\n\n    width: 100%;\n    color: var(--color);\n    z-index: $z-index-vo;\n    margin-bottom: 9rem;\n    pointer-events: none;\n        \n    @include desktop {\n        margin-bottom: 4rem;\n    }\n\n    // &::cue {}\n\n    \n    &__subtitles {\n        width: 100%;\n        text-align: center;\n        padding: 0 2rem;\n        \n        @include position(bottom, left);\n        \n        @include desktop {\n            padding: 0 4rem;\n        }\n    }\n    \n    &__speaker {\n        text-transform: uppercase;\n        margin-bottom: 0.5rem;\n        font-size: 14px;\n    }\n    \n    &__subtitle {\n        @include fontAdobeRegular;\n\n        margin: auto;\n        max-width: 90rem;\n    }\n\n    &__media {\n        display: none;\n    }\n}\n","// -----------------------------------\n// Layout\n// -----------------------------------\n\n// Fills to the bounds of the container element\n@mixin fill($position: absolute) {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    position: $position;\n}\n\n// Fills to the bounds of the container element, including an offset (grow or shrink the bounds)\n@mixin fillContainer($offset: 0, $position: absolute) {\n    inset: $offset;\n    position: $position;\n}\n\n// Sets the elements position to either top-left|top-right|bottom-left|bottom-right\n@mixin position($ruleA: top, $ruleB: left, $position: absolute) {\n    #{$ruleA}: 0;\n    #{$ruleB}: 0;\n\n    position: $position;\n}\n\n// USAGE -------\n// @mixin aspectRatio( $aspect-16x9 );\n\n@mixin aspectRatio($ratio) {\n    &::before {\n        content: '';\n        display: block;\n        padding-top: ($ratio * 100%);\n    }\n}\n\n// USAGE -------\n// @mixin centerAlign(100px, 100px);\n\n// Center aligns the element within its container, given a width & height\n@mixin centerAlign($width: 0, $height: 0) {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    margin-top: -$height/2;\n    margin-left: -$width/2;\n}\n\n// Center aligns the element within its container, regardless of width & height\n@mixin centerAlignTransform() {\n    top: 50%;\n    left: 50%;\n    position: absolute;\n    transform: translate(-50%, -50%);\n}\n\n// Centers the children within the element. $direction variable can be row|column\n@mixin flexCenter($direction: column) {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: $direction;\n}\n\n// Old school technique to vertically center content\n@mixin addVerticalCentering() {\n    &::before {\n        content: '';\n        display: inline-block;\n        vertical-align: middle;\n        width: 0;\n        height: 100%;\n    }\n}\n\n// Full width element which centers when viewport width > $max-width\n@mixin constrainWidth($max-width: $app-width) {\n    margin: auto;\n    position: relative;\n\n    width: 100%;\n    max-width: $max-width;\n}\n\n// Full width element which centers when viewport width > $max-width, plus fills height\n@mixin constrainWidthFillHeight {\n    @include constrainWidth();\n\n    height: 100%;\n}\n\n@mixin imgFillContainer($align: top-left) {\n    @if $align = top-left {\n        top: 0;\n        left: 0;\n    } @else if $align = center {\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n    }\n\n    max-width: 100%;\n    max-height: 100%;\n    min-width: 100%;\n    min-height: 100%;\n    position: absolute;\n}\n\n// Creates a circle element with $size width and height\n@mixin circle($size) {\n    width: $size;\n    height: $size;\n    border-radius: 50%;\n}\n\n// Creates a square element with $size width and height\n@mixin square($size) {\n    width: $size;\n    height: $size;\n}\n\n// Images\n// -----------------------------------\n\n// Background image fully covers element\n@mixin fillCenteredBg($url: '', $position: center) {\n    background-size: cover;\n    background-image: url($url);\n    background-position: $position;\n    background-repeat: no-repeat;\n}\n\n// Background image sits contained inside the element (letterbox effect)\n@mixin containCenteredBg($url: '', $position: center) {\n    background-size: contain;\n    background-image: url($url);\n    background-position: $position;\n    background-repeat: no-repeat;\n}\n\n// Other\n// -----------------------------------// Units\n// -----------------------------------\n\n// Proportianal font scaling  based of $baseWidth, base font size is 10px when viewport width === $baseWidth\n@mixin baseFontSizeVW($baseWidth: 1920) {\n    $base-font-size: 10;\n\n    font-size: $base-font-size / $baseWidth * 100 + 0vw;\n}\n\n// Use letter spacing value from Photoshop\n// @mixin letterSpacing( 100 );\n@mixin letterSpacing($spacing: 0) {\n    letter-spacing: $spacing / 1000 * 1em;\n    // text-indent: $spacing / 1000 * 1em;\n}\n\n@mixin svgStroke($width: 2, $color: currentColor) {\n    stroke: $color;\n    stroke-width: $width;\n    // stroke-linecap: round;\n    // stroke-linejoin: round;\n}\n\n// USAGE -------\n// @mixin sudo(before, {\n//      width: 100px;\n//      height: 100px;\n// });\n\n// Creates a sudo element, $type can be before|after\n@mixin sudo($type: before) {\n    &:#{$type} {\n        content: '';\n        @content;\n    }\n}\n\n// Selector for desktop/devices with mouse\n@mixin pointerDevice {\n    @media (pointer: fine) {\n        @content;\n    }\n\n    .desktop.ie &,\n    .desktop.firefox & {\n        @content;\n    }\n}\n\n// Selector for touch devices\n@mixin touchDevice {\n    @media (any-pointer: coarse) {\n        @content;\n    }\n}\n\n// Aligns hover action between touch and pointer devices\n@mixin hover {\n    @include pointerDevice {\n        &:hover {\n            @content;\n        }\n    }\n    @include touchDevice {\n        &:active,\n        &.android-active {\n            @content;\n        }\n    }\n}\n\n// USAGE -------\n// @mixin pxToRem( font-size, 24px );\n\n// Converts a css $property from px to rem\n@mixin pxToRem($property: 'margin-bottom', $value: 0) {\n    $pxValue: unit($value, px);\n    $remValue: unit($value / 10, rem);\n    #{$property}: $pxValue;\n    #{$property}: $remValue;\n}\n\n// Sets cursor to grabbing\n@mixin grabbingCursor() {\n    cursor: grab;\n    cursor: -webkit-grab;\n    &:active {\n        cursor: grabbing;\n        cursor: -webkit-grabbing;\n    }\n}\n","// Aspect ratio\n// ------\n$aspect-1x1: 1;\n$aspect-2x3: 3/2;\n$aspect-3x2: 2/3;\n$aspect-3x4: 4/3;\n$aspect-4x3: 3/4;\n$aspect-16x9: 9/16;\n$aspect-9x16: 16/9;\n\n// Z-index\n// -------\n$z-index-0: 0;\n$z-index-1: 100;\n$z-index-2: 200;\n$z-index-3: 300;\n$z-index-4: 400;\n$z-index-5: 500;\n$z-index-6: 600;\n$z-index-7: 700;\n$z-index-8: 800;\n$z-index-9: 900;\n$z-index-10: 1000;\n\n// Easings\n// -------\n// Linear\n$ease-linear: cubic-bezier(0.25, 0.25, 0.75, 0.75);\n// Sine\n$ease-in-sine: cubic-bezier(0.47, 0, 0.745, 0.715);\n$ease-out-sine: cubic-bezier(0.39, 0.575, 0.565, 1);\n$ease-in-out-sine: cubic-bezier(0.445, 0.05, 0.55, 0.95);\n// Quad\n$ease-in-quad: cubic-bezier(0.55, 0.085, 0.68, 0.53);\n$ease-out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94);\n$ease-in-out-quad: cubic-bezier(0.455, 0.03, 0.515, 0.955);\n// Cubic\n$ease-in-cubic: cubic-bezier(0.55, 0.055, 0.675, 0.19);\n$ease-out-cubic: cubic-bezier(0.215, 0.61, 0.355, 1);\n$ease-in-out-cubic: cubic-bezier(0.645, 0.045, 0.355, 1);\n// Quart\n$ease-in-quart: cubic-bezier(0.895, 0.03, 0.685, 0.22);\n$ease-out-quart: cubic-bezier(0.165, 0.84, 0.44, 1);\n$ease-in-out-quart: cubic-bezier(0.77, 0, 0.175, 1);\n// Quint\n$ease-in-quint: cubic-bezier(0.755, 0.05, 0.855, 0.06);\n$ease-out-quint: cubic-bezier(0.23, 1, 0.32, 1);\n$ease-in-out-quint: cubic-bezier(0.86, 0, 0.07, 1);\n// Expo\n$ease-in-expo: cubic-bezier(0.95, 0.05, 0.795, 0.035);\n$ease-out-expo: cubic-bezier(0.19, 1, 0.22, 1);\n$ease-in-out-expo: cubic-bezier(1, 0, 0, 1);\n// Circ\n$ease-in-circ: cubic-bezier(0.6, 0.04, 0.98, 0.335);\n$ease-out-circ: cubic-bezier(0.075, 0.82, 0.165, 1);\n$ease-in-out-circ: cubic-bezier(0.785, 0.135, 0.15, 0.86);\n// Back\n$ease-in-back: cubic-bezier(0.6, -0.28, 0.735, 0.045);\n$ease-out-back: cubic-bezier(0.175, 0.885, 0.32, 1.275);\n$ease-in-out-back: cubic-bezier(0.68, -0.55, 0.265, 1.55);\n","// Font configuration\n// ------------------\n\n@mixin fontSmoothing() {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n}\n\n// Font faces\n// ----------\n\n$fallbackFont: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Fira Sans',\n    'Droid Sans', 'Helvetica Neue', sans-serif;\n\n@mixin fontAdobeRegular() {\n    @include fontSmoothing;\n\n    font-family: 'Adobe Clean', $fallbackFont;\n    font-weight: 400;\n}\n\n@mixin fontAdobeBold() {\n    @include fontSmoothing;\n\n    font-family: 'Adobe Clean', $fallbackFont;\n    font-weight: 600;\n}\n\n// @mixin fontAdobeBoldCondensed() {\n//     @include fontSmoothing;\n\n//     font-family: 'Adobe Clean Semi Condensed', $fallbackFont;\n//     font-weight: 400;\n// }\n\n\n@mixin fontBold() {\n    @include fontSmoothing;\n\n    font-family: 'Greed', $fallbackFont;\n    font-weight: 500;\n}\n\n// @mixin fontHeavy() {\n//     @include fontSmoothing;\n\n//     font-family: 'Greed', $fallbackFont;\n//     font-weight: 700;\n// }\n\n@mixin fontBody {\n    font-size: 1.6rem;\n\n    // letter-spacing: 0.015em;\n\n    @include fontAdobeBold;\n}\n\n@mixin fontTitle1 {\n    font-size: 15.5rem;\n    line-height: 0.77;\n    margin-left: -0.04em;\n    letter-spacing: -0.035em;\n    text-transform: uppercase;\n\n    @include fontBold;\n\n    @include mobile {\n        font-size: 5.5rem;\n    }\n}\n\n@mixin fontTitle2 {\n    font-size: 1.6rem;\n    text-transform: uppercase;\n    \n    // font-size: 1.6rem;\n    // margin-left: -0.04em;\n    // letter-spacing: -0.01em;\n\n    @include fontAdobeBold;\n\n    @include mobile {\n        font-size: 1.6rem;\n    }\n}\n"],sourceRoot:""}]);const r=a},4960:(n,e,t)=>{var i={"./404/index.js":[231,231],"./base/index.js":[5434,434],"./main/index.js":[6712,604,356,712],"./sandbox/index.js":[4090,604,356,712,90]};function o(n){if(!t.o(i,n))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}));var e=i[n],o=e[0];return Promise.all(e.slice(1).map(t.e)).then((()=>t(o)))}o.keys=()=>Object.keys(i),o.id=4960,n.exports=o}}]);
//# sourceMappingURL=shell.30991b169791b4ee14f7.js.map