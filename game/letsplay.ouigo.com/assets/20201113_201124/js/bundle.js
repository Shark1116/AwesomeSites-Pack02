!function() {
    function a(b, c, d) {
        function e(g, h) {
            if (!c[g]) {
                if (!b[g]) {
                    var i = "function" == typeof require && require;
                    if (!h && i)
                        return i(g, !0);
                    if (f)
                        return f(g, !0);
                    var j = new Error("Cannot find module '" + g + "'");
                    throw j.code = "MODULE_NOT_FOUND",
                    j
                }
                var k = c[g] = {
                    exports: {}
                };
                b[g][0].call(k.exports, function(a) {
                    return e(b[g][1][a] || a)
                }, k, k.exports, a, b, c, d)
            }
            return c[g].exports
        }
        for (var f = "function" == typeof require && require, g = 0; g < d.length; g++)
            e(d[g]);
        return e
    }
    return a
}()({
    1: [function(a, b, c) {}
    , {}],
    2: [function(a, b, c) {
        (function(d, e) {
            (function() {
                !function(a, d) {
                    "object" == typeof c && void 0 !== b ? b.exports = d() : "function" == typeof define && define.amd ? define(d) : a.ES6Promise = d()
                }(this, function() {
                    "use strict";
                    function b(a) {
                        var b = typeof a;
                        return null !== a && ("object" === b || "function" === b)
                    }
                    function c(a) {
                        return "function" == typeof a
                    }
                    function f(a) {
                        O = a
                    }
                    function g(a) {
                        P = a
                    }
                    function h() {
                        return void 0 !== N ? function() {
                            N(j)
                        }
                        : i()
                    }
                    function i() {
                        var a = setTimeout;
                        return function() {
                            return a(j, 1)
                        }
                    }
                    function j() {
                        for (var a = 0; a < M; a += 2) {
                            (0,
                            V[a])(V[a + 1]),
                            V[a] = void 0,
                            V[a + 1] = void 0
                        }
                        M = 0
                    }
                    function k(a, b) {
                        var c = this
                          , d = new this.constructor(m);
                        void 0 === d[X] && C(d);
                        var e = c._state;
                        if (e) {
                            var f = arguments[e - 1];
                            P(function() {
                                return z(e, d, f, c._result)
                            })
                        } else
                            x(c, d, a, b);
                        return d
                    }
                    function l(a) {
                        var b = this;
                        if (a && "object" == typeof a && a.constructor === b)
                            return a;
                        var c = new b(m);
                        return t(c, a),
                        c
                    }
                    function m() {}
                    function n() {
                        return new TypeError("You cannot resolve a promise with itself")
                    }
                    function o() {
                        return new TypeError("A promises callback cannot return that same promise.")
                    }
                    function p(a, b, c, d) {
                        try {
                            a.call(b, c, d)
                        } catch (a) {
                            return a
                        }
                    }
                    function q(a, b, c) {
                        P(function(a) {
                            var d = !1
                              , e = p(c, b, function(c) {
                                d || (d = !0,
                                b !== c ? t(a, c) : v(a, c))
                            }, function(b) {
                                d || (d = !0,
                                w(a, b))
                            }, "Settle: " + (a._label || " unknown promise"));
                            !d && e && (d = !0,
                            w(a, e))
                        }, a)
                    }
                    function r(a, b) {
                        b._state === Z ? v(a, b._result) : b._state === $ ? w(a, b._result) : x(b, void 0, function(b) {
                            return t(a, b)
                        }, function(b) {
                            return w(a, b)
                        })
                    }
                    function s(a, b, d) {
                        b.constructor === a.constructor && d === k && b.constructor.resolve === l ? r(a, b) : void 0 === d ? v(a, b) : c(d) ? q(a, b, d) : v(a, b)
                    }
                    function t(a, c) {
                        if (a === c)
                            w(a, n());
                        else if (b(c)) {
                            var d = void 0;
                            try {
                                d = c.then
                            } catch (b) {
                                return void w(a, b)
                            }
                            s(a, c, d)
                        } else
                            v(a, c)
                    }
                    function u(a) {
                        a._onerror && a._onerror(a._result),
                        y(a)
                    }
                    function v(a, b) {
                        a._state === Y && (a._result = b,
                        a._state = Z,
                        0 !== a._subscribers.length && P(y, a))
                    }
                    function w(a, b) {
                        a._state === Y && (a._state = $,
                        a._result = b,
                        P(u, a))
                    }
                    function x(a, b, c, d) {
                        var e = a._subscribers
                          , f = e.length;
                        a._onerror = null,
                        e[f] = b,
                        e[f + Z] = c,
                        e[f + $] = d,
                        0 === f && a._state && P(y, a)
                    }
                    function y(a) {
                        var b = a._subscribers
                          , c = a._state;
                        if (0 !== b.length) {
                            for (var d = void 0, e = void 0, f = a._result, g = 0; g < b.length; g += 3)
                                d = b[g],
                                e = b[g + c],
                                d ? z(c, d, e, f) : e(f);
                            a._subscribers.length = 0
                        }
                    }
                    function z(a, b, d, e) {
                        var f = c(d)
                          , g = void 0
                          , h = void 0
                          , i = !0;
                        if (f) {
                            try {
                                g = d(e)
                            } catch (a) {
                                i = !1,
                                h = a
                            }
                            if (b === g)
                                return void w(b, o())
                        } else
                            g = e;
                        b._state !== Y || (f && i ? t(b, g) : !1 === i ? w(b, h) : a === Z ? v(b, g) : a === $ && w(b, g))
                    }
                    function A(a, b) {
                        try {
                            b(function(b) {
                                t(a, b)
                            }, function(b) {
                                w(a, b)
                            })
                        } catch (b) {
                            w(a, b)
                        }
                    }
                    function B() {
                        return _++
                    }
                    function C(a) {
                        a[X] = _++,
                        a._state = void 0,
                        a._result = void 0,
                        a._subscribers = []
                    }
                    function D() {
                        return new Error("Array Methods must be provided an Array")
                    }
                    function E(a) {
                        return new aa(this,a).promise
                    }
                    function F(a) {
                        var b = this;
                        return new b(L(a) ? function(c, d) {
                            for (var e = a.length, f = 0; f < e; f++)
                                b.resolve(a[f]).then(c, d)
                        }
                        : function(a, b) {
                            return b(new TypeError("You must pass an array to race."))
                        }
                        )
                    }
                    function G(a) {
                        var b = this
                          , c = new b(m);
                        return w(c, a),
                        c
                    }
                    function H() {
                        throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")
                    }
                    function I() {
                        throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")
                    }
                    function J() {
                        var a = void 0;
                        if (void 0 !== e)
                            a = e;
                        else if ("undefined" != typeof self)
                            a = self;
                        else
                            try {
                                a = Function("return this")()
                            } catch (a) {
                                throw new Error("polyfill failed because global object is unavailable in this environment")
                            }
                        var b = a.Promise;
                        if (b) {
                            var c = null;
                            try {
                                c = Object.prototype.toString.call(b.resolve())
                            } catch (a) {}
                            if ("[object Promise]" === c && !b.cast)
                                return
                        }
                        a.Promise = ba
                    }
                    var K = void 0;
                    K = Array.isArray ? Array.isArray : function(a) {
                        return "[object Array]" === Object.prototype.toString.call(a)
                    }
                    ;
                    var L = K
                      , M = 0
                      , N = void 0
                      , O = void 0
                      , P = function(a, b) {
                        V[M] = a,
                        V[M + 1] = b,
                        2 === (M += 2) && (O ? O(j) : W())
                    }
                      , Q = "undefined" != typeof window ? window : void 0
                      , R = Q || {}
                      , S = R.MutationObserver || R.WebKitMutationObserver
                      , T = "undefined" == typeof self && void 0 !== d && "[object process]" === {}.toString.call(d)
                      , U = "undefined" != typeof Uint8ClampedArray && "undefined" != typeof importScripts && "undefined" != typeof MessageChannel
                      , V = new Array(1e3)
                      , W = void 0;
                    W = T ? function() {
                        return function() {
                            return d.nextTick(j)
                        }
                    }() : S ? function() {
                        var a = 0
                          , b = new S(j)
                          , c = document.createTextNode("");
                        return b.observe(c, {
                            characterData: !0
                        }),
                        function() {
                            c.data = a = ++a % 2
                        }
                    }() : U ? function() {
                        var a = new MessageChannel;
                        return a.port1.onmessage = j,
                        function() {
                            return a.port2.postMessage(0)
                        }
                    }() : void 0 === Q && "function" == typeof a ? function() {
                        try {
                            var a = Function("return this")().require("vertx");
                            return N = a.runOnLoop || a.runOnContext,
                            h()
                        } catch (a) {
                            return i()
                        }
                    }() : i();
                    var X = Math.random().toString(36).substring(2)
                      , Y = void 0
                      , Z = 1
                      , $ = 2
                      , _ = 0
                      , aa = function() {
                        function a(a, b) {
                            this._instanceConstructor = a,
                            this.promise = new a(m),
                            this.promise[X] || C(this.promise),
                            L(b) ? (this.length = b.length,
                            this._remaining = b.length,
                            this._result = new Array(this.length),
                            0 === this.length ? v(this.promise, this._result) : (this.length = this.length || 0,
                            this._enumerate(b),
                            0 === this._remaining && v(this.promise, this._result))) : w(this.promise, D())
                        }
                        return a.prototype._enumerate = function(a) {
                            for (var b = 0; this._state === Y && b < a.length; b++)
                                this._eachEntry(a[b], b)
                        }
                        ,
                        a.prototype._eachEntry = function(a, b) {
                            var c = this._instanceConstructor
                              , d = c.resolve;
                            if (d === l) {
                                var e = void 0
                                  , f = void 0
                                  , g = !1;
                                try {
                                    e = a.then
                                } catch (a) {
                                    g = !0,
                                    f = a
                                }
                                if (e === k && a._state !== Y)
                                    this._settledAt(a._state, b, a._result);
                                else if ("function" != typeof e)
                                    this._remaining--,
                                    this._result[b] = a;
                                else if (c === ba) {
                                    var h = new c(m);
                                    g ? w(h, f) : s(h, a, e),
                                    this._willSettleAt(h, b)
                                } else
                                    this._willSettleAt(new c(function(b) {
                                        return b(a)
                                    }
                                    ), b)
                            } else
                                this._willSettleAt(d(a), b)
                        }
                        ,
                        a.prototype._settledAt = function(a, b, c) {
                            var d = this.promise;
                            d._state === Y && (this._remaining--,
                            a === $ ? w(d, c) : this._result[b] = c),
                            0 === this._remaining && v(d, this._result)
                        }
                        ,
                        a.prototype._willSettleAt = function(a, b) {
                            var c = this;
                            x(a, void 0, function(a) {
                                return c._settledAt(Z, b, a)
                            }, function(a) {
                                return c._settledAt($, b, a)
                            })
                        }
                        ,
                        a
                    }()
                      , ba = function() {
                        function a(b) {
                            this[X] = B(),
                            this._result = this._state = void 0,
                            this._subscribers = [],
                            m !== b && ("function" != typeof b && H(),
                            this instanceof a ? A(this, b) : I())
                        }
                        return a.prototype.catch = function(a) {
                            return this.then(null, a)
                        }
                        ,
                        a.prototype.finally = function(a) {
                            var b = this
                              , d = b.constructor;
                            return c(a) ? b.then(function(b) {
                                return d.resolve(a()).then(function() {
                                    return b
                                })
                            }, function(b) {
                                return d.resolve(a()).then(function() {
                                    throw b
                                })
                            }) : b.then(a, a)
                        }
                        ,
                        a
                    }();
                    return ba.prototype.then = k,
                    ba.all = E,
                    ba.race = F,
                    ba.resolve = l,
                    ba.reject = G,
                    ba._setScheduler = f,
                    ba._setAsap = g,
                    ba._asap = P,
                    ba.polyfill = J,
                    ba.Promise = ba,
                    ba
                })
            }
            ).call(this)
        }
        ).call(this, a("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }
    , {
        _process: 9
    }],
    3: [function(a, b, c) {
        "use strict";
        var d = Object.prototype.hasOwnProperty
          , e = Object.prototype.toString
          , f = Object.defineProperty
          , g = Object.getOwnPropertyDescriptor
          , h = function(a) {
            return "function" == typeof Array.isArray ? Array.isArray(a) : "[object Array]" === e.call(a)
        }
          , i = function(a) {
            if (!a || "[object Object]" !== e.call(a))
                return !1;
            var b = d.call(a, "constructor")
              , c = a.constructor && a.constructor.prototype && d.call(a.constructor.prototype, "isPrototypeOf");
            if (a.constructor && !b && !c)
                return !1;
            var f;
            for (f in a)
                ;
            return void 0 === f || d.call(a, f)
        }
          , j = function(a, b) {
            f && "__proto__" === b.name ? f(a, b.name, {
                enumerable: !0,
                configurable: !0,
                value: b.newValue,
                writable: !0
            }) : a[b.name] = b.newValue
        }
          , k = function(a, b) {
            if ("__proto__" === b) {
                if (!d.call(a, b))
                    return;
                if (g)
                    return g(a, b).value
            }
            return a[b]
        };
        b.exports = function a() {
            var b, c, d, e, f, g, l = arguments[0], m = 1, n = arguments.length, o = !1;
            for ("boolean" == typeof l && (o = l,
            l = arguments[1] || {},
            m = 2),
            (null == l || "object" != typeof l && "function" != typeof l) && (l = {}); m < n; ++m)
                if (null != (b = arguments[m]))
                    for (c in b)
                        d = k(l, c),
                        e = k(b, c),
                        l !== e && (o && e && (i(e) || (f = h(e))) ? (f ? (f = !1,
                        g = d && h(d) ? d : []) : g = d && i(d) ? d : {},
                        j(l, {
                            name: c,
                            newValue: a(o, g, e)
                        })) : void 0 !== e && j(l, {
                            name: c,
                            newValue: e
                        }));
            return l
        }
    }
    , {}],
    4: [function(a, b, c) {
        (function(a) {
            (function() {
                var c = void 0 !== b && b.exports && void 0 !== a ? a : this || window;
                (c._gsQueue || (c._gsQueue = [])).push(function() {
                    "use strict";
                    c._gsDefine("TweenMax", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function(a, b, c) {
                        var d = function(a) {
                            var b, c = [], d = a.length;
                            for (b = 0; b !== d; c.push(a[b++]))
                                ;
                            return c
                        }
                          , e = function(a, b, c) {
                            var d, e, f = a.cycle;
                            for (d in f)
                                e = f[d],
                                a[d] = "function" == typeof e ? e(c, b[c]) : e[c % e.length];
                            delete a.cycle
                        }
                          , f = function(a, b, d) {
                            c.call(this, a, b, d),
                            this._cycle = 0,
                            this._yoyo = !0 === this.vars.yoyo || !!this.vars.yoyoEase,
                            this._repeat = this.vars.repeat || 0,
                            this._repeatDelay = this.vars.repeatDelay || 0,
                            this._repeat && this._uncache(!0),
                            this.render = f.prototype.render
                        }
                          , g = c._internals
                          , h = g.isSelector
                          , i = g.isArray
                          , j = f.prototype = c.to({}, .1, {})
                          , k = [];
                        f.version = "1.20.5",
                        j.constructor = f,
                        j.kill()._gc = !1,
                        f.killTweensOf = f.killDelayedCallsTo = c.killTweensOf,
                        f.getTweensOf = c.getTweensOf,
                        f.lagSmoothing = c.lagSmoothing,
                        f.ticker = c.ticker,
                        f.render = c.render,
                        j.invalidate = function() {
                            return this._yoyo = !0 === this.vars.yoyo || !!this.vars.yoyoEase,
                            this._repeat = this.vars.repeat || 0,
                            this._repeatDelay = this.vars.repeatDelay || 0,
                            this._yoyoEase = null,
                            this._uncache(!0),
                            c.prototype.invalidate.call(this)
                        }
                        ,
                        j.updateTo = function(a, b) {
                            var d, e = this.ratio, f = this.vars.immediateRender || a.immediateRender;
                            b && this._startTime < this._timeline._time && (this._startTime = this._timeline._time,
                            this._uncache(!1),
                            this._gc ? this._enabled(!0, !1) : this._timeline.insert(this, this._startTime - this._delay));
                            for (d in a)
                                this.vars[d] = a[d];
                            if (this._initted || f)
                                if (b)
                                    this._initted = !1,
                                    f && this.render(0, !0, !0);
                                else if (this._gc && this._enabled(!0, !1),
                                this._notifyPluginsOfEnabled && this._firstPT && c._onPluginEvent("_onDisable", this),
                                this._time / this._duration > .998) {
                                    var g = this._totalTime;
                                    this.render(0, !0, !1),
                                    this._initted = !1,
                                    this.render(g, !0, !1)
                                } else if (this._initted = !1,
                                this._init(),
                                this._time > 0 || f)
                                    for (var h, i = 1 / (1 - e), j = this._firstPT; j; )
                                        h = j.s + j.c,
                                        j.c *= i,
                                        j.s = h - j.c,
                                        j = j._next;
                            return this
                        }
                        ,
                        j.render = function(a, b, d) {
                            this._initted || 0 === this._duration && this.vars.repeat && this.invalidate();
                            var e, f, h, i, j, k, l, m, n, o = this._dirty ? this.totalDuration() : this._totalDuration, p = this._time, q = this._totalTime, r = this._cycle, s = this._duration, t = this._rawPrevTime;
                            if (a >= o - 1e-7 && a >= 0 ? (this._totalTime = o,
                            this._cycle = this._repeat,
                            this._yoyo && 0 != (1 & this._cycle) ? (this._time = 0,
                            this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0) : (this._time = s,
                            this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1),
                            this._reversed || (e = !0,
                            f = "onComplete",
                            d = d || this._timeline.autoRemoveChildren),
                            0 === s && (this._initted || !this.vars.lazy || d) && (this._startTime === this._timeline._duration && (a = 0),
                            (t < 0 || a <= 0 && a >= -1e-7 || 1e-10 === t && "isPause" !== this.data) && t !== a && (d = !0,
                            t > 1e-10 && (f = "onReverseComplete")),
                            this._rawPrevTime = m = !b || a || t === a ? a : 1e-10)) : a < 1e-7 ? (this._totalTime = this._time = this._cycle = 0,
                            this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0,
                            (0 !== q || 0 === s && t > 0) && (f = "onReverseComplete",
                            e = this._reversed),
                            a < 0 && (this._active = !1,
                            0 === s && (this._initted || !this.vars.lazy || d) && (t >= 0 && (d = !0),
                            this._rawPrevTime = m = !b || a || t === a ? a : 1e-10)),
                            this._initted || (d = !0)) : (this._totalTime = this._time = a,
                            0 !== this._repeat && (i = s + this._repeatDelay,
                            this._cycle = this._totalTime / i >> 0,
                            0 !== this._cycle && this._cycle === this._totalTime / i && q <= a && this._cycle--,
                            this._time = this._totalTime - this._cycle * i,
                            this._yoyo && 0 != (1 & this._cycle) && (this._time = s - this._time,
                            (n = this._yoyoEase || this.vars.yoyoEase) && (this._yoyoEase || (!0 !== n || this._initted ? this._yoyoEase = n = !0 === n ? this._ease : n instanceof Ease ? n : Ease.map[n] : (n = this.vars.ease,
                            this._yoyoEase = n = n ? n instanceof Ease ? n : "function" == typeof n ? new Ease(n,this.vars.easeParams) : Ease.map[n] || c.defaultEase : c.defaultEase)),
                            this.ratio = n ? 1 - n.getRatio((s - this._time) / s) : 0)),
                            this._time > s ? this._time = s : this._time < 0 && (this._time = 0)),
                            this._easeType && !n ? (j = this._time / s,
                            k = this._easeType,
                            l = this._easePower,
                            (1 === k || 3 === k && j >= .5) && (j = 1 - j),
                            3 === k && (j *= 2),
                            1 === l ? j *= j : 2 === l ? j *= j * j : 3 === l ? j *= j * j * j : 4 === l && (j *= j * j * j * j),
                            1 === k ? this.ratio = 1 - j : 2 === k ? this.ratio = j : this._time / s < .5 ? this.ratio = j / 2 : this.ratio = 1 - j / 2) : n || (this.ratio = this._ease.getRatio(this._time / s))),
                            p === this._time && !d && r === this._cycle)
                                return void (q !== this._totalTime && this._onUpdate && (b || this._callback("onUpdate")));
                            if (!this._initted) {
                                if (this._init(),
                                !this._initted || this._gc)
                                    return;
                                if (!d && this._firstPT && (!1 !== this.vars.lazy && this._duration || this.vars.lazy && !this._duration))
                                    return this._time = p,
                                    this._totalTime = q,
                                    this._rawPrevTime = t,
                                    this._cycle = r,
                                    g.lazyTweens.push(this),
                                    void (this._lazy = [a, b]);
                                !this._time || e || n ? e && this._ease._calcEnd && !n && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1)) : this.ratio = this._ease.getRatio(this._time / s)
                            }
                            for (!1 !== this._lazy && (this._lazy = !1),
                            this._active || !this._paused && this._time !== p && a >= 0 && (this._active = !0),
                            0 === q && (2 === this._initted && a > 0 && this._init(),
                            this._startAt && (a >= 0 ? this._startAt.render(a, !0, d) : f || (f = "_dummyGS")),
                            this.vars.onStart && (0 === this._totalTime && 0 !== s || b || this._callback("onStart"))),
                            h = this._firstPT; h; )
                                h.f ? h.t[h.p](h.c * this.ratio + h.s) : h.t[h.p] = h.c * this.ratio + h.s,
                                h = h._next;
                            this._onUpdate && (a < 0 && this._startAt && this._startTime && this._startAt.render(a, !0, d),
                            b || (this._totalTime !== q || f) && this._callback("onUpdate")),
                            this._cycle !== r && (b || this._gc || this.vars.onRepeat && this._callback("onRepeat")),
                            f && (this._gc && !d || (a < 0 && this._startAt && !this._onUpdate && this._startTime && this._startAt.render(a, !0, d),
                            e && (this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                            this._active = !1),
                            !b && this.vars[f] && this._callback(f),
                            0 === s && 1e-10 === this._rawPrevTime && 1e-10 !== m && (this._rawPrevTime = 0)))
                        }
                        ,
                        f.to = function(a, b, c) {
                            return new f(a,b,c)
                        }
                        ,
                        f.from = function(a, b, c) {
                            return c.runBackwards = !0,
                            c.immediateRender = 0 != c.immediateRender,
                            new f(a,b,c)
                        }
                        ,
                        f.fromTo = function(a, b, c, d) {
                            return d.startAt = c,
                            d.immediateRender = 0 != d.immediateRender && 0 != c.immediateRender,
                            new f(a,b,d)
                        }
                        ,
                        f.staggerTo = f.allTo = function(a, b, g, j, l, m, n) {
                            j = j || 0;
                            var o, p, q, r, s = 0, t = [], u = function() {
                                g.onComplete && g.onComplete.apply(g.onCompleteScope || this, arguments),
                                l.apply(n || g.callbackScope || this, m || k)
                            }, v = g.cycle, w = g.startAt && g.startAt.cycle;
                            for (i(a) || ("string" == typeof a && (a = c.selector(a) || a),
                            h(a) && (a = d(a))),
                            a = a || [],
                            j < 0 && (a = d(a),
                            a.reverse(),
                            j *= -1),
                            o = a.length - 1,
                            q = 0; q <= o; q++) {
                                p = {};
                                for (r in g)
                                    p[r] = g[r];
                                if (v && (e(p, a, q),
                                null != p.duration && (b = p.duration,
                                delete p.duration)),
                                w) {
                                    w = p.startAt = {};
                                    for (r in g.startAt)
                                        w[r] = g.startAt[r];
                                    e(p.startAt, a, q)
                                }
                                p.delay = s + (p.delay || 0),
                                q === o && l && (p.onComplete = u),
                                t[q] = new f(a[q],b,p),
                                s += j
                            }
                            return t
                        }
                        ,
                        f.staggerFrom = f.allFrom = function(a, b, c, d, e, g, h) {
                            return c.runBackwards = !0,
                            c.immediateRender = 0 != c.immediateRender,
                            f.staggerTo(a, b, c, d, e, g, h)
                        }
                        ,
                        f.staggerFromTo = f.allFromTo = function(a, b, c, d, e, g, h, i) {
                            return d.startAt = c,
                            d.immediateRender = 0 != d.immediateRender && 0 != c.immediateRender,
                            f.staggerTo(a, b, d, e, g, h, i)
                        }
                        ,
                        f.delayedCall = function(a, b, c, d, e) {
                            return new f(b,0,{
                                delay: a,
                                onComplete: b,
                                onCompleteParams: c,
                                callbackScope: d,
                                onReverseComplete: b,
                                onReverseCompleteParams: c,
                                immediateRender: !1,
                                useFrames: e,
                                overwrite: 0
                            })
                        }
                        ,
                        f.set = function(a, b) {
                            return new f(a,0,b)
                        }
                        ,
                        f.isTweening = function(a) {
                            return c.getTweensOf(a, !0).length > 0
                        }
                        ;
                        var l = function(a, b) {
                            for (var d = [], e = 0, f = a._first; f; )
                                f instanceof c ? d[e++] = f : (b && (d[e++] = f),
                                d = d.concat(l(f, b)),
                                e = d.length),
                                f = f._next;
                            return d
                        }
                          , m = f.getAllTweens = function(b) {
                            return l(a._rootTimeline, b).concat(l(a._rootFramesTimeline, b))
                        }
                        ;
                        f.killAll = function(a, c, d, e) {
                            null == c && (c = !0),
                            null == d && (d = !0);
                            var f, g, h, i = m(0 != e), j = i.length, k = c && d && e;
                            for (h = 0; h < j; h++)
                                g = i[h],
                                (k || g instanceof b || (f = g.target === g.vars.onComplete) && d || c && !f) && (a ? g.totalTime(g._reversed ? 0 : g.totalDuration()) : g._enabled(!1, !1))
                        }
                        ,
                        f.killChildTweensOf = function(a, b) {
                            if (null != a) {
                                var e, j, k, l, m, n = g.tweenLookup;
                                if ("string" == typeof a && (a = c.selector(a) || a),
                                h(a) && (a = d(a)),
                                i(a))
                                    for (l = a.length; --l > -1; )
                                        f.killChildTweensOf(a[l], b);
                                else {
                                    e = [];
                                    for (k in n)
                                        for (j = n[k].target.parentNode; j; )
                                            j === a && (e = e.concat(n[k].tweens)),
                                            j = j.parentNode;
                                    for (m = e.length,
                                    l = 0; l < m; l++)
                                        b && e[l].totalTime(e[l].totalDuration()),
                                        e[l]._enabled(!1, !1)
                                }
                            }
                        }
                        ;
                        var n = function(a, c, d, e) {
                            c = !1 !== c,
                            d = !1 !== d,
                            e = !1 !== e;
                            for (var f, g, h = m(e), i = c && d && e, j = h.length; --j > -1; )
                                g = h[j],
                                (i || g instanceof b || (f = g.target === g.vars.onComplete) && d || c && !f) && g.paused(a)
                        };
                        return f.pauseAll = function(a, b, c) {
                            n(!0, a, b, c)
                        }
                        ,
                        f.resumeAll = function(a, b, c) {
                            n(!1, a, b, c)
                        }
                        ,
                        f.globalTimeScale = function(b) {
                            var d = a._rootTimeline
                              , e = c.ticker.time;
                            return arguments.length ? (b = b || 1e-10,
                            d._startTime = e - (e - d._startTime) * d._timeScale / b,
                            d = a._rootFramesTimeline,
                            e = c.ticker.frame,
                            d._startTime = e - (e - d._startTime) * d._timeScale / b,
                            d._timeScale = a._rootTimeline._timeScale = b,
                            b) : d._timeScale
                        }
                        ,
                        j.progress = function(a, b) {
                            return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 != (1 & this._cycle) ? 1 - a : a) + this._cycle * (this._duration + this._repeatDelay), b) : this._time / this.duration()
                        }
                        ,
                        j.totalProgress = function(a, b) {
                            return arguments.length ? this.totalTime(this.totalDuration() * a, b) : this._totalTime / this.totalDuration()
                        }
                        ,
                        j.time = function(a, b) {
                            return arguments.length ? (this._dirty && this.totalDuration(),
                            a > this._duration && (a = this._duration),
                            this._yoyo && 0 != (1 & this._cycle) ? a = this._duration - a + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (a += this._cycle * (this._duration + this._repeatDelay)),
                            this.totalTime(a, b)) : this._time
                        }
                        ,
                        j.duration = function(b) {
                            return arguments.length ? a.prototype.duration.call(this, b) : this._duration
                        }
                        ,
                        j.totalDuration = function(a) {
                            return arguments.length ? -1 === this._repeat ? this : this.duration((a - this._repeat * this._repeatDelay) / (this._repeat + 1)) : (this._dirty && (this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat,
                            this._dirty = !1),
                            this._totalDuration)
                        }
                        ,
                        j.repeat = function(a) {
                            return arguments.length ? (this._repeat = a,
                            this._uncache(!0)) : this._repeat
                        }
                        ,
                        j.repeatDelay = function(a) {
                            return arguments.length ? (this._repeatDelay = a,
                            this._uncache(!0)) : this._repeatDelay
                        }
                        ,
                        j.yoyo = function(a) {
                            return arguments.length ? (this._yoyo = a,
                            this) : this._yoyo
                        }
                        ,
                        f
                    }, !0),
                    c._gsDefine("TimelineLite", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function(a, b, d) {
                        var e = function(a) {
                            b.call(this, a),
                            this._labels = {},
                            this.autoRemoveChildren = !0 === this.vars.autoRemoveChildren,
                            this.smoothChildTiming = !0 === this.vars.smoothChildTiming,
                            this._sortChildren = !0,
                            this._onUpdate = this.vars.onUpdate;
                            var c, d, e = this.vars;
                            for (d in e)
                                c = e[d],
                                i(c) && -1 !== c.join("").indexOf("{self}") && (e[d] = this._swapSelfInParams(c));
                            i(e.tweens) && this.add(e.tweens, 0, e.align, e.stagger)
                        }
                          , f = d._internals
                          , g = e._internals = {}
                          , h = f.isSelector
                          , i = f.isArray
                          , j = f.lazyTweens
                          , k = f.lazyRender
                          , l = c._gsDefine.globals
                          , m = function(a) {
                            var b, c = {};
                            for (b in a)
                                c[b] = a[b];
                            return c
                        }
                          , n = function(a, b, c) {
                            var d, e, f = a.cycle;
                            for (d in f)
                                e = f[d],
                                a[d] = "function" == typeof e ? e(c, b[c]) : e[c % e.length];
                            delete a.cycle
                        }
                          , o = g.pauseCallback = function() {}
                          , p = function(a) {
                            var b, c = [], d = a.length;
                            for (b = 0; b !== d; c.push(a[b++]))
                                ;
                            return c
                        }
                          , q = e.prototype = new b;
                        return e.version = "1.20.4",
                        q.constructor = e,
                        q.kill()._gc = q._forcingPlayhead = q._hasPause = !1,
                        q.to = function(a, b, c, e) {
                            var f = c.repeat && l.TweenMax || d;
                            return b ? this.add(new f(a,b,c), e) : this.set(a, c, e)
                        }
                        ,
                        q.from = function(a, b, c, e) {
                            return this.add((c.repeat && l.TweenMax || d).from(a, b, c), e)
                        }
                        ,
                        q.fromTo = function(a, b, c, e, f) {
                            var g = e.repeat && l.TweenMax || d;
                            return b ? this.add(g.fromTo(a, b, c, e), f) : this.set(a, e, f)
                        }
                        ,
                        q.staggerTo = function(a, b, c, f, g, i, j, k) {
                            var l, o, q = new e({
                                onComplete: i,
                                onCompleteParams: j,
                                callbackScope: k,
                                smoothChildTiming: this.smoothChildTiming
                            }), r = c.cycle;
                            for ("string" == typeof a && (a = d.selector(a) || a),
                            a = a || [],
                            h(a) && (a = p(a)),
                            f = f || 0,
                            f < 0 && (a = p(a),
                            a.reverse(),
                            f *= -1),
                            o = 0; o < a.length; o++)
                                l = m(c),
                                l.startAt && (l.startAt = m(l.startAt),
                                l.startAt.cycle && n(l.startAt, a, o)),
                                r && (n(l, a, o),
                                null != l.duration && (b = l.duration,
                                delete l.duration)),
                                q.to(a[o], b, l, o * f);
                            return this.add(q, g)
                        }
                        ,
                        q.staggerFrom = function(a, b, c, d, e, f, g, h) {
                            return c.immediateRender = 0 != c.immediateRender,
                            c.runBackwards = !0,
                            this.staggerTo(a, b, c, d, e, f, g, h)
                        }
                        ,
                        q.staggerFromTo = function(a, b, c, d, e, f, g, h, i) {
                            return d.startAt = c,
                            d.immediateRender = 0 != d.immediateRender && 0 != c.immediateRender,
                            this.staggerTo(a, b, d, e, f, g, h, i)
                        }
                        ,
                        q.call = function(a, b, c, e) {
                            return this.add(d.delayedCall(0, a, b, c), e)
                        }
                        ,
                        q.set = function(a, b, c) {
                            return c = this._parseTimeOrLabel(c, 0, !0),
                            null == b.immediateRender && (b.immediateRender = c === this._time && !this._paused),
                            this.add(new d(a,0,b), c)
                        }
                        ,
                        e.exportRoot = function(a, b) {
                            a = a || {},
                            null == a.smoothChildTiming && (a.smoothChildTiming = !0);
                            var c, f, g, h, i = new e(a), j = i._timeline;
                            for (null == b && (b = !0),
                            j._remove(i, !0),
                            i._startTime = 0,
                            i._rawPrevTime = i._time = i._totalTime = j._time,
                            g = j._first; g; )
                                h = g._next,
                                b && g instanceof d && g.target === g.vars.onComplete || (f = g._startTime - g._delay,
                                f < 0 && (c = 1),
                                i.add(g, f)),
                                g = h;
                            return j.add(i, 0),
                            c && i.totalDuration(),
                            i
                        }
                        ,
                        q.add = function(c, f, g, h) {
                            var j, k, l, m, n, o;
                            if ("number" != typeof f && (f = this._parseTimeOrLabel(f, 0, !0, c)),
                            !(c instanceof a)) {
                                if (c instanceof Array || c && c.push && i(c)) {
                                    for (g = g || "normal",
                                    h = h || 0,
                                    j = f,
                                    k = c.length,
                                    l = 0; l < k; l++)
                                        i(m = c[l]) && (m = new e({
                                            tweens: m
                                        })),
                                        this.add(m, j),
                                        "string" != typeof m && "function" != typeof m && ("sequence" === g ? j = m._startTime + m.totalDuration() / m._timeScale : "start" === g && (m._startTime -= m.delay())),
                                        j += h;
                                    return this._uncache(!0)
                                }
                                if ("string" == typeof c)
                                    return this.addLabel(c, f);
                                if ("function" != typeof c)
                                    throw "Cannot add " + c + " into the timeline; it is not a tween, timeline, function, or string.";
                                c = d.delayedCall(0, c)
                            }
                            if (b.prototype.add.call(this, c, f),
                            c._time && c.render((this.rawTime() - c._startTime) * c._timeScale, !1, !1),
                            (this._gc || this._time === this._duration) && !this._paused && this._duration < this.duration())
                                for (n = this,
                                o = n.rawTime() > c._startTime; n._timeline; )
                                    o && n._timeline.smoothChildTiming ? n.totalTime(n._totalTime, !0) : n._gc && n._enabled(!0, !1),
                                    n = n._timeline;
                            return this
                        }
                        ,
                        q.remove = function(b) {
                            if (b instanceof a) {
                                this._remove(b, !1);
                                var c = b._timeline = b.vars.useFrames ? a._rootFramesTimeline : a._rootTimeline;
                                return b._startTime = (b._paused ? b._pauseTime : c._time) - (b._reversed ? b.totalDuration() - b._totalTime : b._totalTime) / b._timeScale,
                                this
                            }
                            if (b instanceof Array || b && b.push && i(b)) {
                                for (var d = b.length; --d > -1; )
                                    this.remove(b[d]);
                                return this
                            }
                            return "string" == typeof b ? this.removeLabel(b) : this.kill(null, b)
                        }
                        ,
                        q._remove = function(a, c) {
                            return b.prototype._remove.call(this, a, c),
                            this._last ? this._time > this.duration() && (this._time = this._duration,
                            this._totalTime = this._totalDuration) : this._time = this._totalTime = this._duration = this._totalDuration = 0,
                            this
                        }
                        ,
                        q.append = function(a, b) {
                            return this.add(a, this._parseTimeOrLabel(null, b, !0, a))
                        }
                        ,
                        q.insert = q.insertMultiple = function(a, b, c, d) {
                            return this.add(a, b || 0, c, d)
                        }
                        ,
                        q.appendMultiple = function(a, b, c, d) {
                            return this.add(a, this._parseTimeOrLabel(null, b, !0, a), c, d)
                        }
                        ,
                        q.addLabel = function(a, b) {
                            return this._labels[a] = this._parseTimeOrLabel(b),
                            this
                        }
                        ,
                        q.addPause = function(a, b, c, e) {
                            var f = d.delayedCall(0, o, c, e || this);
                            return f.vars.onComplete = f.vars.onReverseComplete = b,
                            f.data = "isPause",
                            this._hasPause = !0,
                            this.add(f, a)
                        }
                        ,
                        q.removeLabel = function(a) {
                            return delete this._labels[a],
                            this
                        }
                        ,
                        q.getLabelTime = function(a) {
                            return null != this._labels[a] ? this._labels[a] : -1
                        }
                        ,
                        q._parseTimeOrLabel = function(b, c, d, e) {
                            var f, g;
                            if (e instanceof a && e.timeline === this)
                                this.remove(e);
                            else if (e && (e instanceof Array || e.push && i(e)))
                                for (g = e.length; --g > -1; )
                                    e[g]instanceof a && e[g].timeline === this && this.remove(e[g]);
                            if (f = "number" != typeof b || c ? this.duration() > 99999999999 ? this.recent().endTime(!1) : this._duration : 0,
                            "string" == typeof c)
                                return this._parseTimeOrLabel(c, d && "number" == typeof b && null == this._labels[c] ? b - f : 0, d);
                            if (c = c || 0,
                            "string" != typeof b || !isNaN(b) && null == this._labels[b])
                                null == b && (b = f);
                            else {
                                if (-1 === (g = b.indexOf("=")))
                                    return null == this._labels[b] ? d ? this._labels[b] = f + c : c : this._labels[b] + c;
                                c = parseInt(b.charAt(g - 1) + "1", 10) * Number(b.substr(g + 1)),
                                b = g > 1 ? this._parseTimeOrLabel(b.substr(0, g - 1), 0, d) : f
                            }
                            return Number(b) + c
                        }
                        ,
                        q.seek = function(a, b) {
                            return this.totalTime("number" == typeof a ? a : this._parseTimeOrLabel(a), !1 !== b)
                        }
                        ,
                        q.stop = function() {
                            return this.paused(!0)
                        }
                        ,
                        q.gotoAndPlay = function(a, b) {
                            return this.play(a, b)
                        }
                        ,
                        q.gotoAndStop = function(a, b) {
                            return this.pause(a, b)
                        }
                        ,
                        q.render = function(a, b, c) {
                            this._gc && this._enabled(!0, !1);
                            var d, e, f, g, h, i, l, m = this._time, n = this._dirty ? this.totalDuration() : this._totalDuration, o = this._startTime, p = this._timeScale, q = this._paused;
                            if (m !== this._time && (a += this._time - m),
                            a >= n - 1e-7 && a >= 0)
                                this._totalTime = this._time = n,
                                this._reversed || this._hasPausedChild() || (e = !0,
                                g = "onComplete",
                                h = !!this._timeline.autoRemoveChildren,
                                0 === this._duration && (a <= 0 && a >= -1e-7 || this._rawPrevTime < 0 || 1e-10 === this._rawPrevTime) && this._rawPrevTime !== a && this._first && (h = !0,
                                this._rawPrevTime > 1e-10 && (g = "onReverseComplete"))),
                                this._rawPrevTime = this._duration || !b || a || this._rawPrevTime === a ? a : 1e-10,
                                a = n + 1e-4;
                            else if (a < 1e-7)
                                if (this._totalTime = this._time = 0,
                                (0 !== m || 0 === this._duration && 1e-10 !== this._rawPrevTime && (this._rawPrevTime > 0 || a < 0 && this._rawPrevTime >= 0)) && (g = "onReverseComplete",
                                e = this._reversed),
                                a < 0)
                                    this._active = !1,
                                    this._timeline.autoRemoveChildren && this._reversed ? (h = e = !0,
                                    g = "onReverseComplete") : this._rawPrevTime >= 0 && this._first && (h = !0),
                                    this._rawPrevTime = a;
                                else {
                                    if (this._rawPrevTime = this._duration || !b || a || this._rawPrevTime === a ? a : 1e-10,
                                    0 === a && e)
                                        for (d = this._first; d && 0 === d._startTime; )
                                            d._duration || (e = !1),
                                            d = d._next;
                                    a = 0,
                                    this._initted || (h = !0)
                                }
                            else {
                                if (this._hasPause && !this._forcingPlayhead && !b) {
                                    if (a >= m)
                                        for (d = this._first; d && d._startTime <= a && !i; )
                                            d._duration || "isPause" !== d.data || d.ratio || 0 === d._startTime && 0 === this._rawPrevTime || (i = d),
                                            d = d._next;
                                    else
                                        for (d = this._last; d && d._startTime >= a && !i; )
                                            d._duration || "isPause" === d.data && d._rawPrevTime > 0 && (i = d),
                                            d = d._prev;
                                    i && (this._time = a = i._startTime,
                                    this._totalTime = a + this._cycle * (this._totalDuration + this._repeatDelay))
                                }
                                this._totalTime = this._time = this._rawPrevTime = a
                            }
                            if (this._time !== m && this._first || c || h || i) {
                                if (this._initted || (this._initted = !0),
                                this._active || !this._paused && this._time !== m && a > 0 && (this._active = !0),
                                0 === m && this.vars.onStart && (0 === this._time && this._duration || b || this._callback("onStart")),
                                (l = this._time) >= m)
                                    for (d = this._first; d && (f = d._next,
                                    l === this._time && (!this._paused || q)); )
                                        (d._active || d._startTime <= l && !d._paused && !d._gc) && (i === d && this.pause(),
                                        d._reversed ? d.render((d._dirty ? d.totalDuration() : d._totalDuration) - (a - d._startTime) * d._timeScale, b, c) : d.render((a - d._startTime) * d._timeScale, b, c)),
                                        d = f;
                                else
                                    for (d = this._last; d && (f = d._prev,
                                    l === this._time && (!this._paused || q)); ) {
                                        if (d._active || d._startTime <= m && !d._paused && !d._gc) {
                                            if (i === d) {
                                                for (i = d._prev; i && i.endTime() > this._time; )
                                                    i.render(i._reversed ? i.totalDuration() - (a - i._startTime) * i._timeScale : (a - i._startTime) * i._timeScale, b, c),
                                                    i = i._prev;
                                                i = null,
                                                this.pause()
                                            }
                                            d._reversed ? d.render((d._dirty ? d.totalDuration() : d._totalDuration) - (a - d._startTime) * d._timeScale, b, c) : d.render((a - d._startTime) * d._timeScale, b, c)
                                        }
                                        d = f
                                    }
                                this._onUpdate && (b || (j.length && k(),
                                this._callback("onUpdate"))),
                                g && (this._gc || o !== this._startTime && p === this._timeScale || (0 === this._time || n >= this.totalDuration()) && (e && (j.length && k(),
                                this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                                this._active = !1),
                                !b && this.vars[g] && this._callback(g)))
                            }
                        }
                        ,
                        q._hasPausedChild = function() {
                            for (var a = this._first; a; ) {
                                if (a._paused || a instanceof e && a._hasPausedChild())
                                    return !0;
                                a = a._next
                            }
                            return !1
                        }
                        ,
                        q.getChildren = function(a, b, c, e) {
                            e = e || -9999999999;
                            for (var f = [], g = this._first, h = 0; g; )
                                g._startTime < e || (g instanceof d ? !1 !== b && (f[h++] = g) : (!1 !== c && (f[h++] = g),
                                !1 !== a && (f = f.concat(g.getChildren(!0, b, c)),
                                h = f.length))),
                                g = g._next;
                            return f
                        }
                        ,
                        q.getTweensOf = function(a, b) {
                            var c, e, f = this._gc, g = [], h = 0;
                            for (f && this._enabled(!0, !0),
                            c = d.getTweensOf(a),
                            e = c.length; --e > -1; )
                                (c[e].timeline === this || b && this._contains(c[e])) && (g[h++] = c[e]);
                            return f && this._enabled(!1, !0),
                            g
                        }
                        ,
                        q.recent = function() {
                            return this._recent
                        }
                        ,
                        q._contains = function(a) {
                            for (var b = a.timeline; b; ) {
                                if (b === this)
                                    return !0;
                                b = b.timeline
                            }
                            return !1
                        }
                        ,
                        q.shiftChildren = function(a, b, c) {
                            c = c || 0;
                            for (var d, e = this._first, f = this._labels; e; )
                                e._startTime >= c && (e._startTime += a),
                                e = e._next;
                            if (b)
                                for (d in f)
                                    f[d] >= c && (f[d] += a);
                            return this._uncache(!0)
                        }
                        ,
                        q._kill = function(a, b) {
                            if (!a && !b)
                                return this._enabled(!1, !1);
                            for (var c = b ? this.getTweensOf(b) : this.getChildren(!0, !0, !1), d = c.length, e = !1; --d > -1; )
                                c[d]._kill(a, b) && (e = !0);
                            return e
                        }
                        ,
                        q.clear = function(a) {
                            var b = this.getChildren(!1, !0, !0)
                              , c = b.length;
                            for (this._time = this._totalTime = 0; --c > -1; )
                                b[c]._enabled(!1, !1);
                            return !1 !== a && (this._labels = {}),
                            this._uncache(!0)
                        }
                        ,
                        q.invalidate = function() {
                            for (var b = this._first; b; )
                                b.invalidate(),
                                b = b._next;
                            return a.prototype.invalidate.call(this)
                        }
                        ,
                        q._enabled = function(a, c) {
                            if (a === this._gc)
                                for (var d = this._first; d; )
                                    d._enabled(a, !0),
                                    d = d._next;
                            return b.prototype._enabled.call(this, a, c)
                        }
                        ,
                        q.totalTime = function(b, c, d) {
                            this._forcingPlayhead = !0;
                            var e = a.prototype.totalTime.apply(this, arguments);
                            return this._forcingPlayhead = !1,
                            e
                        }
                        ,
                        q.duration = function(a) {
                            return arguments.length ? (0 !== this.duration() && 0 !== a && this.timeScale(this._duration / a),
                            this) : (this._dirty && this.totalDuration(),
                            this._duration)
                        }
                        ,
                        q.totalDuration = function(a) {
                            if (!arguments.length) {
                                if (this._dirty) {
                                    for (var b, c, d = 0, e = this._last, f = 999999999999; e; )
                                        b = e._prev,
                                        e._dirty && e.totalDuration(),
                                        e._startTime > f && this._sortChildren && !e._paused && !this._calculatingDuration ? (this._calculatingDuration = 1,
                                        this.add(e, e._startTime - e._delay),
                                        this._calculatingDuration = 0) : f = e._startTime,
                                        e._startTime < 0 && !e._paused && (d -= e._startTime,
                                        this._timeline.smoothChildTiming && (this._startTime += e._startTime / this._timeScale,
                                        this._time -= e._startTime,
                                        this._totalTime -= e._startTime,
                                        this._rawPrevTime -= e._startTime),
                                        this.shiftChildren(-e._startTime, !1, -9999999999),
                                        f = 0),
                                        c = e._startTime + e._totalDuration / e._timeScale,
                                        c > d && (d = c),
                                        e = b;
                                    this._duration = this._totalDuration = d,
                                    this._dirty = !1
                                }
                                return this._totalDuration
                            }
                            return a && this.totalDuration() ? this.timeScale(this._totalDuration / a) : this
                        }
                        ,
                        q.paused = function(b) {
                            if (!b)
                                for (var c = this._first, d = this._time; c; )
                                    c._startTime === d && "isPause" === c.data && (c._rawPrevTime = 0),
                                    c = c._next;
                            return a.prototype.paused.apply(this, arguments)
                        }
                        ,
                        q.usesFrames = function() {
                            for (var b = this._timeline; b._timeline; )
                                b = b._timeline;
                            return b === a._rootFramesTimeline
                        }
                        ,
                        q.rawTime = function(a) {
                            return a && (this._paused || this._repeat && this.time() > 0 && this.totalProgress() < 1) ? this._totalTime % (this._duration + this._repeatDelay) : this._paused ? this._totalTime : (this._timeline.rawTime(a) - this._startTime) * this._timeScale
                        }
                        ,
                        e
                    }, !0),
                    c._gsDefine("TimelineMax", ["TimelineLite", "TweenLite", "easing.Ease"], function(a, b, d) {
                        var e = function(b) {
                            a.call(this, b),
                            this._repeat = this.vars.repeat || 0,
                            this._repeatDelay = this.vars.repeatDelay || 0,
                            this._cycle = 0,
                            this._yoyo = !0 === this.vars.yoyo,
                            this._dirty = !0
                        }
                          , f = b._internals
                          , g = f.lazyTweens
                          , h = f.lazyRender
                          , i = c._gsDefine.globals
                          , j = new d(null,null,1,0)
                          , k = e.prototype = new a;
                        return k.constructor = e,
                        k.kill()._gc = !1,
                        e.version = "1.20.4",
                        k.invalidate = function() {
                            return this._yoyo = !0 === this.vars.yoyo,
                            this._repeat = this.vars.repeat || 0,
                            this._repeatDelay = this.vars.repeatDelay || 0,
                            this._uncache(!0),
                            a.prototype.invalidate.call(this)
                        }
                        ,
                        k.addCallback = function(a, c, d, e) {
                            return this.add(b.delayedCall(0, a, d, e), c)
                        }
                        ,
                        k.removeCallback = function(a, b) {
                            if (a)
                                if (null == b)
                                    this._kill(null, a);
                                else
                                    for (var c = this.getTweensOf(a, !1), d = c.length, e = this._parseTimeOrLabel(b); --d > -1; )
                                        c[d]._startTime === e && c[d]._enabled(!1, !1);
                            return this
                        }
                        ,
                        k.removePause = function(b) {
                            return this.removeCallback(a._internals.pauseCallback, b)
                        }
                        ,
                        k.tweenTo = function(a, c) {
                            c = c || {};
                            var d, e, f, g = {
                                ease: j,
                                useFrames: this.usesFrames(),
                                immediateRender: !1,
                                lazy: !1
                            }, h = c.repeat && i.TweenMax || b;
                            for (e in c)
                                g[e] = c[e];
                            return g.time = this._parseTimeOrLabel(a),
                            d = Math.abs(Number(g.time) - this._time) / this._timeScale || .001,
                            f = new h(this,d,g),
                            g.onStart = function() {
                                f.target.paused(!0),
                                f.vars.time === f.target.time() || d !== f.duration() || f.isFromTo || f.duration(Math.abs(f.vars.time - f.target.time()) / f.target._timeScale).render(f.time(), !0, !0),
                                c.onStart && c.onStart.apply(c.onStartScope || c.callbackScope || f, c.onStartParams || [])
                            }
                            ,
                            f
                        }
                        ,
                        k.tweenFromTo = function(a, b, c) {
                            c = c || {},
                            a = this._parseTimeOrLabel(a),
                            c.startAt = {
                                onComplete: this.seek,
                                onCompleteParams: [a],
                                callbackScope: this
                            },
                            c.immediateRender = !1 !== c.immediateRender;
                            var d = this.tweenTo(b, c);
                            return d.isFromTo = 1,
                            d.duration(Math.abs(d.vars.time - a) / this._timeScale || .001)
                        }
                        ,
                        k.render = function(a, b, c) {
                            this._gc && this._enabled(!0, !1);
                            var d, e, f, i, j, k, l, m, n = this._time, o = this._dirty ? this.totalDuration() : this._totalDuration, p = this._duration, q = this._totalTime, r = this._startTime, s = this._timeScale, t = this._rawPrevTime, u = this._paused, v = this._cycle;
                            if (n !== this._time && (a += this._time - n),
                            a >= o - 1e-7 && a >= 0)
                                this._locked || (this._totalTime = o,
                                this._cycle = this._repeat),
                                this._reversed || this._hasPausedChild() || (e = !0,
                                i = "onComplete",
                                j = !!this._timeline.autoRemoveChildren,
                                0 === this._duration && (a <= 0 && a >= -1e-7 || t < 0 || 1e-10 === t) && t !== a && this._first && (j = !0,
                                t > 1e-10 && (i = "onReverseComplete"))),
                                this._rawPrevTime = this._duration || !b || a || this._rawPrevTime === a ? a : 1e-10,
                                this._yoyo && 0 != (1 & this._cycle) ? this._time = a = 0 : (this._time = p,
                                a = p + 1e-4);
                            else if (a < 1e-7)
                                if (this._locked || (this._totalTime = this._cycle = 0),
                                this._time = 0,
                                (0 !== n || 0 === p && 1e-10 !== t && (t > 0 || a < 0 && t >= 0) && !this._locked) && (i = "onReverseComplete",
                                e = this._reversed),
                                a < 0)
                                    this._active = !1,
                                    this._timeline.autoRemoveChildren && this._reversed ? (j = e = !0,
                                    i = "onReverseComplete") : t >= 0 && this._first && (j = !0),
                                    this._rawPrevTime = a;
                                else {
                                    if (this._rawPrevTime = p || !b || a || this._rawPrevTime === a ? a : 1e-10,
                                    0 === a && e)
                                        for (d = this._first; d && 0 === d._startTime; )
                                            d._duration || (e = !1),
                                            d = d._next;
                                    a = 0,
                                    this._initted || (j = !0)
                                }
                            else if (0 === p && t < 0 && (j = !0),
                            this._time = this._rawPrevTime = a,
                            this._locked || (this._totalTime = a,
                            0 !== this._repeat && (k = p + this._repeatDelay,
                            this._cycle = this._totalTime / k >> 0,
                            0 !== this._cycle && this._cycle === this._totalTime / k && q <= a && this._cycle--,
                            this._time = this._totalTime - this._cycle * k,
                            this._yoyo && 0 != (1 & this._cycle) && (this._time = p - this._time),
                            this._time > p ? (this._time = p,
                            a = p + 1e-4) : this._time < 0 ? this._time = a = 0 : a = this._time)),
                            this._hasPause && !this._forcingPlayhead && !b) {
                                if ((a = this._time) >= n || this._repeat && v !== this._cycle)
                                    for (d = this._first; d && d._startTime <= a && !l; )
                                        d._duration || "isPause" !== d.data || d.ratio || 0 === d._startTime && 0 === this._rawPrevTime || (l = d),
                                        d = d._next;
                                else
                                    for (d = this._last; d && d._startTime >= a && !l; )
                                        d._duration || "isPause" === d.data && d._rawPrevTime > 0 && (l = d),
                                        d = d._prev;
                                l && l._startTime < p && (this._time = a = l._startTime,
                                this._totalTime = a + this._cycle * (this._totalDuration + this._repeatDelay))
                            }
                            if (this._cycle !== v && !this._locked) {
                                var w = this._yoyo && 0 != (1 & v)
                                  , x = w === (this._yoyo && 0 != (1 & this._cycle))
                                  , y = this._totalTime
                                  , z = this._cycle
                                  , A = this._rawPrevTime
                                  , B = this._time;
                                if (this._totalTime = v * p,
                                this._cycle < v ? w = !w : this._totalTime += p,
                                this._time = n,
                                this._rawPrevTime = 0 === p ? t - 1e-4 : t,
                                this._cycle = v,
                                this._locked = !0,
                                n = w ? 0 : p,
                                this.render(n, b, 0 === p),
                                b || this._gc || this.vars.onRepeat && (this._cycle = z,
                                this._locked = !1,
                                this._callback("onRepeat")),
                                n !== this._time)
                                    return;
                                if (x && (this._cycle = v,
                                this._locked = !0,
                                n = w ? p + 1e-4 : -1e-4,
                                this.render(n, !0, !1)),
                                this._locked = !1,
                                this._paused && !u)
                                    return;
                                this._time = B,
                                this._totalTime = y,
                                this._cycle = z,
                                this._rawPrevTime = A
                            }
                            if (!(this._time !== n && this._first || c || j || l))
                                return void (q !== this._totalTime && this._onUpdate && (b || this._callback("onUpdate")));
                            if (this._initted || (this._initted = !0),
                            this._active || !this._paused && this._totalTime !== q && a > 0 && (this._active = !0),
                            0 === q && this.vars.onStart && (0 === this._totalTime && this._totalDuration || b || this._callback("onStart")),
                            (m = this._time) >= n)
                                for (d = this._first; d && (f = d._next,
                                m === this._time && (!this._paused || u)); )
                                    (d._active || d._startTime <= this._time && !d._paused && !d._gc) && (l === d && this.pause(),
                                    d._reversed ? d.render((d._dirty ? d.totalDuration() : d._totalDuration) - (a - d._startTime) * d._timeScale, b, c) : d.render((a - d._startTime) * d._timeScale, b, c)),
                                    d = f;
                            else
                                for (d = this._last; d && (f = d._prev,
                                m === this._time && (!this._paused || u)); ) {
                                    if (d._active || d._startTime <= n && !d._paused && !d._gc) {
                                        if (l === d) {
                                            for (l = d._prev; l && l.endTime() > this._time; )
                                                l.render(l._reversed ? l.totalDuration() - (a - l._startTime) * l._timeScale : (a - l._startTime) * l._timeScale, b, c),
                                                l = l._prev;
                                            l = null,
                                            this.pause()
                                        }
                                        d._reversed ? d.render((d._dirty ? d.totalDuration() : d._totalDuration) - (a - d._startTime) * d._timeScale, b, c) : d.render((a - d._startTime) * d._timeScale, b, c)
                                    }
                                    d = f
                                }
                            this._onUpdate && (b || (g.length && h(),
                            this._callback("onUpdate"))),
                            i && (this._locked || this._gc || r !== this._startTime && s === this._timeScale || (0 === this._time || o >= this.totalDuration()) && (e && (g.length && h(),
                            this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                            this._active = !1),
                            !b && this.vars[i] && this._callback(i)))
                        }
                        ,
                        k.getActive = function(a, b, c) {
                            null == a && (a = !0),
                            null == b && (b = !0),
                            null == c && (c = !1);
                            var d, e, f = [], g = this.getChildren(a, b, c), h = 0, i = g.length;
                            for (d = 0; d < i; d++)
                                e = g[d],
                                e.isActive() && (f[h++] = e);
                            return f
                        }
                        ,
                        k.getLabelAfter = function(a) {
                            a || 0 !== a && (a = this._time);
                            var b, c = this.getLabelsArray(), d = c.length;
                            for (b = 0; b < d; b++)
                                if (c[b].time > a)
                                    return c[b].name;
                            return null
                        }
                        ,
                        k.getLabelBefore = function(a) {
                            null == a && (a = this._time);
                            for (var b = this.getLabelsArray(), c = b.length; --c > -1; )
                                if (b[c].time < a)
                                    return b[c].name;
                            return null
                        }
                        ,
                        k.getLabelsArray = function() {
                            var a, b = [], c = 0;
                            for (a in this._labels)
                                b[c++] = {
                                    time: this._labels[a],
                                    name: a
                                };
                            return b.sort(function(a, b) {
                                return a.time - b.time
                            }),
                            b
                        }
                        ,
                        k.invalidate = function() {
                            return this._locked = !1,
                            a.prototype.invalidate.call(this)
                        }
                        ,
                        k.progress = function(a, b) {
                            return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 != (1 & this._cycle) ? 1 - a : a) + this._cycle * (this._duration + this._repeatDelay), b) : this._time / this.duration() || 0
                        }
                        ,
                        k.totalProgress = function(a, b) {
                            return arguments.length ? this.totalTime(this.totalDuration() * a, b) : this._totalTime / this.totalDuration() || 0
                        }
                        ,
                        k.totalDuration = function(b) {
                            return arguments.length ? -1 !== this._repeat && b ? this.timeScale(this.totalDuration() / b) : this : (this._dirty && (a.prototype.totalDuration.call(this),
                            this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat),
                            this._totalDuration)
                        }
                        ,
                        k.time = function(a, b) {
                            return arguments.length ? (this._dirty && this.totalDuration(),
                            a > this._duration && (a = this._duration),
                            this._yoyo && 0 != (1 & this._cycle) ? a = this._duration - a + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (a += this._cycle * (this._duration + this._repeatDelay)),
                            this.totalTime(a, b)) : this._time
                        }
                        ,
                        k.repeat = function(a) {
                            return arguments.length ? (this._repeat = a,
                            this._uncache(!0)) : this._repeat
                        }
                        ,
                        k.repeatDelay = function(a) {
                            return arguments.length ? (this._repeatDelay = a,
                            this._uncache(!0)) : this._repeatDelay
                        }
                        ,
                        k.yoyo = function(a) {
                            return arguments.length ? (this._yoyo = a,
                            this) : this._yoyo
                        }
                        ,
                        k.currentLabel = function(a) {
                            return arguments.length ? this.seek(a, !0) : this.getLabelBefore(this._time + 1e-8)
                        }
                        ,
                        e
                    }, !0),
                    function() {
                        var a = 180 / Math.PI
                          , b = []
                          , d = []
                          , e = []
                          , f = {}
                          , g = c._gsDefine.globals
                          , h = function(a, b, c, d) {
                            c === d && (c = d - (d - b) / 1e6),
                            a === b && (b = a + (c - a) / 1e6),
                            this.a = a,
                            this.b = b,
                            this.c = c,
                            this.d = d,
                            this.da = d - a,
                            this.ca = c - a,
                            this.ba = b - a
                        }
                          , i = function(a, b, c, d) {
                            var e = {
                                a: a
                            }
                              , f = {}
                              , g = {}
                              , h = {
                                c: d
                            }
                              , i = (a + b) / 2
                              , j = (b + c) / 2
                              , k = (c + d) / 2
                              , l = (i + j) / 2
                              , m = (j + k) / 2
                              , n = (m - l) / 8;
                            return e.b = i + (a - i) / 4,
                            f.b = l + n,
                            e.c = f.a = (e.b + f.b) / 2,
                            f.c = g.a = (l + m) / 2,
                            g.b = m - n,
                            h.b = k + (d - k) / 4,
                            g.c = h.a = (g.b + h.b) / 2,
                            [e, f, g, h]
                        }
                          , j = function(a, c, f, g, h) {
                            var j, k, l, m, n, o, p, q, r, s, t, u, v, w = a.length - 1, x = 0, y = a[0].a;
                            for (j = 0; j < w; j++)
                                n = a[x],
                                k = n.a,
                                l = n.d,
                                m = a[x + 1].d,
                                h ? (t = b[j],
                                u = d[j],
                                v = (u + t) * c * .25 / (g ? .5 : e[j] || .5),
                                o = l - (l - k) * (g ? .5 * c : 0 !== t ? v / t : 0),
                                p = l + (m - l) * (g ? .5 * c : 0 !== u ? v / u : 0),
                                q = l - (o + ((p - o) * (3 * t / (t + u) + .5) / 4 || 0))) : (o = l - (l - k) * c * .5,
                                p = l + (m - l) * c * .5,
                                q = l - (o + p) / 2),
                                o += q,
                                p += q,
                                n.c = r = o,
                                n.b = 0 !== j ? y : y = n.a + .6 * (n.c - n.a),
                                n.da = l - k,
                                n.ca = r - k,
                                n.ba = y - k,
                                f ? (s = i(k, y, r, l),
                                a.splice(x, 1, s[0], s[1], s[2], s[3]),
                                x += 4) : x++,
                                y = p;
                            n = a[x],
                            n.b = y,
                            n.c = y + .4 * (n.d - y),
                            n.da = n.d - n.a,
                            n.ca = n.c - n.a,
                            n.ba = y - n.a,
                            f && (s = i(n.a, y, n.c, n.d),
                            a.splice(x, 1, s[0], s[1], s[2], s[3]))
                        }
                          , k = function(a, c, e, f) {
                            var g, i, j, k, l, m, n = [];
                            if (f)
                                for (a = [f].concat(a),
                                i = a.length; --i > -1; )
                                    "string" == typeof (m = a[i][c]) && "=" === m.charAt(1) && (a[i][c] = f[c] + Number(m.charAt(0) + m.substr(2)));
                            if ((g = a.length - 2) < 0)
                                return n[0] = new h(a[0][c],0,0,a[0][c]),
                                n;
                            for (i = 0; i < g; i++)
                                j = a[i][c],
                                k = a[i + 1][c],
                                n[i] = new h(j,0,0,k),
                                e && (l = a[i + 2][c],
                                b[i] = (b[i] || 0) + (k - j) * (k - j),
                                d[i] = (d[i] || 0) + (l - k) * (l - k));
                            return n[i] = new h(a[i][c],0,0,a[i + 1][c]),
                            n
                        }
                          , l = function(a, c, g, h, i, l) {
                            var m, n, o, p, q, r, s, t, u = {}, v = [], w = l || a[0];
                            i = "string" == typeof i ? "," + i + "," : ",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,",
                            null == c && (c = 1);
                            for (n in a[0])
                                v.push(n);
                            if (a.length > 1) {
                                for (t = a[a.length - 1],
                                s = !0,
                                m = v.length; --m > -1; )
                                    if (n = v[m],
                                    Math.abs(w[n] - t[n]) > .05) {
                                        s = !1;
                                        break
                                    }
                                s && (a = a.concat(),
                                l && a.unshift(l),
                                a.push(a[1]),
                                l = a[a.length - 3])
                            }
                            for (b.length = d.length = e.length = 0,
                            m = v.length; --m > -1; )
                                n = v[m],
                                f[n] = -1 !== i.indexOf("," + n + ","),
                                u[n] = k(a, n, f[n], l);
                            for (m = b.length; --m > -1; )
                                b[m] = Math.sqrt(b[m]),
                                d[m] = Math.sqrt(d[m]);
                            if (!h) {
                                for (m = v.length; --m > -1; )
                                    if (f[n])
                                        for (o = u[v[m]],
                                        r = o.length - 1,
                                        p = 0; p < r; p++)
                                            q = o[p + 1].da / d[p] + o[p].da / b[p] || 0,
                                            e[p] = (e[p] || 0) + q * q;
                                for (m = e.length; --m > -1; )
                                    e[m] = Math.sqrt(e[m])
                            }
                            for (m = v.length,
                            p = g ? 4 : 1; --m > -1; )
                                n = v[m],
                                o = u[n],
                                j(o, c, g, h, f[n]),
                                s && (o.splice(0, p),
                                o.splice(o.length - p, p));
                            return u
                        }
                          , m = function(a, b, c) {
                            b = b || "soft";
                            var d, e, f, g, i, j, k, l, m, n, o, p = {}, q = "cubic" === b ? 3 : 2, r = "soft" === b, s = [];
                            if (r && c && (a = [c].concat(a)),
                            null == a || a.length < q + 1)
                                throw "invalid Bezier data";
                            for (m in a[0])
                                s.push(m);
                            for (j = s.length; --j > -1; ) {
                                for (m = s[j],
                                p[m] = i = [],
                                n = 0,
                                l = a.length,
                                k = 0; k < l; k++)
                                    d = null == c ? a[k][m] : "string" == typeof (o = a[k][m]) && "=" === o.charAt(1) ? c[m] + Number(o.charAt(0) + o.substr(2)) : Number(o),
                                    r && k > 1 && k < l - 1 && (i[n++] = (d + i[n - 2]) / 2),
                                    i[n++] = d;
                                for (l = n - q + 1,
                                n = 0,
                                k = 0; k < l; k += q)
                                    d = i[k],
                                    e = i[k + 1],
                                    f = i[k + 2],
                                    g = 2 === q ? 0 : i[k + 3],
                                    i[n++] = o = 3 === q ? new h(d,e,f,g) : new h(d,(2 * e + d) / 3,(2 * e + f) / 3,f);
                                i.length = n
                            }
                            return p
                        }
                          , n = function(a, b, c) {
                            for (var d, e, f, g, h, i, j, k, l, m, n, o = 1 / c, p = a.length; --p > -1; )
                                for (m = a[p],
                                f = m.a,
                                g = m.d - f,
                                h = m.c - f,
                                i = m.b - f,
                                d = e = 0,
                                k = 1; k <= c; k++)
                                    j = o * k,
                                    l = 1 - j,
                                    d = e - (e = (j * j * g + 3 * l * (j * h + l * i)) * j),
                                    n = p * c + k - 1,
                                    b[n] = (b[n] || 0) + d * d
                        }
                          , o = function(a, b) {
                            b = b >> 0 || 6;
                            var c, d, e, f, g = [], h = [], i = 0, j = 0, k = b - 1, l = [], m = [];
                            for (c in a)
                                n(a[c], g, b);
                            for (e = g.length,
                            d = 0; d < e; d++)
                                i += Math.sqrt(g[d]),
                                f = d % b,
                                m[f] = i,
                                f === k && (j += i,
                                f = d / b >> 0,
                                l[f] = m,
                                h[f] = j,
                                i = 0,
                                m = []);
                            return {
                                length: j,
                                lengths: h,
                                segments: l
                            }
                        }
                          , p = c._gsDefine.plugin({
                            propName: "bezier",
                            priority: -1,
                            version: "1.3.8",
                            API: 2,
                            global: !0,
                            init: function(a, b, c) {
                                this._target = a,
                                b instanceof Array && (b = {
                                    values: b
                                }),
                                this._func = {},
                                this._mod = {},
                                this._props = [],
                                this._timeRes = null == b.timeResolution ? 6 : parseInt(b.timeResolution, 10);
                                var d, e, f, g, h, i = b.values || [], j = {}, k = i[0], n = b.autoRotate || c.vars.orientToBezier;
                                this._autoRotate = n ? n instanceof Array ? n : [["x", "y", "rotation", !0 === n ? 0 : Number(n) || 0]] : null;
                                for (d in k)
                                    this._props.push(d);
                                for (f = this._props.length; --f > -1; )
                                    d = this._props[f],
                                    this._overwriteProps.push(d),
                                    e = this._func[d] = "function" == typeof a[d],
                                    j[d] = e ? a[d.indexOf("set") || "function" != typeof a["get" + d.substr(3)] ? d : "get" + d.substr(3)]() : parseFloat(a[d]),
                                    h || j[d] !== i[0][d] && (h = j);
                                if (this._beziers = "cubic" !== b.type && "quadratic" !== b.type && "soft" !== b.type ? l(i, isNaN(b.curviness) ? 1 : b.curviness, !1, "thruBasic" === b.type, b.correlate, h) : m(i, b.type, j),
                                this._segCount = this._beziers[d].length,
                                this._timeRes) {
                                    var p = o(this._beziers, this._timeRes);
                                    this._length = p.length,
                                    this._lengths = p.lengths,
                                    this._segments = p.segments,
                                    this._l1 = this._li = this._s1 = this._si = 0,
                                    this._l2 = this._lengths[0],
                                    this._curSeg = this._segments[0],
                                    this._s2 = this._curSeg[0],
                                    this._prec = 1 / this._curSeg.length
                                }
                                if (n = this._autoRotate)
                                    for (this._initialRotations = [],
                                    n[0]instanceof Array || (this._autoRotate = n = [n]),
                                    f = n.length; --f > -1; ) {
                                        for (g = 0; g < 3; g++)
                                            d = n[f][g],
                                            this._func[d] = "function" == typeof a[d] && a[d.indexOf("set") || "function" != typeof a["get" + d.substr(3)] ? d : "get" + d.substr(3)];
                                        d = n[f][2],
                                        this._initialRotations[f] = (this._func[d] ? this._func[d].call(this._target) : this._target[d]) || 0,
                                        this._overwriteProps.push(d)
                                    }
                                return this._startRatio = c.vars.runBackwards ? 1 : 0,
                                !0
                            },
                            set: function(b) {
                                var c, d, e, f, g, h, i, j, k, l, m = this._segCount, n = this._func, o = this._target, p = b !== this._startRatio;
                                if (this._timeRes) {
                                    if (k = this._lengths,
                                    l = this._curSeg,
                                    b *= this._length,
                                    e = this._li,
                                    b > this._l2 && e < m - 1) {
                                        for (j = m - 1; e < j && (this._l2 = k[++e]) <= b; )
                                            ;
                                        this._l1 = k[e - 1],
                                        this._li = e,
                                        this._curSeg = l = this._segments[e],
                                        this._s2 = l[this._s1 = this._si = 0]
                                    } else if (b < this._l1 && e > 0) {
                                        for (; e > 0 && (this._l1 = k[--e]) >= b; )
                                            ;
                                        0 === e && b < this._l1 ? this._l1 = 0 : e++,
                                        this._l2 = k[e],
                                        this._li = e,
                                        this._curSeg = l = this._segments[e],
                                        this._s1 = l[(this._si = l.length - 1) - 1] || 0,
                                        this._s2 = l[this._si]
                                    }
                                    if (c = e,
                                    b -= this._l1,
                                    e = this._si,
                                    b > this._s2 && e < l.length - 1) {
                                        for (j = l.length - 1; e < j && (this._s2 = l[++e]) <= b; )
                                            ;
                                        this._s1 = l[e - 1],
                                        this._si = e
                                    } else if (b < this._s1 && e > 0) {
                                        for (; e > 0 && (this._s1 = l[--e]) >= b; )
                                            ;
                                        0 === e && b < this._s1 ? this._s1 = 0 : e++,
                                        this._s2 = l[e],
                                        this._si = e
                                    }
                                    h = (e + (b - this._s1) / (this._s2 - this._s1)) * this._prec || 0
                                } else
                                    c = b < 0 ? 0 : b >= 1 ? m - 1 : m * b >> 0,
                                    h = (b - c * (1 / m)) * m;
                                for (d = 1 - h,
                                e = this._props.length; --e > -1; )
                                    f = this._props[e],
                                    g = this._beziers[f][c],
                                    i = (h * h * g.da + 3 * d * (h * g.ca + d * g.ba)) * h + g.a,
                                    this._mod[f] && (i = this._mod[f](i, o)),
                                    n[f] ? o[f](i) : o[f] = i;
                                if (this._autoRotate) {
                                    var q, r, s, t, u, v, w, x = this._autoRotate;
                                    for (e = x.length; --e > -1; )
                                        f = x[e][2],
                                        v = x[e][3] || 0,
                                        w = !0 === x[e][4] ? 1 : a,
                                        g = this._beziers[x[e][0]],
                                        q = this._beziers[x[e][1]],
                                        g && q && (g = g[c],
                                        q = q[c],
                                        r = g.a + (g.b - g.a) * h,
                                        t = g.b + (g.c - g.b) * h,
                                        r += (t - r) * h,
                                        t += (g.c + (g.d - g.c) * h - t) * h,
                                        s = q.a + (q.b - q.a) * h,
                                        u = q.b + (q.c - q.b) * h,
                                        s += (u - s) * h,
                                        u += (q.c + (q.d - q.c) * h - u) * h,
                                        i = p ? Math.atan2(u - s, t - r) * w + v : this._initialRotations[e],
                                        this._mod[f] && (i = this._mod[f](i, o)),
                                        n[f] ? o[f](i) : o[f] = i)
                                }
                            }
                        })
                          , q = p.prototype;
                        p.bezierThrough = l,
                        p.cubicToQuadratic = i,
                        p._autoCSS = !0,
                        p.quadraticToCubic = function(a, b, c) {
                            return new h(a,(2 * b + a) / 3,(2 * b + c) / 3,c)
                        }
                        ,
                        p._cssRegister = function() {
                            var a = g.CSSPlugin;
                            if (a) {
                                var b = a._internals
                                  , c = b._parseToProxy
                                  , d = b._setPluginRatio
                                  , e = b.CSSPropTween;
                                b._registerComplexSpecialProp("bezier", {
                                    parser: function(a, b, f, g, h, i) {
                                        b instanceof Array && (b = {
                                            values: b
                                        }),
                                        i = new p;
                                        var j, k, l, m = b.values, n = m.length - 1, o = [], q = {};
                                        if (n < 0)
                                            return h;
                                        for (j = 0; j <= n; j++)
                                            l = c(a, m[j], g, h, i, n !== j),
                                            o[j] = l.end;
                                        for (k in b)
                                            q[k] = b[k];
                                        return q.values = o,
                                        h = new e(a,"bezier",0,0,l.pt,2),
                                        h.data = l,
                                        h.plugin = i,
                                        h.setRatio = d,
                                        0 === q.autoRotate && (q.autoRotate = !0),
                                        !q.autoRotate || q.autoRotate instanceof Array || (j = !0 === q.autoRotate ? 0 : Number(q.autoRotate),
                                        q.autoRotate = null != l.end.left ? [["left", "top", "rotation", j, !1]] : null != l.end.x && [["x", "y", "rotation", j, !1]]),
                                        q.autoRotate && (g._transform || g._enableTransforms(!1),
                                        l.autoRotate = g._target._gsTransform,
                                        l.proxy.rotation = l.autoRotate.rotation || 0,
                                        g._overwriteProps.push("rotation")),
                                        i._onInitTween(l.proxy, q, g._tween),
                                        h
                                    }
                                })
                            }
                        }
                        ,
                        q._mod = function(a) {
                            for (var b, c = this._overwriteProps, d = c.length; --d > -1; )
                                (b = a[c[d]]) && "function" == typeof b && (this._mod[c[d]] = b)
                        }
                        ,
                        q._kill = function(a) {
                            var b, c, d = this._props;
                            for (b in this._beziers)
                                if (b in a)
                                    for (delete this._beziers[b],
                                    delete this._func[b],
                                    c = d.length; --c > -1; )
                                        d[c] === b && d.splice(c, 1);
                            if (d = this._autoRotate)
                                for (c = d.length; --c > -1; )
                                    a[d[c][2]] && d.splice(c, 1);
                            return this._super._kill.call(this, a)
                        }
                    }(),
                    c._gsDefine("plugins.CSSPlugin", ["plugins.TweenPlugin", "TweenLite"], function(a, b) {
                        var d, e, f, g, h = function() {
                            a.call(this, "css"),
                            this._overwriteProps.length = 0,
                            this.setRatio = h.prototype.setRatio
                        }, i = c._gsDefine.globals, j = {}, k = h.prototype = new a("css");
                        k.constructor = h,
                        h.version = "1.20.5",
                        h.API = 2,
                        h.defaultTransformPerspective = 0,
                        h.defaultSkewType = "compensated",
                        h.defaultSmoothOrigin = !0,
                        k = "px",
                        h.suffixMap = {
                            top: k,
                            right: k,
                            bottom: k,
                            left: k,
                            width: k,
                            height: k,
                            fontSize: k,
                            padding: k,
                            margin: k,
                            perspective: k,
                            lineHeight: ""
                        };
                        var l, m, n, o, p, q, r, s, t = /(?:\-|\.|\b)(\d|\.|e\-)+/g, u = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g, v = /(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi, w = /(?![+-]?\d*\.?\d+|[+-]|e[+-]\d+)[^0-9]/g, x = /(?:\d|\-|\+|=|#|\.)*/g, y = /opacity *= *([^)]*)/i, z = /opacity:([^;]*)/i, A = /alpha\(opacity *=.+?\)/i, B = /^(rgb|hsl)/, C = /([A-Z])/g, D = /-([a-z])/gi, E = /(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi, F = function(a, b) {
                            return b.toUpperCase()
                        }, G = /(?:Left|Right|Width)/i, H = /(M11|M12|M21|M22)=[\d\-\.e]+/gi, I = /progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i, J = /,(?=[^\)]*(?:\(|$))/gi, K = /[\s,\(]/i, L = Math.PI / 180, M = 180 / Math.PI, N = {}, O = {
                            style: {}
                        }, P = c.document || {
                            createElement: function() {
                                return O
                            }
                        }, Q = function(a, b) {
                            return P.createElementNS ? P.createElementNS(b || "http://www.w3.org/1999/xhtml", a) : P.createElement(a)
                        }, R = Q("div"), S = Q("img"), T = h._internals = {
                            _specialProps: j
                        }, U = (c.navigator || {}).userAgent || "", V = function() {
                            var a = U.indexOf("Android")
                              , b = Q("a");
                            return n = -1 !== U.indexOf("Safari") && -1 === U.indexOf("Chrome") && (-1 === a || parseFloat(U.substr(a + 8, 2)) > 3),
                            p = n && parseFloat(U.substr(U.indexOf("Version/") + 8, 2)) < 6,
                            o = -1 !== U.indexOf("Firefox"),
                            (/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(U) || /Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(U)) && (q = parseFloat(RegExp.$1)),
                            !!b && (b.style.cssText = "top:1px;opacity:.55;",
                            /^0.55/.test(b.style.opacity))
                        }(), W = function(a) {
                            return y.test("string" == typeof a ? a : (a.currentStyle ? a.currentStyle.filter : a.style.filter) || "") ? parseFloat(RegExp.$1) / 100 : 1
                        }, X = function(a) {
                            c.console
                        }, Y = "", Z = "", $ = function(a, b) {
                            b = b || R;
                            var c, d, e = b.style;
                            if (void 0 !== e[a])
                                return a;
                            for (a = a.charAt(0).toUpperCase() + a.substr(1),
                            c = ["O", "Moz", "ms", "Ms", "Webkit"],
                            d = 5; --d > -1 && void 0 === e[c[d] + a]; )
                                ;
                            return d >= 0 ? (Z = 3 === d ? "ms" : c[d],
                            Y = "-" + Z.toLowerCase() + "-",
                            Z + a) : null
                        }, _ = ("undefined" != typeof window ? window : P.defaultView || {
                            getComputedStyle: function() {}
                        }).getComputedStyle, aa = h.getStyle = function(a, b, c, d, e) {
                            var f;
                            return V || "opacity" !== b ? (!d && a.style[b] ? f = a.style[b] : (c = c || _(a)) ? f = c[b] || c.getPropertyValue(b) || c.getPropertyValue(b.replace(C, "-$1").toLowerCase()) : a.currentStyle && (f = a.currentStyle[b]),
                            null == e || f && "none" !== f && "auto" !== f && "auto auto" !== f ? f : e) : W(a)
                        }
                        , ba = T.convertToPixels = function(a, c, d, e, f) {
                            if ("px" === e || !e && "lineHeight" !== c)
                                return d;
                            if ("auto" === e || !d)
                                return 0;
                            var g, i, j, k = G.test(c), l = a, m = R.style, n = d < 0, o = 1 === d;
                            if (n && (d = -d),
                            o && (d *= 100),
                            "lineHeight" !== c || e)
                                if ("%" === e && -1 !== c.indexOf("border"))
                                    g = d / 100 * (k ? a.clientWidth : a.clientHeight);
                                else {
                                    if (m.cssText = "border:0 solid red;position:" + aa(a, "position") + ";line-height:0;",
                                    "%" !== e && l.appendChild && "v" !== e.charAt(0) && "rem" !== e)
                                        m[k ? "borderLeftWidth" : "borderTopWidth"] = d + e;
                                    else {
                                        if (l = a.parentNode || P.body,
                                        -1 !== aa(l, "display").indexOf("flex") && (m.position = "absolute"),
                                        i = l._gsCache,
                                        j = b.ticker.frame,
                                        i && k && i.time === j)
                                            return i.width * d / 100;
                                        m[k ? "width" : "height"] = d + e
                                    }
                                    l.appendChild(R),
                                    g = parseFloat(R[k ? "offsetWidth" : "offsetHeight"]),
                                    l.removeChild(R),
                                    k && "%" === e && !1 !== h.cacheWidths && (i = l._gsCache = l._gsCache || {},
                                    i.time = j,
                                    i.width = g / d * 100),
                                    0 !== g || f || (g = ba(a, c, d, e, !0))
                                }
                            else
                                i = _(a).lineHeight,
                                a.style.lineHeight = d,
                                g = parseFloat(_(a).lineHeight),
                                a.style.lineHeight = i;
                            return o && (g /= 100),
                            n ? -g : g
                        }
                        , ca = T.calculateOffset = function(a, b, c) {
                            if ("absolute" !== aa(a, "position", c))
                                return 0;
                            var d = "left" === b ? "Left" : "Top"
                              , e = aa(a, "margin" + d, c);
                            return a["offset" + d] - (ba(a, b, parseFloat(e), e.replace(x, "")) || 0)
                        }
                        , da = function(a, b) {
                            var c, d, e, f = {};
                            if (b = b || _(a, null))
                                if (c = b.length)
                                    for (; --c > -1; )
                                        e = b[c],
                                        -1 !== e.indexOf("-transform") && Ea !== e || (f[e.replace(D, F)] = b.getPropertyValue(e));
                                else
                                    for (c in b)
                                        -1 !== c.indexOf("Transform") && Da !== c || (f[c] = b[c]);
                            else if (b = a.currentStyle || a.style)
                                for (c in b)
                                    "string" == typeof c && void 0 === f[c] && (f[c.replace(D, F)] = b[c]);
                            return V || (f.opacity = W(a)),
                            d = Sa(a, b, !1),
                            f.rotation = d.rotation,
                            f.skewX = d.skewX,
                            f.scaleX = d.scaleX,
                            f.scaleY = d.scaleY,
                            f.x = d.x,
                            f.y = d.y,
                            Ga && (f.z = d.z,
                            f.rotationX = d.rotationX,
                            f.rotationY = d.rotationY,
                            f.scaleZ = d.scaleZ),
                            f.filters && delete f.filters,
                            f
                        }, ea = function(a, b, c, d, e) {
                            var f, g, h, i = {}, j = a.style;
                            for (g in c)
                                "cssText" !== g && "length" !== g && isNaN(g) && (b[g] !== (f = c[g]) || e && e[g]) && -1 === g.indexOf("Origin") && ("number" != typeof f && "string" != typeof f || (i[g] = "auto" !== f || "left" !== g && "top" !== g ? "" !== f && "auto" !== f && "none" !== f || "string" != typeof b[g] || "" === b[g].replace(w, "") ? f : 0 : ca(a, g),
                                void 0 !== j[g] && (h = new ta(j,g,j[g],h))));
                            if (d)
                                for (g in d)
                                    "className" !== g && (i[g] = d[g]);
                            return {
                                difs: i,
                                firstMPT: h
                            }
                        }, fa = {
                            width: ["Left", "Right"],
                            height: ["Top", "Bottom"]
                        }, ga = ["marginLeft", "marginRight", "marginTop", "marginBottom"], ha = function(a, b, c) {
                            if ("svg" === (a.nodeName + "").toLowerCase())
                                return (c || _(a))[b] || 0;
                            if (a.getCTM && Pa(a))
                                return a.getBBox()[b] || 0;
                            var d = parseFloat("width" === b ? a.offsetWidth : a.offsetHeight)
                              , e = fa[b]
                              , f = e.length;
                            for (c = c || _(a, null); --f > -1; )
                                d -= parseFloat(aa(a, "padding" + e[f], c, !0)) || 0,
                                d -= parseFloat(aa(a, "border" + e[f] + "Width", c, !0)) || 0;
                            return d
                        }, ia = function(a, b) {
                            if ("contain" === a || "auto" === a || "auto auto" === a)
                                return a + " ";
                            null != a && "" !== a || (a = "0 0");
                            var c, d = a.split(" "), e = -1 !== a.indexOf("left") ? "0%" : -1 !== a.indexOf("right") ? "100%" : d[0], f = -1 !== a.indexOf("top") ? "0%" : -1 !== a.indexOf("bottom") ? "100%" : d[1];
                            if (d.length > 3 && !b) {
                                for (d = a.split(", ").join(",").split(","),
                                a = [],
                                c = 0; c < d.length; c++)
                                    a.push(ia(d[c]));
                                return a.join(",")
                            }
                            return null == f ? f = "center" === e ? "50%" : "0" : "center" === f && (f = "50%"),
                            ("center" === e || isNaN(parseFloat(e)) && -1 === (e + "").indexOf("=")) && (e = "50%"),
                            a = e + " " + f + (d.length > 2 ? " " + d[2] : ""),
                            b && (b.oxp = -1 !== e.indexOf("%"),
                            b.oyp = -1 !== f.indexOf("%"),
                            b.oxr = "=" === e.charAt(1),
                            b.oyr = "=" === f.charAt(1),
                            b.ox = parseFloat(e.replace(w, "")),
                            b.oy = parseFloat(f.replace(w, "")),
                            b.v = a),
                            b || a
                        }, ja = function(a, b) {
                            return "function" == typeof a && (a = a(s, r)),
                            "string" == typeof a && "=" === a.charAt(1) ? parseInt(a.charAt(0) + "1", 10) * parseFloat(a.substr(2)) : parseFloat(a) - parseFloat(b) || 0
                        }, ka = function(a, b) {
                            return "function" == typeof a && (a = a(s, r)),
                            null == a ? b : "string" == typeof a && "=" === a.charAt(1) ? parseInt(a.charAt(0) + "1", 10) * parseFloat(a.substr(2)) + b : parseFloat(a) || 0
                        }, la = function(a, b, c, d) {
                            var e, f, g, h, i;
                            return "function" == typeof a && (a = a(s, r)),
                            null == a ? h = b : "number" == typeof a ? h = a : (e = 360,
                            f = a.split("_"),
                            i = "=" === a.charAt(1),
                            g = (i ? parseInt(a.charAt(0) + "1", 10) * parseFloat(f[0].substr(2)) : parseFloat(f[0])) * (-1 === a.indexOf("rad") ? 1 : M) - (i ? 0 : b),
                            f.length && (d && (d[c] = b + g),
                            -1 !== a.indexOf("short") && (g %= e) !== g % (e / 2) && (g = g < 0 ? g + e : g - e),
                            -1 !== a.indexOf("_cw") && g < 0 ? g = (g + 9999999999 * e) % e - (g / e | 0) * e : -1 !== a.indexOf("ccw") && g > 0 && (g = (g - 9999999999 * e) % e - (g / e | 0) * e)),
                            h = b + g),
                            h < 1e-6 && h > -1e-6 && (h = 0),
                            h
                        }, ma = {
                            aqua: [0, 255, 255],
                            lime: [0, 255, 0],
                            silver: [192, 192, 192],
                            black: [0, 0, 0],
                            maroon: [128, 0, 0],
                            teal: [0, 128, 128],
                            blue: [0, 0, 255],
                            navy: [0, 0, 128],
                            white: [255, 255, 255],
                            fuchsia: [255, 0, 255],
                            olive: [128, 128, 0],
                            yellow: [255, 255, 0],
                            orange: [255, 165, 0],
                            gray: [128, 128, 128],
                            purple: [128, 0, 128],
                            green: [0, 128, 0],
                            red: [255, 0, 0],
                            pink: [255, 192, 203],
                            cyan: [0, 255, 255],
                            transparent: [255, 255, 255, 0]
                        }, na = function(a, b, c) {
                            return a = a < 0 ? a + 1 : a > 1 ? a - 1 : a,
                            255 * (6 * a < 1 ? b + (c - b) * a * 6 : a < .5 ? c : 3 * a < 2 ? b + (c - b) * (2 / 3 - a) * 6 : b) + .5 | 0
                        }, oa = h.parseColor = function(a, b) {
                            var c, d, e, f, g, h, i, j, k, l, m;
                            if (a)
                                if ("number" == typeof a)
                                    c = [a >> 16, a >> 8 & 255, 255 & a];
                                else {
                                    if ("," === a.charAt(a.length - 1) && (a = a.substr(0, a.length - 1)),
                                    ma[a])
                                        c = ma[a];
                                    else if ("#" === a.charAt(0))
                                        4 === a.length && (d = a.charAt(1),
                                        e = a.charAt(2),
                                        f = a.charAt(3),
                                        a = "#" + d + d + e + e + f + f),
                                        a = parseInt(a.substr(1), 16),
                                        c = [a >> 16, a >> 8 & 255, 255 & a];
                                    else if ("hsl" === a.substr(0, 3))
                                        if (c = m = a.match(t),
                                        b) {
                                            if (-1 !== a.indexOf("="))
                                                return a.match(u)
                                        } else
                                            g = Number(c[0]) % 360 / 360,
                                            h = Number(c[1]) / 100,
                                            i = Number(c[2]) / 100,
                                            e = i <= .5 ? i * (h + 1) : i + h - i * h,
                                            d = 2 * i - e,
                                            c.length > 3 && (c[3] = Number(c[3])),
                                            c[0] = na(g + 1 / 3, d, e),
                                            c[1] = na(g, d, e),
                                            c[2] = na(g - 1 / 3, d, e);
                                    else
                                        c = a.match(t) || ma.transparent;
                                    c[0] = Number(c[0]),
                                    c[1] = Number(c[1]),
                                    c[2] = Number(c[2]),
                                    c.length > 3 && (c[3] = Number(c[3]))
                                }
                            else
                                c = ma.black;
                            return b && !m && (d = c[0] / 255,
                            e = c[1] / 255,
                            f = c[2] / 255,
                            j = Math.max(d, e, f),
                            k = Math.min(d, e, f),
                            i = (j + k) / 2,
                            j === k ? g = h = 0 : (l = j - k,
                            h = i > .5 ? l / (2 - j - k) : l / (j + k),
                            g = j === d ? (e - f) / l + (e < f ? 6 : 0) : j === e ? (f - d) / l + 2 : (d - e) / l + 4,
                            g *= 60),
                            c[0] = g + .5 | 0,
                            c[1] = 100 * h + .5 | 0,
                            c[2] = 100 * i + .5 | 0),
                            c
                        }
                        , pa = function(a, b) {
                            var c, d, e, f = a.match(qa) || [], g = 0, h = "";
                            if (!f.length)
                                return a;
                            for (c = 0; c < f.length; c++)
                                d = f[c],
                                e = a.substr(g, a.indexOf(d, g) - g),
                                g += e.length + d.length,
                                d = oa(d, b),
                                3 === d.length && d.push(1),
                                h += e + (b ? "hsla(" + d[0] + "," + d[1] + "%," + d[2] + "%," + d[3] : "rgba(" + d.join(",")) + ")";
                            return h + a.substr(g)
                        }, qa = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b";
                        for (k in ma)
                            qa += "|" + k + "\\b";
                        qa = new RegExp(qa + ")","gi"),
                        h.colorStringFilter = function(a) {
                            var b, c = a[0] + " " + a[1];
                            qa.test(c) && (b = -1 !== c.indexOf("hsl(") || -1 !== c.indexOf("hsla("),
                            a[0] = pa(a[0], b),
                            a[1] = pa(a[1], b)),
                            qa.lastIndex = 0
                        }
                        ,
                        b.defaultStringFilter || (b.defaultStringFilter = h.colorStringFilter);
                        var ra = function(a, b, c, d) {
                            if (null == a)
                                return function(a) {
                                    return a
                                }
                                ;
                            var e, f = b ? (a.match(qa) || [""])[0] : "", g = a.split(f).join("").match(v) || [], h = a.substr(0, a.indexOf(g[0])), i = ")" === a.charAt(a.length - 1) ? ")" : "", j = -1 !== a.indexOf(" ") ? " " : ",", k = g.length, l = k > 0 ? g[0].replace(t, "") : "";
                            return k ? e = b ? function(a) {
                                var b, m, n, o;
                                if ("number" == typeof a)
                                    a += l;
                                else if (d && J.test(a)) {
                                    for (o = a.replace(J, "|").split("|"),
                                    n = 0; n < o.length; n++)
                                        o[n] = e(o[n]);
                                    return o.join(",")
                                }
                                if (b = (a.match(qa) || [f])[0],
                                m = a.split(b).join("").match(v) || [],
                                n = m.length,
                                k > n--)
                                    for (; ++n < k; )
                                        m[n] = c ? m[(n - 1) / 2 | 0] : g[n];
                                return h + m.join(j) + j + b + i + (-1 !== a.indexOf("inset") ? " inset" : "")
                            }
                            : function(a) {
                                var b, f, m;
                                if ("number" == typeof a)
                                    a += l;
                                else if (d && J.test(a)) {
                                    for (f = a.replace(J, "|").split("|"),
                                    m = 0; m < f.length; m++)
                                        f[m] = e(f[m]);
                                    return f.join(",")
                                }
                                if (b = a.match(v) || [],
                                m = b.length,
                                k > m--)
                                    for (; ++m < k; )
                                        b[m] = c ? b[(m - 1) / 2 | 0] : g[m];
                                return h + b.join(j) + i
                            }
                            : function(a) {
                                return a
                            }
                        }
                          , sa = function(a) {
                            return a = a.split(","),
                            function(b, c, d, e, f, g, h) {
                                var i, j = (c + "").split(" ");
                                for (h = {},
                                i = 0; i < 4; i++)
                                    h[a[i]] = j[i] = j[i] || j[(i - 1) / 2 >> 0];
                                return e.parse(b, h, f, g)
                            }
                        }
                          , ta = (T._setPluginRatio = function(a) {
                            this.plugin.setRatio(a);
                            for (var b, c, d, e, f, g = this.data, h = g.proxy, i = g.firstMPT; i; )
                                b = h[i.v],
                                i.r ? b = i.r(b) : b < 1e-6 && b > -1e-6 && (b = 0),
                                i.t[i.p] = b,
                                i = i._next;
                            if (g.autoRotate && (g.autoRotate.rotation = g.mod ? g.mod.call(this._tween, h.rotation, this.t, this._tween) : h.rotation),
                            1 === a || 0 === a)
                                for (i = g.firstMPT,
                                f = 1 === a ? "e" : "b"; i; ) {
                                    if (c = i.t,
                                    c.type) {
                                        if (1 === c.type) {
                                            for (e = c.xs0 + c.s + c.xs1,
                                            d = 1; d < c.l; d++)
                                                e += c["xn" + d] + c["xs" + (d + 1)];
                                            c[f] = e
                                        }
                                    } else
                                        c[f] = c.s + c.xs0;
                                    i = i._next
                                }
                        }
                        ,
                        function(a, b, c, d, e) {
                            this.t = a,
                            this.p = b,
                            this.v = c,
                            this.r = e,
                            d && (d._prev = this,
                            this._next = d)
                        }
                        )
                          , ua = (T._parseToProxy = function(a, b, c, d, e, f) {
                            var g, h, i, j, k, l = d, m = {}, n = {}, o = c._transform, p = N;
                            for (c._transform = null,
                            N = b,
                            d = k = c.parse(a, b, d, e),
                            N = p,
                            f && (c._transform = o,
                            l && (l._prev = null,
                            l._prev && (l._prev._next = null))); d && d !== l; ) {
                                if (d.type <= 1 && (h = d.p,
                                n[h] = d.s + d.c,
                                m[h] = d.s,
                                f || (j = new ta(d,"s",h,j,d.r),
                                d.c = 0),
                                1 === d.type))
                                    for (g = d.l; --g > 0; )
                                        i = "xn" + g,
                                        h = d.p + "_" + i,
                                        n[h] = d.data[i],
                                        m[h] = d[i],
                                        f || (j = new ta(d,i,h,j,d.rxp[i]));
                                d = d._next
                            }
                            return {
                                proxy: m,
                                end: n,
                                firstMPT: j,
                                pt: k
                            }
                        }
                        ,
                        T.CSSPropTween = function(a, b, c, e, f, h, i, j, k, l, m) {
                            this.t = a,
                            this.p = b,
                            this.s = c,
                            this.c = e,
                            this.n = i || b,
                            a instanceof ua || g.push(this.n),
                            this.r = j ? "function" == typeof j ? j : Math.round : j,
                            this.type = h || 0,
                            k && (this.pr = k,
                            d = !0),
                            this.b = void 0 === l ? c : l,
                            this.e = void 0 === m ? c + e : m,
                            f && (this._next = f,
                            f._prev = this)
                        }
                        )
                          , va = function(a, b, c, d, e, f) {
                            var g = new ua(a,b,c,d - c,e,-1,f);
                            return g.b = c,
                            g.e = g.xs0 = d,
                            g
                        }
                          , wa = h.parseComplex = function(a, b, c, d, e, f, g, i, j, k) {
                            c = c || f || "",
                            "function" == typeof d && (d = d(s, r)),
                            g = new ua(a,b,0,0,g,k ? 2 : 1,null,!1,i,c,d),
                            d += "",
                            e && qa.test(d + c) && (d = [c, d],
                            h.colorStringFilter(d),
                            c = d[0],
                            d = d[1]);
                            var m, n, o, p, q, v, w, x, y, z, A, B, C, D = c.split(", ").join(",").split(" "), E = d.split(", ").join(",").split(" "), F = D.length, G = !1 !== l;
                            for (-1 === d.indexOf(",") && -1 === c.indexOf(",") || (-1 !== (d + c).indexOf("rgb") || -1 !== (d + c).indexOf("hsl") ? (D = D.join(" ").replace(J, ", ").split(" "),
                            E = E.join(" ").replace(J, ", ").split(" ")) : (D = D.join(" ").split(",").join(", ").split(" "),
                            E = E.join(" ").split(",").join(", ").split(" ")),
                            F = D.length),
                            F !== E.length && (D = (f || "").split(" "),
                            F = D.length),
                            g.plugin = j,
                            g.setRatio = k,
                            qa.lastIndex = 0,
                            m = 0; m < F; m++)
                                if (p = D[m],
                                q = E[m] + "",
                                (x = parseFloat(p)) || 0 === x)
                                    g.appendXtra("", x, ja(q, x), q.replace(u, ""), !(!G || -1 === q.indexOf("px")) && Math.round, !0);
                                else if (e && qa.test(p))
                                    B = q.indexOf(")") + 1,
                                    B = ")" + (B ? q.substr(B) : ""),
                                    C = -1 !== q.indexOf("hsl") && V,
                                    z = q,
                                    p = oa(p, C),
                                    q = oa(q, C),
                                    y = p.length + q.length > 6,
                                    y && !V && 0 === q[3] ? (g["xs" + g.l] += g.l ? " transparent" : "transparent",
                                    g.e = g.e.split(E[m]).join("transparent")) : (V || (y = !1),
                                    C ? g.appendXtra(z.substr(0, z.indexOf("hsl")) + (y ? "hsla(" : "hsl("), p[0], ja(q[0], p[0]), ",", !1, !0).appendXtra("", p[1], ja(q[1], p[1]), "%,", !1).appendXtra("", p[2], ja(q[2], p[2]), y ? "%," : "%" + B, !1) : g.appendXtra(z.substr(0, z.indexOf("rgb")) + (y ? "rgba(" : "rgb("), p[0], q[0] - p[0], ",", Math.round, !0).appendXtra("", p[1], q[1] - p[1], ",", Math.round).appendXtra("", p[2], q[2] - p[2], y ? "," : B, Math.round),
                                    y && (p = p.length < 4 ? 1 : p[3],
                                    g.appendXtra("", p, (q.length < 4 ? 1 : q[3]) - p, B, !1))),
                                    qa.lastIndex = 0;
                                else if (v = p.match(t)) {
                                    if (!(w = q.match(u)) || w.length !== v.length)
                                        return g;
                                    for (o = 0,
                                    n = 0; n < v.length; n++)
                                        A = v[n],
                                        z = p.indexOf(A, o),
                                        g.appendXtra(p.substr(o, z - o), Number(A), ja(w[n], A), "", !(!G || "px" !== p.substr(z + A.length, 2)) && Math.round, 0 === n),
                                        o = z + A.length;
                                    g["xs" + g.l] += p.substr(o)
                                } else
                                    g["xs" + g.l] += g.l || g["xs" + g.l] ? " " + q : q;
                            if (-1 !== d.indexOf("=") && g.data) {
                                for (B = g.xs0 + g.data.s,
                                m = 1; m < g.l; m++)
                                    B += g["xs" + m] + g.data["xn" + m];
                                g.e = B + g["xs" + m]
                            }
                            return g.l || (g.type = -1,
                            g.xs0 = g.e),
                            g.xfirst || g
                        }
                          , xa = 9;
                        for (k = ua.prototype,
                        k.l = k.pr = 0; --xa > 0; )
                            k["xn" + xa] = 0,
                            k["xs" + xa] = "";
                        k.xs0 = "",
                        k._next = k._prev = k.xfirst = k.data = k.plugin = k.setRatio = k.rxp = null,
                        k.appendXtra = function(a, b, c, d, e, f) {
                            var g = this
                              , h = g.l;
                            return g["xs" + h] += f && (h || g["xs" + h]) ? " " + a : a || "",
                            c || 0 === h || g.plugin ? (g.l++,
                            g.type = g.setRatio ? 2 : 1,
                            g["xs" + g.l] = d || "",
                            h > 0 ? (g.data["xn" + h] = b + c,
                            g.rxp["xn" + h] = e,
                            g["xn" + h] = b,
                            g.plugin || (g.xfirst = new ua(g,"xn" + h,b,c,g.xfirst || g,0,g.n,e,g.pr),
                            g.xfirst.xs0 = 0),
                            g) : (g.data = {
                                s: b + c
                            },
                            g.rxp = {},
                            g.s = b,
                            g.c = c,
                            g.r = e,
                            g)) : (g["xs" + h] += b + (d || ""),
                            g)
                        }
                        ;
                        var ya = function(a, b) {
                            b = b || {},
                            this.p = b.prefix ? $(a) || a : a,
                            j[a] = j[this.p] = this,
                            this.format = b.formatter || ra(b.defaultValue, b.color, b.collapsible, b.multi),
                            b.parser && (this.parse = b.parser),
                            this.clrs = b.color,
                            this.multi = b.multi,
                            this.keyword = b.keyword,
                            this.dflt = b.defaultValue,
                            this.pr = b.priority || 0
                        }
                          , za = T._registerComplexSpecialProp = function(a, b, c) {
                            "object" != typeof b && (b = {
                                parser: c
                            });
                            var d, e = a.split(","), f = b.defaultValue;
                            for (c = c || [f],
                            d = 0; d < e.length; d++)
                                b.prefix = 0 === d && b.prefix,
                                b.defaultValue = c[d] || f,
                                new ya(e[d],b)
                        }
                          , Aa = T._registerPluginProp = function(a) {
                            if (!j[a]) {
                                var b = a.charAt(0).toUpperCase() + a.substr(1) + "Plugin";
                                za(a, {
                                    parser: function(a, c, d, e, f, g, h) {
                                        var k = i.com.greensock.plugins[b];
                                        return k ? (k._cssRegister(),
                                        j[d].parse(a, c, d, e, f, g, h)) : (X(),
                                        f)
                                    }
                                })
                            }
                        }
                        ;
                        k = ya.prototype,
                        k.parseComplex = function(a, b, c, d, e, f) {
                            var g, h, i, j, k, l, m = this.keyword;
                            if (this.multi && (J.test(c) || J.test(b) ? (h = b.replace(J, "|").split("|"),
                            i = c.replace(J, "|").split("|")) : m && (h = [b],
                            i = [c])),
                            i) {
                                for (j = i.length > h.length ? i.length : h.length,
                                g = 0; g < j; g++)
                                    b = h[g] = h[g] || this.dflt,
                                    c = i[g] = i[g] || this.dflt,
                                    m && (k = b.indexOf(m),
                                    l = c.indexOf(m),
                                    k !== l && (-1 === l ? h[g] = h[g].split(m).join("") : -1 === k && (h[g] += " " + m)));
                                b = h.join(", "),
                                c = i.join(", ")
                            }
                            return wa(a, this.p, b, c, this.clrs, this.dflt, d, this.pr, e, f)
                        }
                        ,
                        k.parse = function(a, b, c, d, e, g, h) {
                            return this.parseComplex(a.style, this.format(aa(a, this.p, f, !1, this.dflt)), this.format(b), e, g)
                        }
                        ,
                        h.registerSpecialProp = function(a, b, c) {
                            za(a, {
                                parser: function(a, d, e, f, g, h, i) {
                                    var j = new ua(a,e,0,0,g,2,e,!1,c);
                                    return j.plugin = h,
                                    j.setRatio = b(a, d, f._tween, e),
                                    j
                                },
                                priority: c
                            })
                        }
                        ,
                        h.useSVGTransformAttr = !0;
                        var Ba, Ca = "scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(","), Da = $("transform"), Ea = Y + "transform", Fa = $("transformOrigin"), Ga = null !== $("perspective"), Ha = T.Transform = function() {
                            this.perspective = parseFloat(h.defaultTransformPerspective) || 0,
                            this.force3D = !(!1 === h.defaultForce3D || !Ga) && (h.defaultForce3D || "auto")
                        }
                        , Ia = c.SVGElement, Ja = function(a, b, c) {
                            var d, e = P.createElementNS("http://www.w3.org/2000/svg", a), f = /([a-z])([A-Z])/g;
                            for (d in c)
                                e.setAttributeNS(null, d.replace(f, "$1-$2").toLowerCase(), c[d]);
                            return b.appendChild(e),
                            e
                        }, Ka = P.documentElement || {}, La = function() {
                            var a, b, d, e = q || /Android/i.test(U) && !c.chrome;
                            return P.createElementNS && !e && (a = Ja("svg", Ka),
                            b = Ja("rect", a, {
                                width: 100,
                                height: 50,
                                x: 100
                            }),
                            d = b.getBoundingClientRect().width,
                            b.style[Fa] = "50% 50%",
                            b.style[Da] = "scaleX(0.5)",
                            e = d === b.getBoundingClientRect().width && !(o && Ga),
                            Ka.removeChild(a)),
                            e
                        }(), Ma = function(a, b, c, d, e, f) {
                            var g, i, j, k, l, m, n, o, p, q, r, s, t, u, v = a._gsTransform, w = Ra(a, !0);
                            v && (t = v.xOrigin,
                            u = v.yOrigin),
                            (!d || (g = d.split(" ")).length < 2) && (n = a.getBBox(),
                            0 === n.x && 0 === n.y && n.width + n.height === 0 && (n = {
                                x: parseFloat(a.hasAttribute("x") ? a.getAttribute("x") : a.hasAttribute("cx") ? a.getAttribute("cx") : 0) || 0,
                                y: parseFloat(a.hasAttribute("y") ? a.getAttribute("y") : a.hasAttribute("cy") ? a.getAttribute("cy") : 0) || 0,
                                width: 0,
                                height: 0
                            }),
                            b = ia(b).split(" "),
                            g = [(-1 !== b[0].indexOf("%") ? parseFloat(b[0]) / 100 * n.width : parseFloat(b[0])) + n.x, (-1 !== b[1].indexOf("%") ? parseFloat(b[1]) / 100 * n.height : parseFloat(b[1])) + n.y]),
                            c.xOrigin = k = parseFloat(g[0]),
                            c.yOrigin = l = parseFloat(g[1]),
                            d && w !== Qa && (m = w[0],
                            n = w[1],
                            o = w[2],
                            p = w[3],
                            q = w[4],
                            r = w[5],
                            (s = m * p - n * o) && (i = k * (p / s) + l * (-o / s) + (o * r - p * q) / s,
                            j = k * (-n / s) + l * (m / s) - (m * r - n * q) / s,
                            k = c.xOrigin = g[0] = i,
                            l = c.yOrigin = g[1] = j)),
                            v && (f && (c.xOffset = v.xOffset,
                            c.yOffset = v.yOffset,
                            v = c),
                            e || !1 !== e && !1 !== h.defaultSmoothOrigin ? (i = k - t,
                            j = l - u,
                            v.xOffset += i * w[0] + j * w[2] - i,
                            v.yOffset += i * w[1] + j * w[3] - j) : v.xOffset = v.yOffset = 0),
                            f || a.setAttribute("data-svg-origin", g.join(" "))
                        }, Na = function(a) {
                            var b, c = Q("svg", this.ownerSVGElement && this.ownerSVGElement.getAttribute("xmlns") || "http://www.w3.org/2000/svg"), d = this.parentNode, e = this.nextSibling, f = this.style.cssText;
                            if (Ka.appendChild(c),
                            c.appendChild(this),
                            this.style.display = "block",
                            a)
                                try {
                                    b = this.getBBox(),
                                    this._originalGetBBox = this.getBBox,
                                    this.getBBox = Na
                                } catch (a) {}
                            else
                                this._originalGetBBox && (b = this._originalGetBBox());
                            return e ? d.insertBefore(this, e) : d.appendChild(this),
                            Ka.removeChild(c),
                            this.style.cssText = f,
                            b
                        }, Oa = function(a) {
                            try {
                                return a.getBBox()
                            } catch (b) {
                                return Na.call(a, !0)
                            }
                        }, Pa = function(a) {
                            return !(!Ia || !a.getCTM || a.parentNode && !a.ownerSVGElement || !Oa(a))
                        }, Qa = [1, 0, 0, 1, 0, 0], Ra = function(a, b) {
                            var c, d, e, f, g, h, i = a._gsTransform || new Ha, j = a.style;
                            if (Da ? d = aa(a, Ea, null, !0) : a.currentStyle && (d = a.currentStyle.filter.match(H),
                            d = d && 4 === d.length ? [d[0].substr(4), Number(d[2].substr(4)), Number(d[1].substr(4)), d[3].substr(4), i.x || 0, i.y || 0].join(",") : ""),
                            c = !d || "none" === d || "matrix(1, 0, 0, 1, 0, 0)" === d,
                            !Da || !(h = !_(a) || "none" === _(a).display) && a.parentNode || (h && (f = j.display,
                            j.display = "block"),
                            a.parentNode || (g = 1,
                            Ka.appendChild(a)),
                            d = aa(a, Ea, null, !0),
                            c = !d || "none" === d || "matrix(1, 0, 0, 1, 0, 0)" === d,
                            f ? j.display = f : h && Wa(j, "display"),
                            g && Ka.removeChild(a)),
                            (i.svg || a.getCTM && Pa(a)) && (c && -1 !== (j[Da] + "").indexOf("matrix") && (d = j[Da],
                            c = 0),
                            e = a.getAttribute("transform"),
                            c && e && (e = a.transform.baseVal.consolidate().matrix,
                            d = "matrix(" + e.a + "," + e.b + "," + e.c + "," + e.d + "," + e.e + "," + e.f + ")",
                            c = 0)),
                            c)
                                return Qa;
                            for (e = (d || "").match(t) || [],
                            xa = e.length; --xa > -1; )
                                f = Number(e[xa]),
                                e[xa] = (g = f - (f |= 0)) ? (1e5 * g + (g < 0 ? -.5 : .5) | 0) / 1e5 + f : f;
                            return b && e.length > 6 ? [e[0], e[1], e[4], e[5], e[12], e[13]] : e
                        }, Sa = T.getTransform = function(a, c, d, e) {
                            if (a._gsTransform && d && !e)
                                return a._gsTransform;
                            var f, g, i, j, k, l, m = d ? a._gsTransform || new Ha : new Ha, n = m.scaleX < 0, o = Ga ? parseFloat(aa(a, Fa, c, !1, "0 0 0").split(" ")[2]) || m.zOrigin || 0 : 0, p = parseFloat(h.defaultTransformPerspective) || 0;
                            if (m.svg = !(!a.getCTM || !Pa(a)),
                            m.svg && (Ma(a, aa(a, Fa, c, !1, "50% 50%") + "", m, a.getAttribute("data-svg-origin")),
                            Ba = h.useSVGTransformAttr || La),
                            (f = Ra(a)) !== Qa) {
                                if (16 === f.length) {
                                    var q, r, s, t, u, v = f[0], w = f[1], x = f[2], y = f[3], z = f[4], A = f[5], B = f[6], C = f[7], D = f[8], E = f[9], F = f[10], G = f[12], H = f[13], I = f[14], J = f[11], K = Math.atan2(B, F);
                                    m.zOrigin && (I = -m.zOrigin,
                                    G = D * I - f[12],
                                    H = E * I - f[13],
                                    I = F * I + m.zOrigin - f[14]),
                                    m.rotationX = K * M,
                                    K && (t = Math.cos(-K),
                                    u = Math.sin(-K),
                                    q = z * t + D * u,
                                    r = A * t + E * u,
                                    s = B * t + F * u,
                                    D = z * -u + D * t,
                                    E = A * -u + E * t,
                                    F = B * -u + F * t,
                                    J = C * -u + J * t,
                                    z = q,
                                    A = r,
                                    B = s),
                                    K = Math.atan2(-x, F),
                                    m.rotationY = K * M,
                                    K && (t = Math.cos(-K),
                                    u = Math.sin(-K),
                                    q = v * t - D * u,
                                    r = w * t - E * u,
                                    s = x * t - F * u,
                                    E = w * u + E * t,
                                    F = x * u + F * t,
                                    J = y * u + J * t,
                                    v = q,
                                    w = r,
                                    x = s),
                                    K = Math.atan2(w, v),
                                    m.rotation = K * M,
                                    K && (t = Math.cos(K),
                                    u = Math.sin(K),
                                    q = v * t + w * u,
                                    r = z * t + A * u,
                                    s = D * t + E * u,
                                    w = w * t - v * u,
                                    A = A * t - z * u,
                                    E = E * t - D * u,
                                    v = q,
                                    z = r,
                                    D = s),
                                    m.rotationX && Math.abs(m.rotationX) + Math.abs(m.rotation) > 359.9 && (m.rotationX = m.rotation = 0,
                                    m.rotationY = 180 - m.rotationY),
                                    K = Math.atan2(z, A),
                                    m.scaleX = (1e5 * Math.sqrt(v * v + w * w + x * x) + .5 | 0) / 1e5,
                                    m.scaleY = (1e5 * Math.sqrt(A * A + B * B) + .5 | 0) / 1e5,
                                    m.scaleZ = (1e5 * Math.sqrt(D * D + E * E + F * F) + .5 | 0) / 1e5,
                                    v /= m.scaleX,
                                    z /= m.scaleY,
                                    w /= m.scaleX,
                                    A /= m.scaleY,
                                    Math.abs(K) > 2e-5 ? (m.skewX = K * M,
                                    z = 0,
                                    "simple" !== m.skewType && (m.scaleY *= 1 / Math.cos(K))) : m.skewX = 0,
                                    m.perspective = J ? 1 / (J < 0 ? -J : J) : 0,
                                    m.x = G,
                                    m.y = H,
                                    m.z = I,
                                    m.svg && (m.x -= m.xOrigin - (m.xOrigin * v - m.yOrigin * z),
                                    m.y -= m.yOrigin - (m.yOrigin * w - m.xOrigin * A))
                                } else if (!Ga || e || !f.length || m.x !== f[4] || m.y !== f[5] || !m.rotationX && !m.rotationY) {
                                    var L = f.length >= 6
                                      , N = L ? f[0] : 1
                                      , O = f[1] || 0
                                      , P = f[2] || 0
                                      , Q = L ? f[3] : 1;
                                    m.x = f[4] || 0,
                                    m.y = f[5] || 0,
                                    i = Math.sqrt(N * N + O * O),
                                    j = Math.sqrt(Q * Q + P * P),
                                    k = N || O ? Math.atan2(O, N) * M : m.rotation || 0,
                                    l = P || Q ? Math.atan2(P, Q) * M + k : m.skewX || 0,
                                    m.scaleX = i,
                                    m.scaleY = j,
                                    m.rotation = k,
                                    m.skewX = l,
                                    Ga && (m.rotationX = m.rotationY = m.z = 0,
                                    m.perspective = p,
                                    m.scaleZ = 1),
                                    m.svg && (m.x -= m.xOrigin - (m.xOrigin * N + m.yOrigin * P),
                                    m.y -= m.yOrigin - (m.xOrigin * O + m.yOrigin * Q))
                                }
                                Math.abs(m.skewX) > 90 && Math.abs(m.skewX) < 270 && (n ? (m.scaleX *= -1,
                                m.skewX += m.rotation <= 0 ? 180 : -180,
                                m.rotation += m.rotation <= 0 ? 180 : -180) : (m.scaleY *= -1,
                                m.skewX += m.skewX <= 0 ? 180 : -180)),
                                m.zOrigin = o;
                                for (g in m)
                                    m[g] < 2e-5 && m[g] > -2e-5 && (m[g] = 0)
                            }
                            return d && (a._gsTransform = m,
                            m.svg && (Ba && a.style[Da] ? b.delayedCall(.001, function() {
                                Wa(a.style, Da)
                            }) : !Ba && a.getAttribute("transform") && b.delayedCall(.001, function() {
                                a.removeAttribute("transform")
                            }))),
                            m
                        }
                        , Ta = function(a) {
                            var b, c, d = this.data, e = -d.rotation * L, f = e + d.skewX * L, g = (Math.cos(e) * d.scaleX * 1e5 | 0) / 1e5, h = (Math.sin(e) * d.scaleX * 1e5 | 0) / 1e5, i = (Math.sin(f) * -d.scaleY * 1e5 | 0) / 1e5, j = (Math.cos(f) * d.scaleY * 1e5 | 0) / 1e5, k = this.t.style, l = this.t.currentStyle;
                            if (l) {
                                c = h,
                                h = -i,
                                i = -c,
                                b = l.filter,
                                k.filter = "";
                                var m, n, o = this.t.offsetWidth, p = this.t.offsetHeight, r = "absolute" !== l.position, s = "progid:DXImageTransform.Microsoft.Matrix(M11=" + g + ", M12=" + h + ", M21=" + i + ", M22=" + j, t = d.x + o * d.xPercent / 100, u = d.y + p * d.yPercent / 100;
                                if (null != d.ox && (m = (d.oxp ? o * d.ox * .01 : d.ox) - o / 2,
                                n = (d.oyp ? p * d.oy * .01 : d.oy) - p / 2,
                                t += m - (m * g + n * h),
                                u += n - (m * i + n * j)),
                                r ? (m = o / 2,
                                n = p / 2,
                                s += ", Dx=" + (m - (m * g + n * h) + t) + ", Dy=" + (n - (m * i + n * j) + u) + ")") : s += ", sizingMethod='auto expand')",
                                -1 !== b.indexOf("DXImageTransform.Microsoft.Matrix(") ? k.filter = b.replace(I, s) : k.filter = s + " " + b,
                                0 !== a && 1 !== a || 1 === g && 0 === h && 0 === i && 1 === j && (r && -1 === s.indexOf("Dx=0, Dy=0") || y.test(b) && 100 !== parseFloat(RegExp.$1) || -1 === b.indexOf(b.indexOf("Alpha")) && k.removeAttribute("filter")),
                                !r) {
                                    var v, w, z, A = q < 8 ? 1 : -1;
                                    for (m = d.ieOffsetX || 0,
                                    n = d.ieOffsetY || 0,
                                    d.ieOffsetX = Math.round((o - ((g < 0 ? -g : g) * o + (h < 0 ? -h : h) * p)) / 2 + t),
                                    d.ieOffsetY = Math.round((p - ((j < 0 ? -j : j) * p + (i < 0 ? -i : i) * o)) / 2 + u),
                                    xa = 0; xa < 4; xa++)
                                        w = ga[xa],
                                        v = l[w],
                                        c = -1 !== v.indexOf("px") ? parseFloat(v) : ba(this.t, w, parseFloat(v), v.replace(x, "")) || 0,
                                        z = c !== d[w] ? xa < 2 ? -d.ieOffsetX : -d.ieOffsetY : xa < 2 ? m - d.ieOffsetX : n - d.ieOffsetY,
                                        k[w] = (d[w] = Math.round(c - z * (0 === xa || 2 === xa ? 1 : A))) + "px"
                                }
                            }
                        }, Ua = T.set3DTransformRatio = T.setTransformRatio = function(a) {
                            var b, c, d, e, f, g, h, i, j, k, l, m, n, p, q, r, s, t, u, v, w, x, y, z = this.data, A = this.t.style, B = z.rotation, C = z.rotationX, D = z.rotationY, E = z.scaleX, F = z.scaleY, G = z.scaleZ, H = z.x, I = z.y, J = z.z, K = z.svg, M = z.perspective, N = z.force3D, O = z.skewY, P = z.skewX;
                            if (O && (P += O,
                            B += O),
                            ((1 === a || 0 === a) && "auto" === N && (this.tween._totalTime === this.tween._totalDuration || !this.tween._totalTime) || !N) && !J && !M && !D && !C && 1 === G || Ba && K || !Ga)
                                return void (B || P || K ? (B *= L,
                                x = P * L,
                                y = 1e5,
                                c = Math.cos(B) * E,
                                f = Math.sin(B) * E,
                                d = Math.sin(B - x) * -F,
                                g = Math.cos(B - x) * F,
                                x && "simple" === z.skewType && (b = Math.tan(x - O * L),
                                b = Math.sqrt(1 + b * b),
                                d *= b,
                                g *= b,
                                O && (b = Math.tan(O * L),
                                b = Math.sqrt(1 + b * b),
                                c *= b,
                                f *= b)),
                                K && (H += z.xOrigin - (z.xOrigin * c + z.yOrigin * d) + z.xOffset,
                                I += z.yOrigin - (z.xOrigin * f + z.yOrigin * g) + z.yOffset,
                                Ba && (z.xPercent || z.yPercent) && (q = this.t.getBBox(),
                                H += .01 * z.xPercent * q.width,
                                I += .01 * z.yPercent * q.height),
                                q = 1e-6,
                                H < q && H > -q && (H = 0),
                                I < q && I > -q && (I = 0)),
                                u = (c * y | 0) / y + "," + (f * y | 0) / y + "," + (d * y | 0) / y + "," + (g * y | 0) / y + "," + H + "," + I + ")",
                                K && Ba ? this.t.setAttribute("transform", "matrix(" + u) : A[Da] = (z.xPercent || z.yPercent ? "translate(" + z.xPercent + "%," + z.yPercent + "%) matrix(" : "matrix(") + u) : A[Da] = (z.xPercent || z.yPercent ? "translate(" + z.xPercent + "%," + z.yPercent + "%) matrix(" : "matrix(") + E + ",0,0," + F + "," + H + "," + I + ")");
                            if (o && (q = 1e-4,
                            E < q && E > -q && (E = G = 2e-5),
                            F < q && F > -q && (F = G = 2e-5),
                            !M || z.z || z.rotationX || z.rotationY || (M = 0)),
                            B || P)
                                B *= L,
                                r = c = Math.cos(B),
                                s = f = Math.sin(B),
                                P && (B -= P * L,
                                r = Math.cos(B),
                                s = Math.sin(B),
                                "simple" === z.skewType && (b = Math.tan((P - O) * L),
                                b = Math.sqrt(1 + b * b),
                                r *= b,
                                s *= b,
                                z.skewY && (b = Math.tan(O * L),
                                b = Math.sqrt(1 + b * b),
                                c *= b,
                                f *= b))),
                                d = -s,
                                g = r;
                            else {
                                if (!(D || C || 1 !== G || M || K))
                                    return void (A[Da] = (z.xPercent || z.yPercent ? "translate(" + z.xPercent + "%," + z.yPercent + "%) translate3d(" : "translate3d(") + H + "px," + I + "px," + J + "px)" + (1 !== E || 1 !== F ? " scale(" + E + "," + F + ")" : ""));
                                c = g = 1,
                                d = f = 0
                            }
                            k = 1,
                            e = h = i = j = l = m = 0,
                            n = M ? -1 / M : 0,
                            p = z.zOrigin,
                            q = 1e-6,
                            v = ",",
                            w = "0",
                            B = D * L,
                            B && (r = Math.cos(B),
                            s = Math.sin(B),
                            i = -s,
                            l = n * -s,
                            e = c * s,
                            h = f * s,
                            k = r,
                            n *= r,
                            c *= r,
                            f *= r),
                            B = C * L,
                            B && (r = Math.cos(B),
                            s = Math.sin(B),
                            b = d * r + e * s,
                            t = g * r + h * s,
                            j = k * s,
                            m = n * s,
                            e = d * -s + e * r,
                            h = g * -s + h * r,
                            k *= r,
                            n *= r,
                            d = b,
                            g = t),
                            1 !== G && (e *= G,
                            h *= G,
                            k *= G,
                            n *= G),
                            1 !== F && (d *= F,
                            g *= F,
                            j *= F,
                            m *= F),
                            1 !== E && (c *= E,
                            f *= E,
                            i *= E,
                            l *= E),
                            (p || K) && (p && (H += e * -p,
                            I += h * -p,
                            J += k * -p + p),
                            K && (H += z.xOrigin - (z.xOrigin * c + z.yOrigin * d) + z.xOffset,
                            I += z.yOrigin - (z.xOrigin * f + z.yOrigin * g) + z.yOffset),
                            H < q && H > -q && (H = w),
                            I < q && I > -q && (I = w),
                            J < q && J > -q && (J = 0)),
                            u = z.xPercent || z.yPercent ? "translate(" + z.xPercent + "%," + z.yPercent + "%) matrix3d(" : "matrix3d(",
                            u += (c < q && c > -q ? w : c) + v + (f < q && f > -q ? w : f) + v + (i < q && i > -q ? w : i),
                            u += v + (l < q && l > -q ? w : l) + v + (d < q && d > -q ? w : d) + v + (g < q && g > -q ? w : g),
                            C || D || 1 !== G ? (u += v + (j < q && j > -q ? w : j) + v + (m < q && m > -q ? w : m) + v + (e < q && e > -q ? w : e),
                            u += v + (h < q && h > -q ? w : h) + v + (k < q && k > -q ? w : k) + v + (n < q && n > -q ? w : n) + v) : u += ",0,0,0,0,1,0,",
                            u += H + v + I + v + J + v + (M ? 1 + -J / M : 1) + ")",
                            A[Da] = u
                        }
                        ;
                        k = Ha.prototype,
                        k.x = k.y = k.z = k.skewX = k.skewY = k.rotation = k.rotationX = k.rotationY = k.zOrigin = k.xPercent = k.yPercent = k.xOffset = k.yOffset = 0,
                        k.scaleX = k.scaleY = k.scaleZ = 1,
                        za("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin", {
                            parser: function(a, b, c, d, e, g, i) {
                                if (d._lastParsedTransform === i)
                                    return e;
                                d._lastParsedTransform = i;
                                var j, k = i.scale && "function" == typeof i.scale ? i.scale : 0;
                                "function" == typeof i[c] && (j = i[c],
                                i[c] = b),
                                k && (i.scale = k(s, a));
                                var l, m, n, o, p, q, t, u, v, w = a._gsTransform, x = a.style, y = Ca.length, z = i, A = {}, B = Sa(a, f, !0, z.parseTransform), C = z.transform && ("function" == typeof z.transform ? z.transform(s, r) : z.transform);
                                if (B.skewType = z.skewType || B.skewType || h.defaultSkewType,
                                d._transform = B,
                                C && "string" == typeof C && Da)
                                    m = R.style,
                                    m[Da] = C,
                                    m.display = "block",
                                    m.position = "absolute",
                                    -1 !== C.indexOf("%") && (m.width = aa(a, "width"),
                                    m.height = aa(a, "height")),
                                    P.body.appendChild(R),
                                    l = Sa(R, null, !1),
                                    "simple" === B.skewType && (l.scaleY *= Math.cos(l.skewX * L)),
                                    B.svg && (q = B.xOrigin,
                                    t = B.yOrigin,
                                    l.x -= B.xOffset,
                                    l.y -= B.yOffset,
                                    (z.transformOrigin || z.svgOrigin) && (C = {},
                                    Ma(a, ia(z.transformOrigin), C, z.svgOrigin, z.smoothOrigin, !0),
                                    q = C.xOrigin,
                                    t = C.yOrigin,
                                    l.x -= C.xOffset - B.xOffset,
                                    l.y -= C.yOffset - B.yOffset),
                                    (q || t) && (u = Ra(R, !0),
                                    l.x -= q - (q * u[0] + t * u[2]),
                                    l.y -= t - (q * u[1] + t * u[3]))),
                                    P.body.removeChild(R),
                                    l.perspective || (l.perspective = B.perspective),
                                    null != z.xPercent && (l.xPercent = ka(z.xPercent, B.xPercent)),
                                    null != z.yPercent && (l.yPercent = ka(z.yPercent, B.yPercent));
                                else if ("object" == typeof z) {
                                    if (l = {
                                        scaleX: ka(null != z.scaleX ? z.scaleX : z.scale, B.scaleX),
                                        scaleY: ka(null != z.scaleY ? z.scaleY : z.scale, B.scaleY),
                                        scaleZ: ka(z.scaleZ, B.scaleZ),
                                        x: ka(z.x, B.x),
                                        y: ka(z.y, B.y),
                                        z: ka(z.z, B.z),
                                        xPercent: ka(z.xPercent, B.xPercent),
                                        yPercent: ka(z.yPercent, B.yPercent),
                                        perspective: ka(z.transformPerspective, B.perspective)
                                    },
                                    null != (p = z.directionalRotation))
                                        if ("object" == typeof p)
                                            for (m in p)
                                                z[m] = p[m];
                                        else
                                            z.rotation = p;
                                    "string" == typeof z.x && -1 !== z.x.indexOf("%") && (l.x = 0,
                                    l.xPercent = ka(z.x, B.xPercent)),
                                    "string" == typeof z.y && -1 !== z.y.indexOf("%") && (l.y = 0,
                                    l.yPercent = ka(z.y, B.yPercent)),
                                    l.rotation = la("rotation"in z ? z.rotation : "shortRotation"in z ? z.shortRotation + "_short" : "rotationZ"in z ? z.rotationZ : B.rotation, B.rotation, "rotation", A),
                                    Ga && (l.rotationX = la("rotationX"in z ? z.rotationX : "shortRotationX"in z ? z.shortRotationX + "_short" : B.rotationX || 0, B.rotationX, "rotationX", A),
                                    l.rotationY = la("rotationY"in z ? z.rotationY : "shortRotationY"in z ? z.shortRotationY + "_short" : B.rotationY || 0, B.rotationY, "rotationY", A)),
                                    l.skewX = la(z.skewX, B.skewX),
                                    l.skewY = la(z.skewY, B.skewY)
                                }
                                for (Ga && null != z.force3D && (B.force3D = z.force3D,
                                o = !0),
                                n = B.force3D || B.z || B.rotationX || B.rotationY || l.z || l.rotationX || l.rotationY || l.perspective,
                                n || null == z.scale || (l.scaleZ = 1); --y > -1; )
                                    v = Ca[y],
                                    ((C = l[v] - B[v]) > 1e-6 || C < -1e-6 || null != z[v] || null != N[v]) && (o = !0,
                                    e = new ua(B,v,B[v],C,e),
                                    v in A && (e.e = A[v]),
                                    e.xs0 = 0,
                                    e.plugin = g,
                                    d._overwriteProps.push(e.n));
                                return C = z.transformOrigin,
                                B.svg && (C || z.svgOrigin) && (q = B.xOffset,
                                t = B.yOffset,
                                Ma(a, ia(C), l, z.svgOrigin, z.smoothOrigin),
                                e = va(B, "xOrigin", (w ? B : l).xOrigin, l.xOrigin, e, "transformOrigin"),
                                e = va(B, "yOrigin", (w ? B : l).yOrigin, l.yOrigin, e, "transformOrigin"),
                                q === B.xOffset && t === B.yOffset || (e = va(B, "xOffset", w ? q : B.xOffset, B.xOffset, e, "transformOrigin"),
                                e = va(B, "yOffset", w ? t : B.yOffset, B.yOffset, e, "transformOrigin")),
                                C = "0px 0px"),
                                (C || Ga && n && B.zOrigin) && (Da ? (o = !0,
                                v = Fa,
                                C = (C || aa(a, v, f, !1, "50% 50%")) + "",
                                e = new ua(x,v,0,0,e,-1,"transformOrigin"),
                                e.b = x[v],
                                e.plugin = g,
                                Ga ? (m = B.zOrigin,
                                C = C.split(" "),
                                B.zOrigin = (C.length > 2 && (0 === m || "0px" !== C[2]) ? parseFloat(C[2]) : m) || 0,
                                e.xs0 = e.e = C[0] + " " + (C[1] || "50%") + " 0px",
                                e = new ua(B,"zOrigin",0,0,e,-1,e.n),
                                e.b = m,
                                e.xs0 = e.e = B.zOrigin) : e.xs0 = e.e = C) : ia(C + "", B)),
                                o && (d._transformType = B.svg && Ba || !n && 3 !== this._transformType ? 2 : 3),
                                j && (i[c] = j),
                                k && (i.scale = k),
                                e
                            },
                            prefix: !0
                        }),
                        za("boxShadow", {
                            defaultValue: "0px 0px 0px 0px #999",
                            prefix: !0,
                            color: !0,
                            multi: !0,
                            keyword: "inset"
                        }),
                        za("borderRadius", {
                            defaultValue: "0px",
                            parser: function(a, b, c, d, g, h) {
                                b = this.format(b);
                                var i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y = ["borderTopLeftRadius", "borderTopRightRadius", "borderBottomRightRadius", "borderBottomLeftRadius"], z = a.style;
                                for (q = parseFloat(a.offsetWidth),
                                r = parseFloat(a.offsetHeight),
                                i = b.split(" "),
                                j = 0; j < y.length; j++)
                                    this.p.indexOf("border") && (y[j] = $(y[j])),
                                    m = l = aa(a, y[j], f, !1, "0px"),
                                    -1 !== m.indexOf(" ") && (l = m.split(" "),
                                    m = l[0],
                                    l = l[1]),
                                    n = k = i[j],
                                    o = parseFloat(m),
                                    t = m.substr((o + "").length),
                                    u = "=" === n.charAt(1),
                                    u ? (p = parseInt(n.charAt(0) + "1", 10),
                                    n = n.substr(2),
                                    p *= parseFloat(n),
                                    s = n.substr((p + "").length - (p < 0 ? 1 : 0)) || "") : (p = parseFloat(n),
                                    s = n.substr((p + "").length)),
                                    "" === s && (s = e[c] || t),
                                    s !== t && (v = ba(a, "borderLeft", o, t),
                                    w = ba(a, "borderTop", o, t),
                                    "%" === s ? (m = v / q * 100 + "%",
                                    l = w / r * 100 + "%") : "em" === s ? (x = ba(a, "borderLeft", 1, "em"),
                                    m = v / x + "em",
                                    l = w / x + "em") : (m = v + "px",
                                    l = w + "px"),
                                    u && (n = parseFloat(m) + p + s,
                                    k = parseFloat(l) + p + s)),
                                    g = wa(z, y[j], m + " " + l, n + " " + k, !1, "0px", g);
                                return g
                            },
                            prefix: !0,
                            formatter: ra("0px 0px 0px 0px", !1, !0)
                        }),
                        za("borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius", {
                            defaultValue: "0px",
                            parser: function(a, b, c, d, e, g) {
                                return wa(a.style, c, this.format(aa(a, c, f, !1, "0px 0px")), this.format(b), !1, "0px", e)
                            },
                            prefix: !0,
                            formatter: ra("0px 0px", !1, !0)
                        }),
                        za("backgroundPosition", {
                            defaultValue: "0 0",
                            parser: function(a, b, c, d, e, g) {
                                var h, i, j, k, l, m, n = "background-position", o = f || _(a, null), p = this.format((o ? q ? o.getPropertyValue(n + "-x") + " " + o.getPropertyValue(n + "-y") : o.getPropertyValue(n) : a.currentStyle.backgroundPositionX + " " + a.currentStyle.backgroundPositionY) || "0 0"), r = this.format(b);
                                if (-1 !== p.indexOf("%") != (-1 !== r.indexOf("%")) && r.split(",").length < 2 && (m = aa(a, "backgroundImage").replace(E, "")) && "none" !== m) {
                                    for (h = p.split(" "),
                                    i = r.split(" "),
                                    S.setAttribute("src", m),
                                    j = 2; --j > -1; )
                                        p = h[j],
                                        (k = -1 !== p.indexOf("%")) !== (-1 !== i[j].indexOf("%")) && (l = 0 === j ? a.offsetWidth - S.width : a.offsetHeight - S.height,
                                        h[j] = k ? parseFloat(p) / 100 * l + "px" : parseFloat(p) / l * 100 + "%");
                                    p = h.join(" ")
                                }
                                return this.parseComplex(a.style, p, r, e, g)
                            },
                            formatter: ia
                        }),
                        za("backgroundSize", {
                            defaultValue: "0 0",
                            formatter: function(a) {
                                return a += "",
                                "co" === a.substr(0, 2) ? a : ia(-1 === a.indexOf(" ") ? a + " " + a : a)
                            }
                        }),
                        za("perspective", {
                            defaultValue: "0px",
                            prefix: !0
                        }),
                        za("perspectiveOrigin", {
                            defaultValue: "50% 50%",
                            prefix: !0
                        }),
                        za("transformStyle", {
                            prefix: !0
                        }),
                        za("backfaceVisibility", {
                            prefix: !0
                        }),
                        za("userSelect", {
                            prefix: !0
                        }),
                        za("margin", {
                            parser: sa("marginTop,marginRight,marginBottom,marginLeft")
                        }),
                        za("padding", {
                            parser: sa("paddingTop,paddingRight,paddingBottom,paddingLeft")
                        }),
                        za("clip", {
                            defaultValue: "rect(0px,0px,0px,0px)",
                            parser: function(a, b, c, d, e, g) {
                                var h, i, j;
                                return q < 9 ? (i = a.currentStyle,
                                j = q < 8 ? " " : ",",
                                h = "rect(" + i.clipTop + j + i.clipRight + j + i.clipBottom + j + i.clipLeft + ")",
                                b = this.format(b).split(",").join(j)) : (h = this.format(aa(a, this.p, f, !1, this.dflt)),
                                b = this.format(b)),
                                this.parseComplex(a.style, h, b, e, g)
                            }
                        }),
                        za("textShadow", {
                            defaultValue: "0px 0px 0px #999",
                            color: !0,
                            multi: !0
                        }),
                        za("autoRound,strictUnits", {
                            parser: function(a, b, c, d, e) {
                                return e
                            }
                        }),
                        za("border", {
                            defaultValue: "0px solid #000",
                            parser: function(a, b, c, d, e, g) {
                                var h = aa(a, "borderTopWidth", f, !1, "0px")
                                  , i = this.format(b).split(" ")
                                  , j = i[0].replace(x, "");
                                return "px" !== j && (h = parseFloat(h) / ba(a, "borderTopWidth", 1, j) + j),
                                this.parseComplex(a.style, this.format(h + " " + aa(a, "borderTopStyle", f, !1, "solid") + " " + aa(a, "borderTopColor", f, !1, "#000")), i.join(" "), e, g)
                            },
                            color: !0,
                            formatter: function(a) {
                                var b = a.split(" ");
                                return b[0] + " " + (b[1] || "solid") + " " + (a.match(qa) || ["#000"])[0]
                            }
                        }),
                        za("borderWidth", {
                            parser: sa("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")
                        }),
                        za("float,cssFloat,styleFloat", {
                            parser: function(a, b, c, d, e, f) {
                                var g = a.style
                                  , h = "cssFloat"in g ? "cssFloat" : "styleFloat";
                                return new ua(g,h,0,0,e,-1,c,!1,0,g[h],b)
                            }
                        });
                        var Va = function(a) {
                            var b, c = this.t, d = c.filter || aa(this.data, "filter") || "", e = this.s + this.c * a | 0;
                            100 === e && (-1 === d.indexOf("atrix(") && -1 === d.indexOf("radient(") && -1 === d.indexOf("oader(") ? (c.removeAttribute("filter"),
                            b = !aa(this.data, "filter")) : (c.filter = d.replace(A, ""),
                            b = !0)),
                            b || (this.xn1 && (c.filter = d = d || "alpha(opacity=" + e + ")"),
                            -1 === d.indexOf("pacity") ? 0 === e && this.xn1 || (c.filter = d + " alpha(opacity=" + e + ")") : c.filter = d.replace(y, "opacity=" + e))
                        };
                        za("opacity,alpha,autoAlpha", {
                            defaultValue: "1",
                            parser: function(a, b, c, d, e, g) {
                                var h = parseFloat(aa(a, "opacity", f, !1, "1"))
                                  , i = a.style
                                  , j = "autoAlpha" === c;
                                return "string" == typeof b && "=" === b.charAt(1) && (b = ("-" === b.charAt(0) ? -1 : 1) * parseFloat(b.substr(2)) + h),
                                j && 1 === h && "hidden" === aa(a, "visibility", f) && 0 !== b && (h = 0),
                                V ? e = new ua(i,"opacity",h,b - h,e) : (e = new ua(i,"opacity",100 * h,100 * (b - h),e),
                                e.xn1 = j ? 1 : 0,
                                i.zoom = 1,
                                e.type = 2,
                                e.b = "alpha(opacity=" + e.s + ")",
                                e.e = "alpha(opacity=" + (e.s + e.c) + ")",
                                e.data = a,
                                e.plugin = g,
                                e.setRatio = Va),
                                j && (e = new ua(i,"visibility",0,0,e,-1,null,!1,0,0 !== h ? "inherit" : "hidden",0 === b ? "hidden" : "inherit"),
                                e.xs0 = "inherit",
                                d._overwriteProps.push(e.n),
                                d._overwriteProps.push(c)),
                                e
                            }
                        });
                        var Wa = function(a, b) {
                            b && (a.removeProperty ? ("ms" !== b.substr(0, 2) && "webkit" !== b.substr(0, 6) || (b = "-" + b),
                            a.removeProperty(b.replace(C, "-$1").toLowerCase())) : a.removeAttribute(b))
                        }
                          , Xa = function(a) {
                            if (this.t._gsClassPT = this,
                            1 === a || 0 === a) {
                                this.t.setAttribute("class", 0 === a ? this.b : this.e);
                                for (var b = this.data, c = this.t.style; b; )
                                    b.v ? c[b.p] = b.v : Wa(c, b.p),
                                    b = b._next;
                                1 === a && this.t._gsClassPT === this && (this.t._gsClassPT = null)
                            } else
                                this.t.getAttribute("class") !== this.e && this.t.setAttribute("class", this.e)
                        };
                        za("className", {
                            parser: function(a, b, c, e, g, h, i) {
                                var j, k, l, m, n, o = a.getAttribute("class") || "", p = a.style.cssText;
                                if (g = e._classNamePT = new ua(a,c,0,0,g,2),
                                g.setRatio = Xa,
                                g.pr = -11,
                                d = !0,
                                g.b = o,
                                k = da(a, f),
                                l = a._gsClassPT) {
                                    for (m = {},
                                    n = l.data; n; )
                                        m[n.p] = 1,
                                        n = n._next;
                                    l.setRatio(1)
                                }
                                return a._gsClassPT = g,
                                g.e = "=" !== b.charAt(1) ? b : o.replace(new RegExp("(?:\\s|^)" + b.substr(2) + "(?![\\w-])"), "") + ("+" === b.charAt(0) ? " " + b.substr(2) : ""),
                                a.setAttribute("class", g.e),
                                j = ea(a, k, da(a), i, m),
                                a.setAttribute("class", o),
                                g.data = j.firstMPT,
                                a.style.cssText = p,
                                g = g.xfirst = e.parse(a, j.difs, g, h)
                            }
                        });
                        var Ya = function(a) {
                            if ((1 === a || 0 === a) && this.data._totalTime === this.data._totalDuration && "isFromStart" !== this.data.data) {
                                var b, c, d, e, f, g = this.t.style, h = j.transform.parse;
                                if ("all" === this.e)
                                    g.cssText = "",
                                    e = !0;
                                else
                                    for (b = this.e.split(" ").join("").split(","),
                                    d = b.length; --d > -1; )
                                        c = b[d],
                                        j[c] && (j[c].parse === h ? e = !0 : c = "transformOrigin" === c ? Fa : j[c].p),
                                        Wa(g, c);
                                e && (Wa(g, Da),
                                (f = this.t._gsTransform) && (f.svg && (this.t.removeAttribute("data-svg-origin"),
                                this.t.removeAttribute("transform")),
                                delete this.t._gsTransform))
                            }
                        };
                        for (za("clearProps", {
                            parser: function(a, b, c, e, f) {
                                return f = new ua(a,c,0,0,f,2),
                                f.setRatio = Ya,
                                f.e = b,
                                f.pr = -10,
                                f.data = e._tween,
                                d = !0,
                                f
                            }
                        }),
                        k = "bezier,throwProps,physicsProps,physics2D".split(","),
                        xa = k.length; xa--; )
                            Aa(k[xa]);
                        k = h.prototype,
                        k._firstPT = k._lastParsedTransform = k._transform = null,
                        k._onInitTween = function(a, b, c, i) {
                            if (!a.nodeType)
                                return !1;
                            this._target = r = a,
                            this._tween = c,
                            this._vars = b,
                            s = i,
                            l = b.autoRound,
                            d = !1,
                            e = b.suffixMap || h.suffixMap,
                            f = _(a, ""),
                            g = this._overwriteProps;
                            var k, o, q, t, u, v, w, x, y, A = a.style;
                            if (m && "" === A.zIndex && ("auto" !== (k = aa(a, "zIndex", f)) && "" !== k || this._addLazySet(A, "zIndex", 0)),
                            "string" == typeof b && (t = A.cssText,
                            k = da(a, f),
                            A.cssText = t + ";" + b,
                            k = ea(a, k, da(a)).difs,
                            !V && z.test(b) && (k.opacity = parseFloat(RegExp.$1)),
                            b = k,
                            A.cssText = t),
                            b.className ? this._firstPT = o = j.className.parse(a, b.className, "className", this, null, null, b) : this._firstPT = o = this.parse(a, b, null),
                            this._transformType) {
                                for (y = 3 === this._transformType,
                                Da ? n && (m = !0,
                                "" === A.zIndex && ("auto" !== (w = aa(a, "zIndex", f)) && "" !== w || this._addLazySet(A, "zIndex", 0)),
                                p && this._addLazySet(A, "WebkitBackfaceVisibility", this._vars.WebkitBackfaceVisibility || (y ? "visible" : "hidden"))) : A.zoom = 1,
                                q = o; q && q._next; )
                                    q = q._next;
                                x = new ua(a,"transform",0,0,null,2),
                                this._linkCSSP(x, null, q),
                                x.setRatio = Da ? Ua : Ta,
                                x.data = this._transform || Sa(a, f, !0),
                                x.tween = c,
                                x.pr = -1,
                                g.pop()
                            }
                            if (d) {
                                for (; o; ) {
                                    for (v = o._next,
                                    q = t; q && q.pr > o.pr; )
                                        q = q._next;
                                    (o._prev = q ? q._prev : u) ? o._prev._next = o : t = o,
                                    (o._next = q) ? q._prev = o : u = o,
                                    o = v
                                }
                                this._firstPT = t
                            }
                            return !0
                        }
                        ,
                        k.parse = function(a, b, c, d) {
                            var g, h, i, k, m, n, o, p, q, t, u = a.style;
                            for (g in b) {
                                if (n = b[g],
                                "function" == typeof n && (n = n(s, r)),
                                h = j[g])
                                    c = h.parse(a, n, g, this, c, d, b);
                                else {
                                    if ("--" === g.substr(0, 2)) {
                                        this._tween._propLookup[g] = this._addTween.call(this._tween, a.style, "setProperty", _(a).getPropertyValue(g) + "", n + "", g, !1, g);
                                        continue
                                    }
                                    m = aa(a, g, f) + "",
                                    q = "string" == typeof n,
                                    "color" === g || "fill" === g || "stroke" === g || -1 !== g.indexOf("Color") || q && B.test(n) ? (q || (n = oa(n),
                                    n = (n.length > 3 ? "rgba(" : "rgb(") + n.join(",") + ")"),
                                    c = wa(u, g, m, n, !0, "transparent", c, 0, d)) : q && K.test(n) ? c = wa(u, g, m, n, !0, null, c, 0, d) : (i = parseFloat(m),
                                    o = i || 0 === i ? m.substr((i + "").length) : "",
                                    "" !== m && "auto" !== m || ("width" === g || "height" === g ? (i = ha(a, g, f),
                                    o = "px") : "left" === g || "top" === g ? (i = ca(a, g, f),
                                    o = "px") : (i = "opacity" !== g ? 0 : 1,
                                    o = "")),
                                    t = q && "=" === n.charAt(1),
                                    t ? (k = parseInt(n.charAt(0) + "1", 10),
                                    n = n.substr(2),
                                    k *= parseFloat(n),
                                    p = n.replace(x, "")) : (k = parseFloat(n),
                                    p = q ? n.replace(x, "") : ""),
                                    "" === p && (p = g in e ? e[g] : o),
                                    n = k || 0 === k ? (t ? k + i : k) + p : b[g],
                                    o !== p && ("" === p && "lineHeight" !== g || (k || 0 === k) && i && (i = ba(a, g, i, o),
                                    "%" === p ? (i /= ba(a, g, 100, "%") / 100,
                                    !0 !== b.strictUnits && (m = i + "%")) : "em" === p || "rem" === p || "vw" === p || "vh" === p ? i /= ba(a, g, 1, p) : "px" !== p && (k = ba(a, g, k, p),
                                    p = "px"),
                                    t && (k || 0 === k) && (n = k + i + p))),
                                    t && (k += i),
                                    !i && 0 !== i || !k && 0 !== k ? void 0 !== u[g] && (n || n + "" != "NaN" && null != n) ? (c = new ua(u,g,k || i || 0,0,c,-1,g,!1,0,m,n),
                                    c.xs0 = "none" !== n || "display" !== g && -1 === g.indexOf("Style") ? n : m) : X(b[g]) : (c = new ua(u,g,i,k - i,c,0,g,!1 !== l && ("px" === p || "zIndex" === g),0,m,n),
                                    c.xs0 = p))
                                }
                                d && c && !c.plugin && (c.plugin = d)
                            }
                            return c
                        }
                        ,
                        k.setRatio = function(a) {
                            var b, c, d, e = this._firstPT;
                            if (1 !== a || this._tween._time !== this._tween._duration && 0 !== this._tween._time)
                                if (a || this._tween._time !== this._tween._duration && 0 !== this._tween._time || -1e-6 === this._tween._rawPrevTime)
                                    for (; e; ) {
                                        if (b = e.c * a + e.s,
                                        e.r ? b = e.r(b) : b < 1e-6 && b > -1e-6 && (b = 0),
                                        e.type)
                                            if (1 === e.type)
                                                if (2 === (d = e.l))
                                                    e.t[e.p] = e.xs0 + b + e.xs1 + e.xn1 + e.xs2;
                                                else if (3 === d)
                                                    e.t[e.p] = e.xs0 + b + e.xs1 + e.xn1 + e.xs2 + e.xn2 + e.xs3;
                                                else if (4 === d)
                                                    e.t[e.p] = e.xs0 + b + e.xs1 + e.xn1 + e.xs2 + e.xn2 + e.xs3 + e.xn3 + e.xs4;
                                                else if (5 === d)
                                                    e.t[e.p] = e.xs0 + b + e.xs1 + e.xn1 + e.xs2 + e.xn2 + e.xs3 + e.xn3 + e.xs4 + e.xn4 + e.xs5;
                                                else {
                                                    for (c = e.xs0 + b + e.xs1,
                                                    d = 1; d < e.l; d++)
                                                        c += e["xn" + d] + e["xs" + (d + 1)];
                                                    e.t[e.p] = c
                                                }
                                            else
                                                -1 === e.type ? e.t[e.p] = e.xs0 : e.setRatio && e.setRatio(a);
                                        else
                                            e.t[e.p] = b + e.xs0;
                                        e = e._next
                                    }
                                else
                                    for (; e; )
                                        2 !== e.type ? e.t[e.p] = e.b : e.setRatio(a),
                                        e = e._next;
                            else
                                for (; e; ) {
                                    if (2 !== e.type)
                                        if (e.r && -1 !== e.type)
                                            if (b = e.r(e.s + e.c),
                                            e.type) {
                                                if (1 === e.type) {
                                                    for (d = e.l,
                                                    c = e.xs0 + b + e.xs1,
                                                    d = 1; d < e.l; d++)
                                                        c += e["xn" + d] + e["xs" + (d + 1)];
                                                    e.t[e.p] = c
                                                }
                                            } else
                                                e.t[e.p] = b + e.xs0;
                                        else
                                            e.t[e.p] = e.e;
                                    else
                                        e.setRatio(a);
                                    e = e._next
                                }
                        }
                        ,
                        k._enableTransforms = function(a) {
                            this._transform = this._transform || Sa(this._target, f, !0),
                            this._transformType = this._transform.svg && Ba || !a && 3 !== this._transformType ? 2 : 3
                        }
                        ;
                        var Za = function(a) {
                            this.t[this.p] = this.e,
                            this.data._linkCSSP(this, this._next, null, !0)
                        };
                        k._addLazySet = function(a, b, c) {
                            var d = this._firstPT = new ua(a,b,0,0,this._firstPT,2);
                            d.e = c,
                            d.setRatio = Za,
                            d.data = this
                        }
                        ,
                        k._linkCSSP = function(a, b, c, d) {
                            return a && (b && (b._prev = a),
                            a._next && (a._next._prev = a._prev),
                            a._prev ? a._prev._next = a._next : this._firstPT === a && (this._firstPT = a._next,
                            d = !0),
                            c ? c._next = a : d || null !== this._firstPT || (this._firstPT = a),
                            a._next = b,
                            a._prev = c),
                            a
                        }
                        ,
                        k._mod = function(a) {
                            for (var b = this._firstPT; b; )
                                "function" == typeof a[b.p] && (b.r = a[b.p]),
                                b = b._next
                        }
                        ,
                        k._kill = function(b) {
                            var c, d, e, f = b;
                            if (b.autoAlpha || b.alpha) {
                                f = {};
                                for (d in b)
                                    f[d] = b[d];
                                f.opacity = 1,
                                f.autoAlpha && (f.visibility = 1)
                            }
                            for (b.className && (c = this._classNamePT) && (e = c.xfirst,
                            e && e._prev ? this._linkCSSP(e._prev, c._next, e._prev._prev) : e === this._firstPT && (this._firstPT = c._next),
                            c._next && this._linkCSSP(c._next, c._next._next, e._prev),
                            this._classNamePT = null),
                            c = this._firstPT; c; )
                                c.plugin && c.plugin !== d && c.plugin._kill && (c.plugin._kill(b),
                                d = c.plugin),
                                c = c._next;
                            return a.prototype._kill.call(this, f)
                        }
                        ;
                        var $a = function(a, b, c) {
                            var d, e, f, g;
                            if (a.slice)
                                for (e = a.length; --e > -1; )
                                    $a(a[e], b, c);
                            else
                                for (d = a.childNodes,
                                e = d.length; --e > -1; )
                                    f = d[e],
                                    g = f.type,
                                    f.style && (b.push(da(f)),
                                    c && c.push(f)),
                                    1 !== g && 9 !== g && 11 !== g || !f.childNodes.length || $a(f, b, c)
                        };
                        return h.cascadeTo = function(a, c, d) {
                            var e, f, g, h, i = b.to(a, c, d), j = [i], k = [], l = [], m = [], n = b._internals.reservedProps;
                            for (a = i._targets || i.target,
                            $a(a, k, m),
                            i.render(c, !0, !0),
                            $a(a, l),
                            i.render(0, !0, !0),
                            i._enabled(!0),
                            e = m.length; --e > -1; )
                                if (f = ea(m[e], k[e], l[e]),
                                f.firstMPT) {
                                    f = f.difs;
                                    for (g in d)
                                        n[g] && (f[g] = d[g]);
                                    h = {};
                                    for (g in f)
                                        h[g] = k[e][g];
                                    j.push(b.fromTo(m[e], c, h, f))
                                }
                            return j
                        }
                        ,
                        a.activate([h]),
                        h
                    }, !0),
                    function() {
                        var a = c._gsDefine.plugin({
                            propName: "roundProps",
                            version: "1.7.0",
                            priority: -1,
                            API: 2,
                            init: function(a, b, c) {
                                return this._tween = c,
                                !0
                            }
                        })
                          , b = function(a) {
                            var b = a < 1 ? Math.pow(10, (a + "").length - 2) : 1;
                            return function(c) {
                                return (Math.round(c / a) * a * b | 0) / b
                            }
                        }
                          , d = function(a, b) {
                            for (; a; )
                                a.f || a.blob || (a.m = b || Math.round),
                                a = a._next
                        }
                          , e = a.prototype;
                        e._onInitAllProps = function() {
                            var a, c, e, f, g = this._tween, h = g.vars.roundProps, i = {}, j = g._propLookup.roundProps;
                            if ("object" != typeof h || h.push)
                                for ("string" == typeof h && (h = h.split(",")),
                                e = h.length; --e > -1; )
                                    i[h[e]] = Math.round;
                            else
                                for (f in h)
                                    i[f] = b(h[f]);
                            for (f in i)
                                for (a = g._firstPT; a; )
                                    c = a._next,
                                    a.pg ? a.t._mod(i) : a.n === f && (2 === a.f && a.t ? d(a.t._firstPT, i[f]) : (this._add(a.t, f, a.s, a.c, i[f]),
                                    c && (c._prev = a._prev),
                                    a._prev ? a._prev._next = c : g._firstPT === a && (g._firstPT = c),
                                    a._next = a._prev = null,
                                    g._propLookup[f] = j)),
                                    a = c;
                            return !1
                        }
                        ,
                        e._add = function(a, b, c, d, e) {
                            this._addTween(a, b, c, c + d, b, e || Math.round),
                            this._overwriteProps.push(b)
                        }
                    }(),
                    function() {
                        c._gsDefine.plugin({
                            propName: "attr",
                            API: 2,
                            version: "0.6.1",
                            init: function(a, b, c, d) {
                                var e, f;
                                if ("function" != typeof a.setAttribute)
                                    return !1;
                                for (e in b)
                                    f = b[e],
                                    "function" == typeof f && (f = f(d, a)),
                                    this._addTween(a, "setAttribute", a.getAttribute(e) + "", f + "", e, !1, e),
                                    this._overwriteProps.push(e);
                                return !0
                            }
                        })
                    }(),
                    c._gsDefine.plugin({
                        propName: "directionalRotation",
                        version: "0.3.1",
                        API: 2,
                        init: function(a, b, c, d) {
                            "object" != typeof b && (b = {
                                rotation: b
                            }),
                            this.finals = {};
                            var e, f, g, h, i, j, k = !0 === b.useRadians ? 2 * Math.PI : 360;
                            for (e in b)
                                "useRadians" !== e && (h = b[e],
                                "function" == typeof h && (h = h(d, a)),
                                j = (h + "").split("_"),
                                f = j[0],
                                g = parseFloat("function" != typeof a[e] ? a[e] : a[e.indexOf("set") || "function" != typeof a["get" + e.substr(3)] ? e : "get" + e.substr(3)]()),
                                h = this.finals[e] = "string" == typeof f && "=" === f.charAt(1) ? g + parseInt(f.charAt(0) + "1", 10) * Number(f.substr(2)) : Number(f) || 0,
                                i = h - g,
                                j.length && (f = j.join("_"),
                                -1 !== f.indexOf("short") && (i %= k) !== i % (k / 2) && (i = i < 0 ? i + k : i - k),
                                -1 !== f.indexOf("_cw") && i < 0 ? i = (i + 9999999999 * k) % k - (i / k | 0) * k : -1 !== f.indexOf("ccw") && i > 0 && (i = (i - 9999999999 * k) % k - (i / k | 0) * k)),
                                (i > 1e-6 || i < -1e-6) && (this._addTween(a, e, g, g + i, e),
                                this._overwriteProps.push(e)));
                            return !0
                        },
                        set: function(a) {
                            var b;
                            if (1 !== a)
                                this._super.setRatio.call(this, a);
                            else
                                for (b = this._firstPT; b; )
                                    b.f ? b.t[b.p](this.finals[b.p]) : b.t[b.p] = this.finals[b.p],
                                    b = b._next
                        }
                    })._autoCSS = !0,
                    c._gsDefine("easing.Back", ["easing.Ease"], function(a) {
                        var b, d, e, f, g = c.GreenSockGlobals || c, h = g.com.greensock, i = 2 * Math.PI, j = Math.PI / 2, k = h._class, l = function(b, c) {
                            var d = k("easing." + b, function() {}, !0)
                              , e = d.prototype = new a;
                            return e.constructor = d,
                            e.getRatio = c,
                            d
                        }, m = a.register || function() {}
                        , n = function(a, b, c, d, e) {
                            var f = k("easing." + a, {
                                easeOut: new b,
                                easeIn: new c,
                                easeInOut: new d
                            }, !0);
                            return m(f, a),
                            f
                        }, o = function(a, b, c) {
                            this.t = a,
                            this.v = b,
                            c && (this.next = c,
                            c.prev = this,
                            this.c = c.v - b,
                            this.gap = c.t - a)
                        }, p = function(b, c) {
                            var d = k("easing." + b, function(a) {
                                this._p1 = a || 0 === a ? a : 1.70158,
                                this._p2 = 1.525 * this._p1
                            }, !0)
                              , e = d.prototype = new a;
                            return e.constructor = d,
                            e.getRatio = c,
                            e.config = function(a) {
                                return new d(a)
                            }
                            ,
                            d
                        }, q = n("Back", p("BackOut", function(a) {
                            return (a -= 1) * a * ((this._p1 + 1) * a + this._p1) + 1
                        }), p("BackIn", function(a) {
                            return a * a * ((this._p1 + 1) * a - this._p1)
                        }), p("BackInOut", function(a) {
                            return (a *= 2) < 1 ? .5 * a * a * ((this._p2 + 1) * a - this._p2) : .5 * ((a -= 2) * a * ((this._p2 + 1) * a + this._p2) + 2)
                        })), r = k("easing.SlowMo", function(a, b, c) {
                            b = b || 0 === b ? b : .7,
                            null == a ? a = .7 : a > 1 && (a = 1),
                            this._p = 1 !== a ? b : 0,
                            this._p1 = (1 - a) / 2,
                            this._p2 = a,
                            this._p3 = this._p1 + this._p2,
                            this._calcEnd = !0 === c
                        }, !0), s = r.prototype = new a;
                        return s.constructor = r,
                        s.getRatio = function(a) {
                            var b = a + (.5 - a) * this._p;
                            return a < this._p1 ? this._calcEnd ? 1 - (a = 1 - a / this._p1) * a : b - (a = 1 - a / this._p1) * a * a * a * b : a > this._p3 ? this._calcEnd ? 1 === a ? 0 : 1 - (a = (a - this._p3) / this._p1) * a : b + (a - b) * (a = (a - this._p3) / this._p1) * a * a * a : this._calcEnd ? 1 : b
                        }
                        ,
                        r.ease = new r(.7,.7),
                        s.config = r.config = function(a, b, c) {
                            return new r(a,b,c)
                        }
                        ,
                        b = k("easing.SteppedEase", function(a, b) {
                            a = a || 1,
                            this._p1 = 1 / a,
                            this._p2 = a + (b ? 0 : 1),
                            this._p3 = b ? 1 : 0
                        }, !0),
                        s = b.prototype = new a,
                        s.constructor = b,
                        s.getRatio = function(a) {
                            return a < 0 ? a = 0 : a >= 1 && (a = .999999999),
                            ((this._p2 * a | 0) + this._p3) * this._p1
                        }
                        ,
                        s.config = b.config = function(a, c) {
                            return new b(a,c)
                        }
                        ,
                        d = k("easing.ExpoScaleEase", function(a, b, c) {
                            this._p1 = Math.log(b / a),
                            this._p2 = b - a,
                            this._p3 = a,
                            this._ease = c
                        }, !0),
                        s = d.prototype = new a,
                        s.constructor = d,
                        s.getRatio = function(a) {
                            return this._ease && (a = this._ease.getRatio(a)),
                            (this._p3 * Math.exp(this._p1 * a) - this._p3) / this._p2
                        }
                        ,
                        s.config = d.config = function(a, b, c) {
                            return new d(a,b,c)
                        }
                        ,
                        e = k("easing.RoughEase", function(b) {
                            b = b || {};
                            for (var c, d, e, f, g, h, i = b.taper || "none", j = [], k = 0, l = 0 | (b.points || 20), m = l, n = !1 !== b.randomize, p = !0 === b.clamp, q = b.template instanceof a ? b.template : null, r = "number" == typeof b.strength ? .4 * b.strength : .4; --m > -1; )
                                c = n ? Math.random() : 1 / l * m,
                                d = q ? q.getRatio(c) : c,
                                "none" === i ? e = r : "out" === i ? (f = 1 - c,
                                e = f * f * r) : "in" === i ? e = c * c * r : c < .5 ? (f = 2 * c,
                                e = f * f * .5 * r) : (f = 2 * (1 - c),
                                e = f * f * .5 * r),
                                n ? d += Math.random() * e - .5 * e : m % 2 ? d += .5 * e : d -= .5 * e,
                                p && (d > 1 ? d = 1 : d < 0 && (d = 0)),
                                j[k++] = {
                                    x: c,
                                    y: d
                                };
                            for (j.sort(function(a, b) {
                                return a.x - b.x
                            }),
                            h = new o(1,1,null),
                            m = l; --m > -1; )
                                g = j[m],
                                h = new o(g.x,g.y,h);
                            this._prev = new o(0,0,0 !== h.t ? h : h.next)
                        }, !0),
                        s = e.prototype = new a,
                        s.constructor = e,
                        s.getRatio = function(a) {
                            var b = this._prev;
                            if (a > b.t) {
                                for (; b.next && a >= b.t; )
                                    b = b.next;
                                b = b.prev
                            } else
                                for (; b.prev && a <= b.t; )
                                    b = b.prev;
                            return this._prev = b,
                            b.v + (a - b.t) / b.gap * b.c
                        }
                        ,
                        s.config = function(a) {
                            return new e(a)
                        }
                        ,
                        e.ease = new e,
                        n("Bounce", l("BounceOut", function(a) {
                            return a < 1 / 2.75 ? 7.5625 * a * a : a < 2 / 2.75 ? 7.5625 * (a -= 1.5 / 2.75) * a + .75 : a < 2.5 / 2.75 ? 7.5625 * (a -= 2.25 / 2.75) * a + .9375 : 7.5625 * (a -= 2.625 / 2.75) * a + .984375
                        }), l("BounceIn", function(a) {
                            return (a = 1 - a) < 1 / 2.75 ? 1 - 7.5625 * a * a : a < 2 / 2.75 ? 1 - (7.5625 * (a -= 1.5 / 2.75) * a + .75) : a < 2.5 / 2.75 ? 1 - (7.5625 * (a -= 2.25 / 2.75) * a + .9375) : 1 - (7.5625 * (a -= 2.625 / 2.75) * a + .984375)
                        }), l("BounceInOut", function(a) {
                            var b = a < .5;
                            return a = b ? 1 - 2 * a : 2 * a - 1,
                            a < 1 / 2.75 ? a *= 7.5625 * a : a = a < 2 / 2.75 ? 7.5625 * (a -= 1.5 / 2.75) * a + .75 : a < 2.5 / 2.75 ? 7.5625 * (a -= 2.25 / 2.75) * a + .9375 : 7.5625 * (a -= 2.625 / 2.75) * a + .984375,
                            b ? .5 * (1 - a) : .5 * a + .5
                        })),
                        n("Circ", l("CircOut", function(a) {
                            return Math.sqrt(1 - (a -= 1) * a)
                        }), l("CircIn", function(a) {
                            return -(Math.sqrt(1 - a * a) - 1)
                        }), l("CircInOut", function(a) {
                            return (a *= 2) < 1 ? -.5 * (Math.sqrt(1 - a * a) - 1) : .5 * (Math.sqrt(1 - (a -= 2) * a) + 1)
                        })),
                        f = function(b, c, d) {
                            var e = k("easing." + b, function(a, b) {
                                this._p1 = a >= 1 ? a : 1,
                                this._p2 = (b || d) / (a < 1 ? a : 1),
                                this._p3 = this._p2 / i * (Math.asin(1 / this._p1) || 0),
                                this._p2 = i / this._p2
                            }, !0)
                              , f = e.prototype = new a;
                            return f.constructor = e,
                            f.getRatio = c,
                            f.config = function(a, b) {
                                return new e(a,b)
                            }
                            ,
                            e
                        }
                        ,
                        n("Elastic", f("ElasticOut", function(a) {
                            return this._p1 * Math.pow(2, -10 * a) * Math.sin((a - this._p3) * this._p2) + 1
                        }, .3), f("ElasticIn", function(a) {
                            return -this._p1 * Math.pow(2, 10 * (a -= 1)) * Math.sin((a - this._p3) * this._p2)
                        }, .3), f("ElasticInOut", function(a) {
                            return (a *= 2) < 1 ? this._p1 * Math.pow(2, 10 * (a -= 1)) * Math.sin((a - this._p3) * this._p2) * -.5 : this._p1 * Math.pow(2, -10 * (a -= 1)) * Math.sin((a - this._p3) * this._p2) * .5 + 1
                        }, .45)),
                        n("Expo", l("ExpoOut", function(a) {
                            return 1 - Math.pow(2, -10 * a)
                        }), l("ExpoIn", function(a) {
                            return Math.pow(2, 10 * (a - 1)) - .001
                        }), l("ExpoInOut", function(a) {
                            return (a *= 2) < 1 ? .5 * Math.pow(2, 10 * (a - 1)) : .5 * (2 - Math.pow(2, -10 * (a - 1)))
                        })),
                        n("Sine", l("SineOut", function(a) {
                            return Math.sin(a * j)
                        }), l("SineIn", function(a) {
                            return 1 - Math.cos(a * j)
                        }), l("SineInOut", function(a) {
                            return -.5 * (Math.cos(Math.PI * a) - 1)
                        })),
                        k("easing.EaseLookup", {
                            find: function(b) {
                                return a.map[b]
                            }
                        }, !0),
                        m(g.SlowMo, "SlowMo", "ease,"),
                        m(e, "RoughEase", "ease,"),
                        m(b, "SteppedEase", "ease,"),
                        q
                    }, !0)
                }),
                c._gsDefine && c._gsQueue.pop()(),
                function(a, c) {
                    "use strict";
                    var d = {}
                      , e = a.document
                      , f = a.GreenSockGlobals = a.GreenSockGlobals || a;
                    if (f.TweenLite)
                        return f.TweenLite;
                    var g, h, i, j, k, l = function(a) {
                        var b, c = a.split("."), d = f;
                        for (b = 0; b < c.length; b++)
                            d[c[b]] = d = d[c[b]] || {};
                        return d
                    }, m = l("com.greensock"), n = function(a) {
                        var b, c = [], d = a.length;
                        for (b = 0; b !== d; c.push(a[b++]))
                            ;
                        return c
                    }, o = function() {}, p = function() {
                        var a = Object.prototype.toString
                          , b = a.call([]);
                        return function(c) {
                            return null != c && (c instanceof Array || "object" == typeof c && !!c.push && a.call(c) === b)
                        }
                    }(), q = {}, r = function(c, e, g, h) {
                        this.sc = q[c] ? q[c].sc : [],
                        q[c] = this,
                        this.gsClass = null,
                        this.func = g;
                        var i = [];
                        this.check = function(j) {
                            for (var k, m, n, o, p = e.length, s = p; --p > -1; )
                                (k = q[e[p]] || new r(e[p],[])).gsClass ? (i[p] = k.gsClass,
                                s--) : j && k.sc.push(this);
                            if (0 === s && g) {
                                if (m = ("com.greensock." + c).split("."),
                                n = m.pop(),
                                o = l(m.join("."))[n] = this.gsClass = g.apply(g, i),
                                h)
                                    if (f[n] = d[n] = o,
                                    void 0 !== b && b.exports)
                                        if ("TweenMax" === c) {
                                            b.exports = d.TweenMax = o;
                                            for (p in d)
                                                o[p] = d[p]
                                        } else
                                            d.TweenMax && (d.TweenMax[n] = o);
                                    else
                                        "function" == typeof define && define.amd && define((a.GreenSockAMDPath ? a.GreenSockAMDPath + "/" : "") + c.split(".").pop(), [], function() {
                                            return o
                                        });
                                for (p = 0; p < this.sc.length; p++)
                                    this.sc[p].check()
                            }
                        }
                        ,
                        this.check(!0)
                    }, s = a._gsDefine = function(a, b, c, d) {
                        return new r(a,b,c,d)
                    }
                    , t = m._class = function(a, b, c) {
                        return b = b || function() {}
                        ,
                        s(a, [], function() {
                            return b
                        }, c),
                        b
                    }
                    ;
                    s.globals = f;
                    var u = [0, 0, 1, 1]
                      , v = t("easing.Ease", function(a, b, c, d) {
                        this._func = a,
                        this._type = c || 0,
                        this._power = d || 0,
                        this._params = b ? u.concat(b) : u
                    }, !0)
                      , w = v.map = {}
                      , x = v.register = function(a, b, c, d) {
                        for (var e, f, g, h, i = b.split(","), j = i.length, k = (c || "easeIn,easeOut,easeInOut").split(","); --j > -1; )
                            for (f = i[j],
                            e = d ? t("easing." + f, null, !0) : m.easing[f] || {},
                            g = k.length; --g > -1; )
                                h = k[g],
                                w[f + "." + h] = w[h + f] = e[h] = a.getRatio ? a : a[h] || new a
                    }
                    ;
                    for (i = v.prototype,
                    i._calcEnd = !1,
                    i.getRatio = function(a) {
                        if (this._func)
                            return this._params[0] = a,
                            this._func.apply(null, this._params);
                        var b = this._type
                          , c = this._power
                          , d = 1 === b ? 1 - a : 2 === b ? a : a < .5 ? 2 * a : 2 * (1 - a);
                        return 1 === c ? d *= d : 2 === c ? d *= d * d : 3 === c ? d *= d * d * d : 4 === c && (d *= d * d * d * d),
                        1 === b ? 1 - d : 2 === b ? d : a < .5 ? d / 2 : 1 - d / 2
                    }
                    ,
                    g = ["Linear", "Quad", "Cubic", "Quart", "Quint,Strong"],
                    h = g.length; --h > -1; )
                        i = g[h] + ",Power" + h,
                        x(new v(null,null,1,h), i, "easeOut", !0),
                        x(new v(null,null,2,h), i, "easeIn" + (0 === h ? ",easeNone" : "")),
                        x(new v(null,null,3,h), i, "easeInOut");
                    w.linear = m.easing.Linear.easeIn,
                    w.swing = m.easing.Quad.easeInOut;
                    var y = t("events.EventDispatcher", function(a) {
                        this._listeners = {},
                        this._eventTarget = a || this
                    });
                    i = y.prototype,
                    i.addEventListener = function(a, b, c, d, e) {
                        e = e || 0;
                        var f, g, h = this._listeners[a], i = 0;
                        for (this !== j || k || j.wake(),
                        null == h && (this._listeners[a] = h = []),
                        g = h.length; --g > -1; )
                            f = h[g],
                            f.c === b && f.s === c ? h.splice(g, 1) : 0 === i && f.pr < e && (i = g + 1);
                        h.splice(i, 0, {
                            c: b,
                            s: c,
                            up: d,
                            pr: e
                        })
                    }
                    ,
                    i.removeEventListener = function(a, b) {
                        var c, d = this._listeners[a];
                        if (d)
                            for (c = d.length; --c > -1; )
                                if (d[c].c === b)
                                    return void d.splice(c, 1)
                    }
                    ,
                    i.dispatchEvent = function(a) {
                        var b, c, d, e = this._listeners[a];
                        if (e)
                            for (b = e.length,
                            b > 1 && (e = e.slice(0)),
                            c = this._eventTarget; --b > -1; )
                                (d = e[b]) && (d.up ? d.c.call(d.s || c, {
                                    type: a,
                                    target: c
                                }) : d.c.call(d.s || c))
                    }
                    ;
                    var z = a.requestAnimationFrame
                      , A = a.cancelAnimationFrame
                      , B = Date.now || function() {
                        return (new Date).getTime()
                    }
                      , C = B();
                    for (g = ["ms", "moz", "webkit", "o"],
                    h = g.length; --h > -1 && !z; )
                        z = a[g[h] + "RequestAnimationFrame"],
                        A = a[g[h] + "CancelAnimationFrame"] || a[g[h] + "CancelRequestAnimationFrame"];
                    t("Ticker", function(a, b) {
                        var c, d, f, g, h, i = this, l = B(), m = !(!1 === b || !z) && "auto", n = 500, p = 33, q = function(a) {
                            var b, e, j = B() - C;
                            j > n && (l += j - p),
                            C += j,
                            i.time = (C - l) / 1e3,
                            b = i.time - h,
                            (!c || b > 0 || !0 === a) && (i.frame++,
                            h += b + (b >= g ? .004 : g - b),
                            e = !0),
                            !0 !== a && (f = d(q)),
                            e && i.dispatchEvent("tick")
                        };
                        y.call(i),
                        i.time = i.frame = 0,
                        i.tick = function() {
                            q(!0)
                        }
                        ,
                        i.lagSmoothing = function(a, b) {
                            if (!arguments.length)
                                return n < 1e10;
                            n = a || 1e10,
                            p = Math.min(b, n, 0)
                        }
                        ,
                        i.sleep = function() {
                            null != f && (m && A ? A(f) : clearTimeout(f),
                            d = o,
                            f = null,
                            i === j && (k = !1))
                        }
                        ,
                        i.wake = function(a) {
                            null !== f ? i.sleep() : a ? l += -C + (C = B()) : i.frame > 10 && (C = B() - n + 5),
                            d = 0 === c ? o : m && z ? z : function(a) {
                                return setTimeout(a, 1e3 * (h - i.time) + 1 | 0)
                            }
                            ,
                            i === j && (k = !0),
                            q(2)
                        }
                        ,
                        i.fps = function(a) {
                            if (!arguments.length)
                                return c;
                            c = a,
                            g = 1 / (c || 60),
                            h = this.time + g,
                            i.wake()
                        }
                        ,
                        i.useRAF = function(a) {
                            if (!arguments.length)
                                return m;
                            i.sleep(),
                            m = a,
                            i.fps(c)
                        }
                        ,
                        i.fps(a),
                        setTimeout(function() {
                            "auto" === m && i.frame < 5 && "hidden" !== (e || {}).visibilityState && i.useRAF(!1)
                        }, 1500)
                    }),
                    i = m.Ticker.prototype = new m.events.EventDispatcher,
                    i.constructor = m.Ticker;
                    var D = t("core.Animation", function(a, b) {
                        if (this.vars = b = b || {},
                        this._duration = this._totalDuration = a || 0,
                        this._delay = Number(b.delay) || 0,
                        this._timeScale = 1,
                        this._active = !0 === b.immediateRender,
                        this.data = b.data,
                        this._reversed = !0 === b.reversed,
                        X) {
                            k || j.wake();
                            var c = this.vars.useFrames ? W : X;
                            c.add(this, c._time),
                            this.vars.paused && this.paused(!0)
                        }
                    });
                    j = D.ticker = new m.Ticker,
                    i = D.prototype,
                    i._dirty = i._gc = i._initted = i._paused = !1,
                    i._totalTime = i._time = 0,
                    i._rawPrevTime = -1,
                    i._next = i._last = i._onUpdate = i._timeline = i.timeline = null,
                    i._paused = !1;
                    var E = function() {
                        k && B() - C > 2e3 && ("hidden" !== (e || {}).visibilityState || !j.lagSmoothing()) && j.wake();
                        var a = setTimeout(E, 2e3);
                        a.unref && a.unref()
                    };
                    E(),
                    i.play = function(a, b) {
                        return null != a && this.seek(a, b),
                        this.reversed(!1).paused(!1)
                    }
                    ,
                    i.pause = function(a, b) {
                        return null != a && this.seek(a, b),
                        this.paused(!0)
                    }
                    ,
                    i.resume = function(a, b) {
                        return null != a && this.seek(a, b),
                        this.paused(!1)
                    }
                    ,
                    i.seek = function(a, b) {
                        return this.totalTime(Number(a), !1 !== b)
                    }
                    ,
                    i.restart = function(a, b) {
                        return this.reversed(!1).paused(!1).totalTime(a ? -this._delay : 0, !1 !== b, !0)
                    }
                    ,
                    i.reverse = function(a, b) {
                        return null != a && this.seek(a || this.totalDuration(), b),
                        this.reversed(!0).paused(!1)
                    }
                    ,
                    i.render = function(a, b, c) {}
                    ,
                    i.invalidate = function() {
                        return this._time = this._totalTime = 0,
                        this._initted = this._gc = !1,
                        this._rawPrevTime = -1,
                        !this._gc && this.timeline || this._enabled(!0),
                        this
                    }
                    ,
                    i.isActive = function() {
                        var a, b = this._timeline, c = this._startTime;
                        return !b || !this._gc && !this._paused && b.isActive() && (a = b.rawTime(!0)) >= c && a < c + this.totalDuration() / this._timeScale - 1e-7
                    }
                    ,
                    i._enabled = function(a, b) {
                        return k || j.wake(),
                        this._gc = !a,
                        this._active = this.isActive(),
                        !0 !== b && (a && !this.timeline ? this._timeline.add(this, this._startTime - this._delay) : !a && this.timeline && this._timeline._remove(this, !0)),
                        !1
                    }
                    ,
                    i._kill = function(a, b) {
                        return this._enabled(!1, !1)
                    }
                    ,
                    i.kill = function(a, b) {
                        return this._kill(a, b),
                        this
                    }
                    ,
                    i._uncache = function(a) {
                        for (var b = a ? this : this.timeline; b; )
                            b._dirty = !0,
                            b = b.timeline;
                        return this
                    }
                    ,
                    i._swapSelfInParams = function(a) {
                        for (var b = a.length, c = a.concat(); --b > -1; )
                            "{self}" === a[b] && (c[b] = this);
                        return c
                    }
                    ,
                    i._callback = function(a) {
                        var b = this.vars
                          , c = b[a]
                          , d = b[a + "Params"]
                          , e = b[a + "Scope"] || b.callbackScope || this;
                        switch (d ? d.length : 0) {
                        case 0:
                            c.call(e);
                            break;
                        case 1:
                            c.call(e, d[0]);
                            break;
                        case 2:
                            c.call(e, d[0], d[1]);
                            break;
                        default:
                            c.apply(e, d)
                        }
                    }
                    ,
                    i.eventCallback = function(a, b, c, d) {
                        if ("on" === (a || "").substr(0, 2)) {
                            var e = this.vars;
                            if (1 === arguments.length)
                                return e[a];
                            null == b ? delete e[a] : (e[a] = b,
                            e[a + "Params"] = p(c) && -1 !== c.join("").indexOf("{self}") ? this._swapSelfInParams(c) : c,
                            e[a + "Scope"] = d),
                            "onUpdate" === a && (this._onUpdate = b)
                        }
                        return this
                    }
                    ,
                    i.delay = function(a) {
                        return arguments.length ? (this._timeline.smoothChildTiming && this.startTime(this._startTime + a - this._delay),
                        this._delay = a,
                        this) : this._delay
                    }
                    ,
                    i.duration = function(a) {
                        return arguments.length ? (this._duration = this._totalDuration = a,
                        this._uncache(!0),
                        this._timeline.smoothChildTiming && this._time > 0 && this._time < this._duration && 0 !== a && this.totalTime(this._totalTime * (a / this._duration), !0),
                        this) : (this._dirty = !1,
                        this._duration)
                    }
                    ,
                    i.totalDuration = function(a) {
                        return this._dirty = !1,
                        arguments.length ? this.duration(a) : this._totalDuration
                    }
                    ,
                    i.time = function(a, b) {
                        return arguments.length ? (this._dirty && this.totalDuration(),
                        this.totalTime(a > this._duration ? this._duration : a, b)) : this._time
                    }
                    ,
                    i.totalTime = function(a, b, c) {
                        if (k || j.wake(),
                        !arguments.length)
                            return this._totalTime;
                        if (this._timeline) {
                            if (a < 0 && !c && (a += this.totalDuration()),
                            this._timeline.smoothChildTiming) {
                                this._dirty && this.totalDuration();
                                var d = this._totalDuration
                                  , e = this._timeline;
                                if (a > d && !c && (a = d),
                                this._startTime = (this._paused ? this._pauseTime : e._time) - (this._reversed ? d - a : a) / this._timeScale,
                                e._dirty || this._uncache(!1),
                                e._timeline)
                                    for (; e._timeline; )
                                        e._timeline._time !== (e._startTime + e._totalTime) / e._timeScale && e.totalTime(e._totalTime, !0),
                                        e = e._timeline
                            }
                            this._gc && this._enabled(!0, !1),
                            this._totalTime === a && 0 !== this._duration || (J.length && Z(),
                            this.render(a, b, !1),
                            J.length && Z())
                        }
                        return this
                    }
                    ,
                    i.progress = i.totalProgress = function(a, b) {
                        var c = this.duration();
                        return arguments.length ? this.totalTime(c * a, b) : c ? this._time / c : this.ratio
                    }
                    ,
                    i.startTime = function(a) {
                        return arguments.length ? (a !== this._startTime && (this._startTime = a,
                        this.timeline && this.timeline._sortChildren && this.timeline.add(this, a - this._delay)),
                        this) : this._startTime
                    }
                    ,
                    i.endTime = function(a) {
                        return this._startTime + (0 != a ? this.totalDuration() : this.duration()) / this._timeScale
                    }
                    ,
                    i.timeScale = function(a) {
                        if (!arguments.length)
                            return this._timeScale;
                        var b, c;
                        for (a = a || 1e-10,
                        this._timeline && this._timeline.smoothChildTiming && (b = this._pauseTime,
                        c = b || 0 === b ? b : this._timeline.totalTime(),
                        this._startTime = c - (c - this._startTime) * this._timeScale / a),
                        this._timeScale = a,
                        c = this.timeline; c && c.timeline; )
                            c._dirty = !0,
                            c.totalDuration(),
                            c = c.timeline;
                        return this
                    }
                    ,
                    i.reversed = function(a) {
                        return arguments.length ? (a != this._reversed && (this._reversed = a,
                        this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime : this._totalTime, !0)),
                        this) : this._reversed
                    }
                    ,
                    i.paused = function(a) {
                        if (!arguments.length)
                            return this._paused;
                        var b, c, d = this._timeline;
                        return a != this._paused && d && (k || a || j.wake(),
                        b = d.rawTime(),
                        c = b - this._pauseTime,
                        !a && d.smoothChildTiming && (this._startTime += c,
                        this._uncache(!1)),
                        this._pauseTime = a ? b : null,
                        this._paused = a,
                        this._active = this.isActive(),
                        !a && 0 !== c && this._initted && this.duration() && (b = d.smoothChildTiming ? this._totalTime : (b - this._startTime) / this._timeScale,
                        this.render(b, b === this._totalTime, !0))),
                        this._gc && !a && this._enabled(!0, !1),
                        this
                    }
                    ;
                    var F = t("core.SimpleTimeline", function(a) {
                        D.call(this, 0, a),
                        this.autoRemoveChildren = this.smoothChildTiming = !0
                    });
                    i = F.prototype = new D,
                    i.constructor = F,
                    i.kill()._gc = !1,
                    i._first = i._last = i._recent = null,
                    i._sortChildren = !1,
                    i.add = i.insert = function(a, b, c, d) {
                        var e, f;
                        if (a._startTime = Number(b || 0) + a._delay,
                        a._paused && this !== a._timeline && (a._pauseTime = this.rawTime() - (a._timeline.rawTime() - a._pauseTime)),
                        a.timeline && a.timeline._remove(a, !0),
                        a.timeline = a._timeline = this,
                        a._gc && a._enabled(!0, !0),
                        e = this._last,
                        this._sortChildren)
                            for (f = a._startTime; e && e._startTime > f; )
                                e = e._prev;
                        return e ? (a._next = e._next,
                        e._next = a) : (a._next = this._first,
                        this._first = a),
                        a._next ? a._next._prev = a : this._last = a,
                        a._prev = e,
                        this._recent = a,
                        this._timeline && this._uncache(!0),
                        this
                    }
                    ,
                    i._remove = function(a, b) {
                        return a.timeline === this && (b || a._enabled(!1, !0),
                        a._prev ? a._prev._next = a._next : this._first === a && (this._first = a._next),
                        a._next ? a._next._prev = a._prev : this._last === a && (this._last = a._prev),
                        a._next = a._prev = a.timeline = null,
                        a === this._recent && (this._recent = this._last),
                        this._timeline && this._uncache(!0)),
                        this
                    }
                    ,
                    i.render = function(a, b, c) {
                        var d, e = this._first;
                        for (this._totalTime = this._time = this._rawPrevTime = a; e; )
                            d = e._next,
                            (e._active || a >= e._startTime && !e._paused && !e._gc) && (e._reversed ? e.render((e._dirty ? e.totalDuration() : e._totalDuration) - (a - e._startTime) * e._timeScale, b, c) : e.render((a - e._startTime) * e._timeScale, b, c)),
                            e = d
                    }
                    ,
                    i.rawTime = function() {
                        return k || j.wake(),
                        this._totalTime
                    }
                    ;
                    var G = t("TweenLite", function(b, c, d) {
                        if (D.call(this, c, d),
                        this.render = G.prototype.render,
                        null == b)
                            throw "Cannot tween a null target.";
                        this.target = b = "string" != typeof b ? b : G.selector(b) || b;
                        var e, f, g, h = b.jquery || b.length && b !== a && b[0] && (b[0] === a || b[0].nodeType && b[0].style && !b.nodeType), i = this.vars.overwrite;
                        if (this._overwrite = i = null == i ? V[G.defaultOverwrite] : "number" == typeof i ? i >> 0 : V[i],
                        (h || b instanceof Array || b.push && p(b)) && "number" != typeof b[0])
                            for (this._targets = g = n(b),
                            this._propLookup = [],
                            this._siblings = [],
                            e = 0; e < g.length; e++)
                                f = g[e],
                                f ? "string" != typeof f ? f.length && f !== a && f[0] && (f[0] === a || f[0].nodeType && f[0].style && !f.nodeType) ? (g.splice(e--, 1),
                                this._targets = g = g.concat(n(f))) : (this._siblings[e] = $(f, this, !1),
                                1 === i && this._siblings[e].length > 1 && aa(f, this, null, 1, this._siblings[e])) : "string" == typeof (f = g[e--] = G.selector(f)) && g.splice(e + 1, 1) : g.splice(e--, 1);
                        else
                            this._propLookup = {},
                            this._siblings = $(b, this, !1),
                            1 === i && this._siblings.length > 1 && aa(b, this, null, 1, this._siblings);
                        (this.vars.immediateRender || 0 === c && 0 === this._delay && !1 !== this.vars.immediateRender) && (this._time = -1e-10,
                        this.render(Math.min(0, -this._delay)))
                    }, !0)
                      , H = function(b) {
                        return b && b.length && b !== a && b[0] && (b[0] === a || b[0].nodeType && b[0].style && !b.nodeType)
                    }
                      , I = function(a, b) {
                        var c, d = {};
                        for (c in a)
                            U[c] || c in b && "transform" !== c && "x" !== c && "y" !== c && "width" !== c && "height" !== c && "className" !== c && "border" !== c || !(!R[c] || R[c] && R[c]._autoCSS) || (d[c] = a[c],
                            delete a[c]);
                        a.css = d
                    };
                    i = G.prototype = new D,
                    i.constructor = G,
                    i.kill()._gc = !1,
                    i.ratio = 0,
                    i._firstPT = i._targets = i._overwrittenProps = i._startAt = null,
                    i._notifyPluginsOfEnabled = i._lazy = !1,
                    G.version = "1.20.5",
                    G.defaultEase = i._ease = new v(null,null,1,1),
                    G.defaultOverwrite = "auto",
                    G.ticker = j,
                    G.autoSleep = 120,
                    G.lagSmoothing = function(a, b) {
                        j.lagSmoothing(a, b)
                    }
                    ,
                    G.selector = a.$ || a.jQuery || function(b) {
                        var c = a.$ || a.jQuery;
                        return c ? (G.selector = c,
                        c(b)) : (e || (e = a.document),
                        e ? e.querySelectorAll ? e.querySelectorAll(b) : e.getElementById("#" === b.charAt(0) ? b.substr(1) : b) : b)
                    }
                    ;
                    var J = []
                      , K = {}
                      , L = /(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi
                      , M = /[\+-]=-?[\.\d]/
                      , N = function(a) {
                        for (var b, c = this._firstPT; c; )
                            b = c.blob ? 1 === a && null != this.end ? this.end : a ? this.join("") : this.start : c.c * a + c.s,
                            c.m ? b = c.m.call(this._tween, b, this._target || c.t, this._tween) : b < 1e-6 && b > -1e-6 && !c.blob && (b = 0),
                            c.f ? c.fp ? c.t[c.p](c.fp, b) : c.t[c.p](b) : c.t[c.p] = b,
                            c = c._next
                    }
                      , O = function(a, b, c, d) {
                        var e, f, g, h, i, j, k, l = [], m = 0, n = "", o = 0;
                        for (l.start = a,
                        l.end = b,
                        a = l[0] = a + "",
                        b = l[1] = b + "",
                        c && (c(l),
                        a = l[0],
                        b = l[1]),
                        l.length = 0,
                        e = a.match(L) || [],
                        f = b.match(L) || [],
                        d && (d._next = null,
                        d.blob = 1,
                        l._firstPT = l._applyPT = d),
                        i = f.length,
                        h = 0; h < i; h++)
                            k = f[h],
                            j = b.substr(m, b.indexOf(k, m) - m),
                            n += j || !h ? j : ",",
                            m += j.length,
                            o ? o = (o + 1) % 5 : "rgba(" === j.substr(-5) && (o = 1),
                            k === e[h] || e.length <= h ? n += k : (n && (l.push(n),
                            n = ""),
                            g = parseFloat(e[h]),
                            l.push(g),
                            l._firstPT = {
                                _next: l._firstPT,
                                t: l,
                                p: l.length - 1,
                                s: g,
                                c: ("=" === k.charAt(1) ? parseInt(k.charAt(0) + "1", 10) * parseFloat(k.substr(2)) : parseFloat(k) - g) || 0,
                                f: 0,
                                m: o && o < 4 ? Math.round : 0
                            }),
                            m += k.length;
                        return n += b.substr(m),
                        n && l.push(n),
                        l.setRatio = N,
                        M.test(b) && (l.end = null),
                        l
                    }
                      , P = function(a, b, c, d, e, f, g, h, i) {
                        "function" == typeof d && (d = d(i || 0, a));
                        var j, k = typeof a[b], l = "function" !== k ? "" : b.indexOf("set") || "function" != typeof a["get" + b.substr(3)] ? b : "get" + b.substr(3), m = "get" !== c ? c : l ? g ? a[l](g) : a[l]() : a[b], n = "string" == typeof d && "=" === d.charAt(1), o = {
                            t: a,
                            p: b,
                            s: m,
                            f: "function" === k,
                            pg: 0,
                            n: e || b,
                            m: f ? "function" == typeof f ? f : Math.round : 0,
                            pr: 0,
                            c: n ? parseInt(d.charAt(0) + "1", 10) * parseFloat(d.substr(2)) : parseFloat(d) - m || 0
                        };
                        if (("number" != typeof m || "number" != typeof d && !n) && (g || isNaN(m) || !n && isNaN(d) || "boolean" == typeof m || "boolean" == typeof d ? (o.fp = g,
                        j = O(m, n ? parseFloat(o.s) + o.c + (o.s + "").replace(/[0-9\-\.]/g, "") : d, h || G.defaultStringFilter, o),
                        o = {
                            t: j,
                            p: "setRatio",
                            s: 0,
                            c: 1,
                            f: 2,
                            pg: 0,
                            n: e || b,
                            pr: 0,
                            m: 0
                        }) : (o.s = parseFloat(m),
                        n || (o.c = parseFloat(d) - o.s || 0))),
                        o.c)
                            return (o._next = this._firstPT) && (o._next._prev = o),
                            this._firstPT = o,
                            o
                    }
                      , Q = G._internals = {
                        isArray: p,
                        isSelector: H,
                        lazyTweens: J,
                        blobDif: O
                    }
                      , R = G._plugins = {}
                      , S = Q.tweenLookup = {}
                      , T = 0
                      , U = Q.reservedProps = {
                        ease: 1,
                        delay: 1,
                        overwrite: 1,
                        onComplete: 1,
                        onCompleteParams: 1,
                        onCompleteScope: 1,
                        useFrames: 1,
                        runBackwards: 1,
                        startAt: 1,
                        onUpdate: 1,
                        onUpdateParams: 1,
                        onUpdateScope: 1,
                        onStart: 1,
                        onStartParams: 1,
                        onStartScope: 1,
                        onReverseComplete: 1,
                        onReverseCompleteParams: 1,
                        onReverseCompleteScope: 1,
                        onRepeat: 1,
                        onRepeatParams: 1,
                        onRepeatScope: 1,
                        easeParams: 1,
                        yoyo: 1,
                        immediateRender: 1,
                        repeat: 1,
                        repeatDelay: 1,
                        data: 1,
                        paused: 1,
                        reversed: 1,
                        autoCSS: 1,
                        lazy: 1,
                        onOverwrite: 1,
                        callbackScope: 1,
                        stringFilter: 1,
                        id: 1,
                        yoyoEase: 1
                    }
                      , V = {
                        none: 0,
                        all: 1,
                        auto: 2,
                        concurrent: 3,
                        allOnStart: 4,
                        preexisting: 5,
                        true: 1,
                        false: 0
                    }
                      , W = D._rootFramesTimeline = new F
                      , X = D._rootTimeline = new F
                      , Y = 30
                      , Z = Q.lazyRender = function() {
                        var a, b = J.length;
                        for (K = {}; --b > -1; )
                            (a = J[b]) && !1 !== a._lazy && (a.render(a._lazy[0], a._lazy[1], !0),
                            a._lazy = !1);
                        J.length = 0
                    }
                    ;
                    X._startTime = j.time,
                    W._startTime = j.frame,
                    X._active = W._active = !0,
                    setTimeout(Z, 1),
                    D._updateRoot = G.render = function() {
                        var a, b, c;
                        if (J.length && Z(),
                        X.render((j.time - X._startTime) * X._timeScale, !1, !1),
                        W.render((j.frame - W._startTime) * W._timeScale, !1, !1),
                        J.length && Z(),
                        j.frame >= Y) {
                            Y = j.frame + (parseInt(G.autoSleep, 10) || 120);
                            for (c in S) {
                                for (b = S[c].tweens,
                                a = b.length; --a > -1; )
                                    b[a]._gc && b.splice(a, 1);
                                0 === b.length && delete S[c]
                            }
                            if ((!(c = X._first) || c._paused) && G.autoSleep && !W._first && 1 === j._listeners.tick.length) {
                                for (; c && c._paused; )
                                    c = c._next;
                                c || j.sleep()
                            }
                        }
                    }
                    ,
                    j.addEventListener("tick", D._updateRoot);
                    var $ = function(a, b, c) {
                        var d, e, f = a._gsTweenID;
                        if (S[f || (a._gsTweenID = f = "t" + T++)] || (S[f] = {
                            target: a,
                            tweens: []
                        }),
                        b && (d = S[f].tweens,
                        d[e = d.length] = b,
                        c))
                            for (; --e > -1; )
                                d[e] === b && d.splice(e, 1);
                        return S[f].tweens
                    }
                      , _ = function(a, b, c, d) {
                        var e, f, g = a.vars.onOverwrite;
                        return g && (e = g(a, b, c, d)),
                        g = G.onOverwrite,
                        g && (f = g(a, b, c, d)),
                        !1 !== e && !1 !== f
                    }
                      , aa = function(a, b, c, d, e) {
                        var f, g, h, i;
                        if (1 === d || d >= 4) {
                            for (i = e.length,
                            f = 0; f < i; f++)
                                if ((h = e[f]) !== b)
                                    h._gc || h._kill(null, a, b) && (g = !0);
                                else if (5 === d)
                                    break;
                            return g
                        }
                        var j, k = b._startTime + 1e-10, l = [], m = 0, n = 0 === b._duration;
                        for (f = e.length; --f > -1; )
                            (h = e[f]) === b || h._gc || h._paused || (h._timeline !== b._timeline ? (j = j || ba(b, 0, n),
                            0 === ba(h, j, n) && (l[m++] = h)) : h._startTime <= k && h._startTime + h.totalDuration() / h._timeScale > k && ((n || !h._initted) && k - h._startTime <= 2e-10 || (l[m++] = h)));
                        for (f = m; --f > -1; )
                            if (h = l[f],
                            2 === d && h._kill(c, a, b) && (g = !0),
                            2 !== d || !h._firstPT && h._initted) {
                                if (2 !== d && !_(h, b))
                                    continue;
                                h._enabled(!1, !1) && (g = !0)
                            }
                        return g
                    }
                      , ba = function(a, b, c) {
                        for (var d = a._timeline, e = d._timeScale, f = a._startTime; d._timeline; ) {
                            if (f += d._startTime,
                            e *= d._timeScale,
                            d._paused)
                                return -100;
                            d = d._timeline
                        }
                        return f /= e,
                        f > b ? f - b : c && f === b || !a._initted && f - b < 2e-10 ? 1e-10 : (f += a.totalDuration() / a._timeScale / e) > b + 1e-10 ? 0 : f - b - 1e-10
                    };
                    i._init = function() {
                        var a, b, c, d, e, f, g = this.vars, h = this._overwrittenProps, i = this._duration, j = !!g.immediateRender, k = g.ease;
                        if (g.startAt) {
                            this._startAt && (this._startAt.render(-1, !0),
                            this._startAt.kill()),
                            e = {};
                            for (d in g.startAt)
                                e[d] = g.startAt[d];
                            if (e.data = "isStart",
                            e.overwrite = !1,
                            e.immediateRender = !0,
                            e.lazy = j && !1 !== g.lazy,
                            e.startAt = e.delay = null,
                            e.onUpdate = g.onUpdate,
                            e.onUpdateParams = g.onUpdateParams,
                            e.onUpdateScope = g.onUpdateScope || g.callbackScope || this,
                            this._startAt = G.to(this.target || {}, 0, e),
                            j)
                                if (this._time > 0)
                                    this._startAt = null;
                                else if (0 !== i)
                                    return
                        } else if (g.runBackwards && 0 !== i)
                            if (this._startAt)
                                this._startAt.render(-1, !0),
                                this._startAt.kill(),
                                this._startAt = null;
                            else {
                                0 !== this._time && (j = !1),
                                c = {};
                                for (d in g)
                                    U[d] && "autoCSS" !== d || (c[d] = g[d]);
                                if (c.overwrite = 0,
                                c.data = "isFromStart",
                                c.lazy = j && !1 !== g.lazy,
                                c.immediateRender = j,
                                this._startAt = G.to(this.target, 0, c),
                                j) {
                                    if (0 === this._time)
                                        return
                                } else
                                    this._startAt._init(),
                                    this._startAt._enabled(!1),
                                    this.vars.immediateRender && (this._startAt = null)
                            }
                        if (this._ease = k = k ? k instanceof v ? k : "function" == typeof k ? new v(k,g.easeParams) : w[k] || G.defaultEase : G.defaultEase,
                        g.easeParams instanceof Array && k.config && (this._ease = k.config.apply(k, g.easeParams)),
                        this._easeType = this._ease._type,
                        this._easePower = this._ease._power,
                        this._firstPT = null,
                        this._targets)
                            for (f = this._targets.length,
                            a = 0; a < f; a++)
                                this._initProps(this._targets[a], this._propLookup[a] = {}, this._siblings[a], h ? h[a] : null, a) && (b = !0);
                        else
                            b = this._initProps(this.target, this._propLookup, this._siblings, h, 0);
                        if (b && G._onPluginEvent("_onInitAllProps", this),
                        h && (this._firstPT || "function" != typeof this.target && this._enabled(!1, !1)),
                        g.runBackwards)
                            for (c = this._firstPT; c; )
                                c.s += c.c,
                                c.c = -c.c,
                                c = c._next;
                        this._onUpdate = g.onUpdate,
                        this._initted = !0
                    }
                    ,
                    i._initProps = function(b, c, d, e, f) {
                        var g, h, i, j, k, l;
                        if (null == b)
                            return !1;
                        K[b._gsTweenID] && Z(),
                        this.vars.css || b.style && b !== a && b.nodeType && R.css && !1 !== this.vars.autoCSS && I(this.vars, b);
                        for (g in this.vars)
                            if (l = this.vars[g],
                            U[g])
                                l && (l instanceof Array || l.push && p(l)) && -1 !== l.join("").indexOf("{self}") && (this.vars[g] = l = this._swapSelfInParams(l, this));
                            else if (R[g] && (j = new R[g])._onInitTween(b, this.vars[g], this, f)) {
                                for (this._firstPT = k = {
                                    _next: this._firstPT,
                                    t: j,
                                    p: "setRatio",
                                    s: 0,
                                    c: 1,
                                    f: 1,
                                    n: g,
                                    pg: 1,
                                    pr: j._priority,
                                    m: 0
                                },
                                h = j._overwriteProps.length; --h > -1; )
                                    c[j._overwriteProps[h]] = this._firstPT;
                                (j._priority || j._onInitAllProps) && (i = !0),
                                (j._onDisable || j._onEnable) && (this._notifyPluginsOfEnabled = !0),
                                k._next && (k._next._prev = k)
                            } else
                                c[g] = P.call(this, b, g, "get", l, g, 0, null, this.vars.stringFilter, f);
                        return e && this._kill(e, b) ? this._initProps(b, c, d, e, f) : this._overwrite > 1 && this._firstPT && d.length > 1 && aa(b, this, c, this._overwrite, d) ? (this._kill(c, b),
                        this._initProps(b, c, d, e, f)) : (this._firstPT && (!1 !== this.vars.lazy && this._duration || this.vars.lazy && !this._duration) && (K[b._gsTweenID] = !0),
                        i)
                    }
                    ,
                    i.render = function(a, b, c) {
                        var d, e, f, g, h = this._time, i = this._duration, j = this._rawPrevTime;
                        if (a >= i - 1e-7 && a >= 0)
                            this._totalTime = this._time = i,
                            this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1,
                            this._reversed || (d = !0,
                            e = "onComplete",
                            c = c || this._timeline.autoRemoveChildren),
                            0 === i && (this._initted || !this.vars.lazy || c) && (this._startTime === this._timeline._duration && (a = 0),
                            (j < 0 || a <= 0 && a >= -1e-7 || 1e-10 === j && "isPause" !== this.data) && j !== a && (c = !0,
                            j > 1e-10 && (e = "onReverseComplete")),
                            this._rawPrevTime = g = !b || a || j === a ? a : 1e-10);
                        else if (a < 1e-7)
                            this._totalTime = this._time = 0,
                            this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0,
                            (0 !== h || 0 === i && j > 0) && (e = "onReverseComplete",
                            d = this._reversed),
                            a < 0 && (this._active = !1,
                            0 === i && (this._initted || !this.vars.lazy || c) && (j >= 0 && (1e-10 !== j || "isPause" !== this.data) && (c = !0),
                            this._rawPrevTime = g = !b || a || j === a ? a : 1e-10)),
                            (!this._initted || this._startAt && this._startAt.progress()) && (c = !0);
                        else if (this._totalTime = this._time = a,
                        this._easeType) {
                            var k = a / i
                              , l = this._easeType
                              , m = this._easePower;
                            (1 === l || 3 === l && k >= .5) && (k = 1 - k),
                            3 === l && (k *= 2),
                            1 === m ? k *= k : 2 === m ? k *= k * k : 3 === m ? k *= k * k * k : 4 === m && (k *= k * k * k * k),
                            this.ratio = 1 === l ? 1 - k : 2 === l ? k : a / i < .5 ? k / 2 : 1 - k / 2
                        } else
                            this.ratio = this._ease.getRatio(a / i);
                        if (this._time !== h || c) {
                            if (!this._initted) {
                                if (this._init(),
                                !this._initted || this._gc)
                                    return;
                                if (!c && this._firstPT && (!1 !== this.vars.lazy && this._duration || this.vars.lazy && !this._duration))
                                    return this._time = this._totalTime = h,
                                    this._rawPrevTime = j,
                                    J.push(this),
                                    void (this._lazy = [a, b]);
                                this._time && !d ? this.ratio = this._ease.getRatio(this._time / i) : d && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1))
                            }
                            for (!1 !== this._lazy && (this._lazy = !1),
                            this._active || !this._paused && this._time !== h && a >= 0 && (this._active = !0),
                            0 === h && (this._startAt && (a >= 0 ? this._startAt.render(a, !0, c) : e || (e = "_dummyGS")),
                            this.vars.onStart && (0 === this._time && 0 !== i || b || this._callback("onStart"))),
                            f = this._firstPT; f; )
                                f.f ? f.t[f.p](f.c * this.ratio + f.s) : f.t[f.p] = f.c * this.ratio + f.s,
                                f = f._next;
                            this._onUpdate && (a < 0 && this._startAt && -1e-4 !== a && this._startAt.render(a, !0, c),
                            b || (this._time !== h || d || c) && this._callback("onUpdate")),
                            e && (this._gc && !c || (a < 0 && this._startAt && !this._onUpdate && -1e-4 !== a && this._startAt.render(a, !0, c),
                            d && (this._timeline.autoRemoveChildren && this._enabled(!1, !1),
                            this._active = !1),
                            !b && this.vars[e] && this._callback(e),
                            0 === i && 1e-10 === this._rawPrevTime && 1e-10 !== g && (this._rawPrevTime = 0)))
                        }
                    }
                    ,
                    i._kill = function(a, b, c) {
                        if ("all" === a && (a = null),
                        null == a && (null == b || b === this.target))
                            return this._lazy = !1,
                            this._enabled(!1, !1);
                        b = "string" != typeof b ? b || this._targets || this.target : G.selector(b) || b;
                        var d, e, f, g, h, i, j, k, l, m = c && this._time && c._startTime === this._startTime && this._timeline === c._timeline;
                        if ((p(b) || H(b)) && "number" != typeof b[0])
                            for (d = b.length; --d > -1; )
                                this._kill(a, b[d], c) && (i = !0);
                        else {
                            if (this._targets) {
                                for (d = this._targets.length; --d > -1; )
                                    if (b === this._targets[d]) {
                                        h = this._propLookup[d] || {},
                                        this._overwrittenProps = this._overwrittenProps || [],
                                        e = this._overwrittenProps[d] = a ? this._overwrittenProps[d] || {} : "all";
                                        break
                                    }
                            } else {
                                if (b !== this.target)
                                    return !1;
                                h = this._propLookup,
                                e = this._overwrittenProps = a ? this._overwrittenProps || {} : "all"
                            }
                            if (h) {
                                if (j = a || h,
                                k = a !== e && "all" !== e && a !== h && ("object" != typeof a || !a._tempKill),
                                c && (G.onOverwrite || this.vars.onOverwrite)) {
                                    for (f in j)
                                        h[f] && (l || (l = []),
                                        l.push(f));
                                    if ((l || !a) && !_(this, c, b, l))
                                        return !1
                                }
                                for (f in j)
                                    (g = h[f]) && (m && (g.f ? g.t[g.p](g.s) : g.t[g.p] = g.s,
                                    i = !0),
                                    g.pg && g.t._kill(j) && (i = !0),
                                    g.pg && 0 !== g.t._overwriteProps.length || (g._prev ? g._prev._next = g._next : g === this._firstPT && (this._firstPT = g._next),
                                    g._next && (g._next._prev = g._prev),
                                    g._next = g._prev = null),
                                    delete h[f]),
                                    k && (e[f] = 1);
                                !this._firstPT && this._initted && this._enabled(!1, !1)
                            }
                        }
                        return i
                    }
                    ,
                    i.invalidate = function() {
                        return this._notifyPluginsOfEnabled && G._onPluginEvent("_onDisable", this),
                        this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null,
                        this._notifyPluginsOfEnabled = this._active = this._lazy = !1,
                        this._propLookup = this._targets ? {} : [],
                        D.prototype.invalidate.call(this),
                        this.vars.immediateRender && (this._time = -1e-10,
                        this.render(Math.min(0, -this._delay))),
                        this
                    }
                    ,
                    i._enabled = function(a, b) {
                        if (k || j.wake(),
                        a && this._gc) {
                            var c, d = this._targets;
                            if (d)
                                for (c = d.length; --c > -1; )
                                    this._siblings[c] = $(d[c], this, !0);
                            else
                                this._siblings = $(this.target, this, !0)
                        }
                        return D.prototype._enabled.call(this, a, b),
                        !(!this._notifyPluginsOfEnabled || !this._firstPT) && G._onPluginEvent(a ? "_onEnable" : "_onDisable", this)
                    }
                    ,
                    G.to = function(a, b, c) {
                        return new G(a,b,c)
                    }
                    ,
                    G.from = function(a, b, c) {
                        return c.runBackwards = !0,
                        c.immediateRender = 0 != c.immediateRender,
                        new G(a,b,c)
                    }
                    ,
                    G.fromTo = function(a, b, c, d) {
                        return d.startAt = c,
                        d.immediateRender = 0 != d.immediateRender && 0 != c.immediateRender,
                        new G(a,b,d)
                    }
                    ,
                    G.delayedCall = function(a, b, c, d, e) {
                        return new G(b,0,{
                            delay: a,
                            onComplete: b,
                            onCompleteParams: c,
                            callbackScope: d,
                            onReverseComplete: b,
                            onReverseCompleteParams: c,
                            immediateRender: !1,
                            lazy: !1,
                            useFrames: e,
                            overwrite: 0
                        })
                    }
                    ,
                    G.set = function(a, b) {
                        return new G(a,0,b)
                    }
                    ,
                    G.getTweensOf = function(a, b) {
                        if (null == a)
                            return [];
                        a = "string" != typeof a ? a : G.selector(a) || a;
                        var c, d, e, f;
                        if ((p(a) || H(a)) && "number" != typeof a[0]) {
                            for (c = a.length,
                            d = []; --c > -1; )
                                d = d.concat(G.getTweensOf(a[c], b));
                            for (c = d.length; --c > -1; )
                                for (f = d[c],
                                e = c; --e > -1; )
                                    f === d[e] && d.splice(c, 1)
                        } else if (a._gsTweenID)
                            for (d = $(a).concat(),
                            c = d.length; --c > -1; )
                                (d[c]._gc || b && !d[c].isActive()) && d.splice(c, 1);
                        return d || []
                    }
                    ,
                    G.killTweensOf = G.killDelayedCallsTo = function(a, b, c) {
                        "object" == typeof b && (c = b,
                        b = !1);
                        for (var d = G.getTweensOf(a, b), e = d.length; --e > -1; )
                            d[e]._kill(c, a)
                    }
                    ;
                    var ca = t("plugins.TweenPlugin", function(a, b) {
                        this._overwriteProps = (a || "").split(","),
                        this._propName = this._overwriteProps[0],
                        this._priority = b || 0,
                        this._super = ca.prototype
                    }, !0);
                    if (i = ca.prototype,
                    ca.version = "1.19.0",
                    ca.API = 2,
                    i._firstPT = null,
                    i._addTween = P,
                    i.setRatio = N,
                    i._kill = function(a) {
                        var b, c = this._overwriteProps, d = this._firstPT;
                        if (null != a[this._propName])
                            this._overwriteProps = [];
                        else
                            for (b = c.length; --b > -1; )
                                null != a[c[b]] && c.splice(b, 1);
                        for (; d; )
                            null != a[d.n] && (d._next && (d._next._prev = d._prev),
                            d._prev ? (d._prev._next = d._next,
                            d._prev = null) : this._firstPT === d && (this._firstPT = d._next)),
                            d = d._next;
                        return !1
                    }
                    ,
                    i._mod = i._roundProps = function(a) {
                        for (var b, c = this._firstPT; c; )
                            b = a[this._propName] || null != c.n && a[c.n.split(this._propName + "_").join("")],
                            b && "function" == typeof b && (2 === c.f ? c.t._applyPT.m = b : c.m = b),
                            c = c._next
                    }
                    ,
                    G._onPluginEvent = function(a, b) {
                        var c, d, e, f, g, h = b._firstPT;
                        if ("_onInitAllProps" === a) {
                            for (; h; ) {
                                for (g = h._next,
                                d = e; d && d.pr > h.pr; )
                                    d = d._next;
                                (h._prev = d ? d._prev : f) ? h._prev._next = h : e = h,
                                (h._next = d) ? d._prev = h : f = h,
                                h = g
                            }
                            h = b._firstPT = e
                        }
                        for (; h; )
                            h.pg && "function" == typeof h.t[a] && h.t[a]() && (c = !0),
                            h = h._next;
                        return c
                    }
                    ,
                    ca.activate = function(a) {
                        for (var b = a.length; --b > -1; )
                            a[b].API === ca.API && (R[(new a[b])._propName] = a[b]);
                        return !0
                    }
                    ,
                    s.plugin = function(a) {
                        if (!(a && a.propName && a.init && a.API))
                            throw "illegal plugin definition.";
                        var b, c = a.propName, d = a.priority || 0, e = a.overwriteProps, f = {
                            init: "_onInitTween",
                            set: "setRatio",
                            kill: "_kill",
                            round: "_mod",
                            mod: "_mod",
                            initAll: "_onInitAllProps"
                        }, g = t("plugins." + c.charAt(0).toUpperCase() + c.substr(1) + "Plugin", function() {
                            ca.call(this, c, d),
                            this._overwriteProps = e || []
                        }, !0 === a.global), h = g.prototype = new ca(c);
                        h.constructor = g,
                        g.API = a.API;
                        for (b in f)
                            "function" == typeof a[b] && (h[f[b]] = a[b]);
                        return g.version = a.version,
                        ca.activate([g]),
                        g
                    }
                    ,
                    g = a._gsQueue) {
                        for (h = 0; h < g.length; h++)
                            g[h]();
                        for (i in q)
                            q[i].func || a.console.log("GSAP encountered missing dependency: " + i)
                    }
                    k = !1
                }(void 0 !== b && b.exports && void 0 !== a ? a : this || window)
            }
            ).call(this)
        }
        ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }
    , {}],
    5: [function(a, b, c) {
        (function(a) {
            (function() {
                function b(a, b) {
                    for (var c = 0, d = a.length - 1; d >= 0; d--) {
                        var e = a[d];
                        "." === e ? a.splice(d, 1) : ".." === e ? (a.splice(d, 1),
                        c++) : c && (a.splice(d, 1),
                        c--)
                    }
                    if (b)
                        for (; c--; c)
                            a.unshift("..");
                    return a
                }
                function d(a) {
                    "string" != typeof a && (a += "");
                    var b, c = 0, d = -1, e = !0;
                    for (b = a.length - 1; b >= 0; --b)
                        if (47 === a.charCodeAt(b)) {
                            if (!e) {
                                c = b + 1;
                                break
                            }
                        } else
                            -1 === d && (e = !1,
                            d = b + 1);
                    return -1 === d ? "" : a.slice(c, d)
                }
                function e(a, b) {
                    if (a.filter)
                        return a.filter(b);
                    for (var c = [], d = 0; d < a.length; d++)
                        b(a[d], d, a) && c.push(a[d]);
                    return c
                }
                c.resolve = function() {
                    for (var c = "", d = !1, f = arguments.length - 1; f >= -1 && !d; f--) {
                        var g = f >= 0 ? arguments[f] : a.cwd();
                        if ("string" != typeof g)
                            throw new TypeError("Arguments to path.resolve must be strings");
                        g && (c = g + "/" + c,
                        d = "/" === g.charAt(0))
                    }
                    return c = b(e(c.split("/"), function(a) {
                        return !!a
                    }), !d).join("/"),
                    (d ? "/" : "") + c || "."
                }
                ,
                c.normalize = function(a) {
                    var d = c.isAbsolute(a)
                      , g = "/" === f(a, -1);
                    return a = b(e(a.split("/"), function(a) {
                        return !!a
                    }), !d).join("/"),
                    a || d || (a = "."),
                    a && g && (a += "/"),
                    (d ? "/" : "") + a
                }
                ,
                c.isAbsolute = function(a) {
                    return "/" === a.charAt(0)
                }
                ,
                c.join = function() {
                    var a = Array.prototype.slice.call(arguments, 0);
                    return c.normalize(e(a, function(a, b) {
                        if ("string" != typeof a)
                            throw new TypeError("Arguments to path.join must be strings");
                        return a
                    }).join("/"))
                }
                ,
                c.relative = function(a, b) {
                    function d(a) {
                        for (var b = 0; b < a.length && "" === a[b]; b++)
                            ;
                        for (var c = a.length - 1; c >= 0 && "" === a[c]; c--)
                            ;
                        return b > c ? [] : a.slice(b, c - b + 1)
                    }
                    a = c.resolve(a).substr(1),
                    b = c.resolve(b).substr(1);
                    for (var e = d(a.split("/")), f = d(b.split("/")), g = Math.min(e.length, f.length), h = g, i = 0; i < g; i++)
                        if (e[i] !== f[i]) {
                            h = i;
                            break
                        }
                    for (var j = [], i = h; i < e.length; i++)
                        j.push("..");
                    return j = j.concat(f.slice(h)),
                    j.join("/")
                }
                ,
                c.sep = "/",
                c.delimiter = ":",
                c.dirname = function(a) {
                    if ("string" != typeof a && (a += ""),
                    0 === a.length)
                        return ".";
                    for (var b = a.charCodeAt(0), c = 47 === b, d = -1, e = !0, f = a.length - 1; f >= 1; --f)
                        if (47 === (b = a.charCodeAt(f))) {
                            if (!e) {
                                d = f;
                                break
                            }
                        } else
                            e = !1;
                    return -1 === d ? c ? "/" : "." : c && 1 === d ? "/" : a.slice(0, d)
                }
                ,
                c.basename = function(a, b) {
                    var c = d(a);
                    return b && c.substr(-1 * b.length) === b && (c = c.substr(0, c.length - b.length)),
                    c
                }
                ,
                c.extname = function(a) {
                    "string" != typeof a && (a += "");
                    for (var b = -1, c = 0, d = -1, e = !0, f = 0, g = a.length - 1; g >= 0; --g) {
                        var h = a.charCodeAt(g);
                        if (47 !== h)
                            -1 === d && (e = !1,
                            d = g + 1),
                            46 === h ? -1 === b ? b = g : 1 !== f && (f = 1) : -1 !== b && (f = -1);
                        else if (!e) {
                            c = g + 1;
                            break
                        }
                    }
                    return -1 === b || -1 === d || 0 === f || 1 === f && b === d - 1 && b === c + 1 ? "" : a.slice(b, d)
                }
                ;
                var f = "b" === "ab".substr(-1) ? function(a, b, c) {
                    return a.substr(b, c)
                }
                : function(a, b, c) {
                    return b < 0 && (b = a.length + b),
                    a.substr(b, c)
                }
            }
            ).call(this)
        }
        ).call(this, a("_process"))
    }
    , {
        _process: 9
    }],
    6: [function(a, b, c) {
        function d(a, b) {
            for (var c, d = [], e = 0, f = 0, g = "", h = b && b.delimiter || "/"; null != (c = s.exec(a)); ) {
                var k = c[0]
                  , l = c[1]
                  , m = c.index;
                if (g += a.slice(f, m),
                f = m + k.length,
                l)
                    g += l[1];
                else {
                    var n = a[f]
                      , o = c[2]
                      , p = c[3]
                      , q = c[4]
                      , r = c[5]
                      , t = c[6]
                      , u = c[7];
                    g && (d.push(g),
                    g = "");
                    var v = null != o && null != n && n !== o
                      , w = "+" === t || "*" === t
                      , x = "?" === t || "*" === t
                      , y = c[2] || h
                      , z = q || r;
                    d.push({
                        name: p || e++,
                        prefix: o || "",
                        delimiter: y,
                        optional: x,
                        repeat: w,
                        partial: v,
                        asterisk: !!u,
                        pattern: z ? j(z) : u ? ".*" : "[^" + i(y) + "]+?"
                    })
                }
            }
            return f < a.length && (g += a.substr(f)),
            g && d.push(g),
            d
        }
        function e(a, b) {
            return h(d(a, b), b)
        }
        function f(a) {
            return encodeURI(a).replace(/[\/?#]/g, function(a) {
                return "%" + a.charCodeAt(0).toString(16).toUpperCase()
            })
        }
        function g(a) {
            return encodeURI(a).replace(/[?#]/g, function(a) {
                return "%" + a.charCodeAt(0).toString(16).toUpperCase()
            })
        }
        function h(a, b) {
            for (var c = new Array(a.length), d = 0; d < a.length; d++)
                "object" == typeof a[d] && (c[d] = new RegExp("^(?:" + a[d].pattern + ")$",l(b)));
            return function(b, d) {
                for (var e = "", h = b || {}, i = d || {}, j = i.pretty ? f : encodeURIComponent, k = 0; k < a.length; k++) {
                    var l = a[k];
                    if ("string" != typeof l) {
                        var m, n = h[l.name];
                        if (null == n) {
                            if (l.optional) {
                                l.partial && (e += l.prefix);
                                continue
                            }
                            throw new TypeError('Expected "' + l.name + '" to be defined')
                        }
                        if (r(n)) {
                            if (!l.repeat)
                                throw new TypeError('Expected "' + l.name + '" to not repeat, but received `' + JSON.stringify(n) + "`");
                            if (0 === n.length) {
                                if (l.optional)
                                    continue;
                                throw new TypeError('Expected "' + l.name + '" to not be empty')
                            }
                            for (var o = 0; o < n.length; o++) {
                                if (m = j(n[o]),
                                !c[k].test(m))
                                    throw new TypeError('Expected all "' + l.name + '" to match "' + l.pattern + '", but received `' + JSON.stringify(m) + "`");
                                e += (0 === o ? l.prefix : l.delimiter) + m
                            }
                        } else {
                            if (m = l.asterisk ? g(n) : j(n),
                            !c[k].test(m))
                                throw new TypeError('Expected "' + l.name + '" to match "' + l.pattern + '", but received "' + m + '"');
                            e += l.prefix + m
                        }
                    } else
                        e += l
                }
                return e
            }
        }
        function i(a) {
            return a.replace(/([.+*?=^!:${}()[\]|\/\\])/g, "\\$1")
        }
        function j(a) {
            return a.replace(/([=!:$\/()])/g, "\\$1")
        }
        function k(a, b) {
            return a.keys = b,
            a
        }
        function l(a) {
            return a && a.sensitive ? "" : "i"
        }
        function m(a, b) {
            var c = a.source.match(/\((?!\?)/g);
            if (c)
                for (var d = 0; d < c.length; d++)
                    b.push({
                        name: d,
                        prefix: null,
                        delimiter: null,
                        optional: !1,
                        repeat: !1,
                        partial: !1,
                        asterisk: !1,
                        pattern: null
                    });
            return k(a, b)
        }
        function n(a, b, c) {
            for (var d = [], e = 0; e < a.length; e++)
                d.push(q(a[e], b, c).source);
            return k(new RegExp("(?:" + d.join("|") + ")",l(c)), b)
        }
        function o(a, b, c) {
            return p(d(a, c), b, c)
        }
        function p(a, b, c) {
            r(b) || (c = b || c,
            b = []),
            c = c || {};
            for (var d = c.strict, e = !1 !== c.end, f = "", g = 0; g < a.length; g++) {
                var h = a[g];
                if ("string" == typeof h)
                    f += i(h);
                else {
                    var j = i(h.prefix)
                      , m = "(?:" + h.pattern + ")";
                    b.push(h),
                    h.repeat && (m += "(?:" + j + m + ")*"),
                    m = h.optional ? h.partial ? j + "(" + m + ")?" : "(?:" + j + "(" + m + "))?" : j + "(" + m + ")",
                    f += m
                }
            }
            var n = i(c.delimiter || "/")
              , o = f.slice(-n.length) === n;
            return d || (f = (o ? f.slice(0, -n.length) : f) + "(?:" + n + "(?=$))?"),
            f += e ? "$" : d && o ? "" : "(?=" + n + "|$)",
            k(new RegExp("^" + f,l(c)), b)
        }
        function q(a, b, c) {
            return r(b) || (c = b || c,
            b = []),
            c = c || {},
            a instanceof RegExp ? m(a, b) : r(a) ? n(a, b, c) : o(a, b, c)
        }
        var r = a("isarray");
        b.exports = q,
        b.exports.parse = d,
        b.exports.compile = e,
        b.exports.tokensToFunction = h,
        b.exports.tokensToRegExp = p;
        var s = new RegExp(["(\\\\.)", "([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g")
    }
    , {
        isarray: 7
    }],
    7: [function(a, b, c) {
        b.exports = Array.isArray || function(a) {
            return "[object Array]" == Object.prototype.toString.call(a)
        }
    }
    , {}],
    8: [function(require, module, exports) {
        window.createjs = window.createjs || {},
        function() {
            "use strict";
            var a = createjs.PreloadJS = createjs.PreloadJS || {};
            a.version = "0.4.1",
            a.buildDate = "Thu, 12 Dec 2013 23:33:38 GMT"
        }(),
        function() {
            "use strict";
            var a = function(a, b, c) {
                this.initialize(a, b, c)
            }
              , b = a.prototype;
            b.type = null,
            b.target = null,
            b.currentTarget = null,
            b.eventPhase = 0,
            b.bubbles = !1,
            b.cancelable = !1,
            b.timeStamp = 0,
            b.defaultPrevented = !1,
            b.propagationStopped = !1,
            b.immediatePropagationStopped = !1,
            b.removed = !1,
            b.initialize = function(a, b, c) {
                this.type = a,
                this.bubbles = b,
                this.cancelable = c,
                this.timeStamp = (new Date).getTime()
            }
            ,
            b.preventDefault = function() {
                this.defaultPrevented = !0
            }
            ,
            b.stopPropagation = function() {
                this.propagationStopped = !0
            }
            ,
            b.stopImmediatePropagation = function() {
                this.immediatePropagationStopped = this.propagationStopped = !0
            }
            ,
            b.remove = function() {
                this.removed = !0
            }
            ,
            b.clone = function() {
                return new a(this.type,this.bubbles,this.cancelable)
            }
            ,
            b.toString = function() {
                return "[Event (type=" + this.type + ")]"
            }
            ,
            createjs.Event = a
        }(),
        function() {
            "use strict";
            var a = function() {}
              , b = a.prototype;
            a.initialize = function(a) {
                a.addEventListener = b.addEventListener,
                a.on = b.on,
                a.removeEventListener = a.off = b.removeEventListener,
                a.removeAllEventListeners = b.removeAllEventListeners,
                a.hasEventListener = b.hasEventListener,
                a.dispatchEvent = b.dispatchEvent,
                a._dispatchEvent = b._dispatchEvent,
                a.willTrigger = b.willTrigger
            }
            ,
            b._listeners = null,
            b._captureListeners = null,
            b.initialize = function() {}
            ,
            b.addEventListener = function(a, b, c) {
                var d;
                d = c ? this._captureListeners = this._captureListeners || {} : this._listeners = this._listeners || {};
                var e = d[a];
                return e && this.removeEventListener(a, b, c),
                e = d[a],
                e ? e.push(b) : d[a] = [b],
                b
            }
            ,
            b.on = function(a, b, c, d, e, f) {
                return b.handleEvent && (c = c || b,
                b = b.handleEvent),
                c = c || this,
                this.addEventListener(a, function(a) {
                    b.call(c, a, e),
                    d && a.remove()
                }, f)
            }
            ,
            b.removeEventListener = function(a, b, c) {
                var d = c ? this._captureListeners : this._listeners;
                if (d) {
                    var e = d[a];
                    if (e)
                        for (var f = 0, g = e.length; g > f; f++)
                            if (e[f] == b) {
                                1 == g ? delete d[a] : e.splice(f, 1);
                                break
                            }
                }
            }
            ,
            b.off = b.removeEventListener,
            b.removeAllEventListeners = function(a) {
                a ? (this._listeners && delete this._listeners[a],
                this._captureListeners && delete this._captureListeners[a]) : this._listeners = this._captureListeners = null
            }
            ,
            b.dispatchEvent = function(a, b) {
                if ("string" == typeof a) {
                    var c = this._listeners;
                    if (!c || !c[a])
                        return !1;
                    a = new createjs.Event(a)
                }
                if (a.target = b || this,
                a.bubbles && this.parent) {
                    for (var d = this, e = [d]; d.parent; )
                        e.push(d = d.parent);
                    var f, g = e.length;
                    for (f = g - 1; f >= 0 && !a.propagationStopped; f--)
                        e[f]._dispatchEvent(a, 1 + (0 == f));
                    for (f = 1; g > f && !a.propagationStopped; f++)
                        e[f]._dispatchEvent(a, 3)
                } else
                    this._dispatchEvent(a, 2);
                return a.defaultPrevented
            }
            ,
            b.hasEventListener = function(a) {
                var b = this._listeners
                  , c = this._captureListeners;
                return !!(b && b[a] || c && c[a])
            }
            ,
            b.willTrigger = function(a) {
                for (var b = this; b; ) {
                    if (b.hasEventListener(a))
                        return !0;
                    b = b.parent
                }
                return !1
            }
            ,
            b.toString = function() {
                return "[EventDispatcher]"
            }
            ,
            b._dispatchEvent = function(a, b) {
                var c, d = 1 == b ? this._captureListeners : this._listeners;
                if (a && d) {
                    var e = d[a.type];
                    if (!e || !(c = e.length))
                        return;
                    a.currentTarget = this,
                    a.eventPhase = b,
                    a.removed = !1,
                    e = e.slice();
                    for (var f = 0; c > f && !a.immediatePropagationStopped; f++) {
                        var g = e[f];
                        g.handleEvent ? g.handleEvent(a) : g(a),
                        a.removed && (this.off(a.type, g, 1 == b),
                        a.removed = !1)
                    }
                }
            }
            ,
            createjs.EventDispatcher = a
        }(),
        function() {
            "use strict";
            createjs.indexOf = function(a, b) {
                for (var c = 0, d = a.length; d > c; c++)
                    if (b === a[c])
                        return c;
                return -1
            }
        }(),
        function() {
            "use strict";
            createjs.proxy = function(a, b) {
                var c = Array.prototype.slice.call(arguments, 2);
                return function() {
                    return a.apply(b, Array.prototype.slice.call(arguments, 0).concat(c))
                }
            }
        }(),
        function() {
            "use strict";
            var a = function() {
                this.init()
            };
            a.prototype = new createjs.EventDispatcher;
            var b = a.prototype
              , c = a;
            c.FILE_PATTERN = /^(?:(\w+:)\/{2}(\w+(?:\.\w+)*\/?)|(.{0,2}\/{1}))?([\/.]*?(?:[^?]+)?\/)?((?:[^\/?]+)\.(\w+))(?:\?(\S+)?)?$/,
            c.PATH_PATTERN = /^(?:(\w+:)\/{2})|(.{0,2}\/{1})?([\/.]*?(?:[^?]+)?\/?)?$/,
            b.loaded = !1,
            b.canceled = !1,
            b.progress = 0,
            b._item = null,
            b.getItem = function() {
                return this._item
            }
            ,
            b.init = function() {}
            ,
            b.load = function() {}
            ,
            b.close = function() {}
            ,
            b._sendLoadStart = function() {
                this._isCanceled() || this.dispatchEvent("loadstart")
            }
            ,
            b._sendProgress = function(a) {
                if (!this._isCanceled()) {
                    var b = null;
                    "number" == typeof a ? (this.progress = a,
                    b = new createjs.Event("progress"),
                    b.loaded = this.progress,
                    b.total = 1) : (b = a,
                    this.progress = a.loaded / a.total,
                    (isNaN(this.progress) || 1 / 0 == this.progress) && (this.progress = 0)),
                    b.progress = this.progress,
                    this.hasEventListener("progress") && this.dispatchEvent(b)
                }
            }
            ,
            b._sendComplete = function() {
                this._isCanceled() || this.dispatchEvent("complete")
            }
            ,
            b._sendError = function(a) {
                !this._isCanceled() && this.hasEventListener("error") && (null == a && (a = new createjs.Event("error")),
                this.dispatchEvent(a))
            }
            ,
            b._isCanceled = function() {
                return !(null != window.createjs && !this.canceled)
            }
            ,
            b._parseURI = function(a) {
                return a ? a.match(c.FILE_PATTERN) : null
            }
            ,
            b._parsePath = function(a) {
                return a ? a.match(c.PATH_PATTERN) : null
            }
            ,
            b._formatQueryString = function(a, b) {
                if (null == a)
                    throw new Error("You must specify data.");
                var c = [];
                for (var d in a)
                    c.push(d + "=" + escape(a[d]));
                return b && (c = c.concat(b)),
                c.join("&")
            }
            ,
            b.buildPath = function(a, b) {
                if (null == b)
                    return a;
                var c = []
                  , d = a.indexOf("?");
                if (-1 != d) {
                    var e = a.slice(d + 1);
                    c = c.concat(e.split("&"))
                }
                return -1 != d ? a.slice(0, d) + "?" + this._formatQueryString(b, c) : a + "?" + this._formatQueryString(b, c)
            }
            ,
            b._isCrossDomain = function(a) {
                var b = document.createElement("a");
                b.href = a.src;
                var c = document.createElement("a");
                return c.href = location.href,
                "" != b.hostname && (b.port != c.port || b.protocol != c.protocol || b.hostname != c.hostname)
            }
            ,
            b._isLocal = function(a) {
                var b = document.createElement("a");
                return b.href = a.src,
                "" == b.hostname && "file:" == b.protocol
            }
            ,
            b.toString = function() {
                return "[PreloadJS AbstractLoader]"
            }
            ,
            createjs.AbstractLoader = a
        }(),
        function() {
            "use strict";
            var a = function(a, b, c) {
                this.init(a, b, c)
            }
              , b = a.prototype = new createjs.AbstractLoader
              , c = a;
            c.loadTimeout = 8e3,
            c.LOAD_TIMEOUT = 0,
            c.BINARY = "binary",
            c.CSS = "css",
            c.IMAGE = "image",
            c.JAVASCRIPT = "javascript",
            c.JSON = "json",
            c.JSONP = "jsonp",
            c.MANIFEST = "manifest",
            c.SOUND = "sound",
            c.SVG = "svg",
            c.TEXT = "text",
            c.XML = "xml",
            c.POST = "POST",
            c.GET = "GET",
            b._basePath = null,
            b._crossOrigin = "",
            b.useXHR = !0,
            b.stopOnError = !1,
            b.maintainScriptOrder = !0,
            b.next = null,
            b._typeCallbacks = null,
            b._extensionCallbacks = null,
            b._loadStartWasDispatched = !1,
            b._maxConnections = 1,
            b._currentlyLoadingScript = null,
            b._currentLoads = null,
            b._loadQueue = null,
            b._loadQueueBackup = null,
            b._loadItemsById = null,
            b._loadItemsBySrc = null,
            b._loadedResults = null,
            b._loadedRawResults = null,
            b._numItems = 0,
            b._numItemsLoaded = 0,
            b._scriptOrder = null,
            b._loadedScripts = null,
            b.init = function(a, b, c) {
                this._numItems = this._numItemsLoaded = 0,
                this._paused = !1,
                this._loadStartWasDispatched = !1,
                this._currentLoads = [],
                this._loadQueue = [],
                this._loadQueueBackup = [],
                this._scriptOrder = [],
                this._loadedScripts = [],
                this._loadItemsById = {},
                this._loadItemsBySrc = {},
                this._loadedResults = {},
                this._loadedRawResults = {},
                this._typeCallbacks = {},
                this._extensionCallbacks = {},
                this._basePath = b,
                this.setUseXHR(a),
                this._crossOrigin = !0 === c ? "Anonymous" : !1 === c || null == c ? "" : c
            }
            ,
            b.setUseXHR = function(a) {
                return this.useXHR = 0 != a && null != window.XMLHttpRequest,
                this.useXHR
            }
            ,
            b.removeAll = function() {
                this.remove()
            }
            ,
            b.remove = function(a) {
                var b = null;
                if (!a || a instanceof Array) {
                    if (a)
                        b = a;
                    else if (arguments.length > 0)
                        return
                } else
                    b = [a];
                var c = !1;
                if (b) {
                    for (; b.length; ) {
                        var d = b.pop()
                          , e = this.getResult(d);
                        for (f = this._loadQueue.length - 1; f >= 0; f--)
                            if (g = this._loadQueue[f].getItem(),
                            g.id == d || g.src == d) {
                                this._loadQueue.splice(f, 1)[0].cancel();
                                break
                            }
                        for (f = this._loadQueueBackup.length - 1; f >= 0; f--)
                            if (g = this._loadQueueBackup[f].getItem(),
                            g.id == d || g.src == d) {
                                this._loadQueueBackup.splice(f, 1)[0].cancel();
                                break
                            }
                        if (e)
                            delete this._loadItemsById[e.id],
                            delete this._loadItemsBySrc[e.src],
                            this._disposeItem(e);
                        else
                            for (var f = this._currentLoads.length - 1; f >= 0; f--) {
                                var g = this._currentLoads[f].getItem();
                                if (g.id == d || g.src == d) {
                                    this._currentLoads.splice(f, 1)[0].cancel(),
                                    c = !0;
                                    break
                                }
                            }
                    }
                    c && this._loadNext()
                } else {
                    this.close();
                    for (var h in this._loadItemsById)
                        this._disposeItem(this._loadItemsById[h]);
                    this.init(this.useXHR)
                }
            }
            ,
            b.reset = function() {
                this.close();
                for (var a in this._loadItemsById)
                    this._disposeItem(this._loadItemsById[a]);
                for (var b = [], c = 0, d = this._loadQueueBackup.length; d > c; c++)
                    b.push(this._loadQueueBackup[c].getItem());
                this.loadManifest(b, !1)
            }
            ,
            c.isBinary = function(a) {
                switch (a) {
                case createjs.LoadQueue.IMAGE:
                case createjs.LoadQueue.BINARY:
                    return !0;
                default:
                    return !1
                }
            }
            ,
            c.isText = function(a) {
                switch (a) {
                case createjs.LoadQueue.TEXT:
                case createjs.LoadQueue.JSON:
                case createjs.LoadQueue.MANIFEST:
                case createjs.LoadQueue.XML:
                case createjs.LoadQueue.HTML:
                case createjs.LoadQueue.CSS:
                case createjs.LoadQueue.SVG:
                case createjs.LoadQueue.JAVASCRIPT:
                    return !0;
                default:
                    return !1
                }
            }
            ,
            b.installPlugin = function(a) {
                if (null != a && null != a.getPreloadHandlers) {
                    var b = a.getPreloadHandlers();
                    if (b.scope = a,
                    null != b.types)
                        for (var c = 0, d = b.types.length; d > c; c++)
                            this._typeCallbacks[b.types[c]] = b;
                    if (null != b.extensions)
                        for (c = 0,
                        d = b.extensions.length; d > c; c++)
                            this._extensionCallbacks[b.extensions[c]] = b
                }
            }
            ,
            b.setMaxConnections = function(a) {
                this._maxConnections = a,
                !this._paused && this._loadQueue.length > 0 && this._loadNext()
            }
            ,
            b.loadFile = function(a, b, c) {
                if (null == a) {
                    var d = new createjs.Event("error");
                    return d.text = "PRELOAD_NO_FILE",
                    void this._sendError(d)
                }
                this._addItem(a, null, c),
                !1 !== b ? this.setPaused(!1) : this.setPaused(!0)
            }
            ,
            b.loadManifest = function(a, b, d) {
                var e = null
                  , f = null;
                if (a instanceof Array) {
                    if (0 == a.length) {
                        var g = new createjs.Event("error");
                        return g.text = "PRELOAD_MANIFEST_EMPTY",
                        void this._sendError(g)
                    }
                    e = a
                } else if ("string" == typeof a)
                    e = [{
                        src: a,
                        type: c.MANIFEST
                    }];
                else {
                    if ("object" != typeof a) {
                        var g = new createjs.Event("error");
                        return g.text = "PRELOAD_MANIFEST_NULL",
                        void this._sendError(g)
                    }
                    if (void 0 !== a.src) {
                        if (null == a.type)
                            a.type = c.MANIFEST;
                        else if (a.type != c.MANIFEST) {
                            var g = new createjs.Event("error");
                            g.text = "PRELOAD_MANIFEST_ERROR",
                            this._sendError(g)
                        }
                        e = [a]
                    } else
                        void 0 !== a.manifest && (e = a.manifest,
                        f = a.path)
                }
                for (var h = 0, i = e.length; i > h; h++)
                    this._addItem(e[h], f, d);
                !1 !== b ? this.setPaused(!1) : this.setPaused(!0)
            }
            ,
            b.load = function() {
                this.setPaused(!1)
            }
            ,
            b.getItem = function(a) {
                return this._loadItemsById[a] || this._loadItemsBySrc[a]
            }
            ,
            b.getResult = function(a, b) {
                var c = this._loadItemsById[a] || this._loadItemsBySrc[a];
                if (null == c)
                    return null;
                var d = c.id;
                return b && this._loadedRawResults[d] ? this._loadedRawResults[d] : this._loadedResults[d]
            }
            ,
            b.setPaused = function(a) {
                this._paused = a,
                this._paused || this._loadNext()
            }
            ,
            b.close = function() {
                for (; this._currentLoads.length; )
                    this._currentLoads.pop().cancel();
                this._scriptOrder.length = 0,
                this._loadedScripts.length = 0,
                this.loadStartWasDispatched = !1
            }
            ,
            b._addItem = function(a, b, c) {
                var d = this._createLoadItem(a, b, c);
                if (null != d) {
                    var e = this._createLoader(d);
                    null != e && (this._loadQueue.push(e),
                    this._loadQueueBackup.push(e),
                    this._numItems++,
                    this._updateProgress(),
                    this.maintainScriptOrder && d.type == createjs.LoadQueue.JAVASCRIPT && e instanceof createjs.XHRLoader && (this._scriptOrder.push(d),
                    this._loadedScripts.push(null)))
                }
            }
            ,
            b._createLoadItem = function(a, b, c) {
                var d = null;
                switch (typeof a) {
                case "string":
                    d = {
                        src: a
                    };
                    break;
                case "object":
                    d = window.HTMLAudioElement && a instanceof window.HTMLAudioElement ? {
                        tag: a,
                        src: d.tag.src,
                        type: createjs.LoadQueue.SOUND
                    } : a;
                    break;
                default:
                    return null
                }
                var e = this._parseURI(d.src);
                null != e && (d.ext = e[6]),
                null == d.type && (d.type = this._getTypeByExtension(d.ext));
                var f = ""
                  , g = c || this._basePath
                  , h = d.src;
                if (e && null == e[1] && null == e[3])
                    if (b) {
                        f = b;
                        var i = this._parsePath(b);
                        h = b + h,
                        null != g && i && null == i[1] && null == i[2] && (f = g + f)
                    } else
                        null != g && (f = g);
                if (d.src = f + d.src,
                d.path = f,
                (d.type == createjs.LoadQueue.JSON || d.type == createjs.LoadQueue.MANIFEST) && (d._loadAsJSONP = null != d.callback),
                d.type == createjs.LoadQueue.JSONP && null == d.callback)
                    throw new Error("callback is required for loading JSONP requests.");
                (void 0 === d.tag || null === d.tag) && (d.tag = this._createTag(d)),
                (void 0 === d.id || null === d.id || "" === d.id) && (d.id = h);
                var j = this._typeCallbacks[d.type] || this._extensionCallbacks[d.ext];
                if (j) {
                    var k = j.callback.call(j.scope, d.src, d.type, d.id, d.data, f, this);
                    if (!1 === k)
                        return null;
                    !0 === k || (null != k.src && (d.src = k.src),
                    null != k.id && (d.id = k.id),
                    null != k.tag && (d.tag = k.tag),
                    null != k.completeHandler && (d.completeHandler = k.completeHandler),
                    k.type && (d.type = k.type),
                    null != (e = this._parseURI(d.src)) && null != e[6] && (d.ext = e[6].toLowerCase()))
                }
                return this._loadItemsById[d.id] = d,
                this._loadItemsBySrc[d.src] = d,
                d
            }
            ,
            b._createLoader = function(a) {
                var b = this.useXHR;
                switch (a.type) {
                case createjs.LoadQueue.JSON:
                case createjs.LoadQueue.MANIFEST:
                    b = !a._loadAsJSONP;
                    break;
                case createjs.LoadQueue.XML:
                case createjs.LoadQueue.TEXT:
                    b = !0;
                    break;
                case createjs.LoadQueue.SOUND:
                case createjs.LoadQueue.JSONP:
                    b = !1;
                    break;
                case null:
                    return null
                }
                return b ? new createjs.XHRLoader(a,this._crossOrigin) : new createjs.TagLoader(a)
            }
            ,
            b._loadNext = function() {
                if (!this._paused) {
                    this._loadStartWasDispatched || (this._sendLoadStart(),
                    this._loadStartWasDispatched = !0),
                    this._numItems == this._numItemsLoaded ? (this.loaded = !0,
                    this._sendComplete(),
                    this.next && this.next.load && this.next.load()) : this.loaded = !1;
                    for (var a = 0; a < this._loadQueue.length && !(this._currentLoads.length >= this._maxConnections); a++) {
                        var b = this._loadQueue[a];
                        if (this.maintainScriptOrder && b instanceof createjs.TagLoader && b.getItem().type == createjs.LoadQueue.JAVASCRIPT) {
                            if (this._currentlyLoadingScript)
                                continue;
                            this._currentlyLoadingScript = !0
                        }
                        this._loadQueue.splice(a, 1),
                        a--,
                        this._loadItem(b)
                    }
                }
            }
            ,
            b._loadItem = function(a) {
                a.on("progress", this._handleProgress, this),
                a.on("complete", this._handleFileComplete, this),
                a.on("error", this._handleFileError, this),
                this._currentLoads.push(a),
                this._sendFileStart(a.getItem()),
                a.load()
            }
            ,
            b._handleFileError = function(a) {
                var b = a.target;
                this._numItemsLoaded++,
                this._updateProgress();
                var c = new createjs.Event("error");
                c.text = "FILE_LOAD_ERROR",
                c.item = b.getItem(),
                this._sendError(c),
                this.stopOnError || (this._removeLoadItem(b),
                this._loadNext())
            }
            ,
            b._handleFileComplete = function(a) {
                var b = a.target
                  , c = b.getItem();
                if (this._loadedResults[c.id] = b.getResult(),
                b instanceof createjs.XHRLoader && (this._loadedRawResults[c.id] = b.getResult(!0)),
                this._removeLoadItem(b),
                this.maintainScriptOrder && c.type == createjs.LoadQueue.JAVASCRIPT) {
                    if (!(b instanceof createjs.TagLoader))
                        return this._loadedScripts[createjs.indexOf(this._scriptOrder, c)] = c,
                        void this._checkScriptLoadOrder(b);
                    this._currentlyLoadingScript = !1
                }
                if (delete c._loadAsJSONP,
                c.type == createjs.LoadQueue.MANIFEST) {
                    var d = b.getResult();
                    null != d && void 0 !== d.manifest && this.loadManifest(d, !0)
                }
                this._processFinishedLoad(c, b)
            }
            ,
            b._processFinishedLoad = function(a, b) {
                this._numItemsLoaded++,
                this._updateProgress(),
                this._sendFileComplete(a, b),
                this._loadNext()
            }
            ,
            b._checkScriptLoadOrder = function() {
                for (var a = this._loadedScripts.length, b = 0; a > b; b++) {
                    var c = this._loadedScripts[b];
                    if (null === c)
                        break;
                    if (!0 !== c) {
                        var d = this._loadedResults[c.id];
                        (document.body || document.getElementsByTagName("body")[0]).appendChild(d),
                        this._processFinishedLoad(c),
                        this._loadedScripts[b] = !0
                    }
                }
            }
            ,
            b._removeLoadItem = function(a) {
                for (var b = this._currentLoads.length, c = 0; b > c; c++)
                    if (this._currentLoads[c] == a) {
                        this._currentLoads.splice(c, 1);
                        break
                    }
            }
            ,
            b._handleProgress = function(a) {
                var b = a.target;
                this._sendFileProgress(b.getItem(), b.progress),
                this._updateProgress()
            }
            ,
            b._updateProgress = function() {
                var a = this._numItemsLoaded / this._numItems
                  , b = this._numItems - this._numItemsLoaded;
                if (b > 0) {
                    for (var c = 0, d = 0, e = this._currentLoads.length; e > d; d++)
                        c += this._currentLoads[d].progress;
                    a += c / b * (b / this._numItems)
                }
                this._sendProgress(a)
            }
            ,
            b._disposeItem = function(a) {
                delete this._loadedResults[a.id],
                delete this._loadedRawResults[a.id],
                delete this._loadItemsById[a.id],
                delete this._loadItemsBySrc[a.src]
            }
            ,
            b._createTag = function(a) {
                var b = null;
                switch (a.type) {
                case createjs.LoadQueue.IMAGE:
                    return b = document.createElement("img"),
                    "" == this._crossOrigin || this._isLocal(a) || (b.crossOrigin = this._crossOrigin),
                    b;
                case createjs.LoadQueue.SOUND:
                    return b = document.createElement("audio"),
                    b.autoplay = !1,
                    b;
                case createjs.LoadQueue.JSON:
                case createjs.LoadQueue.JSONP:
                case createjs.LoadQueue.JAVASCRIPT:
                case createjs.LoadQueue.MANIFEST:
                    return b = document.createElement("script"),
                    b.type = "text/javascript",
                    b;
                case createjs.LoadQueue.CSS:
                    return b = this.useXHR ? document.createElement("style") : document.createElement("link"),
                    b.rel = "stylesheet",
                    b.type = "text/css",
                    b;
                case createjs.LoadQueue.SVG:
                    return this.useXHR ? b = document.createElement("svg") : (b = document.createElement("object"),
                    b.type = "image/svg+xml"),
                    b
                }
                return null
            }
            ,
            b._getTypeByExtension = function(a) {
                if (null == a)
                    return createjs.LoadQueue.TEXT;
                switch (a.toLowerCase()) {
                case "jpeg":
                case "jpg":
                case "gif":
                case "png":
                case "webp":
                case "bmp":
                    return createjs.LoadQueue.IMAGE;
                case "ogg":
                case "mp3":
                case "wav":
                    return createjs.LoadQueue.SOUND;
                case "json":
                    return createjs.LoadQueue.JSON;
                case "xml":
                    return createjs.LoadQueue.XML;
                case "css":
                    return createjs.LoadQueue.CSS;
                case "js":
                    return createjs.LoadQueue.JAVASCRIPT;
                case "svg":
                    return createjs.LoadQueue.SVG;
                default:
                    return createjs.LoadQueue.TEXT
                }
            }
            ,
            b._sendFileProgress = function(a, b) {
                if (this._isCanceled())
                    return void this._cleanUp();
                if (this.hasEventListener("fileprogress")) {
                    var c = new createjs.Event("fileprogress");
                    c.progress = b,
                    c.loaded = b,
                    c.total = 1,
                    c.item = a,
                    this.dispatchEvent(c)
                }
            }
            ,
            b._sendFileComplete = function(a, b) {
                if (!this._isCanceled()) {
                    var c = new createjs.Event("fileload");
                    c.loader = b,
                    c.item = a,
                    c.result = this._loadedResults[a.id],
                    c.rawResult = this._loadedRawResults[a.id],
                    a.completeHandler && a.completeHandler(c),
                    this.hasEventListener("fileload") && this.dispatchEvent(c)
                }
            }
            ,
            b._sendFileStart = function(a) {
                var b = new createjs.Event("filestart");
                b.item = a,
                this.hasEventListener("filestart") && this.dispatchEvent(b)
            }
            ,
            b.toString = function() {
                return "[PreloadJS LoadQueue]"
            }
            ,
            createjs.LoadQueue = a;
            var d = function() {};
            d.init = function() {
                var a = navigator.userAgent;
                d.isFirefox = a.indexOf("Firefox") > -1,
                d.isOpera = null != window.opera,
                d.isChrome = a.indexOf("Chrome") > -1,
                d.isIOS = a.indexOf("iPod") > -1 || a.indexOf("iPhone") > -1 || a.indexOf("iPad") > -1
            }
            ,
            d.init(),
            createjs.LoadQueue.BrowserDetect = d
        }(),
        function() {
            "use strict";
            var a = function(a) {
                this.init(a)
            }
              , b = a.prototype = new createjs.AbstractLoader;
            b._loadTimeout = null,
            b._tagCompleteProxy = null,
            b._isAudio = !1,
            b._tag = null,
            b._jsonResult = null,
            b.init = function(a) {
                this._item = a,
                this._tag = a.tag,
                this._isAudio = window.HTMLAudioElement && a.tag instanceof window.HTMLAudioElement,
                this._tagCompleteProxy = createjs.proxy(this._handleLoad, this)
            }
            ,
            b.getResult = function() {
                return this._item.type == createjs.LoadQueue.JSONP || this._item.type == createjs.LoadQueue.MANIFEST ? this._jsonResult : this._tag
            }
            ,
            b.cancel = function() {
                this.canceled = !0,
                this._clean()
            }
            ,
            b.load = function() {
                var a = this._item
                  , b = this._tag;
                clearTimeout(this._loadTimeout);
                var c = createjs.LoadQueue.LOAD_TIMEOUT;
                0 == c && (c = createjs.LoadQueue.loadTimeout),
                this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), c),
                this._isAudio && (b.src = null,
                b.preload = "auto"),
                b.onerror = createjs.proxy(this._handleError, this),
                this._isAudio ? (b.onstalled = createjs.proxy(this._handleStalled, this),
                b.addEventListener("canplaythrough", this._tagCompleteProxy, !1)) : (b.onload = createjs.proxy(this._handleLoad, this),
                b.onreadystatechange = createjs.proxy(this._handleReadyStateChange, this));
                var d = this.buildPath(a.src, a.values);
                switch (a.type) {
                case createjs.LoadQueue.CSS:
                    b.href = d;
                    break;
                case createjs.LoadQueue.SVG:
                    b.data = d;
                    break;
                default:
                    b.src = d
                }
                if (a.type == createjs.LoadQueue.JSONP || a.type == createjs.LoadQueue.JSON || a.type == createjs.LoadQueue.MANIFEST) {
                    if (null == a.callback)
                        throw new Error("callback is required for loading JSONP requests.");
                    if (null != window[a.callback])
                        throw new Error('JSONP callback "' + a.callback + '" already exists on window. You need to specify a different callback. Or re-name the current one.');
                    window[a.callback] = createjs.proxy(this._handleJSONPLoad, this)
                }
                (a.type == createjs.LoadQueue.SVG || a.type == createjs.LoadQueue.JSONP || a.type == createjs.LoadQueue.JSON || a.type == createjs.LoadQueue.MANIFEST || a.type == createjs.LoadQueue.JAVASCRIPT || a.type == createjs.LoadQueue.CSS) && (this._startTagVisibility = b.style.visibility,
                b.style.visibility = "hidden",
                (document.body || document.getElementsByTagName("body")[0]).appendChild(b)),
                null != b.load && b.load()
            }
            ,
            b._handleJSONPLoad = function(a) {
                this._jsonResult = a
            }
            ,
            b._handleTimeout = function() {
                this._clean();
                var a = new createjs.Event("error");
                a.text = "PRELOAD_TIMEOUT",
                this._sendError(a)
            }
            ,
            b._handleStalled = function() {}
            ,
            b._handleError = function() {
                this._clean();
                var a = new createjs.Event("error");
                this._sendError(a)
            }
            ,
            b._handleReadyStateChange = function() {
                clearTimeout(this._loadTimeout);
                var a = this.getItem().tag;
                ("loaded" == a.readyState || "complete" == a.readyState) && this._handleLoad()
            }
            ,
            b._handleLoad = function() {
                if (!this._isCanceled()) {
                    var a = this.getItem()
                      , b = a.tag;
                    if (!(this.loaded || this._isAudio && 4 !== b.readyState)) {
                        switch (this.loaded = !0,
                        a.type) {
                        case createjs.LoadQueue.SVG:
                        case createjs.LoadQueue.JSON:
                        case createjs.LoadQueue.JSONP:
                        case createjs.LoadQueue.MANIFEST:
                        case createjs.LoadQueue.CSS:
                            b.style.visibility = this._startTagVisibility,
                            (document.body || document.getElementsByTagName("body")[0]).removeChild(b)
                        }
                        this._clean(),
                        this._sendComplete()
                    }
                }
            }
            ,
            b._clean = function() {
                clearTimeout(this._loadTimeout);
                var a = this.getItem()
                  , b = a.tag;
                null != b && (b.onload = null,
                b.removeEventListener && b.removeEventListener("canplaythrough", this._tagCompleteProxy, !1),
                b.onstalled = null,
                b.onprogress = null,
                b.onerror = null,
                null != b.parentNode && a.type == createjs.LoadQueue.SVG && a.type == createjs.LoadQueue.JSON && a.type == createjs.LoadQueue.MANIFEST && a.type == createjs.LoadQueue.CSS && a.type == createjs.LoadQueue.JSONP && b.parentNode.removeChild(b));
                var a = this.getItem();
                (a.type == createjs.LoadQueue.JSONP || a.type == createjs.LoadQueue.MANIFEST) && (window[a.callback] = null)
            }
            ,
            b.toString = function() {
                return "[PreloadJS TagLoader]"
            }
            ,
            createjs.TagLoader = a
        }(),
        function() {
            "use strict";
            var a = function(a, b) {
                this.init(a, b)
            }
              , b = a.prototype = new createjs.AbstractLoader;
            b._request = null,
            b._loadTimeout = null,
            b._xhrLevel = 1,
            b._response = null,
            b._rawResponse = null,
            b._crossOrigin = "",
            b.init = function(a, b) {
                this._item = a,
                this._crossOrigin = b,
                this._createXHR(a)
            }
            ,
            b.getResult = function(a) {
                return a && this._rawResponse ? this._rawResponse : this._response
            }
            ,
            b.cancel = function() {
                this.canceled = !0,
                this._clean(),
                this._request.abort()
            }
            ,
            b.load = function() {
                if (null == this._request)
                    return void this._handleError();
                if (this._request.onloadstart = createjs.proxy(this._handleLoadStart, this),
                this._request.onprogress = createjs.proxy(this._handleProgress, this),
                this._request.onabort = createjs.proxy(this._handleAbort, this),
                this._request.onerror = createjs.proxy(this._handleError, this),
                this._request.ontimeout = createjs.proxy(this._handleTimeout, this),
                1 == this._xhrLevel) {
                    var a = createjs.LoadQueue.LOAD_TIMEOUT;
                    0 == a && (a = createjs.LoadQueue.loadTimeout),
                    this._loadTimeout = setTimeout(createjs.proxy(this._handleTimeout, this), a)
                }
                this._request.onload = createjs.proxy(this._handleLoad, this),
                this._request.onreadystatechange = createjs.proxy(this._handleReadyStateChange, this);
                try {
                    this._item.values && this._item.method != createjs.LoadQueue.GET ? this._item.method == createjs.LoadQueue.POST && this._request.send(this._formatQueryString(this._item.values)) : this._request.send()
                } catch (a) {
                    var b = new createjs.Event("error");
                    b.error = a,
                    this._sendError(b)
                }
            }
            ,
            b.getAllResponseHeaders = function() {
                return this._request.getAllResponseHeaders instanceof Function ? this._request.getAllResponseHeaders() : null
            }
            ,
            b.getResponseHeader = function(a) {
                return this._request.getResponseHeader instanceof Function ? this._request.getResponseHeader(a) : null
            }
            ,
            b._handleProgress = function(a) {
                if (a && !(a.loaded > 0 && 0 == a.total)) {
                    var b = new createjs.Event("progress");
                    b.loaded = a.loaded,
                    b.total = a.total,
                    this._sendProgress(b)
                }
            }
            ,
            b._handleLoadStart = function() {
                clearTimeout(this._loadTimeout),
                this._sendLoadStart()
            }
            ,
            b._handleAbort = function() {
                this._clean();
                var a = new createjs.Event("error");
                a.text = "XHR_ABORTED",
                this._sendError(a)
            }
            ,
            b._handleError = function() {
                this._clean();
                var a = new createjs.Event("error");
                this._sendError(a)
            }
            ,
            b._handleReadyStateChange = function() {
                4 == this._request.readyState && this._handleLoad()
            }
            ,
            b._handleLoad = function() {
                if (!this.loaded) {
                    if (this.loaded = !0,
                    !this._checkError())
                        return void this._handleError();
                    this._response = this._getResponse(),
                    this._clean();
                    this._generateTag() && this._sendComplete()
                }
            }
            ,
            b._handleTimeout = function(a) {
                this._clean(),
                new createjs.Event("error").text = "PRELOAD_TIMEOUT",
                this._sendError(a)
            }
            ,
            b._checkError = function() {
                switch (parseInt(this._request.status)) {
                case 404:
                case 0:
                    return !1
                }
                return !0
            }
            ,
            b._getResponse = function() {
                if (null != this._response)
                    return this._response;
                if (null != this._request.response)
                    return this._request.response;
                try {
                    if (null != this._request.responseText)
                        return this._request.responseText
                } catch (a) {}
                try {
                    if (null != this._request.responseXML)
                        return this._request.responseXML
                } catch (a) {}
                return null
            }
            ,
            b._createXHR = function(a) {
                var b = this._isCrossDomain(a)
                  , c = null;
                if (b && window.XDomainRequest)
                    c = new XDomainRequest;
                else if (window.XMLHttpRequest)
                    c = new XMLHttpRequest;
                else
                    try {
                        c = new ActiveXObject("Msxml2.XMLHTTP.6.0")
                    } catch (a) {
                        try {
                            c = new ActiveXObject("Msxml2.XMLHTTP.3.0")
                        } catch (a) {
                            try {
                                c = new ActiveXObject("Msxml2.XMLHTTP")
                            } catch (a) {
                                return !1
                            }
                        }
                    }
                createjs.LoadQueue.isText(a.type) && c.overrideMimeType && c.overrideMimeType("text/plain; charset=utf-8"),
                this._xhrLevel = "string" == typeof c.responseType ? 2 : 1;
                var d = null;
                return d = a.method == createjs.LoadQueue.GET ? this.buildPath(a.src, a.values) : a.src,
                c.open(a.method || createjs.LoadQueue.GET, d, !0),
                b && c instanceof XMLHttpRequest && 1 == this._xhrLevel && c.setRequestHeader("Origin", location.origin),
                a.values && a.method == createjs.LoadQueue.POST && c.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"),
                createjs.LoadQueue.isBinary(a.type) && (c.responseType = "arraybuffer"),
                this._request = c,
                !0
            }
            ,
            b._clean = function() {
                clearTimeout(this._loadTimeout);
                var a = this._request;
                a.onloadstart = null,
                a.onprogress = null,
                a.onabort = null,
                a.onerror = null,
                a.onload = null,
                a.ontimeout = null,
                a.onloadend = null,
                a.onreadystatechange = null
            }
            ,
            b._generateTag = function() {
                var a = this._item.type
                  , b = this._item.tag;
                switch (a) {
                case createjs.LoadQueue.IMAGE:
                    return b.onload = createjs.proxy(this._handleTagReady, this),
                    "" != this._crossOrigin && (b.crossOrigin = "Anonymous"),
                    b.src = this.buildPath(this._item.src, this._item.values),
                    this._rawResponse = this._response,
                    this._response = b,
                    !1;
                case createjs.LoadQueue.JAVASCRIPT:
                    return b = document.createElement("script"),
                    b.text = this._response,
                    this._rawResponse = this._response,
                    this._response = b,
                    !0;
                case createjs.LoadQueue.CSS:
                    if (document.getElementsByTagName("head")[0].appendChild(b),
                    b.styleSheet)
                        b.styleSheet.cssText = this._response;
                    else {
                        var c = document.createTextNode(this._response);
                        b.appendChild(c)
                    }
                    return this._rawResponse = this._response,
                    this._response = b,
                    !0;
                case createjs.LoadQueue.XML:
                    var d = this._parseXML(this._response, "text/xml");
                    return this._rawResponse = this._response,
                    this._response = d,
                    !0;
                case createjs.LoadQueue.SVG:
                    var d = this._parseXML(this._response, "image/svg+xml");
                    return this._rawResponse = this._response,
                    null != d.documentElement ? (b.appendChild(d.documentElement),
                    this._response = b) : this._response = d,
                    !0;
                case createjs.LoadQueue.JSON:
                case createjs.LoadQueue.MANIFEST:
                    var e = {};
                    try {
                        e = JSON.parse(this._response)
                    } catch (a) {
                        e = a
                    }
                    return this._rawResponse = this._response,
                    this._response = e,
                    !0
                }
                return !0
            }
            ,
            b._parseXML = function(a, b) {
                var c = null;
                try {
                    if (window.DOMParser) {
                        c = (new DOMParser).parseFromString(a, b)
                    } else
                        c = new ActiveXObject("Microsoft.XMLDOM"),
                        c.async = !1,
                        c.loadXML(a)
                } catch (a) {}
                return c
            }
            ,
            b._handleTagReady = function() {
                this._sendComplete()
            }
            ,
            b.toString = function() {
                return "[PreloadJS XHRLoader]"
            }
            ,
            createjs.XHRLoader = a
        }(),
        "object" != typeof JSON && (JSON = {}),
        function() {
            "use strict";
            function f(a) {
                return 10 > a ? "0" + a : a
            }
            function quote(a) {
                return escapable.lastIndex = 0,
                escapable.test(a) ? '"' + a.replace(escapable, function(a) {
                    var b = meta[a];
                    return "string" == typeof b ? b : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4)
                }) + '"' : '"' + a + '"'
            }
            function str(a, b) {
                var c, d, e, f, g, h = gap, i = b[a];
                switch (i && "object" == typeof i && "function" == typeof i.toJSON && (i = i.toJSON(a)),
                "function" == typeof rep && (i = rep.call(b, a, i)),
                typeof i) {
                case "string":
                    return quote(i);
                case "number":
                    return isFinite(i) ? String(i) : "null";
                case "boolean":
                case "null":
                    return String(i);
                case "object":
                    if (!i)
                        return "null";
                    if (gap += indent,
                    g = [],
                    "[object Array]" === Object.prototype.toString.apply(i)) {
                        for (f = i.length,
                        c = 0; f > c; c += 1)
                            g[c] = str(c, i) || "null";
                        return e = 0 === g.length ? "[]" : gap ? "[\n" + gap + g.join(",\n" + gap) + "\n" + h + "]" : "[" + g.join(",") + "]",
                        gap = h,
                        e
                    }
                    if (rep && "object" == typeof rep)
                        for (f = rep.length,
                        c = 0; f > c; c += 1)
                            "string" == typeof rep[c] && (d = rep[c],
                            (e = str(d, i)) && g.push(quote(d) + (gap ? ": " : ":") + e));
                    else
                        for (d in i)
                            Object.prototype.hasOwnProperty.call(i, d) && (e = str(d, i)) && g.push(quote(d) + (gap ? ": " : ":") + e);
                    return e = 0 === g.length ? "{}" : gap ? "{\n" + gap + g.join(",\n" + gap) + "\n" + h + "}" : "{" + g.join(",") + "}",
                    gap = h,
                    e
                }
            }
            "function" != typeof Date.prototype.toJSON && (Date.prototype.toJSON = function() {
                return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + f(this.getUTCMonth() + 1) + "-" + f(this.getUTCDate()) + "T" + f(this.getUTCHours()) + ":" + f(this.getUTCMinutes()) + ":" + f(this.getUTCSeconds()) + "Z" : null
            }
            ,
            String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function() {
                return this.valueOf()
            }
            );
            var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, gap, indent, meta = {
                "\b": "\\b",
                "\t": "\\t",
                "\n": "\\n",
                "\f": "\\f",
                "\r": "\\r",
                '"': '\\"',
                "\\": "\\\\"
            }, rep;
            "function" != typeof JSON.stringify && (JSON.stringify = function(a, b, c) {
                var d;
                if (gap = "",
                indent = "",
                "number" == typeof c)
                    for (d = 0; c > d; d += 1)
                        indent += " ";
                else
                    "string" == typeof c && (indent = c);
                if (rep = b,
                b && "function" != typeof b && ("object" != typeof b || "number" != typeof b.length))
                    throw new Error("JSON.stringify");
                return str("", {
                    "": a
                })
            }
            ),
            "function" != typeof JSON.parse && (JSON.parse = function(text, reviver) {
                function walk(a, b) {
                    var c, d, e = a[b];
                    if (e && "object" == typeof e)
                        for (c in e)
                            Object.prototype.hasOwnProperty.call(e, c) && (d = walk(e, c),
                            void 0 !== d ? e[c] = d : delete e[c]);
                    return reviver.call(a, b, e)
                }
                var j;
                if (text = String(text),
                cx.lastIndex = 0,
                cx.test(text) && (text = text.replace(cx, function(a) {
                    return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4)
                })),
                /^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, "")))
                    return j = eval("(" + text + ")"),
                    "function" == typeof reviver ? walk({
                        "": j
                    }, "") : j;
                throw new SyntaxError("JSON.parse")
            }
            )
        }(),
        module.exports = window.createjs
    }
    , {}],
    9: [function(a, b, c) {
        function d() {
            throw new Error("setTimeout has not been defined")
        }
        function e() {
            throw new Error("clearTimeout has not been defined")
        }
        function f(a) {
            if (l === setTimeout)
                return setTimeout(a, 0);
            if ((l === d || !l) && setTimeout)
                return l = setTimeout,
                setTimeout(a, 0);
            try {
                return l(a, 0)
            } catch (b) {
                try {
                    return l.call(null, a, 0)
                } catch (b) {
                    return l.call(this, a, 0)
                }
            }
        }
        function g(a) {
            if (m === clearTimeout)
                return clearTimeout(a);
            if ((m === e || !m) && clearTimeout)
                return m = clearTimeout,
                clearTimeout(a);
            try {
                return m(a)
            } catch (b) {
                try {
                    return m.call(null, a)
                } catch (b) {
                    return m.call(this, a)
                }
            }
        }
        function h() {
            q && o && (q = !1,
            o.length ? p = o.concat(p) : r = -1,
            p.length && i())
        }
        function i() {
            if (!q) {
                var a = f(h);
                q = !0;
                for (var b = p.length; b; ) {
                    for (o = p,
                    p = []; ++r < b; )
                        o && o[r].run();
                    r = -1,
                    b = p.length
                }
                o = null,
                q = !1,
                g(a)
            }
        }
        function j(a, b) {
            this.fun = a,
            this.array = b
        }
        function k() {}
        var l, m, n = b.exports = {};
        !function() {
            try {
                l = "function" == typeof setTimeout ? setTimeout : d
            } catch (a) {
                l = d
            }
            try {
                m = "function" == typeof clearTimeout ? clearTimeout : e
            } catch (a) {
                m = e
            }
        }();
        var o, p = [], q = !1, r = -1;
        n.nextTick = function(a) {
            var b = new Array(arguments.length - 1);
            if (arguments.length > 1)
                for (var c = 1; c < arguments.length; c++)
                    b[c - 1] = arguments[c];
            p.push(new j(a,b)),
            1 !== p.length || q || f(i)
        }
        ,
        j.prototype.run = function() {
            this.fun.apply(null, this.array)
        }
        ,
        n.title = "browser",
        n.browser = !0,
        n.env = {},
        n.argv = [],
        n.version = "",
        n.versions = {},
        n.on = k,
        n.addListener = k,
        n.once = k,
        n.off = k,
        n.removeListener = k,
        n.removeAllListeners = k,
        n.emit = k,
        n.prependListener = k,
        n.prependOnceListener = k,
        n.listeners = function(a) {
            return []
        }
        ,
        n.binding = function(a) {
            throw new Error("process.binding is not supported")
        }
        ,
        n.cwd = function() {
            return "/"
        }
        ,
        n.chdir = function(a) {
            throw new Error("process.chdir is not supported")
        }
        ,
        n.umask = function() {
            return 0
        }
    }
    , {}],
    10: [function(a, b, c) {
        !function(a, d) {
            "object" == typeof c && void 0 !== b ? d(c) : "function" == typeof define && define.amd ? define(["exports"], d) : d(a.THREE = a.THREE || {})
        }(this, function(a) {
            "use strict";
            function b() {}
            function c(a, b) {
                this.x = a || 0,
                this.y = b || 0
            }
            function d(a, b, e, f, g, h, i, j, k, l) {
                Object.defineProperty(this, "id", {
                    value: $g++
                }),
                this.uuid = Zg.generateUUID(),
                this.name = "",
                this.image = void 0 !== a ? a : d.DEFAULT_IMAGE,
                this.mipmaps = [],
                this.mapping = void 0 !== b ? b : d.DEFAULT_MAPPING,
                this.wrapS = void 0 !== e ? e : ag,
                this.wrapT = void 0 !== f ? f : ag,
                this.magFilter = void 0 !== g ? g : fg,
                this.minFilter = void 0 !== h ? h : hg,
                this.anisotropy = void 0 !== k ? k : 1,
                this.format = void 0 !== i ? i : wg,
                this.type = void 0 !== j ? j : ig,
                this.offset = new c(0,0),
                this.repeat = new c(1,1),
                this.generateMipmaps = !0,
                this.premultiplyAlpha = !1,
                this.flipY = !0,
                this.unpackAlignment = 4,
                this.encoding = void 0 !== l ? l : Qg,
                this.version = 0,
                this.onUpdate = null
            }
            function e(a, b, c, d) {
                this.x = a || 0,
                this.y = b || 0,
                this.z = c || 0,
                this.w = void 0 !== d ? d : 1
            }
            function f(a, b, c) {
                this.uuid = Zg.generateUUID(),
                this.width = a,
                this.height = b,
                this.scissor = new e(0,0,a,b),
                this.scissorTest = !1,
                this.viewport = new e(0,0,a,b),
                c = c || {},
                void 0 === c.minFilter && (c.minFilter = fg),
                this.texture = new d(void 0,void 0,c.wrapS,c.wrapT,c.magFilter,c.minFilter,c.format,c.type,c.anisotropy,c.encoding),
                this.depthBuffer = void 0 === c.depthBuffer || c.depthBuffer,
                this.stencilBuffer = void 0 === c.stencilBuffer || c.stencilBuffer,
                this.depthTexture = void 0 !== c.depthTexture ? c.depthTexture : null
            }
            function g(a, b, c) {
                f.call(this, a, b, c),
                this.activeCubeFace = 0,
                this.activeMipMapLevel = 0
            }
            function h(a, b, c, d) {
                this._x = a || 0,
                this._y = b || 0,
                this._z = c || 0,
                this._w = void 0 !== d ? d : 1
            }
            function i(a, b, c) {
                this.x = a || 0,
                this.y = b || 0,
                this.z = c || 0
            }
            function j() {
                this.elements = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
                arguments.length
            }
            function k(a, b, c, e, f, g, h, i, j, k) {
                a = void 0 !== a ? a : [],
                b = void 0 !== b ? b : Uf,
                d.call(this, a, b, c, e, f, g, h, i, j, k),
                this.flipY = !1
            }
            function l() {
                this.seq = [],
                this.map = {}
            }
            function m(a, b, c) {
                var d = a[0];
                if (d <= 0 || d > 0)
                    return a;
                var e = b * c
                  , f = bh[e];
                if (void 0 === f && (f = new Float32Array(e),
                bh[e] = f),
                0 !== b) {
                    d.toArray(f, 0);
                    for (var g = 1, h = 0; g !== b; ++g)
                        h += c,
                        a[g].toArray(f, h)
                }
                return f
            }
            function n(a, b) {
                var c = ch[b];
                void 0 === c && (c = new Int32Array(b),
                ch[b] = c);
                for (var d = 0; d !== b; ++d)
                    c[d] = a.allocTextureUnit();
                return c
            }
            function o(a, b) {
                a.uniform1f(this.addr, b)
            }
            function p(a, b) {
                a.uniform1i(this.addr, b)
            }
            function q(a, b) {
                void 0 === b.x ? a.uniform2fv(this.addr, b) : a.uniform2f(this.addr, b.x, b.y)
            }
            function r(a, b) {
                void 0 !== b.x ? a.uniform3f(this.addr, b.x, b.y, b.z) : void 0 !== b.r ? a.uniform3f(this.addr, b.r, b.g, b.b) : a.uniform3fv(this.addr, b)
            }
            function s(a, b) {
                void 0 === b.x ? a.uniform4fv(this.addr, b) : a.uniform4f(this.addr, b.x, b.y, b.z, b.w)
            }
            function t(a, b) {
                a.uniformMatrix2fv(this.addr, !1, b.elements || b)
            }
            function u(a, b) {
                a.uniformMatrix3fv(this.addr, !1, b.elements || b)
            }
            function v(a, b) {
                a.uniformMatrix4fv(this.addr, !1, b.elements || b)
            }
            function w(a, b, c) {
                var d = c.allocTextureUnit();
                a.uniform1i(this.addr, d),
                c.setTexture2D(b || _g, d)
            }
            function x(a, b, c) {
                var d = c.allocTextureUnit();
                a.uniform1i(this.addr, d),
                c.setTextureCube(b || ah, d)
            }
            function y(a, b) {
                a.uniform2iv(this.addr, b)
            }
            function z(a, b) {
                a.uniform3iv(this.addr, b)
            }
            function A(a, b) {
                a.uniform4iv(this.addr, b)
            }
            function B(a) {
                switch (a) {
                case 5126:
                    return o;
                case 35664:
                    return q;
                case 35665:
                    return r;
                case 35666:
                    return s;
                case 35674:
                    return t;
                case 35675:
                    return u;
                case 35676:
                    return v;
                case 35678:
                    return w;
                case 35680:
                    return x;
                case 5124:
                case 35670:
                    return p;
                case 35667:
                case 35671:
                    return y;
                case 35668:
                case 35672:
                    return z;
                case 35669:
                case 35673:
                    return A
                }
            }
            function C(a, b) {
                a.uniform1fv(this.addr, b)
            }
            function D(a, b) {
                a.uniform1iv(this.addr, b)
            }
            function E(a, b) {
                a.uniform2fv(this.addr, m(b, this.size, 2))
            }
            function F(a, b) {
                a.uniform3fv(this.addr, m(b, this.size, 3))
            }
            function G(a, b) {
                a.uniform4fv(this.addr, m(b, this.size, 4))
            }
            function H(a, b) {
                a.uniformMatrix2fv(this.addr, !1, m(b, this.size, 4))
            }
            function I(a, b) {
                a.uniformMatrix3fv(this.addr, !1, m(b, this.size, 9))
            }
            function J(a, b) {
                a.uniformMatrix4fv(this.addr, !1, m(b, this.size, 16))
            }
            function K(a, b, c) {
                var d = b.length
                  , e = n(c, d);
                a.uniform1iv(this.addr, e);
                for (var f = 0; f !== d; ++f)
                    c.setTexture2D(b[f] || _g, e[f])
            }
            function L(a, b, c) {
                var d = b.length
                  , e = n(c, d);
                a.uniform1iv(this.addr, e);
                for (var f = 0; f !== d; ++f)
                    c.setTextureCube(b[f] || ah, e[f])
            }
            function M(a) {
                switch (a) {
                case 5126:
                    return C;
                case 35664:
                    return E;
                case 35665:
                    return F;
                case 35666:
                    return G;
                case 35674:
                    return H;
                case 35675:
                    return I;
                case 35676:
                    return J;
                case 35678:
                    return K;
                case 35680:
                    return L;
                case 5124:
                case 35670:
                    return D;
                case 35667:
                case 35671:
                    return y;
                case 35668:
                case 35672:
                    return z;
                case 35669:
                case 35673:
                    return A
                }
            }
            function N(a, b, c) {
                this.id = a,
                this.addr = c,
                this.setValue = B(b.type)
            }
            function O(a, b, c) {
                this.id = a,
                this.addr = c,
                this.size = b.size,
                this.setValue = M(b.type)
            }
            function P(a) {
                this.id = a,
                l.call(this)
            }
            function Q(a, b) {
                a.seq.push(b),
                a.map[b.id] = b
            }
            function R(a, b, c) {
                var d = a.name
                  , e = d.length;
                for (dh.lastIndex = 0; ; ) {
                    var f = dh.exec(d)
                      , g = dh.lastIndex
                      , h = f[1]
                      , i = "]" === f[2]
                      , j = f[3];
                    if (i && (h |= 0),
                    void 0 === j || "[" === j && g + 2 === e) {
                        Q(c, void 0 === j ? new N(h,a,b) : new O(h,a,b));
                        break
                    }
                    var k = c.map
                      , l = k[h];
                    void 0 === l && (l = new P(h),
                    Q(c, l)),
                    c = l
                }
            }
            function S(a, b, c) {
                l.call(this),
                this.renderer = c;
                for (var d = a.getProgramParameter(b, a.ACTIVE_UNIFORMS), e = 0; e < d; ++e) {
                    var f = a.getActiveUniform(b, e)
                      , g = f.name;
                    R(f, a.getUniformLocation(b, g), this)
                }
            }
            function T(a, b, c) {
                return void 0 === b && void 0 === c ? this.set(a) : this.setRGB(a, b, c)
            }
            function U(a, b, c, e, f, g, h, i, j, k, l, m) {
                d.call(this, null, g, h, i, j, k, e, f, l, m),
                this.image = {
                    data: a,
                    width: b,
                    height: c
                },
                this.magFilter = void 0 !== j ? j : cg,
                this.minFilter = void 0 !== k ? k : cg,
                this.generateMipmaps = !1,
                this.flipY = !1,
                this.unpackAlignment = 1
            }
            function V(a, b) {
                this.min = void 0 !== a ? a : new c(1 / 0,1 / 0),
                this.max = void 0 !== b ? b : new c(-1 / 0,-1 / 0)
            }
            function W(a, b) {
                function d() {
                    var a = new Float32Array([-1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1])
                      , b = new Uint16Array([0, 1, 2, 0, 2, 3]);
                    f = o.createBuffer(),
                    g = o.createBuffer(),
                    o.bindBuffer(o.ARRAY_BUFFER, f),
                    o.bufferData(o.ARRAY_BUFFER, a, o.STATIC_DRAW),
                    o.bindBuffer(o.ELEMENT_ARRAY_BUFFER, g),
                    o.bufferData(o.ELEMENT_ARRAY_BUFFER, b, o.STATIC_DRAW),
                    m = o.createTexture(),
                    n = o.createTexture(),
                    p.bindTexture(o.TEXTURE_2D, m),
                    o.texImage2D(o.TEXTURE_2D, 0, o.RGB, 16, 16, 0, o.RGB, o.UNSIGNED_BYTE, null),
                    o.texParameteri(o.TEXTURE_2D, o.TEXTURE_WRAP_S, o.CLAMP_TO_EDGE),
                    o.texParameteri(o.TEXTURE_2D, o.TEXTURE_WRAP_T, o.CLAMP_TO_EDGE),
                    o.texParameteri(o.TEXTURE_2D, o.TEXTURE_MAG_FILTER, o.NEAREST),
                    o.texParameteri(o.TEXTURE_2D, o.TEXTURE_MIN_FILTER, o.NEAREST),
                    p.bindTexture(o.TEXTURE_2D, n),
                    o.texImage2D(o.TEXTURE_2D, 0, o.RGBA, 16, 16, 0, o.RGBA, o.UNSIGNED_BYTE, null),
                    o.texParameteri(o.TEXTURE_2D, o.TEXTURE_WRAP_S, o.CLAMP_TO_EDGE),
                    o.texParameteri(o.TEXTURE_2D, o.TEXTURE_WRAP_T, o.CLAMP_TO_EDGE),
                    o.texParameteri(o.TEXTURE_2D, o.TEXTURE_MAG_FILTER, o.NEAREST),
                    o.texParameteri(o.TEXTURE_2D, o.TEXTURE_MIN_FILTER, o.NEAREST),
                    h = {
                        vertexShader: ["uniform lowp int renderType;", "uniform vec3 screenPosition;", "uniform vec2 scale;", "uniform float rotation;", "uniform sampler2D occlusionMap;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "vUV = uv;", "vec2 pos = position;", "if ( renderType == 2 ) {", "vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );", "vVisibility =        visibility.r / 9.0;", "vVisibility *= 1.0 - visibility.g / 9.0;", "vVisibility *=       visibility.b / 9.0;", "vVisibility *= 1.0 - visibility.a / 9.0;", "pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;", "pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;", "}", "gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );", "}"].join("\n"),
                        fragmentShader: ["uniform lowp int renderType;", "uniform sampler2D map;", "uniform float opacity;", "uniform vec3 color;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "if ( renderType == 0 ) {", "gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );", "} else if ( renderType == 1 ) {", "gl_FragColor = texture2D( map, vUV );", "} else {", "vec4 texture = texture2D( map, vUV );", "texture.a *= opacity * vVisibility;", "gl_FragColor = texture;", "gl_FragColor.rgb *= color;", "}", "}"].join("\n")
                    },
                    j = e(h),
                    k = {
                        vertex: o.getAttribLocation(j, "position"),
                        uv: o.getAttribLocation(j, "uv")
                    },
                    l = {
                        renderType: o.getUniformLocation(j, "renderType"),
                        map: o.getUniformLocation(j, "map"),
                        occlusionMap: o.getUniformLocation(j, "occlusionMap"),
                        opacity: o.getUniformLocation(j, "opacity"),
                        color: o.getUniformLocation(j, "color"),
                        scale: o.getUniformLocation(j, "scale"),
                        rotation: o.getUniformLocation(j, "rotation"),
                        screenPosition: o.getUniformLocation(j, "screenPosition")
                    }
                }
                function e(b) {
                    var c = o.createProgram()
                      , d = o.createShader(o.FRAGMENT_SHADER)
                      , e = o.createShader(o.VERTEX_SHADER)
                      , f = "precision " + a.getPrecision() + " float;\n";
                    return o.shaderSource(d, f + b.fragmentShader),
                    o.shaderSource(e, f + b.vertexShader),
                    o.compileShader(d),
                    o.compileShader(e),
                    o.attachShader(c, d),
                    o.attachShader(c, e),
                    o.linkProgram(c),
                    c
                }
                var f, g, h, j, k, l, m, n, o = a.context, p = a.state;
                this.render = function(e, h, q) {
                    if (0 !== b.length) {
                        var r = new i
                          , s = q.w / q.z
                          , t = .5 * q.z
                          , u = .5 * q.w
                          , v = 16 / q.w
                          , w = new c(v * s,v)
                          , x = new i(1,1,0)
                          , y = new c(1,1)
                          , z = new V;
                        z.min.set(q.x, q.y),
                        z.max.set(q.x + (q.z - 16), q.y + (q.w - 16)),
                        void 0 === j && d(),
                        o.useProgram(j),
                        p.initAttributes(),
                        p.enableAttribute(k.vertex),
                        p.enableAttribute(k.uv),
                        p.disableUnusedAttributes(),
                        o.uniform1i(l.occlusionMap, 0),
                        o.uniform1i(l.map, 1),
                        o.bindBuffer(o.ARRAY_BUFFER, f),
                        o.vertexAttribPointer(k.vertex, 2, o.FLOAT, !1, 16, 0),
                        o.vertexAttribPointer(k.uv, 2, o.FLOAT, !1, 16, 8),
                        o.bindBuffer(o.ELEMENT_ARRAY_BUFFER, g),
                        p.disable(o.CULL_FACE),
                        p.setDepthWrite(!1);
                        for (var A = 0, B = b.length; A < B; A++) {
                            v = 16 / q.w,
                            w.set(v * s, v);
                            var C = b[A];
                            if (r.set(C.matrixWorld.elements[12], C.matrixWorld.elements[13], C.matrixWorld.elements[14]),
                            r.applyMatrix4(h.matrixWorldInverse),
                            r.applyMatrix4(h.projectionMatrix),
                            x.copy(r),
                            y.x = q.x + x.x * t + t - 8,
                            y.y = q.y + x.y * u + u - 8,
                            !0 === z.containsPoint(y)) {
                                p.activeTexture(o.TEXTURE0),
                                p.bindTexture(o.TEXTURE_2D, null),
                                p.activeTexture(o.TEXTURE1),
                                p.bindTexture(o.TEXTURE_2D, m),
                                o.copyTexImage2D(o.TEXTURE_2D, 0, o.RGB, y.x, y.y, 16, 16, 0),
                                o.uniform1i(l.renderType, 0),
                                o.uniform2f(l.scale, w.x, w.y),
                                o.uniform3f(l.screenPosition, x.x, x.y, x.z),
                                p.disable(o.BLEND),
                                p.enable(o.DEPTH_TEST),
                                o.drawElements(o.TRIANGLES, 6, o.UNSIGNED_SHORT, 0),
                                p.activeTexture(o.TEXTURE0),
                                p.bindTexture(o.TEXTURE_2D, n),
                                o.copyTexImage2D(o.TEXTURE_2D, 0, o.RGBA, y.x, y.y, 16, 16, 0),
                                o.uniform1i(l.renderType, 1),
                                p.disable(o.DEPTH_TEST),
                                p.activeTexture(o.TEXTURE1),
                                p.bindTexture(o.TEXTURE_2D, m),
                                o.drawElements(o.TRIANGLES, 6, o.UNSIGNED_SHORT, 0),
                                C.positionScreen.copy(x),
                                C.customUpdateCallback ? C.customUpdateCallback(C) : C.updateLensFlares(),
                                o.uniform1i(l.renderType, 2),
                                p.enable(o.BLEND);
                                for (var D = 0, E = C.lensFlares.length; D < E; D++) {
                                    var F = C.lensFlares[D];
                                    F.opacity > .001 && F.scale > .001 && (x.x = F.x,
                                    x.y = F.y,
                                    x.z = F.z,
                                    v = F.size * F.scale / q.w,
                                    w.x = v * s,
                                    w.y = v,
                                    o.uniform3f(l.screenPosition, x.x, x.y, x.z),
                                    o.uniform2f(l.scale, w.x, w.y),
                                    o.uniform1f(l.rotation, F.rotation),
                                    o.uniform1f(l.opacity, F.opacity),
                                    o.uniform3f(l.color, F.color.r, F.color.g, F.color.b),
                                    p.setBlending(F.blending, F.blendEquation, F.blendSrc, F.blendDst),
                                    a.setTexture2D(F.texture, 1),
                                    o.drawElements(o.TRIANGLES, 6, o.UNSIGNED_SHORT, 0))
                                }
                            }
                        }
                        p.enable(o.CULL_FACE),
                        p.enable(o.DEPTH_TEST),
                        p.setDepthWrite(!0),
                        a.resetGLState()
                    }
                }
            }
            function X(a, b) {
                function c() {
                    var a = new Float32Array([-.5, -.5, 0, 0, .5, -.5, 1, 0, .5, .5, 1, 1, -.5, .5, 0, 1])
                      , b = new Uint16Array([0, 1, 2, 0, 2, 3]);
                    g = o.createBuffer(),
                    j = o.createBuffer(),
                    o.bindBuffer(o.ARRAY_BUFFER, g),
                    o.bufferData(o.ARRAY_BUFFER, a, o.STATIC_DRAW),
                    o.bindBuffer(o.ELEMENT_ARRAY_BUFFER, j),
                    o.bufferData(o.ELEMENT_ARRAY_BUFFER, b, o.STATIC_DRAW),
                    k = e(),
                    l = {
                        position: o.getAttribLocation(k, "position"),
                        uv: o.getAttribLocation(k, "uv")
                    },
                    m = {
                        uvOffset: o.getUniformLocation(k, "uvOffset"),
                        uvScale: o.getUniformLocation(k, "uvScale"),
                        rotation: o.getUniformLocation(k, "rotation"),
                        scale: o.getUniformLocation(k, "scale"),
                        color: o.getUniformLocation(k, "color"),
                        map: o.getUniformLocation(k, "map"),
                        opacity: o.getUniformLocation(k, "opacity"),
                        modelViewMatrix: o.getUniformLocation(k, "modelViewMatrix"),
                        projectionMatrix: o.getUniformLocation(k, "projectionMatrix"),
                        fogType: o.getUniformLocation(k, "fogType"),
                        fogDensity: o.getUniformLocation(k, "fogDensity"),
                        fogNear: o.getUniformLocation(k, "fogNear"),
                        fogFar: o.getUniformLocation(k, "fogFar"),
                        fogColor: o.getUniformLocation(k, "fogColor"),
                        alphaTest: o.getUniformLocation(k, "alphaTest")
                    };
                    var c = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                    c.width = 8,
                    c.height = 8;
                    var f = c.getContext("2d");
                    f.fillStyle = "white",
                    f.fillRect(0, 0, 8, 8),
                    n = new d(c),
                    n.needsUpdate = !0
                }
                function e() {
                    var b = o.createProgram()
                      , c = o.createShader(o.VERTEX_SHADER)
                      , d = o.createShader(o.FRAGMENT_SHADER);
                    return o.shaderSource(c, ["precision " + a.getPrecision() + " float;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform float rotation;", "uniform vec2 scale;", "uniform vec2 uvOffset;", "uniform vec2 uvScale;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "void main() {", "vUV = uvOffset + uv * uvScale;", "vec2 alignedPosition = position * scale;", "vec2 rotatedPosition;", "rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;", "rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;", "vec4 finalPosition;", "finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );", "finalPosition.xy += rotatedPosition;", "finalPosition = projectionMatrix * finalPosition;", "gl_Position = finalPosition;", "}"].join("\n")),
                    o.shaderSource(d, ["precision " + a.getPrecision() + " float;", "uniform vec3 color;", "uniform sampler2D map;", "uniform float opacity;", "uniform int fogType;", "uniform vec3 fogColor;", "uniform float fogDensity;", "uniform float fogNear;", "uniform float fogFar;", "uniform float alphaTest;", "varying vec2 vUV;", "void main() {", "vec4 texture = texture2D( map, vUV );", "if ( texture.a < alphaTest ) discard;", "gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );", "if ( fogType > 0 ) {", "float depth = gl_FragCoord.z / gl_FragCoord.w;", "float fogFactor = 0.0;", "if ( fogType == 1 ) {", "fogFactor = smoothstep( fogNear, fogFar, depth );", "} else {", "const float LOG2 = 1.442695;", "fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );", "fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );", "}", "gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );", "}", "}"].join("\n")),
                    o.compileShader(c),
                    o.compileShader(d),
                    o.attachShader(b, c),
                    o.attachShader(b, d),
                    o.linkProgram(b),
                    b
                }
                function f(a, b) {
                    return a.renderOrder !== b.renderOrder ? a.renderOrder - b.renderOrder : a.z !== b.z ? b.z - a.z : b.id - a.id
                }
                var g, j, k, l, m, n, o = a.context, p = a.state, q = new i, r = new h, s = new i;
                this.render = function(d, e) {
                    if (0 !== b.length) {
                        void 0 === k && c(),
                        o.useProgram(k),
                        p.initAttributes(),
                        p.enableAttribute(l.position),
                        p.enableAttribute(l.uv),
                        p.disableUnusedAttributes(),
                        p.disable(o.CULL_FACE),
                        p.enable(o.BLEND),
                        o.bindBuffer(o.ARRAY_BUFFER, g),
                        o.vertexAttribPointer(l.position, 2, o.FLOAT, !1, 16, 0),
                        o.vertexAttribPointer(l.uv, 2, o.FLOAT, !1, 16, 8),
                        o.bindBuffer(o.ELEMENT_ARRAY_BUFFER, j),
                        o.uniformMatrix4fv(m.projectionMatrix, !1, e.projectionMatrix.elements),
                        p.activeTexture(o.TEXTURE0),
                        o.uniform1i(m.map, 0);
                        var h = 0
                          , i = 0
                          , t = d.fog;
                        t ? (o.uniform3f(m.fogColor, t.color.r, t.color.g, t.color.b),
                        t.isFog ? (o.uniform1f(m.fogNear, t.near),
                        o.uniform1f(m.fogFar, t.far),
                        o.uniform1i(m.fogType, 1),
                        h = 1,
                        i = 1) : t.isFogExp2 && (o.uniform1f(m.fogDensity, t.density),
                        o.uniform1i(m.fogType, 2),
                        h = 2,
                        i = 2)) : (o.uniform1i(m.fogType, 0),
                        h = 0,
                        i = 0);
                        for (var u = 0, v = b.length; u < v; u++) {
                            var w = b[u];
                            w.modelViewMatrix.multiplyMatrices(e.matrixWorldInverse, w.matrixWorld),
                            w.z = -w.modelViewMatrix.elements[14]
                        }
                        b.sort(f);
                        for (var x = [], u = 0, v = b.length; u < v; u++) {
                            var w = b[u]
                              , y = w.material;
                            if (!1 !== y.visible) {
                                o.uniform1f(m.alphaTest, y.alphaTest),
                                o.uniformMatrix4fv(m.modelViewMatrix, !1, w.modelViewMatrix.elements),
                                w.matrixWorld.decompose(q, r, s),
                                x[0] = s.x,
                                x[1] = s.y;
                                var z = 0;
                                d.fog && y.fog && (z = i),
                                h !== z && (o.uniform1i(m.fogType, z),
                                h = z),
                                null !== y.map ? (o.uniform2f(m.uvOffset, y.map.offset.x, y.map.offset.y),
                                o.uniform2f(m.uvScale, y.map.repeat.x, y.map.repeat.y)) : (o.uniform2f(m.uvOffset, 0, 0),
                                o.uniform2f(m.uvScale, 1, 1)),
                                o.uniform1f(m.opacity, y.opacity),
                                o.uniform3f(m.color, y.color.r, y.color.g, y.color.b),
                                o.uniform1f(m.rotation, y.rotation),
                                o.uniform2fv(m.scale, x),
                                p.setBlending(y.blending, y.blendEquation, y.blendSrc, y.blendDst),
                                p.setDepthTest(y.depthTest),
                                p.setDepthWrite(y.depthWrite),
                                y.map ? a.setTexture2D(y.map, 0) : a.setTexture2D(n, 0),
                                o.drawElements(o.TRIANGLES, 6, o.UNSIGNED_SHORT, 0)
                            }
                        }
                        p.enable(o.CULL_FACE),
                        a.resetGLState()
                    }
                }
            }
            function Y() {
                Object.defineProperty(this, "id", {
                    value: jh++
                }),
                this.uuid = Zg.generateUUID(),
                this.name = "",
                this.type = "Material",
                this.fog = !0,
                this.lights = !0,
                this.blending = jf,
                this.side = _e,
                this.shading = df,
                this.vertexColors = ef,
                this.opacity = 1,
                this.transparent = !1,
                this.blendSrc = xf,
                this.blendDst = yf,
                this.blendEquation = of,
                this.blendSrcAlpha = null,
                this.blendDstAlpha = null,
                this.blendEquationAlpha = null,
                this.depthFunc = Hf,
                this.depthTest = !0,
                this.depthWrite = !0,
                this.clippingPlanes = null,
                this.clipIntersection = !1,
                this.clipShadows = !1,
                this.colorWrite = !0,
                this.precision = null,
                this.polygonOffset = !1,
                this.polygonOffsetFactor = 0,
                this.polygonOffsetUnits = 0,
                this.alphaTest = 0,
                this.premultipliedAlpha = !1,
                this.overdraw = 0,
                this.visible = !0,
                this._needsUpdate = !0
            }
            function Z(a) {
                Y.call(this),
                this.type = "ShaderMaterial",
                this.defines = {},
                this.uniforms = {},
                this.vertexShader = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
                this.fragmentShader = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",
                this.linewidth = 1,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.fog = !1,
                this.lights = !1,
                this.clipping = !1,
                this.skinning = !1,
                this.morphTargets = !1,
                this.morphNormals = !1,
                this.extensions = {
                    derivatives: !1,
                    fragDepth: !1,
                    drawBuffers: !1,
                    shaderTextureLOD: !1
                },
                this.defaultAttributeValues = {
                    color: [1, 1, 1],
                    uv: [0, 0],
                    uv2: [0, 0]
                },
                this.index0AttributeName = void 0,
                void 0 !== a && (a.attributes,
                this.setValues(a))
            }
            function $(a) {
                Y.call(this),
                this.type = "MeshDepthMaterial",
                this.depthPacking = Xg,
                this.skinning = !1,
                this.morphTargets = !1,
                this.map = null,
                this.alphaMap = null,
                this.displacementMap = null,
                this.displacementScale = 1,
                this.displacementBias = 0,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.fog = !1,
                this.lights = !1,
                this.setValues(a)
            }
            function _(a, b) {
                this.min = void 0 !== a ? a : new i(1 / 0,1 / 0,1 / 0),
                this.max = void 0 !== b ? b : new i(-1 / 0,-1 / 0,-1 / 0)
            }
            function aa(a, b) {
                this.center = void 0 !== a ? a : new i,
                this.radius = void 0 !== b ? b : 0
            }
            function ba() {
                this.elements = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]),
                arguments.length
            }
            function ca(a, b) {
                this.normal = void 0 !== a ? a : new i(1,0,0),
                this.constant = void 0 !== b ? b : 0
            }
            function da(a, b, c, d, e, f) {
                this.planes = [void 0 !== a ? a : new ca, void 0 !== b ? b : new ca, void 0 !== c ? c : new ca, void 0 !== d ? d : new ca, void 0 !== e ? e : new ca, void 0 !== f ? f : new ca]
            }
            function ea(a, b, d, g) {
                function h(b, c, d, e) {
                    var f = b.geometry
                      , g = null
                      , h = y
                      , i = b.customDepthMaterial;
                    if (d && (h = z,
                    i = b.customDistanceMaterial),
                    i)
                        g = i;
                    else {
                        var j = !1;
                        c.morphTargets && (f && f.isBufferGeometry ? j = f.morphAttributes && f.morphAttributes.position && f.morphAttributes.position.length > 0 : f && f.isGeometry && (j = f.morphTargets && f.morphTargets.length > 0));
                        var k = b.isSkinnedMesh && c.skinning
                          , l = 0;
                        j && (l |= v),
                        k && (l |= w),
                        g = h[l]
                    }
                    if (a.localClippingEnabled && !0 === c.clipShadows && 0 !== c.clippingPlanes.length) {
                        var m = g.uuid
                          , n = c.uuid
                          , o = A[m];
                        void 0 === o && (o = {},
                        A[m] = o);
                        var p = o[n];
                        void 0 === p && (p = g.clone(),
                        o[n] = p),
                        g = p
                    }
                    g.visible = c.visible,
                    g.wireframe = c.wireframe;
                    var q = c.side;
                    return M.renderSingleSided && q == bf && (q = _e),
                    M.renderReverseSided && (q === _e ? q = af : q === af && (q = _e)),
                    g.side = q,
                    g.clipShadows = c.clipShadows,
                    g.clippingPlanes = c.clippingPlanes,
                    g.wireframeLinewidth = c.wireframeLinewidth,
                    g.linewidth = c.linewidth,
                    d && void 0 !== g.uniforms.lightPos && g.uniforms.lightPos.value.copy(e),
                    g
                }
                function k(a, b, c) {
                    if (!1 !== a.visible) {
                        if (0 != (a.layers.mask & b.layers.mask) && (a.isMesh || a.isLine || a.isPoints) && a.castShadow && (!1 === a.frustumCulled || !0 === n.intersectsObject(a))) {
                            !0 === a.material.visible && (a.modelViewMatrix.multiplyMatrices(c.matrixWorldInverse, a.matrixWorld),
                            u.push(a))
                        }
                        for (var d = a.children, e = 0, f = d.length; e < f; e++)
                            k(d[e], b, c)
                    }
                }
                var l = a.context
                  , m = a.state
                  , n = new da
                  , o = new j
                  , p = b.shadows
                  , q = new c
                  , r = new c(g.maxTextureSize,g.maxTextureSize)
                  , s = new i
                  , t = new i
                  , u = []
                  , v = 1
                  , w = 2
                  , x = 1 + (v | w)
                  , y = new Array(x)
                  , z = new Array(x)
                  , A = {}
                  , B = [new i(1,0,0), new i(-1,0,0), new i(0,0,1), new i(0,0,-1), new i(0,1,0), new i(0,-1,0)]
                  , C = [new i(0,1,0), new i(0,1,0), new i(0,1,0), new i(0,1,0), new i(0,0,1), new i(0,0,-1)]
                  , D = [new e, new e, new e, new e, new e, new e]
                  , E = new $;
                E.depthPacking = Yg,
                E.clipping = !0;
                for (var F = ih.distanceRGBA, G = eh.clone(F.uniforms), H = 0; H !== x; ++H) {
                    var I = 0 != (H & v)
                      , J = 0 != (H & w)
                      , K = E.clone();
                    K.morphTargets = I,
                    K.skinning = J,
                    y[H] = K;
                    var L = new Z({
                        defines: {
                            USE_SHADOWMAP: ""
                        },
                        uniforms: G,
                        vertexShader: F.vertexShader,
                        fragmentShader: F.fragmentShader,
                        morphTargets: I,
                        skinning: J,
                        clipping: !0
                    });
                    z[H] = L
                }
                var M = this;
                this.enabled = !1,
                this.autoUpdate = !0,
                this.needsUpdate = !1,
                this.type = Ze,
                this.renderReverseSided = !0,
                this.renderSingleSided = !0,
                this.render = function(b, c) {
                    if (!1 !== M.enabled && (!1 !== M.autoUpdate || !1 !== M.needsUpdate) && 0 !== p.length) {
                        m.buffers.color.setClear(1, 1, 1, 1),
                        m.disable(l.BLEND),
                        m.setDepthTest(!0),
                        m.setScissorTest(!1);
                        for (var e, g, i = 0, j = p.length; i < j; i++) {
                            var v = p[i]
                              , w = v.shadow;
                            if (void 0 !== w) {
                                var x = w.camera;
                                if (q.copy(w.mapSize),
                                q.min(r),
                                v && v.isPointLight) {
                                    e = 6,
                                    g = !0;
                                    var y = q.x
                                      , z = q.y;
                                    D[0].set(2 * y, z, y, z),
                                    D[1].set(0, z, y, z),
                                    D[2].set(3 * y, z, y, z),
                                    D[3].set(y, z, y, z),
                                    D[4].set(3 * y, 0, y, z),
                                    D[5].set(y, 0, y, z),
                                    q.x *= 4,
                                    q.y *= 2
                                } else
                                    e = 1,
                                    g = !1;
                                if (null === w.map) {
                                    var A = {
                                        minFilter: cg,
                                        magFilter: cg,
                                        format: wg
                                    };
                                    w.map = new f(q.x,q.y,A),
                                    x.updateProjectionMatrix()
                                }
                                w.isSpotLightShadow && w.update(v),
                                w && w.isRectAreaLightShadow && w.update(v);
                                var E = w.map
                                  , F = w.matrix;
                                t.setFromMatrixPosition(v.matrixWorld),
                                x.position.copy(t),
                                a.setRenderTarget(E),
                                a.clear();
                                for (var G = 0; G < e; G++) {
                                    if (g) {
                                        s.copy(x.position),
                                        s.add(B[G]),
                                        x.up.copy(C[G]),
                                        x.lookAt(s);
                                        var H = D[G];
                                        m.viewport(H)
                                    } else
                                        s.setFromMatrixPosition(v.target.matrixWorld),
                                        x.lookAt(s);
                                    x.updateMatrixWorld(),
                                    x.matrixWorldInverse.getInverse(x.matrixWorld),
                                    F.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1),
                                    F.multiply(x.projectionMatrix),
                                    F.multiply(x.matrixWorldInverse),
                                    o.multiplyMatrices(x.projectionMatrix, x.matrixWorldInverse),
                                    n.setFromMatrix(o),
                                    u.length = 0,
                                    k(b, c, x);
                                    for (var I = 0, J = u.length; I < J; I++) {
                                        var K = u[I]
                                          , L = d.update(K)
                                          , N = K.material;
                                        if (N && N.isMultiMaterial)
                                            for (var O = L.groups, P = N.materials, Q = 0, R = O.length; Q < R; Q++) {
                                                var S = O[Q]
                                                  , T = P[S.materialIndex];
                                                if (!0 === T.visible) {
                                                    var U = h(K, T, g, t);
                                                    a.renderBufferDirect(x, null, L, U, K, S)
                                                }
                                            }
                                        else {
                                            var U = h(K, N, g, t);
                                            a.renderBufferDirect(x, null, L, U, K, null)
                                        }
                                    }
                                }
                            }
                        }
                        var V = a.getClearColor()
                          , W = a.getClearAlpha();
                        a.setClearColor(V, W),
                        M.needsUpdate = !1
                    }
                }
            }
            function fa(a, b) {
                this.origin = void 0 !== a ? a : new i,
                this.direction = void 0 !== b ? b : new i
            }
            function ga(a, b, c, d) {
                this._x = a || 0,
                this._y = b || 0,
                this._z = c || 0,
                this._order = d || ga.DefaultOrder
            }
            function ha() {
                this.mask = 1
            }
            function ia() {
                function a() {
                    e.setFromEuler(d, !1)
                }
                function b() {
                    d.setFromQuaternion(e, void 0, !1)
                }
                Object.defineProperty(this, "id", {
                    value: kh++
                }),
                this.uuid = Zg.generateUUID(),
                this.name = "",
                this.type = "Object3D",
                this.parent = null,
                this.children = [],
                this.up = ia.DefaultUp.clone();
                var c = new i
                  , d = new ga
                  , e = new h
                  , f = new i(1,1,1);
                d.onChange(a),
                e.onChange(b),
                Object.defineProperties(this, {
                    position: {
                        enumerable: !0,
                        value: c
                    },
                    rotation: {
                        enumerable: !0,
                        value: d
                    },
                    quaternion: {
                        enumerable: !0,
                        value: e
                    },
                    scale: {
                        enumerable: !0,
                        value: f
                    },
                    modelViewMatrix: {
                        value: new j
                    },
                    normalMatrix: {
                        value: new ba
                    }
                }),
                this.matrix = new j,
                this.matrixWorld = new j,
                this.matrixAutoUpdate = ia.DefaultMatrixAutoUpdate,
                this.matrixWorldNeedsUpdate = !1,
                this.layers = new ha,
                this.visible = !0,
                this.castShadow = !1,
                this.receiveShadow = !1,
                this.frustumCulled = !0,
                this.renderOrder = 0,
                this.userData = {},
                this.onBeforeRender = function() {}
                ,
                this.onAfterRender = function() {}
            }
            function ja(a, b) {
                this.start = void 0 !== a ? a : new i,
                this.end = void 0 !== b ? b : new i
            }
            function ka(a, b, c) {
                this.a = void 0 !== a ? a : new i,
                this.b = void 0 !== b ? b : new i,
                this.c = void 0 !== c ? c : new i
            }
            function la(a, b, c, d, e, f) {
                this.a = a,
                this.b = b,
                this.c = c,
                this.normal = d && d.isVector3 ? d : new i,
                this.vertexNormals = Array.isArray(d) ? d : [],
                this.color = e && e.isColor ? e : new T,
                this.vertexColors = Array.isArray(e) ? e : [],
                this.materialIndex = void 0 !== f ? f : 0
            }
            function ma(a) {
                Y.call(this),
                this.type = "MeshBasicMaterial",
                this.color = new T(16777215),
                this.map = null,
                this.lightMap = null,
                this.lightMapIntensity = 1,
                this.aoMap = null,
                this.aoMapIntensity = 1,
                this.specularMap = null,
                this.alphaMap = null,
                this.envMap = null,
                this.combine = Mf,
                this.reflectivity = 1,
                this.refractionRatio = .98,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.wireframeLinecap = "round",
                this.wireframeLinejoin = "round",
                this.skinning = !1,
                this.morphTargets = !1,
                this.lights = !1,
                this.setValues(a)
            }
            function na(a, b, c) {
                if (Array.isArray(a))
                    throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
                this.uuid = Zg.generateUUID(),
                this.array = a,
                this.itemSize = b,
                this.count = void 0 !== a ? a.length / b : 0,
                this.normalized = !0 === c,
                this.dynamic = !1,
                this.updateRange = {
                    offset: 0,
                    count: -1
                },
                this.onUploadCallback = function() {}
                ,
                this.version = 0
            }
            function oa(a, b) {
                na.call(this, new Int8Array(a), b)
            }
            function pa(a, b) {
                na.call(this, new Uint8Array(a), b)
            }
            function qa(a, b) {
                na.call(this, new Uint8ClampedArray(a), b)
            }
            function ra(a, b) {
                na.call(this, new Int16Array(a), b)
            }
            function sa(a, b) {
                na.call(this, new Uint16Array(a), b)
            }
            function ta(a, b) {
                na.call(this, new Int32Array(a), b)
            }
            function ua(a, b) {
                na.call(this, new Uint32Array(a), b)
            }
            function va(a, b) {
                na.call(this, new Float32Array(a), b)
            }
            function wa(a, b) {
                na.call(this, new Float64Array(a), b)
            }
            function xa() {
                this.indices = [],
                this.vertices = [],
                this.normals = [],
                this.colors = [],
                this.uvs = [],
                this.uvs2 = [],
                this.groups = [],
                this.morphTargets = {},
                this.skinWeights = [],
                this.skinIndices = [],
                this.boundingBox = null,
                this.boundingSphere = null,
                this.verticesNeedUpdate = !1,
                this.normalsNeedUpdate = !1,
                this.colorsNeedUpdate = !1,
                this.uvsNeedUpdate = !1,
                this.groupsNeedUpdate = !1
            }
            function ya(a) {
                for (var b = a.length, c = -1 / 0; b--; )
                    a[b] > c && (c = a[b]);
                return c
            }
            function za() {
                return lh++
            }
            function Aa() {
                Object.defineProperty(this, "id", {
                    value: za()
                }),
                this.uuid = Zg.generateUUID(),
                this.name = "",
                this.type = "Geometry",
                this.vertices = [],
                this.colors = [],
                this.faces = [],
                this.faceVertexUvs = [[]],
                this.morphTargets = [],
                this.morphNormals = [],
                this.skinWeights = [],
                this.skinIndices = [],
                this.lineDistances = [],
                this.boundingBox = null,
                this.boundingSphere = null,
                this.elementsNeedUpdate = !1,
                this.verticesNeedUpdate = !1,
                this.uvsNeedUpdate = !1,
                this.normalsNeedUpdate = !1,
                this.colorsNeedUpdate = !1,
                this.lineDistancesNeedUpdate = !1,
                this.groupsNeedUpdate = !1
            }
            function Ba() {
                Object.defineProperty(this, "id", {
                    value: za()
                }),
                this.uuid = Zg.generateUUID(),
                this.name = "",
                this.type = "BufferGeometry",
                this.index = null,
                this.attributes = {},
                this.morphAttributes = {},
                this.groups = [],
                this.boundingBox = null,
                this.boundingSphere = null,
                this.drawRange = {
                    start: 0,
                    count: 1 / 0
                }
            }
            function Ca(a, b) {
                ia.call(this),
                this.type = "Mesh",
                this.geometry = void 0 !== a ? a : new Ba,
                this.material = void 0 !== b ? b : new ma({
                    color: 16777215 * Math.random()
                }),
                this.drawMode = Ng,
                this.updateMorphTargets()
            }
            function Da(a, b, c, d, e, f) {
                Aa.call(this),
                this.type = "BoxGeometry",
                this.parameters = {
                    width: a,
                    height: b,
                    depth: c,
                    widthSegments: d,
                    heightSegments: e,
                    depthSegments: f
                },
                this.fromBufferGeometry(new Ea(a,b,c,d,e,f)),
                this.mergeVertices()
            }
            function Ea(a, b, c, d, e, f) {
                function g(a, b, c, d, e, f, g, p, q, r, s) {
                    var t, u, v = f / q, w = g / r, x = f / 2, y = g / 2, z = p / 2, A = q + 1, B = r + 1, C = 0, D = 0, E = new i;
                    for (u = 0; u < B; u++) {
                        var F = u * w - y;
                        for (t = 0; t < A; t++) {
                            var G = t * v - x;
                            E[a] = G * d,
                            E[b] = F * e,
                            E[c] = z,
                            k.push(E.x, E.y, E.z),
                            E[a] = 0,
                            E[b] = 0,
                            E[c] = p > 0 ? 1 : -1,
                            l.push(E.x, E.y, E.z),
                            m.push(t / q),
                            m.push(1 - u / r),
                            C += 1
                        }
                    }
                    for (u = 0; u < r; u++)
                        for (t = 0; t < q; t++) {
                            var H = n + t + A * u
                              , I = n + t + A * (u + 1)
                              , J = n + (t + 1) + A * (u + 1)
                              , K = n + (t + 1) + A * u;
                            j.push(H, I, K),
                            j.push(I, J, K),
                            D += 6
                        }
                    h.addGroup(o, D, s),
                    o += D,
                    n += C
                }
                Ba.call(this),
                this.type = "BoxBufferGeometry",
                this.parameters = {
                    width: a,
                    height: b,
                    depth: c,
                    widthSegments: d,
                    heightSegments: e,
                    depthSegments: f
                };
                var h = this;
                d = Math.floor(d) || 1,
                e = Math.floor(e) || 1,
                f = Math.floor(f) || 1;
                var j = []
                  , k = []
                  , l = []
                  , m = []
                  , n = 0
                  , o = 0;
                g("z", "y", "x", -1, -1, c, b, a, f, e, 0),
                g("z", "y", "x", 1, -1, c, b, -a, f, e, 1),
                g("x", "z", "y", 1, 1, a, c, b, d, f, 2),
                g("x", "z", "y", 1, -1, a, c, -b, d, f, 3),
                g("x", "y", "z", 1, -1, a, b, c, d, e, 4),
                g("x", "y", "z", -1, -1, a, b, -c, d, e, 5),
                this.setIndex(j),
                this.addAttribute("position", new va(k,3)),
                this.addAttribute("normal", new va(l,3)),
                this.addAttribute("uv", new va(m,2))
            }
            function Fa(a, b, c, d) {
                Aa.call(this),
                this.type = "PlaneGeometry",
                this.parameters = {
                    width: a,
                    height: b,
                    widthSegments: c,
                    heightSegments: d
                },
                this.fromBufferGeometry(new Ga(a,b,c,d))
            }
            function Ga(a, b, c, d) {
                Ba.call(this),
                this.type = "PlaneBufferGeometry",
                this.parameters = {
                    width: a,
                    height: b,
                    widthSegments: c,
                    heightSegments: d
                };
                var e, f, g = a / 2, h = b / 2, i = Math.floor(c) || 1, j = Math.floor(d) || 1, k = i + 1, l = j + 1, m = a / i, n = b / j, o = [], p = [], q = [], r = [];
                for (f = 0; f < l; f++) {
                    var s = f * n - h;
                    for (e = 0; e < k; e++) {
                        var t = e * m - g;
                        p.push(t, -s, 0),
                        q.push(0, 0, 1),
                        r.push(e / i),
                        r.push(1 - f / j)
                    }
                }
                for (f = 0; f < j; f++)
                    for (e = 0; e < i; e++) {
                        var u = e + k * f
                          , v = e + k * (f + 1)
                          , w = e + 1 + k * (f + 1)
                          , x = e + 1 + k * f;
                        o.push(u, v, x),
                        o.push(v, w, x)
                    }
                this.setIndex(o),
                this.addAttribute("position", new va(p,3)),
                this.addAttribute("normal", new va(q,3)),
                this.addAttribute("uv", new va(r,2))
            }
            function Ha() {
                ia.call(this),
                this.type = "Camera",
                this.matrixWorldInverse = new j,
                this.projectionMatrix = new j
            }
            function Ia(a, b, c, d) {
                Ha.call(this),
                this.type = "PerspectiveCamera",
                this.fov = void 0 !== a ? a : 50,
                this.zoom = 1,
                this.near = void 0 !== c ? c : .1,
                this.far = void 0 !== d ? d : 2e3,
                this.focus = 10,
                this.aspect = void 0 !== b ? b : 1,
                this.view = null,
                this.filmGauge = 35,
                this.filmOffset = 0,
                this.updateProjectionMatrix()
            }
            function Ja(a, b, c, d, e, f) {
                Ha.call(this),
                this.type = "OrthographicCamera",
                this.zoom = 1,
                this.view = null,
                this.left = a,
                this.right = b,
                this.top = c,
                this.bottom = d,
                this.near = void 0 !== e ? e : .1,
                this.far = void 0 !== f ? f : 2e3,
                this.updateProjectionMatrix()
            }
            function Ka(a, b, c) {
                function d(a) {
                    h = a
                }
                function e(c) {
                    c.array instanceof Uint32Array && b.get("OES_element_index_uint") ? (i = a.UNSIGNED_INT,
                    j = 4) : c.array instanceof Uint16Array ? (i = a.UNSIGNED_SHORT,
                    j = 2) : (i = a.UNSIGNED_BYTE,
                    j = 1)
                }
                function f(b, d) {
                    a.drawElements(h, d, i, b * j),
                    c.calls++,
                    c.vertices += d,
                    h === a.TRIANGLES && (c.faces += d / 3)
                }
                function g(d, e, f) {
                    var g = b.get("ANGLE_instanced_arrays");
                    null !== g && (g.drawElementsInstancedANGLE(h, f, i, e * j, d.maxInstancedCount),
                    c.calls++,
                    c.vertices += f * d.maxInstancedCount,
                    h === a.TRIANGLES && (c.faces += d.maxInstancedCount * f / 3))
                }
                var h, i, j;
                return {
                    setMode: d,
                    setIndex: e,
                    render: f,
                    renderInstances: g
                }
            }
            function La(a, b, c) {
                function d(a) {
                    g = a
                }
                function e(b, d) {
                    a.drawArrays(g, b, d),
                    c.calls++,
                    c.vertices += d,
                    g === a.TRIANGLES && (c.faces += d / 3)
                }
                function f(d) {
                    var e = b.get("ANGLE_instanced_arrays");
                    if (null !== e) {
                        var f = d.attributes.position
                          , h = 0;
                        f.isInterleavedBufferAttribute ? (h = f.data.count,
                        e.drawArraysInstancedANGLE(g, 0, h, d.maxInstancedCount)) : (h = f.count,
                        e.drawArraysInstancedANGLE(g, 0, h, d.maxInstancedCount)),
                        c.calls++,
                        c.vertices += h * d.maxInstancedCount,
                        g === a.TRIANGLES && (c.faces += d.maxInstancedCount * h / 3)
                    }
                }
                var g;
                return {
                    setMode: d,
                    render: e,
                    renderInstances: f
                }
            }
            function Ma() {
                var a = {};
                return {
                    get: function(b) {
                        if (void 0 !== a[b.id])
                            return a[b.id];
                        var d;
                        switch (b.type) {
                        case "DirectionalLight":
                            d = {
                                direction: new i,
                                color: new T,
                                shadow: !1,
                                shadowBias: 0,
                                shadowRadius: 1,
                                shadowMapSize: new c
                            };
                            break;
                        case "SpotLight":
                            d = {
                                position: new i,
                                direction: new i,
                                color: new T,
                                distance: 0,
                                coneCos: 0,
                                penumbraCos: 0,
                                decay: 0,
                                shadow: !1,
                                shadowBias: 0,
                                shadowRadius: 1,
                                shadowMapSize: new c
                            };
                            break;
                        case "PointLight":
                            d = {
                                position: new i,
                                color: new T,
                                distance: 0,
                                decay: 0,
                                shadow: !1,
                                shadowBias: 0,
                                shadowRadius: 1,
                                shadowMapSize: new c
                            };
                            break;
                        case "HemisphereLight":
                            d = {
                                direction: new i,
                                skyColor: new T,
                                groundColor: new T
                            };
                            break;
                        case "RectAreaLight":
                            d = {
                                color: new T,
                                position: new i,
                                halfWidth: new i,
                                halfHeight: new i
                            }
                        }
                        return a[b.id] = d,
                        d
                    }
                }
            }
            function Na(a, b, c) {
                var d = a.createShader(b);
                return a.shaderSource(d, c),
                a.compileShader(d),
                a.getShaderParameter(d, a.COMPILE_STATUS),
                a.getShaderInfoLog(d),
                d
            }
            function Oa(a) {
                switch (a) {
                case Qg:
                    return ["Linear", "( value )"];
                case Rg:
                    return ["sRGB", "( value )"];
                case Tg:
                    return ["RGBE", "( value )"];
                case Ug:
                    return ["RGBM", "( value, 7.0 )"];
                case Vg:
                    return ["RGBM", "( value, 16.0 )"];
                case Wg:
                    return ["RGBD", "( value, 256.0 )"];
                case Sg:
                    return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
                default:
                    throw new Error("unsupported encoding: " + a)
                }
            }
            function Pa(a, b) {
                var c = Oa(b);
                return "vec4 " + a + "( vec4 value ) { return " + c[0] + "ToLinear" + c[1] + "; }"
            }
            function Qa(a, b) {
                var c = Oa(b);
                return "vec4 " + a + "( vec4 value ) { return LinearTo" + c[0] + c[1] + "; }"
            }
            function Ra(a, b) {
                var c;
                switch (b) {
                case Qf:
                    c = "Linear";
                    break;
                case Rf:
                    c = "Reinhard";
                    break;
                case Sf:
                    c = "Uncharted2";
                    break;
                case Tf:
                    c = "OptimizedCineon";
                    break;
                default:
                    throw new Error("unsupported toneMapping: " + b)
                }
                return "vec3 " + a + "( vec3 color ) { return " + c + "ToneMapping( color ); }"
            }
            function Sa(a, b, c) {
                return a = a || {},
                [a.derivatives || b.envMapCubeUV || b.bumpMap || b.normalMap || b.flatShading ? "#extension GL_OES_standard_derivatives : enable" : "", (a.fragDepth || b.logarithmicDepthBuffer) && c.get("EXT_frag_depth") ? "#extension GL_EXT_frag_depth : enable" : "", a.drawBuffers && c.get("WEBGL_draw_buffers") ? "#extension GL_EXT_draw_buffers : require" : "", (a.shaderTextureLOD || b.envMap) && c.get("EXT_shader_texture_lod") ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter(Va).join("\n")
            }
            function Ta(a) {
                var b = [];
                for (var c in a) {
                    var d = a[c];
                    !1 !== d && b.push("#define " + c + " " + d)
                }
                return b.join("\n")
            }
            function Ua(a, b, c) {
                for (var d = {}, e = a.getProgramParameter(b, a.ACTIVE_ATTRIBUTES), f = 0; f < e; f++) {
                    var g = a.getActiveAttrib(b, f)
                      , h = g.name;
                    d[h] = a.getAttribLocation(b, h)
                }
                return d
            }
            function Va(a) {
                return "" !== a
            }
            function Wa(a, b) {
                return a.replace(/NUM_DIR_LIGHTS/g, b.numDirLights).replace(/NUM_SPOT_LIGHTS/g, b.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, b.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, b.numPointLights).replace(/NUM_HEMI_LIGHTS/g, b.numHemiLights)
            }
            function Xa(a) {
                function b(a, b) {
                    var c = fh[b];
                    if (void 0 === c)
                        throw new Error("Can not resolve #include <" + b + ">");
                    return Xa(c)
                }
                var c = /#include +<([\w\d.]+)>/g;
                return a.replace(c, b)
            }
            function Ya(a) {
                function b(a, b, c, d) {
                    for (var e = "", f = parseInt(b); f < parseInt(c); f++)
                        e += d.replace(/\[ i \]/g, "[ " + f + " ]");
                    return e
                }
                var c = /for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;
                return a.replace(c, b)
            }
            function Za(a, b, c, d) {
                var e = a.context
                  , f = c.extensions
                  , g = c.defines
                  , h = c.__webglShader.vertexShader
                  , i = c.__webglShader.fragmentShader
                  , j = "SHADOWMAP_TYPE_BASIC";
                d.shadowMapType === Ze ? j = "SHADOWMAP_TYPE_PCF" : d.shadowMapType === $e && (j = "SHADOWMAP_TYPE_PCF_SOFT");
                var k = "ENVMAP_TYPE_CUBE"
                  , l = "ENVMAP_MODE_REFLECTION"
                  , m = "ENVMAP_BLENDING_MULTIPLY";
                if (d.envMap) {
                    switch (c.envMap.mapping) {
                    case Uf:
                    case Vf:
                        k = "ENVMAP_TYPE_CUBE";
                        break;
                    case Zf:
                    case $f:
                        k = "ENVMAP_TYPE_CUBE_UV";
                        break;
                    case Wf:
                    case Xf:
                        k = "ENVMAP_TYPE_EQUIREC";
                        break;
                    case Yf:
                        k = "ENVMAP_TYPE_SPHERE"
                    }
                    switch (c.envMap.mapping) {
                    case Vf:
                    case Xf:
                        l = "ENVMAP_MODE_REFRACTION"
                    }
                    switch (c.combine) {
                    case Mf:
                        m = "ENVMAP_BLENDING_MULTIPLY";
                        break;
                    case Nf:
                        m = "ENVMAP_BLENDING_MIX";
                        break;
                    case Of:
                        m = "ENVMAP_BLENDING_ADD"
                    }
                }
                var n, o, p = a.gammaFactor > 0 ? a.gammaFactor : 1, q = Sa(f, d, a.extensions), r = Ta(g), s = e.createProgram();
                c.isRawShaderMaterial ? (n = [r, "\n"].filter(Va).join("\n"),
                o = [q, r, "\n"].filter(Va).join("\n")) : (n = ["precision " + d.precision + " float;", "precision " + d.precision + " int;", "#define SHADER_NAME " + c.__webglShader.name, r, d.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + p, "#define MAX_BONES " + d.maxBones, d.useFog && d.fog ? "#define USE_FOG" : "", d.useFog && d.fogExp ? "#define FOG_EXP2" : "", d.map ? "#define USE_MAP" : "", d.envMap ? "#define USE_ENVMAP" : "", d.envMap ? "#define " + l : "", d.lightMap ? "#define USE_LIGHTMAP" : "", d.aoMap ? "#define USE_AOMAP" : "", d.emissiveMap ? "#define USE_EMISSIVEMAP" : "", d.bumpMap ? "#define USE_BUMPMAP" : "", d.normalMap ? "#define USE_NORMALMAP" : "", d.displacementMap && d.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", d.specularMap ? "#define USE_SPECULARMAP" : "", d.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", d.metalnessMap ? "#define USE_METALNESSMAP" : "", d.alphaMap ? "#define USE_ALPHAMAP" : "", d.vertexColors ? "#define USE_COLOR" : "", d.flatShading ? "#define FLAT_SHADED" : "", d.skinning ? "#define USE_SKINNING" : "", d.useVertexTexture ? "#define BONE_TEXTURE" : "", d.morphTargets ? "#define USE_MORPHTARGETS" : "", d.morphNormals && !1 === d.flatShading ? "#define USE_MORPHNORMALS" : "", d.doubleSided ? "#define DOUBLE_SIDED" : "", d.flipSided ? "#define FLIP_SIDED" : "", "#define NUM_CLIPPING_PLANES " + d.numClippingPlanes, d.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", d.shadowMapEnabled ? "#define " + j : "", d.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", d.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", d.logarithmicDepthBuffer && a.extensions.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_COLOR", "\tattribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "\tattribute vec3 morphTarget0;", "\tattribute vec3 morphTarget1;", "\tattribute vec3 morphTarget2;", "\tattribute vec3 morphTarget3;", "\t#ifdef USE_MORPHNORMALS", "\t\tattribute vec3 morphNormal0;", "\t\tattribute vec3 morphNormal1;", "\t\tattribute vec3 morphNormal2;", "\t\tattribute vec3 morphNormal3;", "\t#else", "\t\tattribute vec3 morphTarget4;", "\t\tattribute vec3 morphTarget5;", "\t\tattribute vec3 morphTarget6;", "\t\tattribute vec3 morphTarget7;", "\t#endif", "#endif", "#ifdef USE_SKINNING", "\tattribute vec4 skinIndex;", "\tattribute vec4 skinWeight;", "#endif", "\n"].filter(Va).join("\n"),
                o = [q, "precision " + d.precision + " float;", "precision " + d.precision + " int;", "#define SHADER_NAME " + c.__webglShader.name, r, d.alphaTest ? "#define ALPHATEST " + d.alphaTest : "", "#define GAMMA_FACTOR " + p, d.useFog && d.fog ? "#define USE_FOG" : "", d.useFog && d.fogExp ? "#define FOG_EXP2" : "", d.map ? "#define USE_MAP" : "", d.envMap ? "#define USE_ENVMAP" : "", d.envMap ? "#define " + k : "", d.envMap ? "#define " + l : "", d.envMap ? "#define " + m : "", d.lightMap ? "#define USE_LIGHTMAP" : "", d.aoMap ? "#define USE_AOMAP" : "", d.emissiveMap ? "#define USE_EMISSIVEMAP" : "", d.bumpMap ? "#define USE_BUMPMAP" : "", d.normalMap ? "#define USE_NORMALMAP" : "", d.specularMap ? "#define USE_SPECULARMAP" : "", d.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", d.metalnessMap ? "#define USE_METALNESSMAP" : "", d.alphaMap ? "#define USE_ALPHAMAP" : "", d.vertexColors ? "#define USE_COLOR" : "", d.gradientMap ? "#define USE_GRADIENTMAP" : "", d.flatShading ? "#define FLAT_SHADED" : "", d.doubleSided ? "#define DOUBLE_SIDED" : "", d.flipSided ? "#define FLIP_SIDED" : "", "#define NUM_CLIPPING_PLANES " + d.numClippingPlanes, "#define UNION_CLIPPING_PLANES " + (d.numClippingPlanes - d.numClipIntersection), d.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", d.shadowMapEnabled ? "#define " + j : "", d.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", d.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", d.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", d.logarithmicDepthBuffer && a.extensions.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", d.envMap && a.extensions.get("EXT_shader_texture_lod") ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", d.toneMapping !== Pf ? "#define TONE_MAPPING" : "", d.toneMapping !== Pf ? fh.tonemapping_pars_fragment : "", d.toneMapping !== Pf ? Ra("toneMapping", d.toneMapping) : "", d.outputEncoding || d.mapEncoding || d.envMapEncoding || d.emissiveMapEncoding ? fh.encodings_pars_fragment : "", d.mapEncoding ? Pa("mapTexelToLinear", d.mapEncoding) : "", d.envMapEncoding ? Pa("envMapTexelToLinear", d.envMapEncoding) : "", d.emissiveMapEncoding ? Pa("emissiveMapTexelToLinear", d.emissiveMapEncoding) : "", d.outputEncoding ? Qa("linearToOutputTexel", d.outputEncoding) : "", d.depthPacking ? "#define DEPTH_PACKING " + c.depthPacking : "", "\n"].filter(Va).join("\n")),
                h = Xa(h, d),
                h = Wa(h, d),
                i = Xa(i, d),
                i = Wa(i, d),
                c.isShaderMaterial || (h = Ya(h),
                i = Ya(i));
                var t = n + h
                  , u = o + i
                  , v = Na(e, e.VERTEX_SHADER, t)
                  , w = Na(e, e.FRAGMENT_SHADER, u);
                e.attachShader(s, v),
                e.attachShader(s, w),
                void 0 !== c.index0AttributeName ? e.bindAttribLocation(s, 0, c.index0AttributeName) : !0 === d.morphTargets && e.bindAttribLocation(s, 0, "position"),
                e.linkProgram(s);
                var x = e.getProgramInfoLog(s)
                  , y = e.getShaderInfoLog(v)
                  , z = e.getShaderInfoLog(w)
                  , A = !0
                  , B = !0;
                !1 === e.getProgramParameter(s, e.LINK_STATUS) ? A = !1 : "" !== x || "" !== y && "" !== z || (B = !1),
                B && (this.diagnostics = {
                    runnable: A,
                    material: c,
                    programLog: x,
                    vertexShader: {
                        log: y,
                        prefix: n
                    },
                    fragmentShader: {
                        log: z,
                        prefix: o
                    }
                }),
                e.deleteShader(v),
                e.deleteShader(w);
                var C;
                this.getUniforms = function() {
                    return void 0 === C && (C = new S(e,s,a)),
                    C
                }
                ;
                var D;
                return this.getAttributes = function() {
                    return void 0 === D && (D = Ua(e, s)),
                    D
                }
                ,
                this.destroy = function() {
                    e.deleteProgram(s),
                    this.program = void 0
                }
                ,
                Object.defineProperties(this, {
                    uniforms: {
                        get: function() {
                            return this.getUniforms()
                        }
                    },
                    attributes: {
                        get: function() {
                            return this.getAttributes()
                        }
                    }
                }),
                this.id = mh++,
                this.code = b,
                this.usedTimes = 1,
                this.program = s,
                this.vertexShader = v,
                this.fragmentShader = w,
                this
            }
            function $a(a, b) {
                function c(a) {
                    if (b.floatVertexTextures && a && a.skeleton && a.skeleton.useVertexTexture)
                        return 1024;
                    var c = b.maxVertexUniforms
                      , d = Math.floor((c - 20) / 4)
                      , e = d;
                    return void 0 !== a && a && a.isSkinnedMesh && (e = Math.min(a.skeleton.bones.length, e),
                    a.skeleton.bones.length),
                    e
                }
                function d(a, b) {
                    var c;
                    return a ? a.isTexture ? c = a.encoding : a.isWebGLRenderTarget && (c = a.texture.encoding) : c = Qg,
                    c === Qg && b && (c = Sg),
                    c
                }
                var e = []
                  , f = {
                    MeshDepthMaterial: "depth",
                    MeshNormalMaterial: "normal",
                    MeshBasicMaterial: "basic",
                    MeshLambertMaterial: "lambert",
                    MeshPhongMaterial: "phong",
                    MeshToonMaterial: "phong",
                    MeshStandardMaterial: "physical",
                    MeshPhysicalMaterial: "physical",
                    LineBasicMaterial: "basic",
                    LineDashedMaterial: "dashed",
                    PointsMaterial: "points"
                }
                  , g = ["precision", "supportsVertexTextures", "map", "mapEncoding", "envMap", "envMapMode", "envMapEncoding", "lightMap", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "gradientMap", "alphaMap", "combine", "vertexColors", "fog", "useFog", "fogExp", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking"];
                this.getParameters = function(e, g, h, i, j, k) {
                    var l = f[e.type]
                      , m = c(k)
                      , n = a.getPrecision();
                    null !== e.precision && (n = b.getMaxPrecision(e.precision),
                    e.precision);
                    var o = a.getCurrentRenderTarget();
                    return {
                        shaderID: l,
                        precision: n,
                        supportsVertexTextures: b.vertexTextures,
                        outputEncoding: d(o ? o.texture : null, a.gammaOutput),
                        map: !!e.map,
                        mapEncoding: d(e.map, a.gammaInput),
                        envMap: !!e.envMap,
                        envMapMode: e.envMap && e.envMap.mapping,
                        envMapEncoding: d(e.envMap, a.gammaInput),
                        envMapCubeUV: !!e.envMap && (e.envMap.mapping === Zf || e.envMap.mapping === $f),
                        lightMap: !!e.lightMap,
                        aoMap: !!e.aoMap,
                        emissiveMap: !!e.emissiveMap,
                        emissiveMapEncoding: d(e.emissiveMap, a.gammaInput),
                        bumpMap: !!e.bumpMap,
                        normalMap: !!e.normalMap,
                        displacementMap: !!e.displacementMap,
                        roughnessMap: !!e.roughnessMap,
                        metalnessMap: !!e.metalnessMap,
                        specularMap: !!e.specularMap,
                        alphaMap: !!e.alphaMap,
                        gradientMap: !!e.gradientMap,
                        combine: e.combine,
                        vertexColors: e.vertexColors,
                        fog: !!h,
                        useFog: e.fog,
                        fogExp: h && h.isFogExp2,
                        flatShading: e.shading === cf,
                        sizeAttenuation: e.sizeAttenuation,
                        logarithmicDepthBuffer: b.logarithmicDepthBuffer,
                        skinning: e.skinning,
                        maxBones: m,
                        useVertexTexture: b.floatVertexTextures && k && k.skeleton && k.skeleton.useVertexTexture,
                        morphTargets: e.morphTargets,
                        morphNormals: e.morphNormals,
                        maxMorphTargets: a.maxMorphTargets,
                        maxMorphNormals: a.maxMorphNormals,
                        numDirLights: g.directional.length,
                        numPointLights: g.point.length,
                        numSpotLights: g.spot.length,
                        numRectAreaLights: g.rectArea.length,
                        numHemiLights: g.hemi.length,
                        numClippingPlanes: i,
                        numClipIntersection: j,
                        shadowMapEnabled: a.shadowMap.enabled && k.receiveShadow && g.shadows.length > 0,
                        shadowMapType: a.shadowMap.type,
                        toneMapping: a.toneMapping,
                        physicallyCorrectLights: a.physicallyCorrectLights,
                        premultipliedAlpha: e.premultipliedAlpha,
                        alphaTest: e.alphaTest,
                        doubleSided: e.side === bf,
                        flipSided: e.side === af,
                        depthPacking: void 0 !== e.depthPacking && e.depthPacking
                    }
                }
                ,
                this.getProgramCode = function(a, b) {
                    var c = [];
                    if (b.shaderID ? c.push(b.shaderID) : (c.push(a.fragmentShader),
                    c.push(a.vertexShader)),
                    void 0 !== a.defines)
                        for (var d in a.defines)
                            c.push(d),
                            c.push(a.defines[d]);
                    for (var e = 0; e < g.length; e++)
                        c.push(b[g[e]]);
                    return c.join()
                }
                ,
                this.acquireProgram = function(b, c, d) {
                    for (var f, g = 0, h = e.length; g < h; g++) {
                        var i = e[g];
                        if (i.code === d) {
                            f = i,
                            ++f.usedTimes;
                            break
                        }
                    }
                    return void 0 === f && (f = new Za(a,d,b,c),
                    e.push(f)),
                    f
                }
                ,
                this.releaseProgram = function(a) {
                    if (0 == --a.usedTimes) {
                        var b = e.indexOf(a);
                        e[b] = e[e.length - 1],
                        e.pop(),
                        a.destroy()
                    }
                }
                ,
                this.programs = e
            }
            function _a(a, b, c) {
                function d(a) {
                    var e = a.target
                      , h = i[e.id];
                    null !== h.index && f(h.index),
                    g(h.attributes),
                    e.removeEventListener("dispose", d),
                    delete i[e.id];
                    var j = b.get(e);
                    j.wireframe && f(j.wireframe),
                    b.delete(e);
                    var k = b.get(h);
                    k.wireframe && f(k.wireframe),
                    b.delete(h),
                    c.memory.geometries--
                }
                function e(a) {
                    return a.isInterleavedBufferAttribute ? b.get(a.data).__webglBuffer : b.get(a).__webglBuffer
                }
                function f(b) {
                    var c = e(b);
                    void 0 !== c && (a.deleteBuffer(c),
                    h(b))
                }
                function g(a) {
                    for (var b in a)
                        f(a[b])
                }
                function h(a) {
                    a.isInterleavedBufferAttribute ? b.delete(a.data) : b.delete(a)
                }
                var i = {};
                return {
                    get: function(a) {
                        var b = a.geometry;
                        if (void 0 !== i[b.id])
                            return i[b.id];
                        b.addEventListener("dispose", d);
                        var e;
                        return b.isBufferGeometry ? e = b : b.isGeometry && (void 0 === b._bufferGeometry && (b._bufferGeometry = (new Ba).setFromObject(a)),
                        e = b._bufferGeometry),
                        i[b.id] = e,
                        c.memory.geometries++,
                        e
                    }
                }
            }
            function ab(a, b, c) {
                function d(b) {
                    var c = k.get(b);
                    b.geometry.isGeometry && c.updateFromObject(b);
                    var d = c.index
                      , f = c.attributes;
                    null !== d && e(d, a.ELEMENT_ARRAY_BUFFER);
                    for (var g in f)
                        e(f[g], a.ARRAY_BUFFER);
                    var h = c.morphAttributes;
                    for (var g in h)
                        for (var i = h[g], j = 0, l = i.length; j < l; j++)
                            e(i[j], a.ARRAY_BUFFER);
                    return c
                }
                function e(a, c) {
                    var d = a.isInterleavedBufferAttribute ? a.data : a
                      , e = b.get(d);
                    void 0 === e.__webglBuffer ? f(e, d, c) : e.version !== d.version && g(e, d, c)
                }
                function f(b, c, d) {
                    b.__webglBuffer = a.createBuffer(),
                    a.bindBuffer(d, b.__webglBuffer);
                    var e = c.dynamic ? a.DYNAMIC_DRAW : a.STATIC_DRAW;
                    a.bufferData(d, c.array, e);
                    var f = a.FLOAT
                      , g = c.array;
                    g instanceof Float32Array ? f = a.FLOAT : g instanceof Float64Array || (g instanceof Uint16Array ? f = a.UNSIGNED_SHORT : g instanceof Int16Array ? f = a.SHORT : g instanceof Uint32Array ? f = a.UNSIGNED_INT : g instanceof Int32Array ? f = a.INT : g instanceof Int8Array ? f = a.BYTE : g instanceof Uint8Array && (f = a.UNSIGNED_BYTE)),
                    b.bytesPerElement = g.BYTES_PER_ELEMENT,
                    b.type = f,
                    b.version = c.version,
                    c.onUploadCallback()
                }
                function g(b, c, d) {
                    a.bindBuffer(d, b.__webglBuffer),
                    !1 === c.dynamic ? a.bufferData(d, c.array, a.STATIC_DRAW) : -1 === c.updateRange.count ? a.bufferSubData(d, 0, c.array) : 0 === c.updateRange.count || (a.bufferSubData(d, c.updateRange.offset * c.array.BYTES_PER_ELEMENT, c.array.subarray(c.updateRange.offset, c.updateRange.offset + c.updateRange.count)),
                    c.updateRange.count = 0),
                    b.version = c.version
                }
                function h(a) {
                    return a.isInterleavedBufferAttribute ? b.get(a.data).__webglBuffer : b.get(a).__webglBuffer
                }
                function i(a) {
                    return a.isInterleavedBufferAttribute ? b.get(a.data) : b.get(a)
                }
                function j(c) {
                    var d = b.get(c);
                    if (void 0 !== d.wireframe)
                        return d.wireframe;
                    var f = []
                      , g = c.index
                      , h = c.attributes;
                    if (null !== g)
                        for (var i = g.array, j = 0, k = i.length; j < k; j += 3) {
                            var l = i[j + 0]
                              , m = i[j + 1]
                              , n = i[j + 2];
                            f.push(l, m, m, n, n, l)
                        }
                    else
                        for (var i = h.position.array, j = 0, k = i.length / 3 - 1; j < k; j += 3) {
                            var l = j + 0
                              , m = j + 1
                              , n = j + 2;
                            f.push(l, m, m, n, n, l)
                        }
                    var o = new (ya(f) > 65535 ? ua : sa)(f,1);
                    return e(o, a.ELEMENT_ARRAY_BUFFER),
                    d.wireframe = o,
                    o
                }
                var k = new _a(a,b,c);
                return {
                    getAttributeBuffer: h,
                    getAttributeProperties: i,
                    getWireframeAttribute: j,
                    update: d
                }
            }
            function bb(a, b, c, d, e, f, g) {
                function h(a, b) {
                    if (a.width > b || a.height > b) {
                        var c = b / Math.max(a.width, a.height)
                          , d = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                        d.width = Math.floor(a.width * c),
                        d.height = Math.floor(a.height * c);
                        return d.getContext("2d").drawImage(a, 0, 0, a.width, a.height, 0, 0, d.width, d.height),
                        d
                    }
                    return a
                }
                function i(a) {
                    return Zg.isPowerOfTwo(a.width) && Zg.isPowerOfTwo(a.height)
                }
                function j(a) {
                    if (a instanceof HTMLImageElement || a instanceof HTMLCanvasElement) {
                        var b = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                        b.width = Zg.nearestPowerOfTwo(a.width),
                        b.height = Zg.nearestPowerOfTwo(a.height);
                        return b.getContext("2d").drawImage(a, 0, 0, b.width, b.height),
                        b
                    }
                    return a
                }
                function k(a) {
                    return a.wrapS !== ag || a.wrapT !== ag || a.minFilter !== cg && a.minFilter !== fg
                }
                function l(b) {
                    return b === cg || b === dg || b === eg ? a.NEAREST : a.LINEAR
                }
                function m(a) {
                    var b = a.target;
                    b.removeEventListener("dispose", m),
                    o(b),
                    B.textures--
                }
                function n(a) {
                    var b = a.target;
                    b.removeEventListener("dispose", n),
                    p(b),
                    B.textures--
                }
                function o(b) {
                    var c = d.get(b);
                    if (b.image && c.__image__webglTextureCube)
                        a.deleteTexture(c.__image__webglTextureCube);
                    else {
                        if (void 0 === c.__webglInit)
                            return;
                        a.deleteTexture(c.__webglTexture)
                    }
                    d.delete(b)
                }
                function p(b) {
                    var c = d.get(b)
                      , e = d.get(b.texture);
                    if (b) {
                        if (void 0 !== e.__webglTexture && a.deleteTexture(e.__webglTexture),
                        b.depthTexture && b.depthTexture.dispose(),
                        b.isWebGLRenderTargetCube)
                            for (var f = 0; f < 6; f++)
                                a.deleteFramebuffer(c.__webglFramebuffer[f]),
                                c.__webglDepthbuffer && a.deleteRenderbuffer(c.__webglDepthbuffer[f]);
                        else
                            a.deleteFramebuffer(c.__webglFramebuffer),
                            c.__webglDepthbuffer && a.deleteRenderbuffer(c.__webglDepthbuffer);
                        d.delete(b.texture),
                        d.delete(b)
                    }
                }
                function q(b, e) {
                    var f = d.get(b);
                    if (b.version > 0 && f.__version !== b.version) {
                        var g = b.image;
                        if (void 0 === g)
                            ;
                        else if (!1 !== g.complete)
                            return void u(f, b, e)
                    }
                    c.activeTexture(a.TEXTURE0 + e),
                    c.bindTexture(a.TEXTURE_2D, f.__webglTexture)
                }
                function r(b, g) {
                    var j = d.get(b);
                    if (6 === b.image.length)
                        if (b.version > 0 && j.__version !== b.version) {
                            j.__image__webglTextureCube || (b.addEventListener("dispose", m),
                            j.__image__webglTextureCube = a.createTexture(),
                            B.textures++),
                            c.activeTexture(a.TEXTURE0 + g),
                            c.bindTexture(a.TEXTURE_CUBE_MAP, j.__image__webglTextureCube),
                            a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL, b.flipY);
                            for (var k = b && b.isCompressedTexture, l = b.image[0] && b.image[0].isDataTexture, n = [], o = 0; o < 6; o++)
                                n[o] = k || l ? l ? b.image[o].image : b.image[o] : h(b.image[o], e.maxCubemapSize);
                            var p = n[0]
                              , q = i(p)
                              , r = f(b.format)
                              , s = f(b.type);
                            t(a.TEXTURE_CUBE_MAP, b, q);
                            for (var o = 0; o < 6; o++)
                                if (k)
                                    for (var u, v = n[o].mipmaps, w = 0, x = v.length; w < x; w++)
                                        u = v[w],
                                        b.format !== wg && b.format !== vg ? c.getCompressedTextureFormats().indexOf(r) > -1 && c.compressedTexImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X + o, w, r, u.width, u.height, 0, u.data) : c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X + o, w, r, u.width, u.height, 0, r, s, u.data);
                                else
                                    l ? c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X + o, 0, r, n[o].width, n[o].height, 0, r, s, n[o].data) : c.texImage2D(a.TEXTURE_CUBE_MAP_POSITIVE_X + o, 0, r, r, s, n[o]);
                            b.generateMipmaps && q && a.generateMipmap(a.TEXTURE_CUBE_MAP),
                            j.__version = b.version,
                            b.onUpdate && b.onUpdate(b)
                        } else
                            c.activeTexture(a.TEXTURE0 + g),
                            c.bindTexture(a.TEXTURE_CUBE_MAP, j.__image__webglTextureCube)
                }
                function s(b, e) {
                    c.activeTexture(a.TEXTURE0 + e),
                    c.bindTexture(a.TEXTURE_CUBE_MAP, d.get(b).__webglTexture)
                }
                function t(c, g, h) {
                    var i;
                    if (h ? (a.texParameteri(c, a.TEXTURE_WRAP_S, f(g.wrapS)),
                    a.texParameteri(c, a.TEXTURE_WRAP_T, f(g.wrapT)),
                    a.texParameteri(c, a.TEXTURE_MAG_FILTER, f(g.magFilter)),
                    a.texParameteri(c, a.TEXTURE_MIN_FILTER, f(g.minFilter))) : (a.texParameteri(c, a.TEXTURE_WRAP_S, a.CLAMP_TO_EDGE),
                    a.texParameteri(c, a.TEXTURE_WRAP_T, a.CLAMP_TO_EDGE),
                    g.wrapS !== ag || g.wrapT,
                    a.texParameteri(c, a.TEXTURE_MAG_FILTER, l(g.magFilter)),
                    a.texParameteri(c, a.TEXTURE_MIN_FILTER, l(g.minFilter)),
                    g.minFilter !== cg && g.minFilter),
                    i = b.get("EXT_texture_filter_anisotropic")) {
                        if (g.type === og && null === b.get("OES_texture_float_linear"))
                            return;
                        if (g.type === pg && null === b.get("OES_texture_half_float_linear"))
                            return;
                        (g.anisotropy > 1 || d.get(g).__currentAnisotropy) && (a.texParameterf(c, i.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(g.anisotropy, e.getMaxAnisotropy())),
                        d.get(g).__currentAnisotropy = g.anisotropy)
                    }
                }
                function u(b, d, g) {
                    void 0 === b.__webglInit && (b.__webglInit = !0,
                    d.addEventListener("dispose", m),
                    b.__webglTexture = a.createTexture(),
                    B.textures++),
                    c.activeTexture(a.TEXTURE0 + g),
                    c.bindTexture(a.TEXTURE_2D, b.__webglTexture),
                    a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL, d.flipY),
                    a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL, d.premultiplyAlpha),
                    a.pixelStorei(a.UNPACK_ALIGNMENT, d.unpackAlignment);
                    var l = h(d.image, e.maxTextureSize);
                    k(d) && !1 === i(l) && (l = j(l));
                    var n = i(l)
                      , o = f(d.format)
                      , p = f(d.type);
                    t(a.TEXTURE_2D, d, n);
                    var q, r = d.mipmaps;
                    if (d.isDepthTexture) {
                        var s = a.DEPTH_COMPONENT;
                        if (d.type === og) {
                            if (!C)
                                throw new Error("Float Depth Texture only supported in WebGL2.0");
                            s = a.DEPTH_COMPONENT32F
                        } else
                            C && (s = a.DEPTH_COMPONENT16);
                        d.format === Ag && s === a.DEPTH_COMPONENT && d.type !== lg && d.type !== ng && (d.type = lg,
                        p = f(d.type)),
                        d.format === Bg && (s = a.DEPTH_STENCIL,
                        d.type !== tg && (d.type = tg,
                        p = f(d.type))),
                        c.texImage2D(a.TEXTURE_2D, 0, s, l.width, l.height, 0, o, p, null)
                    } else if (d.isDataTexture)
                        if (r.length > 0 && n) {
                            for (var u = 0, v = r.length; u < v; u++)
                                q = r[u],
                                c.texImage2D(a.TEXTURE_2D, u, o, q.width, q.height, 0, o, p, q.data);
                            d.generateMipmaps = !1
                        } else
                            c.texImage2D(a.TEXTURE_2D, 0, o, l.width, l.height, 0, o, p, l.data);
                    else if (d.isCompressedTexture)
                        for (var u = 0, v = r.length; u < v; u++)
                            q = r[u],
                            d.format !== wg && d.format !== vg ? c.getCompressedTextureFormats().indexOf(o) > -1 && c.compressedTexImage2D(a.TEXTURE_2D, u, o, q.width, q.height, 0, q.data) : c.texImage2D(a.TEXTURE_2D, u, o, q.width, q.height, 0, o, p, q.data);
                    else if (r.length > 0 && n) {
                        for (var u = 0, v = r.length; u < v; u++)
                            q = r[u],
                            c.texImage2D(a.TEXTURE_2D, u, o, o, p, q);
                        d.generateMipmaps = !1
                    } else
                        c.texImage2D(a.TEXTURE_2D, 0, o, o, p, l);
                    d.generateMipmaps && n && a.generateMipmap(a.TEXTURE_2D),
                    b.__version = d.version,
                    d.onUpdate && d.onUpdate(d)
                }
                function v(b, e, g, h) {
                    var i = f(e.texture.format)
                      , j = f(e.texture.type);
                    c.texImage2D(h, 0, i, e.width, e.height, 0, i, j, null),
                    a.bindFramebuffer(a.FRAMEBUFFER, b),
                    a.framebufferTexture2D(a.FRAMEBUFFER, g, h, d.get(e.texture).__webglTexture, 0),
                    a.bindFramebuffer(a.FRAMEBUFFER, null)
                }
                function w(b, c) {
                    a.bindRenderbuffer(a.RENDERBUFFER, b),
                    c.depthBuffer && !c.stencilBuffer ? (a.renderbufferStorage(a.RENDERBUFFER, a.DEPTH_COMPONENT16, c.width, c.height),
                    a.framebufferRenderbuffer(a.FRAMEBUFFER, a.DEPTH_ATTACHMENT, a.RENDERBUFFER, b)) : c.depthBuffer && c.stencilBuffer ? (a.renderbufferStorage(a.RENDERBUFFER, a.DEPTH_STENCIL, c.width, c.height),
                    a.framebufferRenderbuffer(a.FRAMEBUFFER, a.DEPTH_STENCIL_ATTACHMENT, a.RENDERBUFFER, b)) : a.renderbufferStorage(a.RENDERBUFFER, a.RGBA4, c.width, c.height),
                    a.bindRenderbuffer(a.RENDERBUFFER, null)
                }
                function x(b, c) {
                    if (c && c.isWebGLRenderTargetCube)
                        throw new Error("Depth Texture with cube render targets is not supported!");
                    if (a.bindFramebuffer(a.FRAMEBUFFER, b),
                    !c.depthTexture || !c.depthTexture.isDepthTexture)
                        throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
                    d.get(c.depthTexture).__webglTexture && c.depthTexture.image.width === c.width && c.depthTexture.image.height === c.height || (c.depthTexture.image.width = c.width,
                    c.depthTexture.image.height = c.height,
                    c.depthTexture.needsUpdate = !0),
                    q(c.depthTexture, 0);
                    var e = d.get(c.depthTexture).__webglTexture;
                    if (c.depthTexture.format === Ag)
                        a.framebufferTexture2D(a.FRAMEBUFFER, a.DEPTH_ATTACHMENT, a.TEXTURE_2D, e, 0);
                    else {
                        if (c.depthTexture.format !== Bg)
                            throw new Error("Unknown depthTexture format");
                        a.framebufferTexture2D(a.FRAMEBUFFER, a.DEPTH_STENCIL_ATTACHMENT, a.TEXTURE_2D, e, 0)
                    }
                }
                function y(b) {
                    var c = d.get(b)
                      , e = !0 === b.isWebGLRenderTargetCube;
                    if (b.depthTexture) {
                        if (e)
                            throw new Error("target.depthTexture not supported in Cube render targets");
                        x(c.__webglFramebuffer, b)
                    } else if (e) {
                        c.__webglDepthbuffer = [];
                        for (var f = 0; f < 6; f++)
                            a.bindFramebuffer(a.FRAMEBUFFER, c.__webglFramebuffer[f]),
                            c.__webglDepthbuffer[f] = a.createRenderbuffer(),
                            w(c.__webglDepthbuffer[f], b)
                    } else
                        a.bindFramebuffer(a.FRAMEBUFFER, c.__webglFramebuffer),
                        c.__webglDepthbuffer = a.createRenderbuffer(),
                        w(c.__webglDepthbuffer, b);
                    a.bindFramebuffer(a.FRAMEBUFFER, null)
                }
                function z(b) {
                    var e = d.get(b)
                      , f = d.get(b.texture);
                    b.addEventListener("dispose", n),
                    f.__webglTexture = a.createTexture(),
                    B.textures++;
                    var g = !0 === b.isWebGLRenderTargetCube
                      , h = i(b);
                    if (g) {
                        e.__webglFramebuffer = [];
                        for (var j = 0; j < 6; j++)
                            e.__webglFramebuffer[j] = a.createFramebuffer()
                    } else
                        e.__webglFramebuffer = a.createFramebuffer();
                    if (g) {
                        c.bindTexture(a.TEXTURE_CUBE_MAP, f.__webglTexture),
                        t(a.TEXTURE_CUBE_MAP, b.texture, h);
                        for (var j = 0; j < 6; j++)
                            v(e.__webglFramebuffer[j], b, a.COLOR_ATTACHMENT0, a.TEXTURE_CUBE_MAP_POSITIVE_X + j);
                        b.texture.generateMipmaps && h && a.generateMipmap(a.TEXTURE_CUBE_MAP),
                        c.bindTexture(a.TEXTURE_CUBE_MAP, null)
                    } else
                        c.bindTexture(a.TEXTURE_2D, f.__webglTexture),
                        t(a.TEXTURE_2D, b.texture, h),
                        v(e.__webglFramebuffer, b, a.COLOR_ATTACHMENT0, a.TEXTURE_2D),
                        b.texture.generateMipmaps && h && a.generateMipmap(a.TEXTURE_2D),
                        c.bindTexture(a.TEXTURE_2D, null);
                    b.depthBuffer && y(b)
                }
                function A(b) {
                    var e = b.texture;
                    if (e.generateMipmaps && i(b) && e.minFilter !== cg && e.minFilter !== fg) {
                        var f = b && b.isWebGLRenderTargetCube ? a.TEXTURE_CUBE_MAP : a.TEXTURE_2D
                          , g = d.get(e).__webglTexture;
                        c.bindTexture(f, g),
                        a.generateMipmap(f),
                        c.bindTexture(f, null)
                    }
                }
                var B = g.memory
                  , C = "undefined" != typeof WebGL2RenderingContext && a instanceof WebGL2RenderingContext;
                this.setTexture2D = q,
                this.setTextureCube = r,
                this.setTextureCubeDynamic = s,
                this.setupRenderTarget = z,
                this.updateRenderTargetMipmap = A
            }
            function cb() {
                var a = {};
                return {
                    get: function(b) {
                        var c = b.uuid
                          , d = a[c];
                        return void 0 === d && (d = {},
                        a[c] = d),
                        d
                    },
                    delete: function(b) {
                        delete a[b.uuid]
                    },
                    clear: function() {
                        a = {}
                    }
                }
            }
            function db(a, b, c) {
                function d() {
                    var b = !1
                      , c = new e
                      , d = null
                      , f = new e;
                    return {
                        setMask: function(c) {
                            d === c || b || (a.colorMask(c, c, c, c),
                            d = c)
                        },
                        setLocked: function(a) {
                            b = a
                        },
                        setClear: function(b, d, e, g, h) {
                            !0 === h && (b *= g,
                            d *= g,
                            e *= g),
                            c.set(b, d, e, g),
                            !1 === f.equals(c) && (a.clearColor(b, d, e, g),
                            f.copy(c))
                        },
                        reset: function() {
                            b = !1,
                            d = null,
                            f.set(0, 0, 0, 1)
                        }
                    }
                }
                function f() {
                    var b = !1
                      , c = null
                      , d = null
                      , e = null;
                    return {
                        setTest: function(b) {
                            b ? n(a.DEPTH_TEST) : o(a.DEPTH_TEST)
                        },
                        setMask: function(d) {
                            c === d || b || (a.depthMask(d),
                            c = d)
                        },
                        setFunc: function(b) {
                            if (d !== b) {
                                if (b)
                                    switch (b) {
                                    case Ef:
                                        a.depthFunc(a.NEVER);
                                        break;
                                    case Ff:
                                        a.depthFunc(a.ALWAYS);
                                        break;
                                    case Gf:
                                        a.depthFunc(a.LESS);
                                        break;
                                    case Hf:
                                        a.depthFunc(a.LEQUAL);
                                        break;
                                    case If:
                                        a.depthFunc(a.EQUAL);
                                        break;
                                    case Jf:
                                        a.depthFunc(a.GEQUAL);
                                        break;
                                    case Kf:
                                        a.depthFunc(a.GREATER);
                                        break;
                                    case Lf:
                                        a.depthFunc(a.NOTEQUAL);
                                        break;
                                    default:
                                        a.depthFunc(a.LEQUAL)
                                    }
                                else
                                    a.depthFunc(a.LEQUAL);
                                d = b
                            }
                        },
                        setLocked: function(a) {
                            b = a
                        },
                        setClear: function(b) {
                            e !== b && (a.clearDepth(b),
                            e = b)
                        },
                        reset: function() {
                            b = !1,
                            c = null,
                            d = null,
                            e = null
                        }
                    }
                }
                function g() {
                    var b = !1
                      , c = null
                      , d = null
                      , e = null
                      , f = null
                      , g = null
                      , h = null
                      , i = null
                      , j = null;
                    return {
                        setTest: function(b) {
                            b ? n(a.STENCIL_TEST) : o(a.STENCIL_TEST)
                        },
                        setMask: function(d) {
                            c === d || b || (a.stencilMask(d),
                            c = d)
                        },
                        setFunc: function(b, c, g) {
                            d === b && e === c && f === g || (a.stencilFunc(b, c, g),
                            d = b,
                            e = c,
                            f = g)
                        },
                        setOp: function(b, c, d) {
                            g === b && h === c && i === d || (a.stencilOp(b, c, d),
                            g = b,
                            h = c,
                            i = d)
                        },
                        setLocked: function(a) {
                            b = a
                        },
                        setClear: function(b) {
                            j !== b && (a.clearStencil(b),
                            j = b)
                        },
                        reset: function() {
                            b = !1,
                            c = null,
                            d = null,
                            e = null,
                            f = null,
                            g = null,
                            h = null,
                            i = null,
                            j = null
                        }
                    }
                }
                function h(b, c, d) {
                    var e = new Uint8Array(4)
                      , f = a.createTexture();
                    a.bindTexture(b, f),
                    a.texParameteri(b, a.TEXTURE_MIN_FILTER, a.NEAREST),
                    a.texParameteri(b, a.TEXTURE_MAG_FILTER, a.NEAREST);
                    for (var g = 0; g < d; g++)
                        a.texImage2D(c + g, 0, a.RGBA, 1, 1, 0, a.RGBA, a.UNSIGNED_BYTE, e);
                    return f
                }
                function i() {
                    M.setClear(0, 0, 0, 1),
                    N.setClear(1),
                    O.setClear(0),
                    n(a.DEPTH_TEST),
                    u(Hf),
                    z(!1),
                    A(We),
                    n(a.CULL_FACE),
                    n(a.BLEND),
                    q(jf)
                }
                function j() {
                    for (var a = 0, b = Q.length; a < b; a++)
                        Q[a] = 0
                }
                function k(c) {
                    if (Q[c] = 1,
                    0 === R[c] && (a.enableVertexAttribArray(c),
                    R[c] = 1),
                    0 !== S[c]) {
                        b.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(c, 0),
                        S[c] = 0
                    }
                }
                function l(b, c, d) {
                    Q[b] = 1,
                    0 === R[b] && (a.enableVertexAttribArray(b),
                    R[b] = 1),
                    S[b] !== c && (d.vertexAttribDivisorANGLE(b, c),
                    S[b] = c)
                }
                function m() {
                    for (var b = 0, c = R.length; b !== c; ++b)
                        R[b] !== Q[b] && (a.disableVertexAttribArray(b),
                        R[b] = 0)
                }
                function n(b) {
                    !0 !== T[b] && (a.enable(b),
                    T[b] = !0)
                }
                function o(b) {
                    !1 !== T[b] && (a.disable(b),
                    T[b] = !1)
                }
                function p() {
                    if (null === U && (U = [],
                    b.get("WEBGL_compressed_texture_pvrtc") || b.get("WEBGL_compressed_texture_s3tc") || b.get("WEBGL_compressed_texture_etc1")))
                        for (var c = a.getParameter(a.COMPRESSED_TEXTURE_FORMATS), d = 0; d < c.length; d++)
                            U.push(c[d]);
                    return U
                }
                function q(b, d, e, f, g, h, i, j) {
                    b !== hf ? n(a.BLEND) : o(a.BLEND),
                    b === V && j === aa || (b === kf ? j ? (a.blendEquationSeparate(a.FUNC_ADD, a.FUNC_ADD),
                    a.blendFuncSeparate(a.ONE, a.ONE, a.ONE, a.ONE)) : (a.blendEquation(a.FUNC_ADD),
                    a.blendFunc(a.SRC_ALPHA, a.ONE)) : b === lf ? j ? (a.blendEquationSeparate(a.FUNC_ADD, a.FUNC_ADD),
                    a.blendFuncSeparate(a.ZERO, a.ZERO, a.ONE_MINUS_SRC_COLOR, a.ONE_MINUS_SRC_ALPHA)) : (a.blendEquation(a.FUNC_ADD),
                    a.blendFunc(a.ZERO, a.ONE_MINUS_SRC_COLOR)) : b === mf ? j ? (a.blendEquationSeparate(a.FUNC_ADD, a.FUNC_ADD),
                    a.blendFuncSeparate(a.ZERO, a.SRC_COLOR, a.ZERO, a.SRC_ALPHA)) : (a.blendEquation(a.FUNC_ADD),
                    a.blendFunc(a.ZERO, a.SRC_COLOR)) : j ? (a.blendEquationSeparate(a.FUNC_ADD, a.FUNC_ADD),
                    a.blendFuncSeparate(a.ONE, a.ONE_MINUS_SRC_ALPHA, a.ONE, a.ONE_MINUS_SRC_ALPHA)) : (a.blendEquationSeparate(a.FUNC_ADD, a.FUNC_ADD),
                    a.blendFuncSeparate(a.SRC_ALPHA, a.ONE_MINUS_SRC_ALPHA, a.ONE, a.ONE_MINUS_SRC_ALPHA)),
                    V = b,
                    aa = j),
                    b === nf ? (g = g || d,
                    h = h || e,
                    i = i || f,
                    d === W && g === Z || (a.blendEquationSeparate(c(d), c(g)),
                    W = d,
                    Z = g),
                    e === X && f === Y && h === $ && i === _ || (a.blendFuncSeparate(c(e), c(f), c(h), c(i)),
                    X = e,
                    Y = f,
                    $ = h,
                    _ = i)) : (W = null,
                    X = null,
                    Y = null,
                    Z = null,
                    $ = null,
                    _ = null)
                }
                function r(a) {
                    M.setMask(a)
                }
                function s(a) {
                    N.setTest(a)
                }
                function t(a) {
                    N.setMask(a)
                }
                function u(a) {
                    N.setFunc(a)
                }
                function v(a) {
                    O.setTest(a)
                }
                function w(a) {
                    O.setMask(a)
                }
                function x(a, b, c) {
                    O.setFunc(a, b, c)
                }
                function y(a, b, c) {
                    O.setOp(a, b, c)
                }
                function z(b) {
                    ba !== b && (b ? a.frontFace(a.CW) : a.frontFace(a.CCW),
                    ba = b)
                }
                function A(b) {
                    b !== Ve ? (n(a.CULL_FACE),
                    b !== ca && (b === We ? a.cullFace(a.BACK) : b === Xe ? a.cullFace(a.FRONT) : a.cullFace(a.FRONT_AND_BACK))) : o(a.CULL_FACE),
                    ca = b
                }
                function B(b) {
                    b !== da && (ja && a.lineWidth(b),
                    da = b)
                }
                function C(b, c, d) {
                    b ? (n(a.POLYGON_OFFSET_FILL),
                    ea === c && fa === d || (a.polygonOffset(c, d),
                    ea = c,
                    fa = d)) : o(a.POLYGON_OFFSET_FILL)
                }
                function D() {
                    return ga
                }
                function E(b) {
                    ga = b,
                    b ? n(a.SCISSOR_TEST) : o(a.SCISSOR_TEST)
                }
                function F(b) {
                    void 0 === b && (b = a.TEXTURE0 + ha - 1),
                    ka !== b && (a.activeTexture(b),
                    ka = b)
                }
                function G(b, c) {
                    null === ka && F();
                    var d = la[ka];
                    void 0 === d && (d = {
                        type: void 0,
                        texture: void 0
                    },
                    la[ka] = d),
                    d.type === b && d.texture === c || (a.bindTexture(b, c || oa[b]),
                    d.type = b,
                    d.texture = c)
                }
                function H() {
                    try {
                        a.compressedTexImage2D.apply(a, arguments)
                    } catch (a) {}
                }
                function I() {
                    try {
                        a.texImage2D.apply(a, arguments)
                    } catch (a) {}
                }
                function J(b) {
                    !1 === ma.equals(b) && (a.scissor(b.x, b.y, b.z, b.w),
                    ma.copy(b))
                }
                function K(b) {
                    !1 === na.equals(b) && (a.viewport(b.x, b.y, b.z, b.w),
                    na.copy(b))
                }
                function L() {
                    for (var b = 0; b < R.length; b++)
                        1 === R[b] && (a.disableVertexAttribArray(b),
                        R[b] = 0);
                    T = {},
                    U = null,
                    ka = null,
                    la = {},
                    V = null,
                    ba = null,
                    ca = null,
                    M.reset(),
                    N.reset(),
                    O.reset()
                }
                var M = new d
                  , N = new f
                  , O = new g
                  , P = a.getParameter(a.MAX_VERTEX_ATTRIBS)
                  , Q = new Uint8Array(P)
                  , R = new Uint8Array(P)
                  , S = new Uint8Array(P)
                  , T = {}
                  , U = null
                  , V = null
                  , W = null
                  , X = null
                  , Y = null
                  , Z = null
                  , $ = null
                  , _ = null
                  , aa = !1
                  , ba = null
                  , ca = null
                  , da = null
                  , ea = null
                  , fa = null
                  , ga = null
                  , ha = a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS)
                  , ia = parseFloat(/^WebGL\ ([0-9])/.exec(a.getParameter(a.VERSION))[1])
                  , ja = parseFloat(ia) >= 1
                  , ka = null
                  , la = {}
                  , ma = new e
                  , na = new e
                  , oa = {};
                return oa[a.TEXTURE_2D] = h(a.TEXTURE_2D, a.TEXTURE_2D, 1),
                oa[a.TEXTURE_CUBE_MAP] = h(a.TEXTURE_CUBE_MAP, a.TEXTURE_CUBE_MAP_POSITIVE_X, 6),
                {
                    buffers: {
                        color: M,
                        depth: N,
                        stencil: O
                    },
                    init: i,
                    initAttributes: j,
                    enableAttribute: k,
                    enableAttributeAndDivisor: l,
                    disableUnusedAttributes: m,
                    enable: n,
                    disable: o,
                    getCompressedTextureFormats: p,
                    setBlending: q,
                    setColorWrite: r,
                    setDepthTest: s,
                    setDepthWrite: t,
                    setDepthFunc: u,
                    setStencilTest: v,
                    setStencilWrite: w,
                    setStencilFunc: x,
                    setStencilOp: y,
                    setFlipSided: z,
                    setCullFace: A,
                    setLineWidth: B,
                    setPolygonOffset: C,
                    getScissorTest: D,
                    setScissorTest: E,
                    activeTexture: F,
                    bindTexture: G,
                    compressedTexImage2D: H,
                    texImage2D: I,
                    scissor: J,
                    viewport: K,
                    reset: L
                }
            }
            function eb(a, b, c) {
                function d() {
                    if (void 0 !== f)
                        return f;
                    var c = b.get("EXT_texture_filter_anisotropic");
                    return f = null !== c ? a.getParameter(c.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0
                }
                function e(b) {
                    if ("highp" === b) {
                        if (a.getShaderPrecisionFormat(a.VERTEX_SHADER, a.HIGH_FLOAT).precision > 0 && a.getShaderPrecisionFormat(a.FRAGMENT_SHADER, a.HIGH_FLOAT).precision > 0)
                            return "highp";
                        b = "mediump"
                    }
                    return "mediump" === b && a.getShaderPrecisionFormat(a.VERTEX_SHADER, a.MEDIUM_FLOAT).precision > 0 && a.getShaderPrecisionFormat(a.FRAGMENT_SHADER, a.MEDIUM_FLOAT).precision > 0 ? "mediump" : "lowp"
                }
                var f, g = void 0 !== c.precision ? c.precision : "highp", h = e(g);
                h !== g && (g = h);
                var i = !0 === c.logarithmicDepthBuffer && !!b.get("EXT_frag_depth")
                  , j = a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS)
                  , k = a.getParameter(a.MAX_VERTEX_TEXTURE_IMAGE_UNITS)
                  , l = a.getParameter(a.MAX_TEXTURE_SIZE)
                  , m = a.getParameter(a.MAX_CUBE_MAP_TEXTURE_SIZE)
                  , n = a.getParameter(a.MAX_VERTEX_ATTRIBS)
                  , o = a.getParameter(a.MAX_VERTEX_UNIFORM_VECTORS)
                  , p = a.getParameter(a.MAX_VARYING_VECTORS)
                  , q = a.getParameter(a.MAX_FRAGMENT_UNIFORM_VECTORS)
                  , r = k > 0
                  , s = !!b.get("OES_texture_float");
                return {
                    getMaxAnisotropy: d,
                    getMaxPrecision: e,
                    precision: g,
                    logarithmicDepthBuffer: i,
                    maxTextures: j,
                    maxVertexTextures: k,
                    maxTextureSize: l,
                    maxCubemapSize: m,
                    maxAttributes: n,
                    maxVertexUniforms: o,
                    maxVaryings: p,
                    maxFragmentUniforms: q,
                    vertexTextures: r,
                    floatFragmentTextures: s,
                    floatVertexTextures: r && s
                }
            }
            function fb(a) {
                var b = {};
                return {
                    get: function(c) {
                        if (void 0 !== b[c])
                            return b[c];
                        var d;
                        switch (c) {
                        case "WEBGL_depth_texture":
                            d = a.getExtension("WEBGL_depth_texture") || a.getExtension("MOZ_WEBGL_depth_texture") || a.getExtension("WEBKIT_WEBGL_depth_texture");
                            break;
                        case "EXT_texture_filter_anisotropic":
                            d = a.getExtension("EXT_texture_filter_anisotropic") || a.getExtension("MOZ_EXT_texture_filter_anisotropic") || a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                            break;
                        case "WEBGL_compressed_texture_s3tc":
                            d = a.getExtension("WEBGL_compressed_texture_s3tc") || a.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                            break;
                        case "WEBGL_compressed_texture_pvrtc":
                            d = a.getExtension("WEBGL_compressed_texture_pvrtc") || a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                            break;
                        case "WEBGL_compressed_texture_etc1":
                            d = a.getExtension("WEBGL_compressed_texture_etc1");
                            break;
                        default:
                            d = a.getExtension(c)
                        }
                        return b[c] = d,
                        d
                    }
                }
            }
            function gb() {
                function a() {
                    j.value !== d && (j.value = d,
                    j.needsUpdate = e > 0),
                    c.numPlanes = e,
                    c.numIntersection = 0
                }
                function b(a, b, d, e) {
                    var f = null !== a ? a.length : 0
                      , g = null;
                    if (0 !== f) {
                        if (g = j.value,
                        !0 !== e || null === g) {
                            var k = d + 4 * f
                              , l = b.matrixWorldInverse;
                            i.getNormalMatrix(l),
                            (null === g || g.length < k) && (g = new Float32Array(k));
                            for (var m = 0, n = d; m !== f; ++m,
                            n += 4)
                                h.copy(a[m]).applyMatrix4(l, i),
                                h.normal.toArray(g, n),
                                g[n + 3] = h.constant
                        }
                        j.value = g,
                        j.needsUpdate = !0
                    }
                    return c.numPlanes = f,
                    g
                }
                var c = this
                  , d = null
                  , e = 0
                  , f = !1
                  , g = !1
                  , h = new ca
                  , i = new ba
                  , j = {
                    value: null,
                    needsUpdate: !1
                };
                this.uniform = j,
                this.numPlanes = 0,
                this.numIntersection = 0,
                this.init = function(a, c, g) {
                    var h = 0 !== a.length || c || 0 !== e || f;
                    return f = c,
                    d = b(a, g, 0),
                    e = a.length,
                    h
                }
                ,
                this.beginShadows = function() {
                    g = !0,
                    b(null)
                }
                ,
                this.endShadows = function() {
                    g = !1,
                    a()
                }
                ,
                this.setState = function(c, h, i, k, l, m) {
                    if (!f || null === c || 0 === c.length || g && !i)
                        g ? b(null) : a();
                    else {
                        var n = g ? 0 : e
                          , o = 4 * n
                          , p = l.clippingState || null;
                        j.value = p,
                        p = b(c, k, o, m);
                        for (var q = 0; q !== o; ++q)
                            p[q] = d[q];
                        l.clippingState = p,
                        this.numIntersection = h ? this.numPlanes : 0,
                        this.numPlanes += n
                    }
                }
            }
            function hb(a) {
                function b() {
                    return null === na ? Aa : 1
                }
                function c() {
                    ib.init(),
                    ib.scissor(sa.copy(Da).multiplyScalar(Aa)),
                    ib.viewport(ua.copy(Ha).multiplyScalar(Aa)),
                    ib.buffers.color.setClear(wa.r, wa.g, wa.b, xa, Y)
                }
                function d() {
                    la = null,
                    ra = null,
                    qa = "",
                    pa = -1,
                    ib.reset()
                }
                function f(a) {
                    a.preventDefault(),
                    d(),
                    c(),
                    jb.clear()
                }
                function g(a) {
                    var b = a.target;
                    b.removeEventListener("dispose", g),
                    h(b)
                }
                function h(a) {
                    k(a),
                    jb.delete(a)
                }
                function k(a) {
                    var b = jb.get(a).program;
                    a.program = void 0,
                    void 0 !== b && mb.releaseProgram(b)
                }
                function l(a, b, c, d) {
                    var e;
                    if (!c || !c.isInstancedBufferGeometry || null !== (e = _a.get("ANGLE_instanced_arrays"))) {
                        void 0 === d && (d = 0),
                        ib.initAttributes();
                        var f = c.attributes
                          , g = b.getAttributes()
                          , h = a.defaultAttributeValues;
                        for (var i in g) {
                            var j = g[i];
                            if (j >= 0) {
                                var k = f[i];
                                if (void 0 !== k) {
                                    var l = k.normalized
                                      , m = k.itemSize
                                      , n = lb.getAttributeProperties(k)
                                      , o = n.__webglBuffer
                                      , p = n.type
                                      , q = n.bytesPerElement;
                                    if (k.isInterleavedBufferAttribute) {
                                        var r = k.data
                                          , s = r.stride
                                          , t = k.offset;
                                        r && r.isInstancedInterleavedBuffer ? (ib.enableAttributeAndDivisor(j, r.meshPerAttribute, e),
                                        void 0 === c.maxInstancedCount && (c.maxInstancedCount = r.meshPerAttribute * r.count)) : ib.enableAttribute(j),
                                        Ya.bindBuffer(Ya.ARRAY_BUFFER, o),
                                        Ya.vertexAttribPointer(j, m, p, l, s * q, (d * s + t) * q)
                                    } else
                                        k.isInstancedBufferAttribute ? (ib.enableAttributeAndDivisor(j, k.meshPerAttribute, e),
                                        void 0 === c.maxInstancedCount && (c.maxInstancedCount = k.meshPerAttribute * k.count)) : ib.enableAttribute(j),
                                        Ya.bindBuffer(Ya.ARRAY_BUFFER, o),
                                        Ya.vertexAttribPointer(j, m, p, l, 0, d * m * q)
                                } else if (void 0 !== h) {
                                    var u = h[i];
                                    if (void 0 !== u)
                                        switch (u.length) {
                                        case 2:
                                            Ya.vertexAttrib2fv(j, u);
                                            break;
                                        case 3:
                                            Ya.vertexAttrib3fv(j, u);
                                            break;
                                        case 4:
                                            Ya.vertexAttrib4fv(j, u);
                                            break;
                                        default:
                                            Ya.vertexAttrib1fv(j, u)
                                        }
                                }
                            }
                        }
                        ib.disableUnusedAttributes()
                    }
                }
                function m(a, b) {
                    return Math.abs(b[0]) - Math.abs(a[0])
                }
                function n(a, b) {
                    return a.object.renderOrder !== b.object.renderOrder ? a.object.renderOrder - b.object.renderOrder : a.material.program && b.material.program && a.material.program !== b.material.program ? a.material.program.id - b.material.program.id : a.material.id !== b.material.id ? a.material.id - b.material.id : a.z !== b.z ? a.z - b.z : a.id - b.id
                }
                function o(a, b) {
                    return a.object.renderOrder !== b.object.renderOrder ? a.object.renderOrder - b.object.renderOrder : a.z !== b.z ? b.z - a.z : a.id - b.id
                }
                function p(a, b, c, d, e) {
                    var f, g;
                    c.transparent ? (f = fa,
                    g = ++ga) : (f = ba,
                    g = ++ca);
                    var h = f[g];
                    void 0 !== h ? (h.id = a.id,
                    h.object = a,
                    h.geometry = b,
                    h.material = c,
                    h.z = Ta.z,
                    h.group = e) : (h = {
                        id: a.id,
                        object: a,
                        geometry: b,
                        material: c,
                        z: Ta.z,
                        group: e
                    },
                    f.push(h))
                }
                function q(a) {
                    var b = a.geometry;
                    return null === b.boundingSphere && b.computeBoundingSphere(),
                    Ra.copy(b.boundingSphere).applyMatrix4(a.matrixWorld),
                    s(Ra)
                }
                function r(a) {
                    return Ra.center.set(0, 0, 0),
                    Ra.radius = .7071067811865476,
                    Ra.applyMatrix4(a.matrixWorld),
                    s(Ra)
                }
                function s(a) {
                    if (!Na.intersectsSphere(a))
                        return !1;
                    var b = Oa.numPlanes;
                    if (0 === b)
                        return !0;
                    var c = ka.clippingPlanes
                      , d = a.center
                      , e = -a.radius
                      , f = 0;
                    do {
                        if (c[f].distanceToPoint(d) < e)
                            return !1
                    } while (++f !== b);
                    return !0
                }
                function t(a, b) {
                    if (!1 !== a.visible) {
                        if (0 != (a.layers.mask & b.layers.mask))
                            if (a.isLight)
                                _.push(a);
                            else if (a.isSprite)
                                !1 !== a.frustumCulled && !0 !== r(a) || ia.push(a);
                            else if (a.isLensFlare)
                                ja.push(a);
                            else if (a.isImmediateRenderObject)
                                !0 === ka.sortObjects && (Ta.setFromMatrixPosition(a.matrixWorld),
                                Ta.applyMatrix4(Sa)),
                                p(a, null, a.material, Ta.z, null);
                            else if ((a.isMesh || a.isLine || a.isPoints) && (a.isSkinnedMesh && a.skeleton.update(),
                            !1 === a.frustumCulled || !0 === q(a))) {
                                var c = a.material;
                                if (!0 === c.visible) {
                                    !0 === ka.sortObjects && (Ta.setFromMatrixPosition(a.matrixWorld),
                                    Ta.applyMatrix4(Sa));
                                    var d = lb.update(a);
                                    if (c.isMultiMaterial)
                                        for (var e = d.groups, f = c.materials, g = 0, h = e.length; g < h; g++) {
                                            var i = e[g]
                                              , j = f[i.materialIndex];
                                            !0 === j.visible && p(a, d, j, Ta.z, i)
                                        }
                                    else
                                        p(a, d, c, Ta.z, null)
                                }
                            }
                        for (var k = a.children, g = 0, h = k.length; g < h; g++)
                            t(k[g], b)
                    }
                }
                function u(a, b, c, d) {
                    for (var e = 0, f = a.length; e < f; e++) {
                        var g = a[e]
                          , h = g.object
                          , i = g.geometry
                          , j = void 0 === d ? g.material : d
                          , k = g.group;
                        if (h.modelViewMatrix.multiplyMatrices(c.matrixWorldInverse, h.matrixWorld),
                        h.normalMatrix.getNormalMatrix(h.modelViewMatrix),
                        h.onBeforeRender(ka, b, c, i, j, k),
                        h.isImmediateRenderObject) {
                            w(j);
                            var l = x(c, b.fog, j, h);
                            qa = "",
                            h.render(function(a) {
                                ka.renderBufferImmediate(a, l, j)
                            })
                        } else
                            ka.renderBufferDirect(c, b.fog, i, j, h, k);
                        h.onAfterRender(ka, b, c, i, j, k)
                    }
                }
                function v(a, b, c) {
                    var d = jb.get(a)
                      , e = mb.getParameters(a, Wa, b, Oa.numPlanes, Oa.numIntersection, c)
                      , f = mb.getProgramCode(a, e)
                      , h = d.program
                      , i = !0;
                    if (void 0 === h)
                        a.addEventListener("dispose", g);
                    else if (h.code !== f)
                        k(a);
                    else {
                        if (void 0 !== e.shaderID)
                            return;
                        i = !1
                    }
                    if (i) {
                        if (e.shaderID) {
                            var j = ih[e.shaderID];
                            d.__webglShader = {
                                name: a.type,
                                uniforms: eh.clone(j.uniforms),
                                vertexShader: j.vertexShader,
                                fragmentShader: j.fragmentShader
                            }
                        } else
                            d.__webglShader = {
                                name: a.type,
                                uniforms: a.uniforms,
                                vertexShader: a.vertexShader,
                                fragmentShader: a.fragmentShader
                            };
                        a.__webglShader = d.__webglShader,
                        h = mb.acquireProgram(a, e, f),
                        d.program = h,
                        a.program = h
                    }
                    var l = h.getAttributes();
                    if (a.morphTargets) {
                        a.numSupportedMorphTargets = 0;
                        for (var m = 0; m < ka.maxMorphTargets; m++)
                            l["morphTarget" + m] >= 0 && a.numSupportedMorphTargets++
                    }
                    if (a.morphNormals) {
                        a.numSupportedMorphNormals = 0;
                        for (var m = 0; m < ka.maxMorphNormals; m++)
                            l["morphNormal" + m] >= 0 && a.numSupportedMorphNormals++
                    }
                    var n = d.__webglShader.uniforms;
                    (a.isShaderMaterial || a.isRawShaderMaterial) && !0 !== a.clipping || (d.numClippingPlanes = Oa.numPlanes,
                    d.numIntersection = Oa.numIntersection,
                    n.clippingPlanes = Oa.uniform),
                    d.fog = b,
                    d.lightsHash = Wa.hash,
                    a.lights && (n.ambientLightColor.value = Wa.ambient,
                    n.directionalLights.value = Wa.directional,
                    n.spotLights.value = Wa.spot,
                    n.rectAreaLights.value = Wa.rectArea,
                    n.pointLights.value = Wa.point,
                    n.hemisphereLights.value = Wa.hemi,
                    n.directionalShadowMap.value = Wa.directionalShadowMap,
                    n.directionalShadowMatrix.value = Wa.directionalShadowMatrix,
                    n.spotShadowMap.value = Wa.spotShadowMap,
                    n.spotShadowMatrix.value = Wa.spotShadowMatrix,
                    n.pointShadowMap.value = Wa.pointShadowMap,
                    n.pointShadowMatrix.value = Wa.pointShadowMatrix);
                    var o = d.program.getUniforms()
                      , p = S.seqWithValue(o.seq, n);
                    d.uniformsList = p
                }
                function w(a) {
                    a.side === bf ? ib.disable(Ya.CULL_FACE) : ib.enable(Ya.CULL_FACE),
                    ib.setFlipSided(a.side === af),
                    !0 === a.transparent ? ib.setBlending(a.blending, a.blendEquation, a.blendSrc, a.blendDst, a.blendEquationAlpha, a.blendSrcAlpha, a.blendDstAlpha, a.premultipliedAlpha) : ib.setBlending(hf),
                    ib.setDepthFunc(a.depthFunc),
                    ib.setDepthTest(a.depthTest),
                    ib.setDepthWrite(a.depthWrite),
                    ib.setColorWrite(a.colorWrite),
                    ib.setPolygonOffset(a.polygonOffset, a.polygonOffsetFactor, a.polygonOffsetUnits)
                }
                function x(a, b, c, d) {
                    va = 0;
                    var e = jb.get(c);
                    if (Pa && (Qa || a !== ra)) {
                        var f = a === ra && c.id === pa;
                        Oa.setState(c.clippingPlanes, c.clipIntersection, c.clipShadows, a, e, f)
                    }
                    !1 === c.needsUpdate && (void 0 === e.program ? c.needsUpdate = !0 : c.fog && e.fog !== b ? c.needsUpdate = !0 : c.lights && e.lightsHash !== Wa.hash ? c.needsUpdate = !0 : void 0 === e.numClippingPlanes || e.numClippingPlanes === Oa.numPlanes && e.numIntersection === Oa.numIntersection || (c.needsUpdate = !0)),
                    c.needsUpdate && (v(c, b, d),
                    c.needsUpdate = !1);
                    var g = !1
                      , h = !1
                      , i = !1
                      , j = e.program
                      , k = j.getUniforms()
                      , l = e.__webglShader.uniforms;
                    if (j.id !== la && (Ya.useProgram(j.program),
                    la = j.id,
                    g = !0,
                    h = !0,
                    i = !0),
                    c.id !== pa && (pa = c.id,
                    h = !0),
                    g || a !== ra) {
                        if (k.set(Ya, a, "projectionMatrix"),
                        hb.logarithmicDepthBuffer && k.setValue(Ya, "logDepthBufFC", 2 / (Math.log(a.far + 1) / Math.LN2)),
                        a !== ra && (ra = a,
                        h = !0,
                        i = !0),
                        c.isShaderMaterial || c.isMeshPhongMaterial || c.isMeshStandardMaterial || c.envMap) {
                            var m = k.map.cameraPosition;
                            void 0 !== m && m.setValue(Ya, Ta.setFromMatrixPosition(a.matrixWorld))
                        }
                        (c.isMeshPhongMaterial || c.isMeshLambertMaterial || c.isMeshBasicMaterial || c.isMeshStandardMaterial || c.isShaderMaterial || c.skinning) && k.setValue(Ya, "viewMatrix", a.matrixWorldInverse),
                        k.set(Ya, ka, "toneMappingExposure"),
                        k.set(Ya, ka, "toneMappingWhitePoint")
                    }
                    if (c.skinning) {
                        k.setOptional(Ya, d, "bindMatrix"),
                        k.setOptional(Ya, d, "bindMatrixInverse");
                        var n = d.skeleton;
                        n && (hb.floatVertexTextures && n.useVertexTexture ? (k.set(Ya, n, "boneTexture"),
                        k.set(Ya, n, "boneTextureWidth"),
                        k.set(Ya, n, "boneTextureHeight")) : k.setOptional(Ya, n, "boneMatrices"))
                    }
                    return h && (c.lights && J(l, i),
                    b && c.fog && C(l, b),
                    (c.isMeshBasicMaterial || c.isMeshLambertMaterial || c.isMeshPhongMaterial || c.isMeshStandardMaterial || c.isMeshNormalMaterial || c.isMeshDepthMaterial) && y(l, c),
                    c.isLineBasicMaterial ? z(l, c) : c.isLineDashedMaterial ? (z(l, c),
                    A(l, c)) : c.isPointsMaterial ? B(l, c) : c.isMeshLambertMaterial ? D(l, c) : c.isMeshToonMaterial ? F(l, c) : c.isMeshPhongMaterial ? E(l, c) : c.isMeshPhysicalMaterial ? H(l, c) : c.isMeshStandardMaterial ? G(l, c) : c.isMeshDepthMaterial ? c.displacementMap && (l.displacementMap.value = c.displacementMap,
                    l.displacementScale.value = c.displacementScale,
                    l.displacementBias.value = c.displacementBias) : c.isMeshNormalMaterial && I(l, c),
                    void 0 !== l.ltcMat && (l.ltcMat.value = THREE.UniformsLib.LTC_MAT_TEXTURE),
                    void 0 !== l.ltcMag && (l.ltcMag.value = THREE.UniformsLib.LTC_MAG_TEXTURE),
                    S.upload(Ya, e.uniformsList, l, ka)),
                    k.set(Ya, d, "modelViewMatrix"),
                    k.set(Ya, d, "normalMatrix"),
                    k.setValue(Ya, "modelMatrix", d.matrixWorld),
                    j
                }
                function y(a, b) {
                    a.opacity.value = b.opacity,
                    a.diffuse.value = b.color,
                    b.emissive && a.emissive.value.copy(b.emissive).multiplyScalar(b.emissiveIntensity),
                    a.map.value = b.map,
                    a.specularMap.value = b.specularMap,
                    a.alphaMap.value = b.alphaMap,
                    b.lightMap && (a.lightMap.value = b.lightMap,
                    a.lightMapIntensity.value = b.lightMapIntensity),
                    b.aoMap && (a.aoMap.value = b.aoMap,
                    a.aoMapIntensity.value = b.aoMapIntensity);
                    var c;
                    if (b.map ? c = b.map : b.specularMap ? c = b.specularMap : b.displacementMap ? c = b.displacementMap : b.normalMap ? c = b.normalMap : b.bumpMap ? c = b.bumpMap : b.roughnessMap ? c = b.roughnessMap : b.metalnessMap ? c = b.metalnessMap : b.alphaMap ? c = b.alphaMap : b.emissiveMap && (c = b.emissiveMap),
                    void 0 !== c) {
                        c.isWebGLRenderTarget && (c = c.texture);
                        var d = c.offset
                          , e = c.repeat;
                        a.offsetRepeat.value.set(d.x, d.y, e.x, e.y)
                    }
                    a.envMap.value = b.envMap,
                    a.flipEnvMap.value = b.envMap && b.envMap.isCubeTexture ? -1 : 1,
                    a.reflectivity.value = b.reflectivity,
                    a.refractionRatio.value = b.refractionRatio
                }
                function z(a, b) {
                    a.diffuse.value = b.color,
                    a.opacity.value = b.opacity
                }
                function A(a, b) {
                    a.dashSize.value = b.dashSize,
                    a.totalSize.value = b.dashSize + b.gapSize,
                    a.scale.value = b.scale
                }
                function B(a, b) {
                    if (a.diffuse.value = b.color,
                    a.opacity.value = b.opacity,
                    a.size.value = b.size * Aa,
                    a.scale.value = .5 * za,
                    a.map.value = b.map,
                    null !== b.map) {
                        var c = b.map.offset
                          , d = b.map.repeat;
                        a.offsetRepeat.value.set(c.x, c.y, d.x, d.y)
                    }
                }
                function C(a, b) {
                    a.fogColor.value = b.color,
                    b.isFog ? (a.fogNear.value = b.near,
                    a.fogFar.value = b.far) : b.isFogExp2 && (a.fogDensity.value = b.density)
                }
                function D(a, b) {
                    b.emissiveMap && (a.emissiveMap.value = b.emissiveMap)
                }
                function E(a, b) {
                    a.specular.value = b.specular,
                    a.shininess.value = Math.max(b.shininess, 1e-4),
                    b.emissiveMap && (a.emissiveMap.value = b.emissiveMap),
                    b.bumpMap && (a.bumpMap.value = b.bumpMap,
                    a.bumpScale.value = b.bumpScale),
                    b.normalMap && (a.normalMap.value = b.normalMap,
                    a.normalScale.value.copy(b.normalScale)),
                    b.displacementMap && (a.displacementMap.value = b.displacementMap,
                    a.displacementScale.value = b.displacementScale,
                    a.displacementBias.value = b.displacementBias)
                }
                function F(a, b) {
                    E(a, b),
                    b.gradientMap && (a.gradientMap.value = b.gradientMap)
                }
                function G(a, b) {
                    a.roughness.value = b.roughness,
                    a.metalness.value = b.metalness,
                    b.roughnessMap && (a.roughnessMap.value = b.roughnessMap),
                    b.metalnessMap && (a.metalnessMap.value = b.metalnessMap),
                    b.emissiveMap && (a.emissiveMap.value = b.emissiveMap),
                    b.bumpMap && (a.bumpMap.value = b.bumpMap,
                    a.bumpScale.value = b.bumpScale),
                    b.normalMap && (a.normalMap.value = b.normalMap,
                    a.normalScale.value.copy(b.normalScale)),
                    b.displacementMap && (a.displacementMap.value = b.displacementMap,
                    a.displacementScale.value = b.displacementScale,
                    a.displacementBias.value = b.displacementBias),
                    b.envMap && (a.envMapIntensity.value = b.envMapIntensity)
                }
                function H(a, b) {
                    a.clearCoat.value = b.clearCoat,
                    a.clearCoatRoughness.value = b.clearCoatRoughness,
                    G(a, b)
                }
                function I(a, b) {
                    b.bumpMap && (a.bumpMap.value = b.bumpMap,
                    a.bumpScale.value = b.bumpScale),
                    b.normalMap && (a.normalMap.value = b.normalMap,
                    a.normalScale.value.copy(b.normalScale)),
                    b.displacementMap && (a.displacementMap.value = b.displacementMap,
                    a.displacementScale.value = b.displacementScale,
                    a.displacementBias.value = b.displacementBias)
                }
                function J(a, b) {
                    a.ambientLightColor.needsUpdate = b,
                    a.directionalLights.needsUpdate = b,
                    a.pointLights.needsUpdate = b,
                    a.spotLights.needsUpdate = b,
                    a.rectAreaLights.needsUpdate = b,
                    a.hemisphereLights.needsUpdate = b
                }
                function K(a) {
                    for (var b = 0, c = 0, d = a.length; c < d; c++) {
                        var e = a[c];
                        e.castShadow && (Wa.shadows[b++] = e)
                    }
                    Wa.shadows.length = b
                }
                function L(a, b) {
                    var c, d, e, f, g, h, i, k = 0, l = 0, m = 0, n = b.matrixWorldInverse, o = 0, p = 0, q = 0, r = 0, s = 0;
                    for (c = 0,
                    d = a.length; c < d; c++)
                        if (e = a[c],
                        f = e.color,
                        g = e.intensity,
                        h = e.distance,
                        i = e.shadow && e.shadow.map ? e.shadow.map.texture : null,
                        e.isAmbientLight)
                            k += f.r * g,
                            l += f.g * g,
                            m += f.b * g;
                        else if (e.isDirectionalLight) {
                            var t = nb.get(e);
                            t.color.copy(e.color).multiplyScalar(e.intensity),
                            t.direction.setFromMatrixPosition(e.matrixWorld),
                            Ta.setFromMatrixPosition(e.target.matrixWorld),
                            t.direction.sub(Ta),
                            t.direction.transformDirection(n),
                            t.shadow = e.castShadow,
                            e.castShadow && (t.shadowBias = e.shadow.bias,
                            t.shadowRadius = e.shadow.radius,
                            t.shadowMapSize = e.shadow.mapSize),
                            Wa.directionalShadowMap[o] = i,
                            Wa.directionalShadowMatrix[o] = e.shadow.matrix,
                            Wa.directional[o++] = t
                        } else if (e.isSpotLight) {
                            var t = nb.get(e);
                            t.position.setFromMatrixPosition(e.matrixWorld),
                            t.position.applyMatrix4(n),
                            t.color.copy(f).multiplyScalar(g),
                            t.distance = h,
                            t.direction.setFromMatrixPosition(e.matrixWorld),
                            Ta.setFromMatrixPosition(e.target.matrixWorld),
                            t.direction.sub(Ta),
                            t.direction.transformDirection(n),
                            t.coneCos = Math.cos(e.angle),
                            t.penumbraCos = Math.cos(e.angle * (1 - e.penumbra)),
                            t.decay = 0 === e.distance ? 0 : e.decay,
                            t.shadow = e.castShadow,
                            e.castShadow && (t.shadowBias = e.shadow.bias,
                            t.shadowRadius = e.shadow.radius,
                            t.shadowMapSize = e.shadow.mapSize),
                            Wa.spotShadowMap[q] = i,
                            Wa.spotShadowMatrix[q] = e.shadow.matrix,
                            Wa.spot[q++] = t
                        } else if (e.isRectAreaLight) {
                            var t = nb.get(e);
                            t.color.copy(f).multiplyScalar(g / (e.width * e.height)),
                            t.position.setFromMatrixPosition(e.matrixWorld),
                            t.position.applyMatrix4(n),
                            Va.identity(),
                            Ua.copy(e.matrixWorld),
                            Ua.premultiply(n),
                            Va.extractRotation(Ua),
                            t.halfWidth.set(.5 * e.width, 0, 0),
                            t.halfHeight.set(0, .5 * e.height, 0),
                            t.halfWidth.applyMatrix4(Va),
                            t.halfHeight.applyMatrix4(Va),
                            Wa.rectArea[r++] = t
                        } else if (e.isPointLight) {
                            var t = nb.get(e);
                            t.position.setFromMatrixPosition(e.matrixWorld),
                            t.position.applyMatrix4(n),
                            t.color.copy(e.color).multiplyScalar(e.intensity),
                            t.distance = e.distance,
                            t.decay = 0 === e.distance ? 0 : e.decay,
                            t.shadow = e.castShadow,
                            e.castShadow && (t.shadowBias = e.shadow.bias,
                            t.shadowRadius = e.shadow.radius,
                            t.shadowMapSize = e.shadow.mapSize),
                            Wa.pointShadowMap[p] = i,
                            void 0 === Wa.pointShadowMatrix[p] && (Wa.pointShadowMatrix[p] = new j),
                            Ta.setFromMatrixPosition(e.matrixWorld).negate(),
                            Wa.pointShadowMatrix[p].identity().setPosition(Ta),
                            Wa.point[p++] = t
                        } else if (e.isHemisphereLight) {
                            var t = nb.get(e);
                            t.direction.setFromMatrixPosition(e.matrixWorld),
                            t.direction.transformDirection(n),
                            t.direction.normalize(),
                            t.skyColor.copy(e.color).multiplyScalar(g),
                            t.groundColor.copy(e.groundColor).multiplyScalar(g),
                            Wa.hemi[s++] = t
                        }
                    Wa.ambient[0] = k,
                    Wa.ambient[1] = l,
                    Wa.ambient[2] = m,
                    Wa.directional.length = o,
                    Wa.spot.length = q,
                    Wa.rectArea.length = r,
                    Wa.point.length = p,
                    Wa.hemi.length = s,
                    Wa.hash = o + "," + p + "," + q + "," + r + "," + s + "," + Wa.shadows.length
                }
                function M() {
                    var a = va;
                    return hb.maxTextures,
                    va += 1,
                    a
                }
                function N(a) {
                    var b;
                    if (a === _f)
                        return Ya.REPEAT;
                    if (a === ag)
                        return Ya.CLAMP_TO_EDGE;
                    if (a === bg)
                        return Ya.MIRRORED_REPEAT;
                    if (a === cg)
                        return Ya.NEAREST;
                    if (a === dg)
                        return Ya.NEAREST_MIPMAP_NEAREST;
                    if (a === eg)
                        return Ya.NEAREST_MIPMAP_LINEAR;
                    if (a === fg)
                        return Ya.LINEAR;
                    if (a === gg)
                        return Ya.LINEAR_MIPMAP_NEAREST;
                    if (a === hg)
                        return Ya.LINEAR_MIPMAP_LINEAR;
                    if (a === ig)
                        return Ya.UNSIGNED_BYTE;
                    if (a === qg)
                        return Ya.UNSIGNED_SHORT_4_4_4_4;
                    if (a === rg)
                        return Ya.UNSIGNED_SHORT_5_5_5_1;
                    if (a === sg)
                        return Ya.UNSIGNED_SHORT_5_6_5;
                    if (a === jg)
                        return Ya.BYTE;
                    if (a === kg)
                        return Ya.SHORT;
                    if (a === lg)
                        return Ya.UNSIGNED_SHORT;
                    if (a === mg)
                        return Ya.INT;
                    if (a === ng)
                        return Ya.UNSIGNED_INT;
                    if (a === og)
                        return Ya.FLOAT;
                    if (a === pg && null !== (b = _a.get("OES_texture_half_float")))
                        return b.HALF_FLOAT_OES;
                    if (a === ug)
                        return Ya.ALPHA;
                    if (a === vg)
                        return Ya.RGB;
                    if (a === wg)
                        return Ya.RGBA;
                    if (a === xg)
                        return Ya.LUMINANCE;
                    if (a === yg)
                        return Ya.LUMINANCE_ALPHA;
                    if (a === Ag)
                        return Ya.DEPTH_COMPONENT;
                    if (a === Bg)
                        return Ya.DEPTH_STENCIL;
                    if (a === of)
                        return Ya.FUNC_ADD;
                    if (a === pf)
                        return Ya.FUNC_SUBTRACT;
                    if (a === qf)
                        return Ya.FUNC_REVERSE_SUBTRACT;
                    if (a === tf)
                        return Ya.ZERO;
                    if (a === uf)
                        return Ya.ONE;
                    if (a === vf)
                        return Ya.SRC_COLOR;
                    if (a === wf)
                        return Ya.ONE_MINUS_SRC_COLOR;
                    if (a === xf)
                        return Ya.SRC_ALPHA;
                    if (a === yf)
                        return Ya.ONE_MINUS_SRC_ALPHA;
                    if (a === zf)
                        return Ya.DST_ALPHA;
                    if (a === Af)
                        return Ya.ONE_MINUS_DST_ALPHA;
                    if (a === Bf)
                        return Ya.DST_COLOR;
                    if (a === Cf)
                        return Ya.ONE_MINUS_DST_COLOR;
                    if (a === Df)
                        return Ya.SRC_ALPHA_SATURATE;
                    if ((a === Cg || a === Dg || a === Eg || a === Fg) && null !== (b = _a.get("WEBGL_compressed_texture_s3tc"))) {
                        if (a === Cg)
                            return b.COMPRESSED_RGB_S3TC_DXT1_EXT;
                        if (a === Dg)
                            return b.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                        if (a === Eg)
                            return b.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                        if (a === Fg)
                            return b.COMPRESSED_RGBA_S3TC_DXT5_EXT
                    }
                    if ((a === Gg || a === Hg || a === Ig || a === Jg) && null !== (b = _a.get("WEBGL_compressed_texture_pvrtc"))) {
                        if (a === Gg)
                            return b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                        if (a === Hg)
                            return b.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                        if (a === Ig)
                            return b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                        if (a === Jg)
                            return b.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
                    }
                    if (a === Kg && null !== (b = _a.get("WEBGL_compressed_texture_etc1")))
                        return b.COMPRESSED_RGB_ETC1_WEBGL;
                    if ((a === rf || a === sf) && null !== (b = _a.get("EXT_blend_minmax"))) {
                        if (a === rf)
                            return b.MIN_EXT;
                        if (a === sf)
                            return b.MAX_EXT
                    }
                    return a === tg && null !== (b = _a.get("WEBGL_depth_texture")) ? b.UNSIGNED_INT_24_8_WEBGL : 0
                }
                a = a || {};
                var O = void 0 !== a.canvas ? a.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")
                  , P = void 0 !== a.context ? a.context : null
                  , Q = void 0 !== a.alpha && a.alpha
                  , R = void 0 === a.depth || a.depth
                  , U = void 0 === a.stencil || a.stencil
                  , V = void 0 !== a.antialias && a.antialias
                  , Y = void 0 === a.premultipliedAlpha || a.premultipliedAlpha
                  , $ = void 0 !== a.preserveDrawingBuffer && a.preserveDrawingBuffer
                  , _ = []
                  , ba = []
                  , ca = -1
                  , fa = []
                  , ga = -1
                  , ha = new Float32Array(8)
                  , ia = []
                  , ja = [];
                this.domElement = O,
                this.context = null,
                this.autoClear = !0,
                this.autoClearColor = !0,
                this.autoClearDepth = !0,
                this.autoClearStencil = !0,
                this.sortObjects = !0,
                this.clippingPlanes = [],
                this.localClippingEnabled = !1,
                this.gammaFactor = 2,
                this.gammaInput = !1,
                this.gammaOutput = !1,
                this.physicallyCorrectLights = !1,
                this.toneMapping = Qf,
                this.toneMappingExposure = 1,
                this.toneMappingWhitePoint = 1,
                this.maxMorphTargets = 8,
                this.maxMorphNormals = 4;
                var ka = this
                  , la = null
                  , na = null
                  , oa = null
                  , pa = -1
                  , qa = ""
                  , ra = null
                  , sa = new e
                  , ta = null
                  , ua = new e
                  , va = 0
                  , wa = new T(0)
                  , xa = 0
                  , ya = O.width
                  , za = O.height
                  , Aa = 1
                  , Da = new e(0,0,ya,za)
                  , Fa = !1
                  , Ha = new e(0,0,ya,za)
                  , Na = new da
                  , Oa = new gb
                  , Pa = !1
                  , Qa = !1
                  , Ra = new aa
                  , Sa = new j
                  , Ta = new i
                  , Ua = new j
                  , Va = new j
                  , Wa = {
                    hash: "",
                    ambient: [0, 0, 0],
                    directional: [],
                    directionalShadowMap: [],
                    directionalShadowMatrix: [],
                    spot: [],
                    spotShadowMap: [],
                    spotShadowMatrix: [],
                    rectArea: [],
                    point: [],
                    pointShadowMap: [],
                    pointShadowMatrix: [],
                    hemi: [],
                    shadows: []
                }
                  , Xa = {
                    calls: 0,
                    vertices: 0,
                    faces: 0,
                    points: 0
                };
                this.info = {
                    render: Xa,
                    memory: {
                        geometries: 0,
                        textures: 0
                    },
                    programs: null
                };
                var Ya;
                try {
                    var Za = {
                        alpha: Q,
                        depth: R,
                        stencil: U,
                        antialias: V,
                        premultipliedAlpha: Y,
                        preserveDrawingBuffer: $
                    };
                    if (null === (Ya = P || O.getContext("webgl", Za) || O.getContext("experimental-webgl", Za)))
                        throw null !== O.getContext("webgl") ? "Error creating WebGL context with your selected attributes." : "Error creating WebGL context.";
                    void 0 === Ya.getShaderPrecisionFormat && (Ya.getShaderPrecisionFormat = function() {
                        return {
                            rangeMin: 1,
                            rangeMax: 1,
                            precision: 1
                        }
                    }
                    ),
                    O.addEventListener("webglcontextlost", f, !1)
                } catch (a) {}
                var _a = new fb(Ya);
                _a.get("WEBGL_depth_texture"),
                _a.get("OES_texture_float"),
                _a.get("OES_texture_float_linear"),
                _a.get("OES_texture_half_float"),
                _a.get("OES_texture_half_float_linear"),
                _a.get("OES_standard_derivatives"),
                _a.get("ANGLE_instanced_arrays"),
                _a.get("OES_element_index_uint") && (Ba.MaxIndex = 4294967296);
                var hb = new eb(Ya,_a,a)
                  , ib = new db(Ya,_a,N)
                  , jb = new cb
                  , kb = new bb(Ya,_a,ib,jb,hb,N,this.info)
                  , lb = new ab(Ya,jb,this.info)
                  , mb = new $a(this,hb)
                  , nb = new Ma;
                this.info.programs = mb.programs;
                var ob, pb, qb, rb, sb = new La(Ya,_a,Xa), tb = new Ka(Ya,_a,Xa);
                c(),
                this.context = Ya,
                this.capabilities = hb,
                this.extensions = _a,
                this.properties = jb,
                this.state = ib;
                var ub = new ea(this,Wa,lb,hb);
                this.shadowMap = ub;
                var vb = new X(this,ia)
                  , wb = new W(this,ja);
                this.getContext = function() {
                    return Ya
                }
                ,
                this.getContextAttributes = function() {
                    return Ya.getContextAttributes()
                }
                ,
                this.forceContextLoss = function() {
                    _a.get("WEBGL_lose_context").loseContext()
                }
                ,
                this.getMaxAnisotropy = function() {
                    return hb.getMaxAnisotropy()
                }
                ,
                this.getPrecision = function() {
                    return hb.precision
                }
                ,
                this.getPixelRatio = function() {
                    return Aa
                }
                ,
                this.setPixelRatio = function(a) {
                    void 0 !== a && (Aa = a,
                    this.setSize(Ha.z, Ha.w, !1))
                }
                ,
                this.getSize = function() {
                    return {
                        width: ya,
                        height: za
                    }
                }
                ,
                this.setSize = function(a, b, c) {
                    ya = a,
                    za = b,
                    O.width = a * Aa,
                    O.height = b * Aa,
                    !1 !== c && (O.style.width = a + "px",
                    O.style.height = b + "px"),
                    this.setViewport(0, 0, a, b)
                }
                ,
                this.setViewport = function(a, b, c, d) {
                    ib.viewport(Ha.set(a, b, c, d))
                }
                ,
                this.setScissor = function(a, b, c, d) {
                    ib.scissor(Da.set(a, b, c, d))
                }
                ,
                this.setScissorTest = function(a) {
                    ib.setScissorTest(Fa = a)
                }
                ,
                this.getClearColor = function() {
                    return wa
                }
                ,
                this.setClearColor = function(a, b) {
                    wa.set(a),
                    xa = void 0 !== b ? b : 1,
                    ib.buffers.color.setClear(wa.r, wa.g, wa.b, xa, Y)
                }
                ,
                this.getClearAlpha = function() {
                    return xa
                }
                ,
                this.setClearAlpha = function(a) {
                    xa = a,
                    ib.buffers.color.setClear(wa.r, wa.g, wa.b, xa, Y)
                }
                ,
                this.clear = function(a, b, c) {
                    var d = 0;
                    (void 0 === a || a) && (d |= Ya.COLOR_BUFFER_BIT),
                    (void 0 === b || b) && (d |= Ya.DEPTH_BUFFER_BIT),
                    (void 0 === c || c) && (d |= Ya.STENCIL_BUFFER_BIT),
                    Ya.clear(d)
                }
                ,
                this.clearColor = function() {
                    this.clear(!0, !1, !1)
                }
                ,
                this.clearDepth = function() {
                    this.clear(!1, !0, !1)
                }
                ,
                this.clearStencil = function() {
                    this.clear(!1, !1, !0)
                }
                ,
                this.clearTarget = function(a, b, c, d) {
                    this.setRenderTarget(a),
                    this.clear(b, c, d)
                }
                ,
                this.resetGLState = d,
                this.dispose = function() {
                    fa = [],
                    ga = -1,
                    ba = [],
                    ca = -1,
                    O.removeEventListener("webglcontextlost", f, !1)
                }
                ,
                this.renderBufferImmediate = function(a, b, c) {
                    ib.initAttributes();
                    var d = jb.get(a);
                    a.hasPositions && !d.position && (d.position = Ya.createBuffer()),
                    a.hasNormals && !d.normal && (d.normal = Ya.createBuffer()),
                    a.hasUvs && !d.uv && (d.uv = Ya.createBuffer()),
                    a.hasColors && !d.color && (d.color = Ya.createBuffer());
                    var e = b.getAttributes();
                    if (a.hasPositions && (Ya.bindBuffer(Ya.ARRAY_BUFFER, d.position),
                    Ya.bufferData(Ya.ARRAY_BUFFER, a.positionArray, Ya.DYNAMIC_DRAW),
                    ib.enableAttribute(e.position),
                    Ya.vertexAttribPointer(e.position, 3, Ya.FLOAT, !1, 0, 0)),
                    a.hasNormals) {
                        if (Ya.bindBuffer(Ya.ARRAY_BUFFER, d.normal),
                        !c.isMeshPhongMaterial && !c.isMeshStandardMaterial && !c.isMeshNormalMaterial && c.shading === cf)
                            for (var f = 0, g = 3 * a.count; f < g; f += 9) {
                                var h = a.normalArray
                                  , i = (h[f + 0] + h[f + 3] + h[f + 6]) / 3
                                  , j = (h[f + 1] + h[f + 4] + h[f + 7]) / 3
                                  , k = (h[f + 2] + h[f + 5] + h[f + 8]) / 3;
                                h[f + 0] = i,
                                h[f + 1] = j,
                                h[f + 2] = k,
                                h[f + 3] = i,
                                h[f + 4] = j,
                                h[f + 5] = k,
                                h[f + 6] = i,
                                h[f + 7] = j,
                                h[f + 8] = k
                            }
                        Ya.bufferData(Ya.ARRAY_BUFFER, a.normalArray, Ya.DYNAMIC_DRAW),
                        ib.enableAttribute(e.normal),
                        Ya.vertexAttribPointer(e.normal, 3, Ya.FLOAT, !1, 0, 0)
                    }
                    a.hasUvs && c.map && (Ya.bindBuffer(Ya.ARRAY_BUFFER, d.uv),
                    Ya.bufferData(Ya.ARRAY_BUFFER, a.uvArray, Ya.DYNAMIC_DRAW),
                    ib.enableAttribute(e.uv),
                    Ya.vertexAttribPointer(e.uv, 2, Ya.FLOAT, !1, 0, 0)),
                    a.hasColors && c.vertexColors !== ef && (Ya.bindBuffer(Ya.ARRAY_BUFFER, d.color),
                    Ya.bufferData(Ya.ARRAY_BUFFER, a.colorArray, Ya.DYNAMIC_DRAW),
                    ib.enableAttribute(e.color),
                    Ya.vertexAttribPointer(e.color, 3, Ya.FLOAT, !1, 0, 0)),
                    ib.disableUnusedAttributes(),
                    Ya.drawArrays(Ya.TRIANGLES, 0, a.count),
                    a.count = 0
                }
                ,
                this.renderBufferDirect = function(a, c, d, e, f, g) {
                    w(e);
                    var h = x(a, c, e, f)
                      , i = !1
                      , j = d.id + "_" + h.id + "_" + e.wireframe;
                    j !== qa && (qa = j,
                    i = !0);
                    var k = f.morphTargetInfluences;
                    if (void 0 !== k) {
                        for (var n = [], o = 0, p = k.length; o < p; o++) {
                            var q = k[o];
                            n.push([q, o])
                        }
                        n.sort(m),
                        n.length > 8 && (n.length = 8);
                        for (var r = d.morphAttributes, o = 0, p = n.length; o < p; o++) {
                            var q = n[o];
                            if (ha[o] = q[0],
                            0 !== q[0]) {
                                var s = q[1];
                                !0 === e.morphTargets && r.position && d.addAttribute("morphTarget" + o, r.position[s]),
                                !0 === e.morphNormals && r.normal && d.addAttribute("morphNormal" + o, r.normal[s])
                            } else
                                !0 === e.morphTargets && d.removeAttribute("morphTarget" + o),
                                !0 === e.morphNormals && d.removeAttribute("morphNormal" + o)
                        }
                        for (var o = n.length, t = ha.length; o < t; o++)
                            ha[o] = 0;
                        h.getUniforms().setValue(Ya, "morphTargetInfluences", ha),
                        i = !0
                    }
                    var s = d.index
                      , u = d.attributes.position
                      , v = 1;
                    !0 === e.wireframe && (s = lb.getWireframeAttribute(d),
                    v = 2);
                    var y;
                    null !== s ? (y = tb,
                    y.setIndex(s)) : y = sb,
                    i && (l(e, h, d),
                    null !== s && Ya.bindBuffer(Ya.ELEMENT_ARRAY_BUFFER, lb.getAttributeBuffer(s)));
                    var z = 0;
                    null !== s ? z = s.count : void 0 !== u && (z = u.count);
                    var A = d.drawRange.start * v
                      , B = d.drawRange.count * v
                      , C = null !== g ? g.start * v : 0
                      , D = null !== g ? g.count * v : 1 / 0
                      , E = Math.max(A, C)
                      , F = Math.min(z, A + B, C + D) - 1
                      , G = Math.max(0, F - E + 1);
                    if (0 !== G) {
                        if (f.isMesh)
                            if (!0 === e.wireframe)
                                ib.setLineWidth(e.wireframeLinewidth * b()),
                                y.setMode(Ya.LINES);
                            else
                                switch (f.drawMode) {
                                case Ng:
                                    y.setMode(Ya.TRIANGLES);
                                    break;
                                case Og:
                                    y.setMode(Ya.TRIANGLE_STRIP);
                                    break;
                                case Pg:
                                    y.setMode(Ya.TRIANGLE_FAN)
                                }
                        else if (f.isLine) {
                            var H = e.linewidth;
                            void 0 === H && (H = 1),
                            ib.setLineWidth(H * b()),
                            f.isLineSegments ? y.setMode(Ya.LINES) : y.setMode(Ya.LINE_STRIP)
                        } else
                            f.isPoints && y.setMode(Ya.POINTS);
                        d && d.isInstancedBufferGeometry ? d.maxInstancedCount > 0 && y.renderInstances(d, E, G) : y.render(E, G)
                    }
                }
                ,
                this.render = function(a, b, c, d) {
                    if (void 0 === b || !0 === b.isCamera) {
                        qa = "",
                        pa = -1,
                        ra = null,
                        !0 === a.autoUpdate && a.updateMatrixWorld(),
                        null === b.parent && b.updateMatrixWorld(),
                        b.matrixWorldInverse.getInverse(b.matrixWorld),
                        Sa.multiplyMatrices(b.projectionMatrix, b.matrixWorldInverse),
                        Na.setFromMatrix(Sa),
                        _.length = 0,
                        ca = -1,
                        ga = -1,
                        ia.length = 0,
                        ja.length = 0,
                        Qa = this.localClippingEnabled,
                        Pa = Oa.init(this.clippingPlanes, Qa, b),
                        t(a, b),
                        ba.length = ca + 1,
                        fa.length = ga + 1,
                        !0 === ka.sortObjects && (ba.sort(n),
                        fa.sort(o)),
                        Pa && Oa.beginShadows(),
                        K(_),
                        ub.render(a, b),
                        L(_, b),
                        Pa && Oa.endShadows(),
                        Xa.calls = 0,
                        Xa.vertices = 0,
                        Xa.faces = 0,
                        Xa.points = 0,
                        void 0 === c && (c = null),
                        this.setRenderTarget(c);
                        var e = a.background;
                        if (null === e ? ib.buffers.color.setClear(wa.r, wa.g, wa.b, xa, Y) : e && e.isColor && (ib.buffers.color.setClear(e.r, e.g, e.b, 1, Y),
                        d = !0),
                        (this.autoClear || d) && this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil),
                        e && e.isCubeTexture ? (void 0 === qb && (qb = new Ia,
                        rb = new Ca(new Ea(5,5,5),new Z({
                            uniforms: ih.cube.uniforms,
                            vertexShader: ih.cube.vertexShader,
                            fragmentShader: ih.cube.fragmentShader,
                            side: af,
                            depthTest: !1,
                            depthWrite: !1,
                            fog: !1
                        }))),
                        qb.projectionMatrix.copy(b.projectionMatrix),
                        qb.matrixWorld.extractRotation(b.matrixWorld),
                        qb.matrixWorldInverse.getInverse(qb.matrixWorld),
                        rb.material.uniforms.tCube.value = e,
                        rb.modelViewMatrix.multiplyMatrices(qb.matrixWorldInverse, rb.matrixWorld),
                        lb.update(rb),
                        ka.renderBufferDirect(qb, null, rb.geometry, rb.material, rb, null)) : e && e.isTexture && (void 0 === ob && (ob = new Ja(-1,1,1,-1,0,1),
                        pb = new Ca(new Ga(2,2),new ma({
                            depthTest: !1,
                            depthWrite: !1,
                            fog: !1
                        }))),
                        pb.material.map = e,
                        lb.update(pb),
                        ka.renderBufferDirect(ob, null, pb.geometry, pb.material, pb, null)),
                        a.overrideMaterial) {
                            var f = a.overrideMaterial;
                            u(ba, a, b, f),
                            u(fa, a, b, f)
                        } else
                            ib.setBlending(hf),
                            u(ba, a, b),
                            u(fa, a, b);
                        vb.render(a, b),
                        wb.render(a, b, ua),
                        c && kb.updateRenderTargetMipmap(c),
                        ib.setDepthTest(!0),
                        ib.setDepthWrite(!0),
                        ib.setColorWrite(!0)
                    }
                }
                ,
                this.setFaceCulling = function(a, b) {
                    ib.setCullFace(a),
                    ib.setFlipSided(b === Ye)
                }
                ,
                this.allocTextureUnit = M,
                this.setTexture2D = function() {
                    var a = !1;
                    return function(b, c) {
                        b && b.isWebGLRenderTarget && (a || (a = !0),
                        b = b.texture),
                        kb.setTexture2D(b, c)
                    }
                }(),
                this.setTexture = function() {
                    var a = !1;
                    return function(b, c) {
                        a || (a = !0),
                        kb.setTexture2D(b, c)
                    }
                }(),
                this.setTextureCube = function() {
                    var a = !1;
                    return function(b, c) {
                        b && b.isWebGLRenderTargetCube && (a || (a = !0),
                        b = b.texture),
                        b && b.isCubeTexture || Array.isArray(b.image) && 6 === b.image.length ? kb.setTextureCube(b, c) : kb.setTextureCubeDynamic(b, c)
                    }
                }(),
                this.getCurrentRenderTarget = function() {
                    return na
                }
                ,
                this.setRenderTarget = function(a) {
                    na = a,
                    a && void 0 === jb.get(a).__webglFramebuffer && kb.setupRenderTarget(a);
                    var b, c = a && a.isWebGLRenderTargetCube;
                    if (a) {
                        var d = jb.get(a);
                        b = c ? d.__webglFramebuffer[a.activeCubeFace] : d.__webglFramebuffer,
                        sa.copy(a.scissor),
                        ta = a.scissorTest,
                        ua.copy(a.viewport)
                    } else
                        b = null,
                        sa.copy(Da).multiplyScalar(Aa),
                        ta = Fa,
                        ua.copy(Ha).multiplyScalar(Aa);
                    if (oa !== b && (Ya.bindFramebuffer(Ya.FRAMEBUFFER, b),
                    oa = b),
                    ib.scissor(sa),
                    ib.setScissorTest(ta),
                    ib.viewport(ua),
                    c) {
                        var e = jb.get(a.texture);
                        Ya.framebufferTexture2D(Ya.FRAMEBUFFER, Ya.COLOR_ATTACHMENT0, Ya.TEXTURE_CUBE_MAP_POSITIVE_X + a.activeCubeFace, e.__webglTexture, a.activeMipMapLevel)
                    }
                }
                ,
                this.readRenderTargetPixels = function(a, b, c, d, e, f) {
                    if (!1 !== (a && a.isWebGLRenderTarget)) {
                        var g = jb.get(a).__webglFramebuffer;
                        if (g) {
                            var h = !1;
                            g !== oa && (Ya.bindFramebuffer(Ya.FRAMEBUFFER, g),
                            h = !0);
                            try {
                                var i = a.texture
                                  , j = i.format
                                  , k = i.type;
                                if (j !== wg && N(j) !== Ya.getParameter(Ya.IMPLEMENTATION_COLOR_READ_FORMAT))
                                    return;
                                if (!(k === ig || N(k) === Ya.getParameter(Ya.IMPLEMENTATION_COLOR_READ_TYPE) || k === og && (_a.get("OES_texture_float") || _a.get("WEBGL_color_buffer_float")) || k === pg && _a.get("EXT_color_buffer_half_float")))
                                    return;
                                Ya.checkFramebufferStatus(Ya.FRAMEBUFFER) === Ya.FRAMEBUFFER_COMPLETE && b >= 0 && b <= a.width - d && c >= 0 && c <= a.height - e && Ya.readPixels(b, c, d, e, N(j), N(k), f)
                            } finally {
                                h && Ya.bindFramebuffer(Ya.FRAMEBUFFER, oa)
                            }
                        }
                    }
                }
            }
            function ib(a, b) {
                this.name = "",
                this.color = new T(a),
                this.density = void 0 !== b ? b : 25e-5
            }
            function jb(a, b, c) {
                this.name = "",
                this.color = new T(a),
                this.near = void 0 !== b ? b : 1,
                this.far = void 0 !== c ? c : 1e3
            }
            function kb() {
                ia.call(this),
                this.type = "Scene",
                this.background = null,
                this.fog = null,
                this.overrideMaterial = null,
                this.autoUpdate = !0
            }
            function lb(a, b, c, d, e) {
                ia.call(this),
                this.lensFlares = [],
                this.positionScreen = new i,
                this.customUpdateCallback = void 0,
                void 0 !== a && this.add(a, b, c, d, e)
            }
            function mb(a) {
                Y.call(this),
                this.type = "SpriteMaterial",
                this.color = new T(16777215),
                this.map = null,
                this.rotation = 0,
                this.fog = !1,
                this.lights = !1,
                this.setValues(a)
            }
            function nb(a) {
                ia.call(this),
                this.type = "Sprite",
                this.material = void 0 !== a ? a : new mb
            }
            function ob() {
                ia.call(this),
                this.type = "LOD",
                Object.defineProperties(this, {
                    levels: {
                        enumerable: !0,
                        value: []
                    }
                })
            }
            function pb(a, b, c) {
                if (this.useVertexTexture = void 0 === c || c,
                this.identityMatrix = new j,
                a = a || [],
                this.bones = a.slice(0),
                this.useVertexTexture) {
                    var d = Math.sqrt(4 * this.bones.length);
                    d = Zg.nextPowerOfTwo(Math.ceil(d)),
                    d = Math.max(d, 4),
                    this.boneTextureWidth = d,
                    this.boneTextureHeight = d,
                    this.boneMatrices = new Float32Array(this.boneTextureWidth * this.boneTextureHeight * 4),
                    this.boneTexture = new U(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,wg,og)
                } else
                    this.boneMatrices = new Float32Array(16 * this.bones.length);
                if (void 0 === b)
                    this.calculateInverses();
                else if (this.bones.length === b.length)
                    this.boneInverses = b.slice(0);
                else {
                    this.boneInverses = [];
                    for (var e = 0, f = this.bones.length; e < f; e++)
                        this.boneInverses.push(new j)
                }
            }
            function qb() {
                ia.call(this),
                this.type = "Bone"
            }
            function rb(a, b, c) {
                Ca.call(this, a, b),
                this.type = "SkinnedMesh",
                this.bindMode = "attached",
                this.bindMatrix = new j,
                this.bindMatrixInverse = new j;
                var d = [];
                if (this.geometry && void 0 !== this.geometry.bones) {
                    for (var e, f, g = 0, h = this.geometry.bones.length; g < h; ++g)
                        f = this.geometry.bones[g],
                        e = new qb,
                        d.push(e),
                        e.name = f.name,
                        e.position.fromArray(f.pos),
                        e.quaternion.fromArray(f.rotq),
                        void 0 !== f.scl && e.scale.fromArray(f.scl);
                    for (var g = 0, h = this.geometry.bones.length; g < h; ++g)
                        f = this.geometry.bones[g],
                        -1 !== f.parent && null !== f.parent && void 0 !== d[f.parent] ? d[f.parent].add(d[g]) : this.add(d[g])
                }
                this.normalizeSkinWeights(),
                this.updateMatrixWorld(!0),
                this.bind(new pb(d,void 0,c), this.matrixWorld)
            }
            function sb(a) {
                Y.call(this),
                this.type = "LineBasicMaterial",
                this.color = new T(16777215),
                this.linewidth = 1,
                this.linecap = "round",
                this.linejoin = "round",
                this.lights = !1,
                this.setValues(a)
            }
            function tb(a, b, c) {
                if (1 === c)
                    return new ub(a,b);
                ia.call(this),
                this.type = "Line",
                this.geometry = void 0 !== a ? a : new Ba,
                this.material = void 0 !== b ? b : new sb({
                    color: 16777215 * Math.random()
                })
            }
            function ub(a, b) {
                tb.call(this, a, b),
                this.type = "LineSegments"
            }
            function vb(a) {
                Y.call(this),
                this.type = "PointsMaterial",
                this.color = new T(16777215),
                this.map = null,
                this.size = 1,
                this.sizeAttenuation = !0,
                this.lights = !1,
                this.setValues(a)
            }
            function wb(a, b) {
                ia.call(this),
                this.type = "Points",
                this.geometry = void 0 !== a ? a : new Ba,
                this.material = void 0 !== b ? b : new vb({
                    color: 16777215 * Math.random()
                })
            }
            function xb() {
                ia.call(this),
                this.type = "Group"
            }
            function yb(a, b, c, e, f, g, h, i, j) {
                function k() {
                    requestAnimationFrame(k),
                    a.readyState >= a.HAVE_CURRENT_DATA && (l.needsUpdate = !0)
                }
                d.call(this, a, b, c, e, f, g, h, i, j),
                this.generateMipmaps = !1;
                var l = this;
                k()
            }
            function zb(a, b, c, e, f, g, h, i, j, k, l, m) {
                d.call(this, null, g, h, i, j, k, e, f, l, m),
                this.image = {
                    width: b,
                    height: c
                },
                this.mipmaps = a,
                this.flipY = !1,
                this.generateMipmaps = !1
            }
            function Ab(a, b, c, e, f, g, h, i, j) {
                d.call(this, a, b, c, e, f, g, h, i, j),
                this.needsUpdate = !0
            }
            function Bb(a, b, c, e, f, g, h, i, j, k) {
                if ((k = void 0 !== k ? k : Ag) !== Ag && k !== Bg)
                    throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
                void 0 === c && k === Ag && (c = lg),
                void 0 === c && k === Bg && (c = tg),
                d.call(this, null, e, f, g, h, i, k, c, j),
                this.image = {
                    width: a,
                    height: b
                },
                this.magFilter = void 0 !== h ? h : cg,
                this.minFilter = void 0 !== i ? i : cg,
                this.flipY = !1,
                this.generateMipmaps = !1
            }
            function Cb(a) {
                function b(a, b) {
                    return a - b
                }
                Ba.call(this),
                this.type = "WireframeGeometry";
                var c, d, e, f, g, h, j, k, l = [], m = [0, 0], n = {}, o = ["a", "b", "c"];
                if (a && a.isGeometry) {
                    var p = a.faces;
                    for (c = 0,
                    e = p.length; c < e; c++) {
                        var q = p[c];
                        for (d = 0; d < 3; d++)
                            m[0] = q[o[d]],
                            m[1] = q[o[(d + 1) % 3]],
                            m.sort(b),
                            j = m.toString(),
                            void 0 === n[j] && (n[j] = {
                                index1: m[0],
                                index2: m[1]
                            })
                    }
                    for (j in n)
                        h = n[j],
                        k = a.vertices[h.index1],
                        l.push(k.x, k.y, k.z),
                        k = a.vertices[h.index2],
                        l.push(k.x, k.y, k.z)
                } else if (a && a.isBufferGeometry) {
                    var r, s, t, u, v, w, x, y;
                    if (k = new i,
                    null !== a.index) {
                        for (r = a.attributes.position,
                        s = a.index,
                        t = a.groups,
                        0 === t.length && a.addGroup(0, s.count),
                        f = 0,
                        g = t.length; f < g; ++f)
                            for (u = t[f],
                            v = u.start,
                            w = u.count,
                            c = v,
                            e = v + w; c < e; c += 3)
                                for (d = 0; d < 3; d++)
                                    m[0] = s.getX(c + d),
                                    m[1] = s.getX(c + (d + 1) % 3),
                                    m.sort(b),
                                    j = m.toString(),
                                    void 0 === n[j] && (n[j] = {
                                        index1: m[0],
                                        index2: m[1]
                                    });
                        for (j in n)
                            h = n[j],
                            k.fromBufferAttribute(r, h.index1),
                            l.push(k.x, k.y, k.z),
                            k.fromBufferAttribute(r, h.index2),
                            l.push(k.x, k.y, k.z)
                    } else
                        for (r = a.attributes.position,
                        c = 0,
                        e = r.count / 3; c < e; c++)
                            for (d = 0; d < 3; d++)
                                x = 3 * c + d,
                                k.fromBufferAttribute(r, x),
                                l.push(k.x, k.y, k.z),
                                y = 3 * c + (d + 1) % 3,
                                k.fromBufferAttribute(r, y),
                                l.push(k.x, k.y, k.z)
                }
                this.addAttribute("position", new va(l,3))
            }
            function Db(a, b, c) {
                Aa.call(this),
                this.type = "ParametricGeometry",
                this.parameters = {
                    func: a,
                    slices: b,
                    stacks: c
                },
                this.fromBufferGeometry(new Eb(a,b,c)),
                this.mergeVertices()
            }
            function Eb(a, b, c) {
                Ba.call(this),
                this.type = "ParametricBufferGeometry",
                this.parameters = {
                    func: a,
                    slices: b,
                    stacks: c
                };
                var d, e, f = [], g = [], h = [], i = b + 1;
                for (d = 0; d <= c; d++) {
                    var j = d / c;
                    for (e = 0; e <= b; e++) {
                        var k = e / b
                          , l = a(k, j);
                        g.push(l.x, l.y, l.z),
                        h.push(k, j)
                    }
                }
                for (d = 0; d < c; d++)
                    for (e = 0; e < b; e++) {
                        var m = d * i + e
                          , n = d * i + e + 1
                          , o = (d + 1) * i + e + 1
                          , p = (d + 1) * i + e;
                        f.push(m, n, p),
                        f.push(n, o, p)
                    }
                this.setIndex(f),
                this.addAttribute("position", new va(g,3)),
                this.addAttribute("uv", new va(h,2)),
                this.computeVertexNormals()
            }
            function Fb(a, b, c, d) {
                Aa.call(this),
                this.type = "PolyhedronGeometry",
                this.parameters = {
                    vertices: a,
                    indices: b,
                    radius: c,
                    detail: d
                },
                this.fromBufferGeometry(new Gb(a,b,c,d)),
                this.mergeVertices()
            }
            function Gb(a, b, d, e) {
                function f(a, b, c, d) {
                    var e, f, g = Math.pow(2, d), i = [];
                    for (e = 0; e <= g; e++) {
                        i[e] = [];
                        var j = a.clone().lerp(c, e / g)
                          , k = b.clone().lerp(c, e / g)
                          , l = g - e;
                        for (f = 0; f <= l; f++)
                            i[e][f] = 0 === f && e === g ? j : j.clone().lerp(k, f / l)
                    }
                    for (e = 0; e < g; e++)
                        for (f = 0; f < 2 * (g - e) - 1; f++) {
                            var m = Math.floor(f / 2);
                            f % 2 == 0 ? (h(i[e][m + 1]),
                            h(i[e + 1][m]),
                            h(i[e][m])) : (h(i[e][m + 1]),
                            h(i[e + 1][m + 1]),
                            h(i[e + 1][m]))
                        }
                }
                function g() {
                    for (var a = 0; a < p.length; a += 6) {
                        var b = p[a + 0]
                          , c = p[a + 2]
                          , d = p[a + 4]
                          , e = Math.max(b, c, d)
                          , f = Math.min(b, c, d);
                        e > .9 && f < .1 && (b < .2 && (p[a + 0] += 1),
                        c < .2 && (p[a + 2] += 1),
                        d < .2 && (p[a + 4] += 1))
                    }
                }
                function h(a) {
                    o.push(a.x, a.y, a.z)
                }
                function j(b, c) {
                    var d = 3 * b;
                    c.x = a[d + 0],
                    c.y = a[d + 1],
                    c.z = a[d + 2]
                }
                function k() {
                    for (var a = new i, b = new i, d = new i, e = new i, f = new c, g = new c, h = new c, j = 0, k = 0; j < o.length; j += 9,
                    k += 6) {
                        a.set(o[j + 0], o[j + 1], o[j + 2]),
                        b.set(o[j + 3], o[j + 4], o[j + 5]),
                        d.set(o[j + 6], o[j + 7], o[j + 8]),
                        f.set(p[k + 0], p[k + 1]),
                        g.set(p[k + 2], p[k + 3]),
                        h.set(p[k + 4], p[k + 5]),
                        e.copy(a).add(b).add(d).divideScalar(3);
                        var n = m(e);
                        l(f, k + 0, a, n),
                        l(g, k + 2, b, n),
                        l(h, k + 4, d, n)
                    }
                }
                function l(a, b, c, d) {
                    d < 0 && 1 === a.x && (p[b] = a.x - 1),
                    0 === c.x && 0 === c.z && (p[b] = d / 2 / Math.PI + .5)
                }
                function m(a) {
                    return Math.atan2(a.z, -a.x)
                }
                function n(a) {
                    return Math.atan2(-a.y, Math.sqrt(a.x * a.x + a.z * a.z))
                }
                Ba.call(this),
                this.type = "PolyhedronBufferGeometry",
                this.parameters = {
                    vertices: a,
                    indices: b,
                    radius: d,
                    detail: e
                },
                d = d || 1,
                e = e || 0;
                var o = []
                  , p = [];
                !function(a) {
                    for (var c = new i, d = new i, e = new i, g = 0; g < b.length; g += 3)
                        j(b[g + 0], c),
                        j(b[g + 1], d),
                        j(b[g + 2], e),
                        f(c, d, e, a)
                }(e),
                function(a) {
                    for (var b = new i, c = 0; c < o.length; c += 3)
                        b.x = o[c + 0],
                        b.y = o[c + 1],
                        b.z = o[c + 2],
                        b.normalize().multiplyScalar(a),
                        o[c + 0] = b.x,
                        o[c + 1] = b.y,
                        o[c + 2] = b.z
                }(d),
                function() {
                    for (var a = new i, b = 0; b < o.length; b += 3) {
                        a.x = o[b + 0],
                        a.y = o[b + 1],
                        a.z = o[b + 2];
                        var c = m(a) / 2 / Math.PI + .5
                          , d = n(a) / Math.PI + .5;
                        p.push(c, 1 - d)
                    }
                    k(),
                    g()
                }(),
                this.addAttribute("position", new va(o,3)),
                this.addAttribute("normal", new va(o.slice(),3)),
                this.addAttribute("uv", new va(p,2)),
                this.normalizeNormals()
            }
            function Hb(a, b) {
                Aa.call(this),
                this.type = "TetrahedronGeometry",
                this.parameters = {
                    radius: a,
                    detail: b
                },
                this.fromBufferGeometry(new Ib(a,b)),
                this.mergeVertices()
            }
            function Ib(a, b) {
                var c = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1]
                  , d = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];
                Gb.call(this, c, d, a, b),
                this.type = "TetrahedronBufferGeometry",
                this.parameters = {
                    radius: a,
                    detail: b
                }
            }
            function Jb(a, b) {
                Aa.call(this),
                this.type = "OctahedronGeometry",
                this.parameters = {
                    radius: a,
                    detail: b
                },
                this.fromBufferGeometry(new Kb(a,b)),
                this.mergeVertices()
            }
            function Kb(a, b) {
                var c = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1]
                  , d = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];
                Gb.call(this, c, d, a, b),
                this.type = "OctahedronBufferGeometry",
                this.parameters = {
                    radius: a,
                    detail: b
                }
            }
            function Lb(a, b) {
                Aa.call(this),
                this.type = "IcosahedronGeometry",
                this.parameters = {
                    radius: a,
                    detail: b
                },
                this.fromBufferGeometry(new Mb(a,b)),
                this.mergeVertices()
            }
            function Mb(a, b) {
                var c = (1 + Math.sqrt(5)) / 2
                  , d = [-1, c, 0, 1, c, 0, -1, -c, 0, 1, -c, 0, 0, -1, c, 0, 1, c, 0, -1, -c, 0, 1, -c, c, 0, -1, c, 0, 1, -c, 0, -1, -c, 0, 1]
                  , e = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];
                Gb.call(this, d, e, a, b),
                this.type = "IcosahedronBufferGeometry",
                this.parameters = {
                    radius: a,
                    detail: b
                }
            }
            function Nb(a, b) {
                Aa.call(this),
                this.type = "DodecahedronGeometry",
                this.parameters = {
                    radius: a,
                    detail: b
                },
                this.fromBufferGeometry(new Ob(a,b)),
                this.mergeVertices()
            }
            function Ob(a, b) {
                var c = (1 + Math.sqrt(5)) / 2
                  , d = 1 / c
                  , e = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -d, -c, 0, -d, c, 0, d, -c, 0, d, c, -d, -c, 0, -d, c, 0, d, -c, 0, d, c, 0, -c, 0, -d, c, 0, -d, -c, 0, d, c, 0, d]
                  , f = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];
                Gb.call(this, e, f, a, b),
                this.type = "DodecahedronBufferGeometry",
                this.parameters = {
                    radius: a,
                    detail: b
                }
            }
            function Pb(a, b, c, d, e, f) {
                Aa.call(this),
                this.type = "TubeGeometry",
                this.parameters = {
                    path: a,
                    tubularSegments: b,
                    radius: c,
                    radialSegments: d,
                    closed: e
                };
                var g = new Qb(a,b,c,d,e);
                this.tangents = g.tangents,
                this.normals = g.normals,
                this.binormals = g.binormals,
                this.fromBufferGeometry(g),
                this.mergeVertices()
            }
            function Qb(a, b, d, e, f) {
                function g(c) {
                    var f = a.getPointAt(c / b)
                      , g = k.normals[c]
                      , h = k.binormals[c];
                    for (m = 0; m <= e; m++) {
                        var i = m / e * Math.PI * 2
                          , j = Math.sin(i)
                          , l = -Math.cos(i);
                        o.x = l * g.x + j * h.x,
                        o.y = l * g.y + j * h.y,
                        o.z = l * g.z + j * h.z,
                        o.normalize(),
                        r.push(o.x, o.y, o.z),
                        n.x = f.x + d * o.x,
                        n.y = f.y + d * o.y,
                        n.z = f.z + d * o.z,
                        q.push(n.x, n.y, n.z)
                    }
                }
                function h() {
                    for (m = 1; m <= b; m++)
                        for (l = 1; l <= e; l++) {
                            var a = (e + 1) * (m - 1) + (l - 1)
                              , c = (e + 1) * m + (l - 1)
                              , d = (e + 1) * m + l
                              , f = (e + 1) * (m - 1) + l;
                            t.push(a, c, f),
                            t.push(c, d, f)
                        }
                }
                function j() {
                    for (l = 0; l <= b; l++)
                        for (m = 0; m <= e; m++)
                            p.x = l / b,
                            p.y = m / e,
                            s.push(p.x, p.y)
                }
                Ba.call(this),
                this.type = "TubeBufferGeometry",
                this.parameters = {
                    path: a,
                    tubularSegments: b,
                    radius: d,
                    radialSegments: e,
                    closed: f
                },
                b = b || 64,
                d = d || 1,
                e = e || 8,
                f = f || !1;
                var k = a.computeFrenetFrames(b, f);
                this.tangents = k.tangents,
                this.normals = k.normals,
                this.binormals = k.binormals;
                var l, m, n = new i, o = new i, p = new c, q = [], r = [], s = [], t = [];
                !function() {
                    for (l = 0; l < b; l++)
                        g(l);
                    g(!1 === f ? b : 0),
                    j(),
                    h()
                }(),
                this.setIndex(t),
                this.addAttribute("position", new va(q,3)),
                this.addAttribute("normal", new va(r,3)),
                this.addAttribute("uv", new va(s,2))
            }
            function Rb(a, b, c, d, e, f, g) {
                Aa.call(this),
                this.type = "TorusKnotGeometry",
                this.parameters = {
                    radius: a,
                    tube: b,
                    tubularSegments: c,
                    radialSegments: d,
                    p: e,
                    q: f
                },
                this.fromBufferGeometry(new Sb(a,b,c,d,e,f)),
                this.mergeVertices()
            }
            function Sb(a, b, d, e, f, g) {
                function h(a, b, c, d, e) {
                    var f = Math.cos(a)
                      , g = Math.sin(a)
                      , h = c / b * a
                      , i = Math.cos(h);
                    e.x = d * (2 + i) * .5 * f,
                    e.y = d * (2 + i) * g * .5,
                    e.z = d * Math.sin(h) * .5
                }
                Ba.call(this),
                this.type = "TorusKnotBufferGeometry",
                this.parameters = {
                    radius: a,
                    tube: b,
                    tubularSegments: d,
                    radialSegments: e,
                    p: f,
                    q: g
                },
                a = a || 100,
                b = b || 40,
                d = Math.floor(d) || 64,
                e = Math.floor(e) || 8,
                f = f || 2,
                g = g || 3;
                var j, k, l = [], m = [], n = [], o = [], p = new i, q = new i, r = (new c,
                new i), s = new i, t = new i, u = new i, v = new i;
                for (j = 0; j <= d; ++j) {
                    var w = j / d * f * Math.PI * 2;
                    for (h(w, f, g, a, r),
                    h(w + .01, f, g, a, s),
                    u.subVectors(s, r),
                    v.addVectors(s, r),
                    t.crossVectors(u, v),
                    v.crossVectors(t, u),
                    t.normalize(),
                    v.normalize(),
                    k = 0; k <= e; ++k) {
                        var x = k / e * Math.PI * 2
                          , y = -b * Math.cos(x)
                          , z = b * Math.sin(x);
                        p.x = r.x + (y * v.x + z * t.x),
                        p.y = r.y + (y * v.y + z * t.y),
                        p.z = r.z + (y * v.z + z * t.z),
                        m.push(p.x, p.y, p.z),
                        q.subVectors(p, r).normalize(),
                        n.push(q.x, q.y, q.z),
                        o.push(j / d),
                        o.push(k / e)
                    }
                }
                for (k = 1; k <= d; k++)
                    for (j = 1; j <= e; j++) {
                        var A = (e + 1) * (k - 1) + (j - 1)
                          , B = (e + 1) * k + (j - 1)
                          , C = (e + 1) * k + j
                          , D = (e + 1) * (k - 1) + j;
                        l.push(A, B, D),
                        l.push(B, C, D)
                    }
                this.setIndex(l),
                this.addAttribute("position", new va(m,3)),
                this.addAttribute("normal", new va(n,3)),
                this.addAttribute("uv", new va(o,2))
            }
            function Tb(a, b, c, d, e) {
                Aa.call(this),
                this.type = "TorusGeometry",
                this.parameters = {
                    radius: a,
                    tube: b,
                    radialSegments: c,
                    tubularSegments: d,
                    arc: e
                },
                this.fromBufferGeometry(new Ub(a,b,c,d,e))
            }
            function Ub(a, b, c, d, e) {
                Ba.call(this),
                this.type = "TorusBufferGeometry",
                this.parameters = {
                    radius: a,
                    tube: b,
                    radialSegments: c,
                    tubularSegments: d,
                    arc: e
                },
                a = a || 100,
                b = b || 40,
                c = Math.floor(c) || 8,
                d = Math.floor(d) || 6,
                e = e || 2 * Math.PI;
                var f, g, h = [], j = [], k = [], l = [], m = new i, n = new i, o = new i;
                for (f = 0; f <= c; f++)
                    for (g = 0; g <= d; g++) {
                        var p = g / d * e
                          , q = f / c * Math.PI * 2;
                        n.x = (a + b * Math.cos(q)) * Math.cos(p),
                        n.y = (a + b * Math.cos(q)) * Math.sin(p),
                        n.z = b * Math.sin(q),
                        j.push(n.x, n.y, n.z),
                        m.x = a * Math.cos(p),
                        m.y = a * Math.sin(p),
                        o.subVectors(n, m).normalize(),
                        k.push(o.x, o.y, o.z),
                        l.push(g / d),
                        l.push(f / c)
                    }
                for (f = 1; f <= c; f++)
                    for (g = 1; g <= d; g++) {
                        var r = (d + 1) * f + g - 1
                          , s = (d + 1) * (f - 1) + g - 1
                          , t = (d + 1) * (f - 1) + g
                          , u = (d + 1) * f + g;
                        h.push(r, s, u),
                        h.push(s, t, u)
                    }
                this.setIndex(h),
                this.addAttribute("position", new va(j,3)),
                this.addAttribute("normal", new va(k,3)),
                this.addAttribute("uv", new va(l,2))
            }
            function Vb(a, b) {
                if (void 0 === a)
                    return void (a = []);
                Aa.call(this),
                this.type = "ExtrudeGeometry",
                a = Array.isArray(a) ? a : [a],
                this.addShapeList(a, b),
                this.computeFaceNormals()
            }
            function Wb(a, b) {
                b = b || {};
                var c = b.font;
                if (!1 === (c && c.isFont))
                    return new Aa;
                var d = c.generateShapes(a, b.size, b.curveSegments);
                b.amount = void 0 !== b.height ? b.height : 50,
                void 0 === b.bevelThickness && (b.bevelThickness = 10),
                void 0 === b.bevelSize && (b.bevelSize = 8),
                void 0 === b.bevelEnabled && (b.bevelEnabled = !1),
                Vb.call(this, d, b),
                this.type = "TextGeometry"
            }
            function Xb(a, b, c, d, e, f, g) {
                Aa.call(this),
                this.type = "SphereGeometry",
                this.parameters = {
                    radius: a,
                    widthSegments: b,
                    heightSegments: c,
                    phiStart: d,
                    phiLength: e,
                    thetaStart: f,
                    thetaLength: g
                },
                this.fromBufferGeometry(new Yb(a,b,c,d,e,f,g))
            }
            function Yb(a, b, c, d, e, f, g) {
                Ba.call(this),
                this.type = "SphereBufferGeometry",
                this.parameters = {
                    radius: a,
                    widthSegments: b,
                    heightSegments: c,
                    phiStart: d,
                    phiLength: e,
                    thetaStart: f,
                    thetaLength: g
                },
                a = a || 50,
                b = Math.max(3, Math.floor(b) || 8),
                c = Math.max(2, Math.floor(c) || 6),
                d = void 0 !== d ? d : 0,
                e = void 0 !== e ? e : 2 * Math.PI,
                f = void 0 !== f ? f : 0,
                g = void 0 !== g ? g : Math.PI;
                var h, j, k = f + g, l = 0, m = [], n = new i, o = new i, p = [], q = [], r = [], s = [];
                for (j = 0; j <= c; j++) {
                    var t = []
                      , u = j / c;
                    for (h = 0; h <= b; h++) {
                        var v = h / b;
                        n.x = -a * Math.cos(d + v * e) * Math.sin(f + u * g),
                        n.y = a * Math.cos(f + u * g),
                        n.z = a * Math.sin(d + v * e) * Math.sin(f + u * g),
                        q.push(n.x, n.y, n.z),
                        o.set(n.x, n.y, n.z).normalize(),
                        r.push(o.x, o.y, o.z),
                        s.push(v, 1 - u),
                        t.push(l++)
                    }
                    m.push(t)
                }
                for (j = 0; j < c; j++)
                    for (h = 0; h < b; h++) {
                        var w = m[j][h + 1]
                          , x = m[j][h]
                          , y = m[j + 1][h]
                          , z = m[j + 1][h + 1];
                        (0 !== j || f > 0) && p.push(w, x, z),
                        (j !== c - 1 || k < Math.PI) && p.push(x, y, z)
                    }
                this.setIndex(p),
                this.addAttribute("position", new va(q,3)),
                this.addAttribute("normal", new va(r,3)),
                this.addAttribute("uv", new va(s,2))
            }
            function Zb(a, b, c, d, e, f) {
                Aa.call(this),
                this.type = "RingGeometry",
                this.parameters = {
                    innerRadius: a,
                    outerRadius: b,
                    thetaSegments: c,
                    phiSegments: d,
                    thetaStart: e,
                    thetaLength: f
                },
                this.fromBufferGeometry(new $b(a,b,c,d,e,f))
            }
            function $b(a, b, d, e, f, g) {
                Ba.call(this),
                this.type = "RingBufferGeometry",
                this.parameters = {
                    innerRadius: a,
                    outerRadius: b,
                    thetaSegments: d,
                    phiSegments: e,
                    thetaStart: f,
                    thetaLength: g
                },
                a = a || 20,
                b = b || 50,
                f = void 0 !== f ? f : 0,
                g = void 0 !== g ? g : 2 * Math.PI,
                d = void 0 !== d ? Math.max(3, d) : 8,
                e = void 0 !== e ? Math.max(1, e) : 1;
                var h, j, k, l = [], m = [], n = [], o = [], p = a, q = (b - a) / e, r = new i, s = new c;
                for (j = 0; j <= e; j++) {
                    for (k = 0; k <= d; k++)
                        h = f + k / d * g,
                        r.x = p * Math.cos(h),
                        r.y = p * Math.sin(h),
                        m.push(r.x, r.y, r.z),
                        n.push(0, 0, 1),
                        s.x = (r.x / b + 1) / 2,
                        s.y = (r.y / b + 1) / 2,
                        o.push(s.x, s.y);
                    p += q
                }
                for (j = 0; j < e; j++) {
                    var t = j * (d + 1);
                    for (k = 0; k < d; k++) {
                        h = k + t;
                        var u = h
                          , v = h + d + 1
                          , w = h + d + 2
                          , x = h + 1;
                        l.push(u, v, x),
                        l.push(v, w, x)
                    }
                }
                this.setIndex(l),
                this.addAttribute("position", new va(m,3)),
                this.addAttribute("normal", new va(n,3)),
                this.addAttribute("uv", new va(o,2))
            }
            function _b(a, b, c, d) {
                Aa.call(this),
                this.type = "LatheGeometry",
                this.parameters = {
                    points: a,
                    segments: b,
                    phiStart: c,
                    phiLength: d
                },
                this.fromBufferGeometry(new ac(a,b,c,d)),
                this.mergeVertices()
            }
            function ac(a, b, d, e) {
                Ba.call(this),
                this.type = "LatheBufferGeometry",
                this.parameters = {
                    points: a,
                    segments: b,
                    phiStart: d,
                    phiLength: e
                },
                b = Math.floor(b) || 12,
                d = d || 0,
                e = e || 2 * Math.PI,
                e = Zg.clamp(e, 0, 2 * Math.PI);
                var f, g, h, j = [], k = [], l = [], m = 1 / b, n = new i, o = new c;
                for (g = 0; g <= b; g++) {
                    var p = d + g * m * e
                      , q = Math.sin(p)
                      , r = Math.cos(p);
                    for (h = 0; h <= a.length - 1; h++)
                        n.x = a[h].x * q,
                        n.y = a[h].y,
                        n.z = a[h].x * r,
                        k.push(n.x, n.y, n.z),
                        o.x = g / b,
                        o.y = h / (a.length - 1),
                        l.push(o.x, o.y)
                }
                for (g = 0; g < b; g++)
                    for (h = 0; h < a.length - 1; h++) {
                        f = h + g * a.length;
                        var s = f
                          , t = f + a.length
                          , u = f + a.length + 1
                          , v = f + 1;
                        j.push(s, t, v),
                        j.push(t, u, v)
                    }
                if (this.setIndex(j),
                this.addAttribute("position", new va(k,3)),
                this.addAttribute("uv", new va(l,2)),
                this.computeVertexNormals(),
                e === 2 * Math.PI) {
                    var w = this.attributes.normal.array
                      , x = new i
                      , y = new i
                      , z = new i;
                    for (f = b * a.length * 3,
                    g = 0,
                    h = 0; g < a.length; g++,
                    h += 3)
                        x.x = w[h + 0],
                        x.y = w[h + 1],
                        x.z = w[h + 2],
                        y.x = w[f + h + 0],
                        y.y = w[f + h + 1],
                        y.z = w[f + h + 2],
                        z.addVectors(x, y).normalize(),
                        w[h + 0] = w[f + h + 0] = z.x,
                        w[h + 1] = w[f + h + 1] = z.y,
                        w[h + 2] = w[f + h + 2] = z.z
                }
            }
            function bc(a, b) {
                Aa.call(this),
                this.type = "ShapeGeometry",
                "object" == typeof b && (b = b.curveSegments),
                this.parameters = {
                    shapes: a,
                    curveSegments: b
                },
                this.fromBufferGeometry(new cc(a,b)),
                this.mergeVertices()
            }
            function cc(a, b) {
                function c(a) {
                    var c, h, j, k = e.length / 3, l = a.extractPoints(b), m = l.shape, n = l.holes;
                    if (!1 === nh.isClockWise(m))
                        for (m = m.reverse(),
                        c = 0,
                        h = n.length; c < h; c++)
                            j = n[c],
                            !0 === nh.isClockWise(j) && (n[c] = j.reverse());
                    var o = nh.triangulateShape(m, n);
                    for (c = 0,
                    h = n.length; c < h; c++)
                        j = n[c],
                        m = m.concat(j);
                    for (c = 0,
                    h = m.length; c < h; c++) {
                        var p = m[c];
                        e.push(p.x, p.y, 0),
                        f.push(0, 0, 1),
                        g.push(p.x, p.y)
                    }
                    for (c = 0,
                    h = o.length; c < h; c++) {
                        var q = o[c]
                          , r = q[0] + k
                          , s = q[1] + k
                          , t = q[2] + k;
                        d.push(r, s, t),
                        i += 3
                    }
                }
                Ba.call(this),
                this.type = "ShapeBufferGeometry",
                this.parameters = {
                    shapes: a,
                    curveSegments: b
                },
                b = b || 12;
                var d = []
                  , e = []
                  , f = []
                  , g = []
                  , h = 0
                  , i = 0;
                if (!1 === Array.isArray(a))
                    c(a);
                else
                    for (var j = 0; j < a.length; j++)
                        c(a[j]),
                        this.addGroup(h, i, j),
                        h += i,
                        i = 0;
                this.setIndex(d),
                this.addAttribute("position", new va(e,3)),
                this.addAttribute("normal", new va(f,3)),
                this.addAttribute("uv", new va(g,2))
            }
            function dc(a, b) {
                function c(a, b) {
                    return a - b
                }
                Ba.call(this),
                this.type = "EdgesGeometry",
                this.parameters = {
                    thresholdAngle: b
                },
                b = void 0 !== b ? b : 1;
                var d, e, f = [], g = Math.cos(Zg.DEG2RAD * b), h = [0, 0], i = {}, j = ["a", "b", "c"];
                a.isBufferGeometry ? (e = new Aa,
                e.fromBufferGeometry(a)) : e = a.clone(),
                e.mergeVertices(),
                e.computeFaceNormals();
                for (var k = e.vertices, l = e.faces, m = 0, n = l.length; m < n; m++)
                    for (var o = l[m], p = 0; p < 3; p++)
                        h[0] = o[j[p]],
                        h[1] = o[j[(p + 1) % 3]],
                        h.sort(c),
                        d = h.toString(),
                        void 0 === i[d] ? i[d] = {
                            index1: h[0],
                            index2: h[1],
                            face1: m,
                            face2: void 0
                        } : i[d].face2 = m;
                for (d in i) {
                    var q = i[d];
                    if (void 0 === q.face2 || l[q.face1].normal.dot(l[q.face2].normal) <= g) {
                        var r = k[q.index1];
                        f.push(r.x, r.y, r.z),
                        r = k[q.index2],
                        f.push(r.x, r.y, r.z)
                    }
                }
                this.addAttribute("position", new va(f,3))
            }
            function ec(a, b, c, d, e, f, g, h) {
                Aa.call(this),
                this.type = "CylinderGeometry",
                this.parameters = {
                    radiusTop: a,
                    radiusBottom: b,
                    height: c,
                    radialSegments: d,
                    heightSegments: e,
                    openEnded: f,
                    thetaStart: g,
                    thetaLength: h
                },
                this.fromBufferGeometry(new fc(a,b,c,d,e,f,g,h)),
                this.mergeVertices()
            }
            function fc(a, b, d, e, f, g, h, j) {
                function k(d) {
                    var f, g, k, r = new c, u = new i, v = 0, w = !0 === d ? a : b, x = !0 === d ? 1 : -1;
                    for (g = q,
                    f = 1; f <= e; f++)
                        n.push(0, s * x, 0),
                        o.push(0, x, 0),
                        p.push(.5, .5),
                        q++;
                    for (k = q,
                    f = 0; f <= e; f++) {
                        var y = f / e
                          , z = y * j + h
                          , A = Math.cos(z)
                          , B = Math.sin(z);
                        u.x = w * B,
                        u.y = s * x,
                        u.z = w * A,
                        n.push(u.x, u.y, u.z),
                        o.push(0, x, 0),
                        r.x = .5 * A + .5,
                        r.y = .5 * B * x + .5,
                        p.push(r.x, r.y),
                        q++
                    }
                    for (f = 0; f < e; f++) {
                        var C = g + f
                          , D = k + f;
                        !0 === d ? m.push(D, D + 1, C) : m.push(D + 1, D, C),
                        v += 3
                    }
                    l.addGroup(t, v, !0 === d ? 1 : 2),
                    t += v
                }
                Ba.call(this),
                this.type = "CylinderBufferGeometry",
                this.parameters = {
                    radiusTop: a,
                    radiusBottom: b,
                    height: d,
                    radialSegments: e,
                    heightSegments: f,
                    openEnded: g,
                    thetaStart: h,
                    thetaLength: j
                };
                var l = this;
                a = void 0 !== a ? a : 20,
                b = void 0 !== b ? b : 20,
                d = void 0 !== d ? d : 100,
                e = Math.floor(e) || 8,
                f = Math.floor(f) || 1,
                g = void 0 !== g && g,
                h = void 0 !== h ? h : 0,
                j = void 0 !== j ? j : 2 * Math.PI;
                var m = []
                  , n = []
                  , o = []
                  , p = []
                  , q = 0
                  , r = []
                  , s = d / 2
                  , t = 0;
                !function() {
                    var c, g, k = new i, u = new i, v = 0, w = (b - a) / d;
                    for (g = 0; g <= f; g++) {
                        var x = []
                          , y = g / f
                          , z = y * (b - a) + a;
                        for (c = 0; c <= e; c++) {
                            var A = c / e
                              , B = A * j + h
                              , C = Math.sin(B)
                              , D = Math.cos(B);
                            u.x = z * C,
                            u.y = -y * d + s,
                            u.z = z * D,
                            n.push(u.x, u.y, u.z),
                            k.set(C, w, D).normalize(),
                            o.push(k.x, k.y, k.z),
                            p.push(A, 1 - y),
                            x.push(q++)
                        }
                        r.push(x)
                    }
                    for (c = 0; c < e; c++)
                        for (g = 0; g < f; g++) {
                            var E = r[g][c]
                              , F = r[g + 1][c]
                              , G = r[g + 1][c + 1]
                              , H = r[g][c + 1];
                            m.push(E, F, H),
                            m.push(F, G, H),
                            v += 6
                        }
                    l.addGroup(t, v, 0),
                    t += v
                }(),
                !1 === g && (a > 0 && k(!0),
                b > 0 && k(!1)),
                this.setIndex(m),
                this.addAttribute("position", new va(n,3)),
                this.addAttribute("normal", new va(o,3)),
                this.addAttribute("uv", new va(p,2))
            }
            function gc(a, b, c, d, e, f, g) {
                ec.call(this, 0, a, b, c, d, e, f, g),
                this.type = "ConeGeometry",
                this.parameters = {
                    radius: a,
                    height: b,
                    radialSegments: c,
                    heightSegments: d,
                    openEnded: e,
                    thetaStart: f,
                    thetaLength: g
                }
            }
            function hc(a, b, c, d, e, f, g) {
                fc.call(this, 0, a, b, c, d, e, f, g),
                this.type = "ConeBufferGeometry",
                this.parameters = {
                    radius: a,
                    height: b,
                    radialSegments: c,
                    heightSegments: d,
                    openEnded: e,
                    thetaStart: f,
                    thetaLength: g
                }
            }
            function ic(a, b, c, d) {
                Aa.call(this),
                this.type = "CircleGeometry",
                this.parameters = {
                    radius: a,
                    segments: b,
                    thetaStart: c,
                    thetaLength: d
                },
                this.fromBufferGeometry(new jc(a,b,c,d))
            }
            function jc(a, b, d, e) {
                Ba.call(this),
                this.type = "CircleBufferGeometry",
                this.parameters = {
                    radius: a,
                    segments: b,
                    thetaStart: d,
                    thetaLength: e
                },
                a = a || 50,
                b = void 0 !== b ? Math.max(3, b) : 8,
                d = void 0 !== d ? d : 0,
                e = void 0 !== e ? e : 2 * Math.PI;
                var f, g, h = [], j = [], k = [], l = [], m = new i, n = new c;
                for (j.push(0, 0, 0),
                k.push(0, 0, 1),
                l.push(.5, .5),
                g = 0,
                f = 3; g <= b; g++,
                f += 3) {
                    var o = d + g / b * e;
                    m.x = a * Math.cos(o),
                    m.y = a * Math.sin(o),
                    j.push(m.x, m.y, m.z),
                    k.push(0, 0, 1),
                    n.x = (j[f] / a + 1) / 2,
                    n.y = (j[f + 1] / a + 1) / 2,
                    l.push(n.x, n.y)
                }
                for (f = 1; f <= b; f++)
                    h.push(f, f + 1, 0);
                this.setIndex(h),
                this.addAttribute("position", new va(j,3)),
                this.addAttribute("normal", new va(k,3)),
                this.addAttribute("uv", new va(l,2))
            }
            function kc() {
                Z.call(this, {
                    uniforms: eh.merge([hh.lights, {
                        opacity: {
                            value: 1
                        }
                    }]),
                    vertexShader: fh.shadow_vert,
                    fragmentShader: fh.shadow_frag
                }),
                this.lights = !0,
                this.transparent = !0,
                Object.defineProperties(this, {
                    opacity: {
                        enumerable: !0,
                        get: function() {
                            return this.uniforms.opacity.value
                        },
                        set: function(a) {
                            this.uniforms.opacity.value = a
                        }
                    }
                })
            }
            function lc(a) {
                Z.call(this, a),
                this.type = "RawShaderMaterial"
            }
            function mc(a) {
                this.uuid = Zg.generateUUID(),
                this.type = "MultiMaterial",
                this.materials = Array.isArray(a) ? a : [],
                this.visible = !0
            }
            function nc(a) {
                Y.call(this),
                this.defines = {
                    STANDARD: ""
                },
                this.type = "MeshStandardMaterial",
                this.color = new T(16777215),
                this.roughness = .5,
                this.metalness = .5,
                this.map = null,
                this.lightMap = null,
                this.lightMapIntensity = 1,
                this.aoMap = null,
                this.aoMapIntensity = 1,
                this.emissive = new T(0),
                this.emissiveIntensity = 1,
                this.emissiveMap = null,
                this.bumpMap = null,
                this.bumpScale = 1,
                this.normalMap = null,
                this.normalScale = new c(1,1),
                this.displacementMap = null,
                this.displacementScale = 1,
                this.displacementBias = 0,
                this.roughnessMap = null,
                this.metalnessMap = null,
                this.alphaMap = null,
                this.envMap = null,
                this.envMapIntensity = 1,
                this.refractionRatio = .98,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.wireframeLinecap = "round",
                this.wireframeLinejoin = "round",
                this.skinning = !1,
                this.morphTargets = !1,
                this.morphNormals = !1,
                this.setValues(a)
            }
            function oc(a) {
                nc.call(this),
                this.defines = {
                    PHYSICAL: ""
                },
                this.type = "MeshPhysicalMaterial",
                this.reflectivity = .5,
                this.clearCoat = 0,
                this.clearCoatRoughness = 0,
                this.setValues(a)
            }
            function pc(a) {
                Y.call(this),
                this.type = "MeshPhongMaterial",
                this.color = new T(16777215),
                this.specular = new T(1118481),
                this.shininess = 30,
                this.map = null,
                this.lightMap = null,
                this.lightMapIntensity = 1,
                this.aoMap = null,
                this.aoMapIntensity = 1,
                this.emissive = new T(0),
                this.emissiveIntensity = 1,
                this.emissiveMap = null,
                this.bumpMap = null,
                this.bumpScale = 1,
                this.normalMap = null,
                this.normalScale = new c(1,1),
                this.displacementMap = null,
                this.displacementScale = 1,
                this.displacementBias = 0,
                this.specularMap = null,
                this.alphaMap = null,
                this.envMap = null,
                this.combine = Mf,
                this.reflectivity = 1,
                this.refractionRatio = .98,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.wireframeLinecap = "round",
                this.wireframeLinejoin = "round",
                this.skinning = !1,
                this.morphTargets = !1,
                this.morphNormals = !1,
                this.setValues(a)
            }
            function qc(a) {
                pc.call(this),
                this.defines = {
                    TOON: ""
                },
                this.type = "MeshToonMaterial",
                this.gradientMap = null,
                this.setValues(a)
            }
            function rc(a) {
                Y.call(this, a),
                this.type = "MeshNormalMaterial",
                this.bumpMap = null,
                this.bumpScale = 1,
                this.normalMap = null,
                this.normalScale = new c(1,1),
                this.displacementMap = null,
                this.displacementScale = 1,
                this.displacementBias = 0,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.fog = !1,
                this.lights = !1,
                this.skinning = !1,
                this.morphTargets = !1,
                this.morphNormals = !1,
                this.setValues(a)
            }
            function sc(a) {
                Y.call(this),
                this.type = "MeshLambertMaterial",
                this.color = new T(16777215),
                this.map = null,
                this.lightMap = null,
                this.lightMapIntensity = 1,
                this.aoMap = null,
                this.aoMapIntensity = 1,
                this.emissive = new T(0),
                this.emissiveIntensity = 1,
                this.emissiveMap = null,
                this.specularMap = null,
                this.alphaMap = null,
                this.envMap = null,
                this.combine = Mf,
                this.reflectivity = 1,
                this.refractionRatio = .98,
                this.wireframe = !1,
                this.wireframeLinewidth = 1,
                this.wireframeLinecap = "round",
                this.wireframeLinejoin = "round",
                this.skinning = !1,
                this.morphTargets = !1,
                this.morphNormals = !1,
                this.setValues(a)
            }
            function tc(a) {
                Y.call(this),
                this.type = "LineDashedMaterial",
                this.color = new T(16777215),
                this.linewidth = 1,
                this.scale = 1,
                this.dashSize = 3,
                this.gapSize = 1,
                this.lights = !1,
                this.setValues(a)
            }
            function uc(a, b, c) {
                var d = this
                  , e = !1
                  , f = 0
                  , g = 0;
                this.onStart = void 0,
                this.onLoad = a,
                this.onProgress = b,
                this.onError = c,
                this.itemStart = function(a) {
                    g++,
                    !1 === e && void 0 !== d.onStart && d.onStart(a, f, g),
                    e = !0
                }
                ,
                this.itemEnd = function(a) {
                    f++,
                    void 0 !== d.onProgress && d.onProgress(a, f, g),
                    f === g && (e = !1,
                    void 0 !== d.onLoad && d.onLoad())
                }
                ,
                this.itemError = function(a) {
                    void 0 !== d.onError && d.onError(a)
                }
            }
            function vc(a) {
                this.manager = void 0 !== a ? a : rh
            }
            function wc(a) {
                this.manager = void 0 !== a ? a : rh,
                this._parser = null
            }
            function xc(a) {
                this.manager = void 0 !== a ? a : rh,
                this._parser = null
            }
            function yc(a) {
                this.manager = void 0 !== a ? a : rh
            }
            function zc(a) {
                this.manager = void 0 !== a ? a : rh
            }
            function Ac(a) {
                this.manager = void 0 !== a ? a : rh
            }
            function Bc(a, b) {
                ia.call(this),
                this.type = "Light",
                this.color = new T(a),
                this.intensity = void 0 !== b ? b : 1,
                this.receiveShadow = void 0
            }
            function Cc(a, b, c) {
                Bc.call(this, a, c),
                this.type = "HemisphereLight",
                this.castShadow = void 0,
                this.position.copy(ia.DefaultUp),
                this.updateMatrix(),
                this.groundColor = new T(b)
            }
            function Dc(a) {
                this.camera = a,
                this.bias = 0,
                this.radius = 1,
                this.mapSize = new c(512,512),
                this.map = null,
                this.matrix = new j
            }
            function Ec() {
                Dc.call(this, new Ia(50,1,.5,500))
            }
            function Fc(a, b, c, d, e, f) {
                Bc.call(this, a, b),
                this.type = "SpotLight",
                this.position.copy(ia.DefaultUp),
                this.updateMatrix(),
                this.target = new ia,
                Object.defineProperty(this, "power", {
                    get: function() {
                        return this.intensity * Math.PI
                    },
                    set: function(a) {
                        this.intensity = a / Math.PI
                    }
                }),
                this.distance = void 0 !== c ? c : 0,
                this.angle = void 0 !== d ? d : Math.PI / 3,
                this.penumbra = void 0 !== e ? e : 0,
                this.decay = void 0 !== f ? f : 1,
                this.shadow = new Ec
            }
            function Gc(a, b, c, d) {
                Bc.call(this, a, b),
                this.type = "PointLight",
                Object.defineProperty(this, "power", {
                    get: function() {
                        return 4 * this.intensity * Math.PI
                    },
                    set: function(a) {
                        this.intensity = a / (4 * Math.PI)
                    }
                }),
                this.distance = void 0 !== c ? c : 0,
                this.decay = void 0 !== d ? d : 1,
                this.shadow = new Dc(new Ia(90,1,.5,500))
            }
            function Hc() {
                Dc.call(this, new Ja(-5,5,5,-5,.5,500))
            }
            function Ic(a, b) {
                Bc.call(this, a, b),
                this.type = "DirectionalLight",
                this.position.copy(ia.DefaultUp),
                this.updateMatrix(),
                this.target = new ia,
                this.shadow = new Hc
            }
            function Jc(a, b) {
                Bc.call(this, a, b),
                this.type = "AmbientLight",
                this.castShadow = void 0
            }
            function Kc(a, b, c, d) {
                this.parameterPositions = a,
                this._cachedIndex = 0,
                this.resultBuffer = void 0 !== d ? d : new b.constructor(c),
                this.sampleValues = b,
                this.valueSize = c
            }
            function Lc(a, b, c, d) {
                Kc.call(this, a, b, c, d),
                this._weightPrev = -0,
                this._offsetPrev = -0,
                this._weightNext = -0,
                this._offsetNext = -0
            }
            function Mc(a, b, c, d) {
                Kc.call(this, a, b, c, d)
            }
            function Nc(a, b, c, d) {
                Kc.call(this, a, b, c, d)
            }
            function Oc(a, b, c, d) {
                if (void 0 === a)
                    throw new Error("track name is undefined");
                if (void 0 === b || 0 === b.length)
                    throw new Error("no keyframes in track named " + a);
                this.name = a,
                this.times = sh.convertArray(b, this.TimeBufferType),
                this.values = sh.convertArray(c, this.ValueBufferType),
                this.setInterpolation(d || this.DefaultInterpolation),
                this.validate(),
                this.optimize()
            }
            function Pc(a, b, c, d) {
                Oc.call(this, a, b, c, d)
            }
            function Qc(a, b, c, d) {
                Kc.call(this, a, b, c, d)
            }
            function Rc(a, b, c, d) {
                Oc.call(this, a, b, c, d)
            }
            function Sc(a, b, c, d) {
                Oc.call(this, a, b, c, d)
            }
            function Tc(a, b, c, d) {
                Oc.call(this, a, b, c, d)
            }
            function Uc(a, b, c) {
                Oc.call(this, a, b, c)
            }
            function Vc(a, b, c, d) {
                Oc.call(this, a, b, c, d)
            }
            function Wc(a, b, c, d) {
                Oc.apply(this, arguments)
            }
            function Xc(a, b, c) {
                this.name = a,
                this.tracks = c,
                this.duration = void 0 !== b ? b : -1,
                this.uuid = Zg.generateUUID(),
                this.duration < 0 && this.resetDuration(),
                this.optimize()
            }
            function Yc(a) {
                this.manager = void 0 !== a ? a : rh,
                this.textures = {}
            }
            function Zc(a) {
                this.manager = void 0 !== a ? a : rh
            }
            function $c() {
                this.onLoadStart = function() {}
                ,
                this.onLoadProgress = function() {}
                ,
                this.onLoadComplete = function() {}
            }
            function _c(a) {
                "boolean" == typeof a && (a = void 0),
                this.manager = void 0 !== a ? a : rh,
                this.withCredentials = !1
            }
            function ad(a) {
                this.manager = void 0 !== a ? a : rh,
                this.texturePath = ""
            }
            function bd(a, b, c, d, e) {
                var f = .5 * (d - b)
                  , g = .5 * (e - c)
                  , h = a * a;
                return (2 * c - 2 * d + f + g) * (a * h) + (-3 * c + 3 * d - 2 * f - g) * h + f * a + c
            }
            function cd(a, b) {
                var c = 1 - a;
                return c * c * b
            }
            function dd(a, b) {
                return 2 * (1 - a) * a * b
            }
            function ed(a, b) {
                return a * a * b
            }
            function fd(a, b, c, d) {
                return cd(a, b) + dd(a, c) + ed(a, d)
            }
            function gd(a, b) {
                var c = 1 - a;
                return c * c * c * b
            }
            function hd(a, b) {
                var c = 1 - a;
                return 3 * c * c * a * b
            }
            function id(a, b) {
                return 3 * (1 - a) * a * a * b
            }
            function jd(a, b) {
                return a * a * a * b
            }
            function kd(a, b, c, d, e) {
                return gd(a, b) + hd(a, c) + id(a, d) + jd(a, e)
            }
            function ld() {}
            function md(a, b) {
                this.v1 = a,
                this.v2 = b
            }
            function nd() {
                this.curves = [],
                this.autoClose = !1
            }
            function od(a, b, c, d, e, f, g, h) {
                this.aX = a,
                this.aY = b,
                this.xRadius = c,
                this.yRadius = d,
                this.aStartAngle = e,
                this.aEndAngle = f,
                this.aClockwise = g,
                this.aRotation = h || 0
            }
            function pd(a) {
                this.points = void 0 === a ? [] : a
            }
            function qd(a, b, c, d) {
                this.v0 = a,
                this.v1 = b,
                this.v2 = c,
                this.v3 = d
            }
            function rd(a, b, c) {
                this.v0 = a,
                this.v1 = b,
                this.v2 = c
            }
            function sd(a) {
                nd.call(this),
                this.currentPoint = new c,
                a && this.fromPoints(a)
            }
            function td() {
                sd.apply(this, arguments),
                this.holes = []
            }
            function ud() {
                this.subPaths = [],
                this.currentPath = null
            }
            function vd(a) {
                this.data = a
            }
            function wd(a) {
                this.manager = void 0 !== a ? a : rh
            }
            function xd(a) {
                this.manager = void 0 !== a ? a : rh
            }
            function yd(a, b, c, d) {
                Bc.call(this, a, b),
                this.type = "RectAreaLight",
                this.position.set(0, 1, 0),
                this.updateMatrix(),
                this.width = void 0 !== c ? c : 10,
                this.height = void 0 !== d ? d : 10
            }
            function zd() {
                this.type = "StereoCamera",
                this.aspect = 1,
                this.eyeSep = .064,
                this.cameraL = new Ia,
                this.cameraL.layers.enable(1),
                this.cameraL.matrixAutoUpdate = !1,
                this.cameraR = new Ia,
                this.cameraR.layers.enable(2),
                this.cameraR.matrixAutoUpdate = !1
            }
            function Ad(a, b, c) {
                ia.call(this),
                this.type = "CubeCamera";
                var d = new Ia(90,1,a,b);
                d.up.set(0, -1, 0),
                d.lookAt(new i(1,0,0)),
                this.add(d);
                var e = new Ia(90,1,a,b);
                e.up.set(0, -1, 0),
                e.lookAt(new i(-1,0,0)),
                this.add(e);
                var f = new Ia(90,1,a,b);
                f.up.set(0, 0, 1),
                f.lookAt(new i(0,1,0)),
                this.add(f);
                var h = new Ia(90,1,a,b);
                h.up.set(0, 0, -1),
                h.lookAt(new i(0,-1,0)),
                this.add(h);
                var j = new Ia(90,1,a,b);
                j.up.set(0, -1, 0),
                j.lookAt(new i(0,0,1)),
                this.add(j);
                var k = new Ia(90,1,a,b);
                k.up.set(0, -1, 0),
                k.lookAt(new i(0,0,-1)),
                this.add(k);
                var l = {
                    format: vg,
                    magFilter: fg,
                    minFilter: fg
                };
                this.renderTarget = new g(c,c,l),
                this.updateCubeMap = function(a, b) {
                    null === this.parent && this.updateMatrixWorld();
                    var c = this.renderTarget
                      , g = c.texture.generateMipmaps;
                    c.texture.generateMipmaps = !1,
                    c.activeCubeFace = 0,
                    a.render(b, d, c),
                    c.activeCubeFace = 1,
                    a.render(b, e, c),
                    c.activeCubeFace = 2,
                    a.render(b, f, c),
                    c.activeCubeFace = 3,
                    a.render(b, h, c),
                    c.activeCubeFace = 4,
                    a.render(b, j, c),
                    c.texture.generateMipmaps = g,
                    c.activeCubeFace = 5,
                    a.render(b, k, c),
                    a.setRenderTarget(null)
                }
            }
            function Bd() {
                ia.call(this),
                this.type = "AudioListener",
                this.context = wh.getContext(),
                this.gain = this.context.createGain(),
                this.gain.connect(this.context.destination),
                this.filter = null
            }
            function Cd(a) {
                ia.call(this),
                this.type = "Audio",
                this.context = a.context,
                this.gain = this.context.createGain(),
                this.gain.connect(a.getInput()),
                this.autoplay = !1,
                this.buffer = null,
                this.loop = !1,
                this.startTime = 0,
                this.playbackRate = 1,
                this.isPlaying = !1,
                this.hasPlaybackControl = !0,
                this.sourceType = "empty",
                this.filters = []
            }
            function Dd(a) {
                Cd.call(this, a),
                this.panner = this.context.createPanner(),
                this.panner.connect(this.gain)
            }
            function Ed(a, b) {
                this.analyser = a.context.createAnalyser(),
                this.analyser.fftSize = void 0 !== b ? b : 2048,
                this.data = new Uint8Array(this.analyser.frequencyBinCount),
                a.getOutput().connect(this.analyser)
            }
            function Fd(a, b, c) {
                this.binding = a,
                this.valueSize = c;
                var d, e = Float64Array;
                switch (b) {
                case "quaternion":
                    d = this._slerp;
                    break;
                case "string":
                case "bool":
                    e = Array,
                    d = this._select;
                    break;
                default:
                    d = this._lerp
                }
                this.buffer = new e(4 * c),
                this._mixBufferRegion = d,
                this.cumulativeWeight = 0,
                this.useCount = 0,
                this.referenceCount = 0
            }
            function Gd(a, b, c) {
                this.path = b,
                this.parsedPath = c || Gd.parseTrackName(b),
                this.node = Gd.findNode(a, this.parsedPath.nodeName) || a,
                this.rootNode = a
            }
            function Hd(a) {
                this.uuid = Zg.generateUUID(),
                this._objects = Array.prototype.slice.call(arguments),
                this.nCachedObjects_ = 0;
                var b = {};
                this._indicesByUUID = b;
                for (var c = 0, d = arguments.length; c !== d; ++c)
                    b[arguments[c].uuid] = c;
                this._paths = [],
                this._parsedPaths = [],
                this._bindings = [],
                this._bindingsIndicesByPath = {};
                var e = this;
                this.stats = {
                    objects: {
                        get total() {
                            return e._objects.length
                        },
                        get inUse() {
                            return this.total - e.nCachedObjects_
                        }
                    },
                    get bindingsPerObject() {
                        return e._bindings.length
                    }
                }
            }
            function Id(a, b, c) {
                this._mixer = a,
                this._clip = b,
                this._localRoot = c || null;
                for (var d = b.tracks, e = d.length, f = new Array(e), g = {
                    endingStart: Mg,
                    endingEnd: Mg
                }, h = 0; h !== e; ++h) {
                    var i = d[h].createInterpolant(null);
                    f[h] = i,
                    i.settings = g
                }
                this._interpolantSettings = g,
                this._interpolants = f,
                this._propertyBindings = new Array(e),
                this._cacheIndex = null,
                this._byClipCacheIndex = null,
                this._timeScaleInterpolant = null,
                this._weightInterpolant = null,
                this.loop = Lg,
                this._loopCount = -1,
                this._startTime = null,
                this.time = 0,
                this.timeScale = 1,
                this._effectiveTimeScale = 1,
                this.weight = 1,
                this._effectiveWeight = 1,
                this.repetitions = 1 / 0,
                this.paused = !1,
                this.enabled = !0,
                this.clampWhenFinished = !1,
                this.zeroSlopeAtStart = !0,
                this.zeroSlopeAtEnd = !0
            }
            function Jd(a) {
                this._root = a,
                this._initMemoryManager(),
                this._accuIndex = 0,
                this.time = 0,
                this.timeScale = 1
            }
            function Kd(a) {
                "string" == typeof a && (a = arguments[1]),
                this.value = a
            }
            function Ld() {
                Ba.call(this),
                this.type = "InstancedBufferGeometry",
                this.maxInstancedCount = void 0
            }
            function Md(a, b, c, d) {
                this.uuid = Zg.generateUUID(),
                this.data = a,
                this.itemSize = b,
                this.offset = c,
                this.normalized = !0 === d
            }
            function Nd(a, b) {
                this.uuid = Zg.generateUUID(),
                this.array = a,
                this.stride = b,
                this.count = void 0 !== a ? a.length / b : 0,
                this.dynamic = !1,
                this.updateRange = {
                    offset: 0,
                    count: -1
                },
                this.onUploadCallback = function() {}
                ,
                this.version = 0
            }
            function Od(a, b, c) {
                Nd.call(this, a, b),
                this.meshPerAttribute = c || 1
            }
            function Pd(a, b, c) {
                na.call(this, a, b),
                this.meshPerAttribute = c || 1
            }
            function Qd(a, b, c, d) {
                this.ray = new fa(a,b),
                this.near = c || 0,
                this.far = d || 1 / 0,
                this.params = {
                    Mesh: {},
                    Line: {},
                    LOD: {},
                    Points: {
                        threshold: 1
                    },
                    Sprite: {}
                },
                Object.defineProperties(this.params, {
                    PointCloud: {
                        get: function() {
                            return this.Points
                        }
                    }
                })
            }
            function Rd(a, b) {
                return a.distance - b.distance
            }
            function Sd(a, b, c, d) {
                if (!1 !== a.visible && (a.raycast(b, c),
                !0 === d))
                    for (var e = a.children, f = 0, g = e.length; f < g; f++)
                        Sd(e[f], b, c, !0)
            }
            function Td(a) {
                this.autoStart = void 0 === a || a,
                this.startTime = 0,
                this.oldTime = 0,
                this.elapsedTime = 0,
                this.running = !1
            }
            function Ud(a, b, c) {
                return this.radius = void 0 !== a ? a : 1,
                this.phi = void 0 !== b ? b : 0,
                this.theta = void 0 !== c ? c : 0,
                this
            }
            function Vd(a, b, c) {
                return this.radius = void 0 !== a ? a : 1,
                this.theta = void 0 !== b ? b : 0,
                this.y = void 0 !== c ? c : 0,
                this
            }
            function Wd(a, b) {
                Ca.call(this, a, b),
                this.animationsMap = {},
                this.animationsList = [];
                var c = this.geometry.morphTargets.length
                  , d = c - 1
                  , e = c / 1;
                this.createAnimation("__default", 0, d, e),
                this.setAnimationWeight("__default", 1)
            }
            function Xd(a) {
                ia.call(this),
                this.material = a,
                this.render = function(a) {}
            }
            function Yd(a, b, c, d) {
                this.object = a,
                this.size = void 0 !== b ? b : 1;
                var e = void 0 !== c ? c : 16711680
                  , f = void 0 !== d ? d : 1
                  , g = 0
                  , h = this.object.geometry;
                h && h.isGeometry ? g = 3 * h.faces.length : h && h.isBufferGeometry && (g = h.attributes.normal.count);
                var i = new Ba
                  , j = new va(2 * g * 3,3);
                i.addAttribute("position", j),
                ub.call(this, i, new sb({
                    color: e,
                    linewidth: f
                })),
                this.matrixAutoUpdate = !1,
                this.update()
            }
            function Zd(a) {
                ia.call(this),
                this.light = a,
                this.light.updateMatrixWorld(),
                this.matrix = a.matrixWorld,
                this.matrixAutoUpdate = !1;
                for (var b = new Ba, c = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], d = 0, e = 1; d < 32; d++,
                e++) {
                    var f = d / 32 * Math.PI * 2
                      , g = e / 32 * Math.PI * 2;
                    c.push(Math.cos(f), Math.sin(f), 1, Math.cos(g), Math.sin(g), 1)
                }
                b.addAttribute("position", new va(c,3));
                var h = new sb({
                    fog: !1
                });
                this.cone = new ub(b,h),
                this.add(this.cone),
                this.update()
            }
            function $d(a) {
                this.bones = this.getBoneList(a);
                for (var b = new Ba, c = [], d = [], e = new T(0,0,1), f = new T(0,1,0), g = 0; g < this.bones.length; g++) {
                    var h = this.bones[g];
                    h.parent && h.parent.isBone && (c.push(0, 0, 0),
                    c.push(0, 0, 0),
                    d.push(e.r, e.g, e.b),
                    d.push(f.r, f.g, f.b))
                }
                b.addAttribute("position", new va(c,3)),
                b.addAttribute("color", new va(d,3));
                var i = new sb({
                    vertexColors: gf,
                    depthTest: !1,
                    depthWrite: !1,
                    transparent: !0
                });
                ub.call(this, b, i),
                this.root = a,
                this.matrix = a.matrixWorld,
                this.matrixAutoUpdate = !1,
                this.update()
            }
            function _d(a, b) {
                this.light = a,
                this.light.updateMatrixWorld();
                var c = new Yb(b,4,2)
                  , d = new ma({
                    wireframe: !0,
                    fog: !1
                });
                d.color.copy(this.light.color).multiplyScalar(this.light.intensity),
                Ca.call(this, c, d),
                this.matrix = this.light.matrixWorld,
                this.matrixAutoUpdate = !1
            }
            function ae(a) {
                ia.call(this),
                this.light = a,
                this.light.updateMatrixWorld();
                var b = new ma({
                    color: a.color,
                    fog: !1
                })
                  , c = new ma({
                    color: a.color,
                    fog: !1,
                    wireframe: !0
                })
                  , d = new Ba;
                d.addAttribute("position", new na(new Float32Array(18),3)),
                this.add(new Ca(d,b)),
                this.add(new Ca(d,c)),
                this.update()
            }
            function be(a, b) {
                ia.call(this),
                this.light = a,
                this.light.updateMatrixWorld(),
                this.matrix = a.matrixWorld,
                this.matrixAutoUpdate = !1;
                var c = new Kb(b);
                c.rotateY(.5 * Math.PI);
                var d = new ma({
                    vertexColors: gf,
                    wireframe: !0
                })
                  , e = c.getAttribute("position")
                  , f = new Float32Array(3 * e.count);
                c.addAttribute("color", new na(f,3)),
                this.add(new Ca(c,d)),
                this.update()
            }
            function ce(a, b, c, d) {
                a = a || 10,
                b = b || 10,
                c = new T(void 0 !== c ? c : 4473924),
                d = new T(void 0 !== d ? d : 8947848);
                for (var e = b / 2, f = a / b, g = a / 2, h = [], i = [], j = 0, k = 0, l = -g; j <= b; j++,
                l += f) {
                    h.push(-g, 0, l, g, 0, l),
                    h.push(l, 0, -g, l, 0, g);
                    var m = j === e ? c : d;
                    m.toArray(i, k),
                    k += 3,
                    m.toArray(i, k),
                    k += 3,
                    m.toArray(i, k),
                    k += 3,
                    m.toArray(i, k),
                    k += 3
                }
                var n = new Ba;
                n.addAttribute("position", new va(h,3)),
                n.addAttribute("color", new va(i,3));
                var o = new sb({
                    vertexColors: gf
                });
                ub.call(this, n, o)
            }
            function de(a, b, c, d, e, f) {
                a = a || 10,
                b = b || 16,
                c = c || 8,
                d = d || 64,
                e = new T(void 0 !== e ? e : 4473924),
                f = new T(void 0 !== f ? f : 8947848);
                var g, h, i, j, k, l, m, n = [], o = [];
                for (j = 0; j <= b; j++)
                    i = j / b * (2 * Math.PI),
                    g = Math.sin(i) * a,
                    h = Math.cos(i) * a,
                    n.push(0, 0, 0),
                    n.push(g, 0, h),
                    m = 1 & j ? e : f,
                    o.push(m.r, m.g, m.b),
                    o.push(m.r, m.g, m.b);
                for (j = 0; j <= c; j++)
                    for (m = 1 & j ? e : f,
                    l = a - a / c * j,
                    k = 0; k < d; k++)
                        i = k / d * (2 * Math.PI),
                        g = Math.sin(i) * l,
                        h = Math.cos(i) * l,
                        n.push(g, 0, h),
                        o.push(m.r, m.g, m.b),
                        i = (k + 1) / d * (2 * Math.PI),
                        g = Math.sin(i) * l,
                        h = Math.cos(i) * l,
                        n.push(g, 0, h),
                        o.push(m.r, m.g, m.b);
                var p = new Ba;
                p.addAttribute("position", new va(n,3)),
                p.addAttribute("color", new va(o,3));
                var q = new sb({
                    vertexColors: gf
                });
                ub.call(this, p, q)
            }
            function ee(a, b, c, d) {
                this.object = a,
                this.size = void 0 !== b ? b : 1;
                var e = void 0 !== c ? c : 16776960
                  , f = void 0 !== d ? d : 1
                  , g = 0
                  , h = this.object.geometry;
                h && h.isGeometry && (g = h.faces.length);
                var i = new Ba
                  , j = new va(2 * g * 3,3);
                i.addAttribute("position", j),
                ub.call(this, i, new sb({
                    color: e,
                    linewidth: f
                })),
                this.matrixAutoUpdate = !1,
                this.update()
            }
            function fe(a, b) {
                ia.call(this),
                this.light = a,
                this.light.updateMatrixWorld(),
                this.matrix = a.matrixWorld,
                this.matrixAutoUpdate = !1,
                void 0 === b && (b = 1);
                var c = new Ba;
                c.addAttribute("position", new va([-b, b, 0, b, b, 0, b, -b, 0, -b, -b, 0, -b, b, 0],3));
                var d = new sb({
                    fog: !1
                });
                this.add(new tb(c,d)),
                c = new Ba,
                c.addAttribute("position", new va([0, 0, 0, 0, 0, 1],3)),
                this.add(new tb(c,d)),
                this.update()
            }
            function ge(a) {
                function b(a, b, d) {
                    c(a, d),
                    c(b, d)
                }
                function c(a, b) {
                    f.push(0, 0, 0),
                    g.push(b.r, b.g, b.b),
                    void 0 === h[a] && (h[a] = []),
                    h[a].push(f.length / 3 - 1)
                }
                var d = new Ba
                  , e = new sb({
                    color: 16777215,
                    vertexColors: ff
                })
                  , f = []
                  , g = []
                  , h = {}
                  , i = new T(16755200)
                  , j = new T(16711680)
                  , k = new T(43775)
                  , l = new T(16777215)
                  , m = new T(3355443);
                b("n1", "n2", i),
                b("n2", "n4", i),
                b("n4", "n3", i),
                b("n3", "n1", i),
                b("f1", "f2", i),
                b("f2", "f4", i),
                b("f4", "f3", i),
                b("f3", "f1", i),
                b("n1", "f1", i),
                b("n2", "f2", i),
                b("n3", "f3", i),
                b("n4", "f4", i),
                b("p", "n1", j),
                b("p", "n2", j),
                b("p", "n3", j),
                b("p", "n4", j),
                b("u1", "u2", k),
                b("u2", "u3", k),
                b("u3", "u1", k),
                b("c", "t", l),
                b("p", "c", m),
                b("cn1", "cn2", m),
                b("cn3", "cn4", m),
                b("cf1", "cf2", m),
                b("cf3", "cf4", m),
                d.addAttribute("position", new va(f,3)),
                d.addAttribute("color", new va(g,3)),
                ub.call(this, d, e),
                this.camera = a,
                this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(),
                this.matrix = a.matrixWorld,
                this.matrixAutoUpdate = !1,
                this.pointMap = h,
                this.update()
            }
            function he(a, b) {
                void 0 === b && (b = 16776960);
                var c = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7])
                  , d = new Float32Array(24)
                  , e = new Ba;
                e.setIndex(new na(c,1)),
                e.addAttribute("position", new na(d,3)),
                ub.call(this, e, new sb({
                    color: b
                })),
                void 0 !== a && this.update(a)
            }
            function ie(a, b, c, d, e, f) {
                ia.call(this),
                void 0 === d && (d = 16776960),
                void 0 === c && (c = 1),
                void 0 === e && (e = .2 * c),
                void 0 === f && (f = .2 * e),
                void 0 === xh && (xh = new Ba,
                xh.addAttribute("position", new va([0, 0, 0, 0, 1, 0],3)),
                yh = new fc(0,.5,1,5,1),
                yh.translate(0, -.5, 0)),
                this.position.copy(b),
                this.line = new tb(xh,new sb({
                    color: d
                })),
                this.line.matrixAutoUpdate = !1,
                this.add(this.line),
                this.cone = new Ca(yh,new ma({
                    color: d
                })),
                this.cone.matrixAutoUpdate = !1,
                this.add(this.cone),
                this.setDirection(a),
                this.setLength(c, e, f)
            }
            function je(a) {
                a = a || 1;
                var b = [0, 0, 0, a, 0, 0, 0, 0, 0, 0, a, 0, 0, 0, 0, 0, 0, a]
                  , c = [1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1]
                  , d = new Ba;
                d.addAttribute("position", new va(b,3)),
                d.addAttribute("color", new va(c,3));
                var e = new sb({
                    vertexColors: gf
                });
                ub.call(this, d, e)
            }
            function ke() {
                function a(a, f, g, h) {
                    b = a,
                    c = g,
                    d = -3 * a + 3 * f - 2 * g - h,
                    e = 2 * a - 2 * f + g + h
                }
                var b = 0
                  , c = 0
                  , d = 0
                  , e = 0;
                return {
                    initCatmullRom: function(b, c, d, e, f) {
                        a(c, d, f * (d - b), f * (e - c))
                    },
                    initNonuniformCatmullRom: function(b, c, d, e, f, g, h) {
                        var i = (c - b) / f - (d - b) / (f + g) + (d - c) / g
                          , j = (d - c) / g - (e - c) / (g + h) + (e - d) / h;
                        i *= g,
                        j *= g,
                        a(c, d, i, j)
                    },
                    calc: function(a) {
                        var f = a * a;
                        return b + c * a + d * f + e * (f * a)
                    }
                }
            }
            function le(a) {
                this.points = a || [],
                this.closed = !1
            }
            function me(a, b, c, d) {
                this.v0 = a,
                this.v1 = b,
                this.v2 = c,
                this.v3 = d
            }
            function ne(a, b, c) {
                this.v0 = a,
                this.v1 = b,
                this.v2 = c
            }
            function oe(a, b) {
                this.v1 = a,
                this.v2 = b
            }
            function pe(a, b, c, d, e, f) {
                od.call(this, a, b, c, c, d, e, f)
            }
            function qe(a, b, c, d, e, f, g) {
                return new la(a,b,c,e,f,g)
            }
            function re(a) {
                return new mc(a)
            }
            function se(a, b) {
                return new wb(a,b)
            }
            function te(a) {
                return new nb(a)
            }
            function ue(a, b) {
                return new wb(a,b)
            }
            function ve(a) {
                return new vb(a)
            }
            function we(a) {
                return new vb(a)
            }
            function xe(a) {
                return new vb(a)
            }
            function ye(a, b, c) {
                return new i(a,b,c)
            }
            function ze(a, b) {
                return new na(a,b).setDynamic(!0)
            }
            function Ae(a, b) {
                return new oa(a,b)
            }
            function Be(a, b) {
                return new pa(a,b)
            }
            function Ce(a, b) {
                return new qa(a,b)
            }
            function De(a, b) {
                return new ra(a,b)
            }
            function Ee(a, b) {
                return new sa(a,b)
            }
            function Fe(a, b) {
                return new ta(a,b)
            }
            function Ge(a, b) {
                return new ua(a,b)
            }
            function He(a, b) {
                return new va(a,b)
            }
            function Ie(a, b) {
                return new wa(a,b)
            }
            function Je(a) {
                le.call(this, a),
                this.type = "catmullrom",
                this.closed = !0
            }
            function Ke(a) {
                le.call(this, a),
                this.type = "catmullrom"
            }
            function Le(a) {
                le.call(this, a),
                this.type = "catmullrom"
            }
            function Me(a, b) {
                return new he(a,b)
            }
            function Ne(a, b) {
                return new ub(new dc(a.geometry),new sb({
                    color: void 0 !== b ? b : 16777215
                }))
            }
            function Oe(a, b) {
                return new ub(new Cb(a.geometry),new sb({
                    color: void 0 !== b ? b : 16777215
                }))
            }
            function Pe(a) {
                return new vc(a)
            }
            function Qe(a) {
                return new xc(a)
            }
            function Re() {
                this.projectVector = function(a, b) {
                    a.project(b)
                }
                ,
                this.unprojectVector = function(a, b) {
                    a.unproject(b)
                }
                ,
                this.pickingRay = function() {}
            }
            function Se() {
                this.domElement = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"),
                this.clear = function() {}
                ,
                this.render = function() {}
                ,
                this.setClearColor = function() {}
                ,
                this.setSize = function() {}
            }
            void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)),
            void 0 === Math.sign && (Math.sign = function(a) {
                return a < 0 ? -1 : a > 0 ? 1 : +a
            }
            ),
            void 0 === Function.prototype.name && Object.defineProperty(Function.prototype, "name", {
                get: function() {
                    return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]
                }
            }),
            void 0 === Object.assign && function() {
                Object.assign = function(a) {
                    if (void 0 === a || null === a)
                        throw new TypeError("Cannot convert undefined or null to object");
                    for (var b = Object(a), c = 1; c < arguments.length; c++) {
                        var d = arguments[c];
                        if (void 0 !== d && null !== d)
                            for (var e in d)
                                Object.prototype.hasOwnProperty.call(d, e) && (b[e] = d[e])
                    }
                    return b
                }
            }(),
            b.prototype = {
                addEventListener: function(a, b) {
                    void 0 === this._listeners && (this._listeners = {});
                    var c = this._listeners;
                    void 0 === c[a] && (c[a] = []),
                    -1 === c[a].indexOf(b) && c[a].push(b)
                },
                hasEventListener: function(a, b) {
                    if (void 0 === this._listeners)
                        return !1;
                    var c = this._listeners;
                    return void 0 !== c[a] && -1 !== c[a].indexOf(b)
                },
                removeEventListener: function(a, b) {
                    if (void 0 !== this._listeners) {
                        var c = this._listeners
                          , d = c[a];
                        if (void 0 !== d) {
                            var e = d.indexOf(b);
                            -1 !== e && d.splice(e, 1)
                        }
                    }
                },
                dispatchEvent: function(a) {
                    if (void 0 !== this._listeners) {
                        var b = this._listeners
                          , c = b[a.type];
                        if (void 0 !== c) {
                            a.target = this;
                            var d = []
                              , e = 0
                              , f = c.length;
                            for (e = 0; e < f; e++)
                                d[e] = c[e];
                            for (e = 0; e < f; e++)
                                d[e].call(this, a)
                        }
                    }
                }
            };
            var Te = "84"
              , Ue = {
                LEFT: 0,
                MIDDLE: 1,
                RIGHT: 2
            }
              , Ve = 0
              , We = 1
              , Xe = 2
              , Ye = 0
              , Ze = 1
              , $e = 2
              , _e = 0
              , af = 1
              , bf = 2
              , cf = 1
              , df = 2
              , ef = 0
              , ff = 1
              , gf = 2
              , hf = 0
              , jf = 1
              , kf = 2
              , lf = 3
              , mf = 4
              , nf = 5
              , of = 100
              , pf = 101
              , qf = 102
              , rf = 103
              , sf = 104
              , tf = 200
              , uf = 201
              , vf = 202
              , wf = 203
              , xf = 204
              , yf = 205
              , zf = 206
              , Af = 207
              , Bf = 208
              , Cf = 209
              , Df = 210
              , Ef = 0
              , Ff = 1
              , Gf = 2
              , Hf = 3
              , If = 4
              , Jf = 5
              , Kf = 6
              , Lf = 7
              , Mf = 0
              , Nf = 1
              , Of = 2
              , Pf = 0
              , Qf = 1
              , Rf = 2
              , Sf = 3
              , Tf = 4
              , Uf = 301
              , Vf = 302
              , Wf = 303
              , Xf = 304
              , Yf = 305
              , Zf = 306
              , $f = 307
              , _f = 1e3
              , ag = 1001
              , bg = 1002
              , cg = 1003
              , dg = 1004
              , eg = 1005
              , fg = 1006
              , gg = 1007
              , hg = 1008
              , ig = 1009
              , jg = 1010
              , kg = 1011
              , lg = 1012
              , mg = 1013
              , ng = 1014
              , og = 1015
              , pg = 1016
              , qg = 1017
              , rg = 1018
              , sg = 1019
              , tg = 1020
              , ug = 1021
              , vg = 1022
              , wg = 1023
              , xg = 1024
              , yg = 1025
              , zg = wg
              , Ag = 1026
              , Bg = 1027
              , Cg = 2001
              , Dg = 2002
              , Eg = 2003
              , Fg = 2004
              , Gg = 2100
              , Hg = 2101
              , Ig = 2102
              , Jg = 2103
              , Kg = 2151
              , Lg = 2201
              , Mg = 2400
              , Ng = 0
              , Og = 1
              , Pg = 2
              , Qg = 3e3
              , Rg = 3001
              , Sg = 3007
              , Tg = 3002
              , Ug = 3004
              , Vg = 3005
              , Wg = 3006
              , Xg = 3200
              , Yg = 3201
              , Zg = {
                DEG2RAD: Math.PI / 180,
                RAD2DEG: 180 / Math.PI,
                generateUUID: function() {
                    var a, b = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""), c = new Array(36), d = 0;
                    return function() {
                        for (var e = 0; e < 36; e++)
                            8 === e || 13 === e || 18 === e || 23 === e ? c[e] = "-" : 14 === e ? c[e] = "4" : (d <= 2 && (d = 33554432 + 16777216 * Math.random() | 0),
                            a = 15 & d,
                            d >>= 4,
                            c[e] = b[19 === e ? 3 & a | 8 : a]);
                        return c.join("")
                    }
                }(),
                clamp: function(a, b, c) {
                    return Math.max(b, Math.min(c, a))
                },
                euclideanModulo: function(a, b) {
                    return (a % b + b) % b
                },
                mapLinear: function(a, b, c, d, e) {
                    return d + (a - b) * (e - d) / (c - b)
                },
                lerp: function(a, b, c) {
                    return (1 - c) * a + c * b
                },
                smoothstep: function(a, b, c) {
                    return a <= b ? 0 : a >= c ? 1 : (a = (a - b) / (c - b)) * a * (3 - 2 * a)
                },
                smootherstep: function(a, b, c) {
                    return a <= b ? 0 : a >= c ? 1 : (a = (a - b) / (c - b)) * a * a * (a * (6 * a - 15) + 10)
                },
                randInt: function(a, b) {
                    return a + Math.floor(Math.random() * (b - a + 1))
                },
                randFloat: function(a, b) {
                    return a + Math.random() * (b - a)
                },
                randFloatSpread: function(a) {
                    return a * (.5 - Math.random())
                },
                degToRad: function(a) {
                    return a * Zg.DEG2RAD
                },
                radToDeg: function(a) {
                    return a * Zg.RAD2DEG
                },
                isPowerOfTwo: function(a) {
                    return 0 == (a & a - 1) && 0 !== a
                },
                nearestPowerOfTwo: function(a) {
                    return Math.pow(2, Math.round(Math.log(a) / Math.LN2))
                },
                nextPowerOfTwo: function(a) {
                    return a--,
                    a |= a >> 1,
                    a |= a >> 2,
                    a |= a >> 4,
                    a |= a >> 8,
                    a |= a >> 16,
                    ++a
                }
            };
            c.prototype = {
                constructor: c,
                isVector2: !0,
                get width() {
                    return this.x
                },
                set width(a) {
                    this.x = a
                },
                get height() {
                    return this.y
                },
                set height(a) {
                    this.y = a
                },
                set: function(a, b) {
                    return this.x = a,
                    this.y = b,
                    this
                },
                setScalar: function(a) {
                    return this.x = a,
                    this.y = a,
                    this
                },
                setX: function(a) {
                    return this.x = a,
                    this
                },
                setY: function(a) {
                    return this.y = a,
                    this
                },
                setComponent: function(a, b) {
                    switch (a) {
                    case 0:
                        this.x = b;
                        break;
                    case 1:
                        this.y = b;
                        break;
                    default:
                        throw new Error("index is out of range: " + a)
                    }
                    return this
                },
                getComponent: function(a) {
                    switch (a) {
                    case 0:
                        return this.x;
                    case 1:
                        return this.y;
                    default:
                        throw new Error("index is out of range: " + a)
                    }
                },
                clone: function() {
                    return new this.constructor(this.x,this.y)
                },
                copy: function(a) {
                    return this.x = a.x,
                    this.y = a.y,
                    this
                },
                add: function(a, b) {
                    return void 0 !== b ? this.addVectors(a, b) : (this.x += a.x,
                    this.y += a.y,
                    this)
                },
                addScalar: function(a) {
                    return this.x += a,
                    this.y += a,
                    this
                },
                addVectors: function(a, b) {
                    return this.x = a.x + b.x,
                    this.y = a.y + b.y,
                    this
                },
                addScaledVector: function(a, b) {
                    return this.x += a.x * b,
                    this.y += a.y * b,
                    this
                },
                sub: function(a, b) {
                    return void 0 !== b ? this.subVectors(a, b) : (this.x -= a.x,
                    this.y -= a.y,
                    this)
                },
                subScalar: function(a) {
                    return this.x -= a,
                    this.y -= a,
                    this
                },
                subVectors: function(a, b) {
                    return this.x = a.x - b.x,
                    this.y = a.y - b.y,
                    this
                },
                multiply: function(a) {
                    return this.x *= a.x,
                    this.y *= a.y,
                    this
                },
                multiplyScalar: function(a) {
                    return isFinite(a) ? (this.x *= a,
                    this.y *= a) : (this.x = 0,
                    this.y = 0),
                    this
                },
                divide: function(a) {
                    return this.x /= a.x,
                    this.y /= a.y,
                    this
                },
                divideScalar: function(a) {
                    return this.multiplyScalar(1 / a)
                },
                min: function(a) {
                    return this.x = Math.min(this.x, a.x),
                    this.y = Math.min(this.y, a.y),
                    this
                },
                max: function(a) {
                    return this.x = Math.max(this.x, a.x),
                    this.y = Math.max(this.y, a.y),
                    this
                },
                clamp: function(a, b) {
                    return this.x = Math.max(a.x, Math.min(b.x, this.x)),
                    this.y = Math.max(a.y, Math.min(b.y, this.y)),
                    this
                },
                clampScalar: function() {
                    var a, b;
                    return function(d, e) {
                        return void 0 === a && (a = new c,
                        b = new c),
                        a.set(d, d),
                        b.set(e, e),
                        this.clamp(a, b)
                    }
                }(),
                clampLength: function(a, b) {
                    var c = this.length();
                    return this.multiplyScalar(Math.max(a, Math.min(b, c)) / c)
                },
                floor: function() {
                    return this.x = Math.floor(this.x),
                    this.y = Math.floor(this.y),
                    this
                },
                ceil: function() {
                    return this.x = Math.ceil(this.x),
                    this.y = Math.ceil(this.y),
                    this
                },
                round: function() {
                    return this.x = Math.round(this.x),
                    this.y = Math.round(this.y),
                    this
                },
                roundToZero: function() {
                    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
                    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
                    this
                },
                negate: function() {
                    return this.x = -this.x,
                    this.y = -this.y,
                    this
                },
                dot: function(a) {
                    return this.x * a.x + this.y * a.y
                },
                lengthSq: function() {
                    return this.x * this.x + this.y * this.y
                },
                length: function() {
                    return Math.sqrt(this.x * this.x + this.y * this.y)
                },
                lengthManhattan: function() {
                    return Math.abs(this.x) + Math.abs(this.y)
                },
                normalize: function() {
                    return this.divideScalar(this.length())
                },
                angle: function() {
                    var a = Math.atan2(this.y, this.x);
                    return a < 0 && (a += 2 * Math.PI),
                    a
                },
                distanceTo: function(a) {
                    return Math.sqrt(this.distanceToSquared(a))
                },
                distanceToSquared: function(a) {
                    var b = this.x - a.x
                      , c = this.y - a.y;
                    return b * b + c * c
                },
                distanceToManhattan: function(a) {
                    return Math.abs(this.x - a.x) + Math.abs(this.y - a.y)
                },
                setLength: function(a) {
                    return this.multiplyScalar(a / this.length())
                },
                lerp: function(a, b) {
                    return this.x += (a.x - this.x) * b,
                    this.y += (a.y - this.y) * b,
                    this
                },
                lerpVectors: function(a, b, c) {
                    return this.subVectors(b, a).multiplyScalar(c).add(a)
                },
                equals: function(a) {
                    return a.x === this.x && a.y === this.y
                },
                fromArray: function(a, b) {
                    return void 0 === b && (b = 0),
                    this.x = a[b],
                    this.y = a[b + 1],
                    this
                },
                toArray: function(a, b) {
                    return void 0 === a && (a = []),
                    void 0 === b && (b = 0),
                    a[b] = this.x,
                    a[b + 1] = this.y,
                    a
                },
                fromBufferAttribute: function(a, b, c) {
                    return this.x = a.getX(b),
                    this.y = a.getY(b),
                    this
                },
                rotateAround: function(a, b) {
                    var c = Math.cos(b)
                      , d = Math.sin(b)
                      , e = this.x - a.x
                      , f = this.y - a.y;
                    return this.x = e * c - f * d + a.x,
                    this.y = e * d + f * c + a.y,
                    this
                }
            };
            var $g = 0;
            d.DEFAULT_IMAGE = void 0,
            d.DEFAULT_MAPPING = 300,
            d.prototype = {
                constructor: d,
                isTexture: !0,
                set needsUpdate(a) {
                    !0 === a && this.version++
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(a) {
                    return this.image = a.image,
                    this.mipmaps = a.mipmaps.slice(0),
                    this.mapping = a.mapping,
                    this.wrapS = a.wrapS,
                    this.wrapT = a.wrapT,
                    this.magFilter = a.magFilter,
                    this.minFilter = a.minFilter,
                    this.anisotropy = a.anisotropy,
                    this.format = a.format,
                    this.type = a.type,
                    this.offset.copy(a.offset),
                    this.repeat.copy(a.repeat),
                    this.generateMipmaps = a.generateMipmaps,
                    this.premultiplyAlpha = a.premultiplyAlpha,
                    this.flipY = a.flipY,
                    this.unpackAlignment = a.unpackAlignment,
                    this.encoding = a.encoding,
                    this
                },
                toJSON: function(a) {
                    if (void 0 !== a.textures[this.uuid])
                        return a.textures[this.uuid];
                    var b = {
                        metadata: {
                            version: 4.4,
                            type: "Texture",
                            generator: "Texture.toJSON"
                        },
                        uuid: this.uuid,
                        name: this.name,
                        mapping: this.mapping,
                        repeat: [this.repeat.x, this.repeat.y],
                        offset: [this.offset.x, this.offset.y],
                        wrap: [this.wrapS, this.wrapT],
                        minFilter: this.minFilter,
                        magFilter: this.magFilter,
                        anisotropy: this.anisotropy,
                        flipY: this.flipY
                    };
                    if (void 0 !== this.image) {
                        var c = this.image;
                        void 0 === c.uuid && (c.uuid = Zg.generateUUID()),
                        void 0 === a.images[c.uuid] && (a.images[c.uuid] = {
                            uuid: c.uuid,
                            url: function(a) {
                                var b;
                                return void 0 !== a.toDataURL ? b = a : (b = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"),
                                b.width = a.width,
                                b.height = a.height,
                                b.getContext("2d").drawImage(a, 0, 0, a.width, a.height)),
                                b.width > 2048 || b.height > 2048 ? b.toDataURL("image/jpeg", .6) : b.toDataURL("image/png")
                            }(c)
                        }),
                        b.image = c.uuid
                    }
                    return a.textures[this.uuid] = b,
                    b
                },
                dispose: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                },
                transformUv: function(a) {
                    if (300 === this.mapping) {
                        if (a.multiply(this.repeat),
                        a.add(this.offset),
                        a.x < 0 || a.x > 1)
                            switch (this.wrapS) {
                            case _f:
                                a.x = a.x - Math.floor(a.x);
                                break;
                            case ag:
                                a.x = a.x < 0 ? 0 : 1;
                                break;
                            case bg:
                                1 === Math.abs(Math.floor(a.x) % 2) ? a.x = Math.ceil(a.x) - a.x : a.x = a.x - Math.floor(a.x)
                            }
                        if (a.y < 0 || a.y > 1)
                            switch (this.wrapT) {
                            case _f:
                                a.y = a.y - Math.floor(a.y);
                                break;
                            case ag:
                                a.y = a.y < 0 ? 0 : 1;
                                break;
                            case bg:
                                1 === Math.abs(Math.floor(a.y) % 2) ? a.y = Math.ceil(a.y) - a.y : a.y = a.y - Math.floor(a.y)
                            }
                        this.flipY && (a.y = 1 - a.y)
                    }
                }
            },
            Object.assign(d.prototype, b.prototype),
            e.prototype = {
                constructor: e,
                isVector4: !0,
                set: function(a, b, c, d) {
                    return this.x = a,
                    this.y = b,
                    this.z = c,
                    this.w = d,
                    this
                },
                setScalar: function(a) {
                    return this.x = a,
                    this.y = a,
                    this.z = a,
                    this.w = a,
                    this
                },
                setX: function(a) {
                    return this.x = a,
                    this
                },
                setY: function(a) {
                    return this.y = a,
                    this
                },
                setZ: function(a) {
                    return this.z = a,
                    this
                },
                setW: function(a) {
                    return this.w = a,
                    this
                },
                setComponent: function(a, b) {
                    switch (a) {
                    case 0:
                        this.x = b;
                        break;
                    case 1:
                        this.y = b;
                        break;
                    case 2:
                        this.z = b;
                        break;
                    case 3:
                        this.w = b;
                        break;
                    default:
                        throw new Error("index is out of range: " + a)
                    }
                    return this
                },
                getComponent: function(a) {
                    switch (a) {
                    case 0:
                        return this.x;
                    case 1:
                        return this.y;
                    case 2:
                        return this.z;
                    case 3:
                        return this.w;
                    default:
                        throw new Error("index is out of range: " + a)
                    }
                },
                clone: function() {
                    return new this.constructor(this.x,this.y,this.z,this.w)
                },
                copy: function(a) {
                    return this.x = a.x,
                    this.y = a.y,
                    this.z = a.z,
                    this.w = void 0 !== a.w ? a.w : 1,
                    this
                },
                add: function(a, b) {
                    return void 0 !== b ? this.addVectors(a, b) : (this.x += a.x,
                    this.y += a.y,
                    this.z += a.z,
                    this.w += a.w,
                    this)
                },
                addScalar: function(a) {
                    return this.x += a,
                    this.y += a,
                    this.z += a,
                    this.w += a,
                    this
                },
                addVectors: function(a, b) {
                    return this.x = a.x + b.x,
                    this.y = a.y + b.y,
                    this.z = a.z + b.z,
                    this.w = a.w + b.w,
                    this
                },
                addScaledVector: function(a, b) {
                    return this.x += a.x * b,
                    this.y += a.y * b,
                    this.z += a.z * b,
                    this.w += a.w * b,
                    this
                },
                sub: function(a, b) {
                    return void 0 !== b ? this.subVectors(a, b) : (this.x -= a.x,
                    this.y -= a.y,
                    this.z -= a.z,
                    this.w -= a.w,
                    this)
                },
                subScalar: function(a) {
                    return this.x -= a,
                    this.y -= a,
                    this.z -= a,
                    this.w -= a,
                    this
                },
                subVectors: function(a, b) {
                    return this.x = a.x - b.x,
                    this.y = a.y - b.y,
                    this.z = a.z - b.z,
                    this.w = a.w - b.w,
                    this
                },
                multiplyScalar: function(a) {
                    return isFinite(a) ? (this.x *= a,
                    this.y *= a,
                    this.z *= a,
                    this.w *= a) : (this.x = 0,
                    this.y = 0,
                    this.z = 0,
                    this.w = 0),
                    this
                },
                applyMatrix4: function(a) {
                    var b = this.x
                      , c = this.y
                      , d = this.z
                      , e = this.w
                      , f = a.elements;
                    return this.x = f[0] * b + f[4] * c + f[8] * d + f[12] * e,
                    this.y = f[1] * b + f[5] * c + f[9] * d + f[13] * e,
                    this.z = f[2] * b + f[6] * c + f[10] * d + f[14] * e,
                    this.w = f[3] * b + f[7] * c + f[11] * d + f[15] * e,
                    this
                },
                divideScalar: function(a) {
                    return this.multiplyScalar(1 / a)
                },
                setAxisAngleFromQuaternion: function(a) {
                    this.w = 2 * Math.acos(a.w);
                    var b = Math.sqrt(1 - a.w * a.w);
                    return b < 1e-4 ? (this.x = 1,
                    this.y = 0,
                    this.z = 0) : (this.x = a.x / b,
                    this.y = a.y / b,
                    this.z = a.z / b),
                    this
                },
                setAxisAngleFromRotationMatrix: function(a) {
                    var b, c, d, e, f = a.elements, g = f[0], h = f[4], i = f[8], j = f[1], k = f[5], l = f[9], m = f[2], n = f[6], o = f[10];
                    if (Math.abs(h - j) < .01 && Math.abs(i - m) < .01 && Math.abs(l - n) < .01) {
                        if (Math.abs(h + j) < .1 && Math.abs(i + m) < .1 && Math.abs(l + n) < .1 && Math.abs(g + k + o - 3) < .1)
                            return this.set(1, 0, 0, 0),
                            this;
                        b = Math.PI;
                        var p = (g + 1) / 2
                          , q = (k + 1) / 2
                          , r = (o + 1) / 2
                          , s = (h + j) / 4
                          , t = (i + m) / 4
                          , u = (l + n) / 4;
                        return p > q && p > r ? p < .01 ? (c = 0,
                        d = .707106781,
                        e = .707106781) : (c = Math.sqrt(p),
                        d = s / c,
                        e = t / c) : q > r ? q < .01 ? (c = .707106781,
                        d = 0,
                        e = .707106781) : (d = Math.sqrt(q),
                        c = s / d,
                        e = u / d) : r < .01 ? (c = .707106781,
                        d = .707106781,
                        e = 0) : (e = Math.sqrt(r),
                        c = t / e,
                        d = u / e),
                        this.set(c, d, e, b),
                        this
                    }
                    var v = Math.sqrt((n - l) * (n - l) + (i - m) * (i - m) + (j - h) * (j - h));
                    return Math.abs(v) < .001 && (v = 1),
                    this.x = (n - l) / v,
                    this.y = (i - m) / v,
                    this.z = (j - h) / v,
                    this.w = Math.acos((g + k + o - 1) / 2),
                    this
                },
                min: function(a) {
                    return this.x = Math.min(this.x, a.x),
                    this.y = Math.min(this.y, a.y),
                    this.z = Math.min(this.z, a.z),
                    this.w = Math.min(this.w, a.w),
                    this
                },
                max: function(a) {
                    return this.x = Math.max(this.x, a.x),
                    this.y = Math.max(this.y, a.y),
                    this.z = Math.max(this.z, a.z),
                    this.w = Math.max(this.w, a.w),
                    this
                },
                clamp: function(a, b) {
                    return this.x = Math.max(a.x, Math.min(b.x, this.x)),
                    this.y = Math.max(a.y, Math.min(b.y, this.y)),
                    this.z = Math.max(a.z, Math.min(b.z, this.z)),
                    this.w = Math.max(a.w, Math.min(b.w, this.w)),
                    this
                },
                clampScalar: function() {
                    var a, b;
                    return function(c, d) {
                        return void 0 === a && (a = new e,
                        b = new e),
                        a.set(c, c, c, c),
                        b.set(d, d, d, d),
                        this.clamp(a, b)
                    }
                }(),
                floor: function() {
                    return this.x = Math.floor(this.x),
                    this.y = Math.floor(this.y),
                    this.z = Math.floor(this.z),
                    this.w = Math.floor(this.w),
                    this
                },
                ceil: function() {
                    return this.x = Math.ceil(this.x),
                    this.y = Math.ceil(this.y),
                    this.z = Math.ceil(this.z),
                    this.w = Math.ceil(this.w),
                    this
                },
                round: function() {
                    return this.x = Math.round(this.x),
                    this.y = Math.round(this.y),
                    this.z = Math.round(this.z),
                    this.w = Math.round(this.w),
                    this
                },
                roundToZero: function() {
                    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
                    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
                    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
                    this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w),
                    this
                },
                negate: function() {
                    return this.x = -this.x,
                    this.y = -this.y,
                    this.z = -this.z,
                    this.w = -this.w,
                    this
                },
                dot: function(a) {
                    return this.x * a.x + this.y * a.y + this.z * a.z + this.w * a.w
                },
                lengthSq: function() {
                    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
                },
                length: function() {
                    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
                },
                lengthManhattan: function() {
                    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
                },
                normalize: function() {
                    return this.divideScalar(this.length())
                },
                setLength: function(a) {
                    return this.multiplyScalar(a / this.length())
                },
                lerp: function(a, b) {
                    return this.x += (a.x - this.x) * b,
                    this.y += (a.y - this.y) * b,
                    this.z += (a.z - this.z) * b,
                    this.w += (a.w - this.w) * b,
                    this
                },
                lerpVectors: function(a, b, c) {
                    return this.subVectors(b, a).multiplyScalar(c).add(a)
                },
                equals: function(a) {
                    return a.x === this.x && a.y === this.y && a.z === this.z && a.w === this.w
                },
                fromArray: function(a, b) {
                    return void 0 === b && (b = 0),
                    this.x = a[b],
                    this.y = a[b + 1],
                    this.z = a[b + 2],
                    this.w = a[b + 3],
                    this
                },
                toArray: function(a, b) {
                    return void 0 === a && (a = []),
                    void 0 === b && (b = 0),
                    a[b] = this.x,
                    a[b + 1] = this.y,
                    a[b + 2] = this.z,
                    a[b + 3] = this.w,
                    a
                },
                fromBufferAttribute: function(a, b, c) {
                    return this.x = a.getX(b),
                    this.y = a.getY(b),
                    this.z = a.getZ(b),
                    this.w = a.getW(b),
                    this
                }
            },
            f.prototype = {
                constructor: f,
                isWebGLRenderTarget: !0,
                setSize: function(a, b) {
                    this.width === a && this.height === b || (this.width = a,
                    this.height = b,
                    this.dispose()),
                    this.viewport.set(0, 0, a, b),
                    this.scissor.set(0, 0, a, b)
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(a) {
                    return this.width = a.width,
                    this.height = a.height,
                    this.viewport.copy(a.viewport),
                    this.texture = a.texture.clone(),
                    this.depthBuffer = a.depthBuffer,
                    this.stencilBuffer = a.stencilBuffer,
                    this.depthTexture = a.depthTexture,
                    this
                },
                dispose: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            },
            Object.assign(f.prototype, b.prototype),
            g.prototype = Object.create(f.prototype),
            g.prototype.constructor = g,
            g.prototype.isWebGLRenderTargetCube = !0,
            h.prototype = {
                constructor: h,
                get x() {
                    return this._x
                },
                set x(a) {
                    this._x = a,
                    this.onChangeCallback()
                },
                get y() {
                    return this._y
                },
                set y(a) {
                    this._y = a,
                    this.onChangeCallback()
                },
                get z() {
                    return this._z
                },
                set z(a) {
                    this._z = a,
                    this.onChangeCallback()
                },
                get w() {
                    return this._w
                },
                set w(a) {
                    this._w = a,
                    this.onChangeCallback()
                },
                set: function(a, b, c, d) {
                    return this._x = a,
                    this._y = b,
                    this._z = c,
                    this._w = d,
                    this.onChangeCallback(),
                    this
                },
                clone: function() {
                    return new this.constructor(this._x,this._y,this._z,this._w)
                },
                copy: function(a) {
                    return this._x = a.x,
                    this._y = a.y,
                    this._z = a.z,
                    this._w = a.w,
                    this.onChangeCallback(),
                    this
                },
                setFromEuler: function(a, b) {
                    if (!1 === (a && a.isEuler))
                        throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
                    var c = Math.cos(a._x / 2)
                      , d = Math.cos(a._y / 2)
                      , e = Math.cos(a._z / 2)
                      , f = Math.sin(a._x / 2)
                      , g = Math.sin(a._y / 2)
                      , h = Math.sin(a._z / 2)
                      , i = a.order;
                    return "XYZ" === i ? (this._x = f * d * e + c * g * h,
                    this._y = c * g * e - f * d * h,
                    this._z = c * d * h + f * g * e,
                    this._w = c * d * e - f * g * h) : "YXZ" === i ? (this._x = f * d * e + c * g * h,
                    this._y = c * g * e - f * d * h,
                    this._z = c * d * h - f * g * e,
                    this._w = c * d * e + f * g * h) : "ZXY" === i ? (this._x = f * d * e - c * g * h,
                    this._y = c * g * e + f * d * h,
                    this._z = c * d * h + f * g * e,
                    this._w = c * d * e - f * g * h) : "ZYX" === i ? (this._x = f * d * e - c * g * h,
                    this._y = c * g * e + f * d * h,
                    this._z = c * d * h - f * g * e,
                    this._w = c * d * e + f * g * h) : "YZX" === i ? (this._x = f * d * e + c * g * h,
                    this._y = c * g * e + f * d * h,
                    this._z = c * d * h - f * g * e,
                    this._w = c * d * e - f * g * h) : "XZY" === i && (this._x = f * d * e - c * g * h,
                    this._y = c * g * e - f * d * h,
                    this._z = c * d * h + f * g * e,
                    this._w = c * d * e + f * g * h),
                    !1 !== b && this.onChangeCallback(),
                    this
                },
                setFromAxisAngle: function(a, b) {
                    var c = b / 2
                      , d = Math.sin(c);
                    return this._x = a.x * d,
                    this._y = a.y * d,
                    this._z = a.z * d,
                    this._w = Math.cos(c),
                    this.onChangeCallback(),
                    this
                },
                setFromRotationMatrix: function(a) {
                    var b, c = a.elements, d = c[0], e = c[4], f = c[8], g = c[1], h = c[5], i = c[9], j = c[2], k = c[6], l = c[10], m = d + h + l;
                    return m > 0 ? (b = .5 / Math.sqrt(m + 1),
                    this._w = .25 / b,
                    this._x = (k - i) * b,
                    this._y = (f - j) * b,
                    this._z = (g - e) * b) : d > h && d > l ? (b = 2 * Math.sqrt(1 + d - h - l),
                    this._w = (k - i) / b,
                    this._x = .25 * b,
                    this._y = (e + g) / b,
                    this._z = (f + j) / b) : h > l ? (b = 2 * Math.sqrt(1 + h - d - l),
                    this._w = (f - j) / b,
                    this._x = (e + g) / b,
                    this._y = .25 * b,
                    this._z = (i + k) / b) : (b = 2 * Math.sqrt(1 + l - d - h),
                    this._w = (g - e) / b,
                    this._x = (f + j) / b,
                    this._y = (i + k) / b,
                    this._z = .25 * b),
                    this.onChangeCallback(),
                    this
                },
                setFromUnitVectors: function() {
                    var a, b;
                    return function(c, d) {
                        return void 0 === a && (a = new i),
                        b = c.dot(d) + 1,
                        b < 1e-6 ? (b = 0,
                        Math.abs(c.x) > Math.abs(c.z) ? a.set(-c.y, c.x, 0) : a.set(0, -c.z, c.y)) : a.crossVectors(c, d),
                        this._x = a.x,
                        this._y = a.y,
                        this._z = a.z,
                        this._w = b,
                        this.normalize()
                    }
                }(),
                inverse: function() {
                    return this.conjugate().normalize()
                },
                conjugate: function() {
                    return this._x *= -1,
                    this._y *= -1,
                    this._z *= -1,
                    this.onChangeCallback(),
                    this
                },
                dot: function(a) {
                    return this._x * a._x + this._y * a._y + this._z * a._z + this._w * a._w
                },
                lengthSq: function() {
                    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
                },
                length: function() {
                    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
                },
                normalize: function() {
                    var a = this.length();
                    return 0 === a ? (this._x = 0,
                    this._y = 0,
                    this._z = 0,
                    this._w = 1) : (a = 1 / a,
                    this._x = this._x * a,
                    this._y = this._y * a,
                    this._z = this._z * a,
                    this._w = this._w * a),
                    this.onChangeCallback(),
                    this
                },
                multiply: function(a, b) {
                    return void 0 !== b ? this.multiplyQuaternions(a, b) : this.multiplyQuaternions(this, a)
                },
                premultiply: function(a) {
                    return this.multiplyQuaternions(a, this)
                },
                multiplyQuaternions: function(a, b) {
                    var c = a._x
                      , d = a._y
                      , e = a._z
                      , f = a._w
                      , g = b._x
                      , h = b._y
                      , i = b._z
                      , j = b._w;
                    return this._x = c * j + f * g + d * i - e * h,
                    this._y = d * j + f * h + e * g - c * i,
                    this._z = e * j + f * i + c * h - d * g,
                    this._w = f * j - c * g - d * h - e * i,
                    this.onChangeCallback(),
                    this
                },
                slerp: function(a, b) {
                    if (0 === b)
                        return this;
                    if (1 === b)
                        return this.copy(a);
                    var c = this._x
                      , d = this._y
                      , e = this._z
                      , f = this._w
                      , g = f * a._w + c * a._x + d * a._y + e * a._z;
                    if (g < 0 ? (this._w = -a._w,
                    this._x = -a._x,
                    this._y = -a._y,
                    this._z = -a._z,
                    g = -g) : this.copy(a),
                    g >= 1)
                        return this._w = f,
                        this._x = c,
                        this._y = d,
                        this._z = e,
                        this;
                    var h = Math.sqrt(1 - g * g);
                    if (Math.abs(h) < .001)
                        return this._w = .5 * (f + this._w),
                        this._x = .5 * (c + this._x),
                        this._y = .5 * (d + this._y),
                        this._z = .5 * (e + this._z),
                        this;
                    var i = Math.atan2(h, g)
                      , j = Math.sin((1 - b) * i) / h
                      , k = Math.sin(b * i) / h;
                    return this._w = f * j + this._w * k,
                    this._x = c * j + this._x * k,
                    this._y = d * j + this._y * k,
                    this._z = e * j + this._z * k,
                    this.onChangeCallback(),
                    this
                },
                equals: function(a) {
                    return a._x === this._x && a._y === this._y && a._z === this._z && a._w === this._w
                },
                fromArray: function(a, b) {
                    return void 0 === b && (b = 0),
                    this._x = a[b],
                    this._y = a[b + 1],
                    this._z = a[b + 2],
                    this._w = a[b + 3],
                    this.onChangeCallback(),
                    this
                },
                toArray: function(a, b) {
                    return void 0 === a && (a = []),
                    void 0 === b && (b = 0),
                    a[b] = this._x,
                    a[b + 1] = this._y,
                    a[b + 2] = this._z,
                    a[b + 3] = this._w,
                    a
                },
                onChange: function(a) {
                    return this.onChangeCallback = a,
                    this
                },
                onChangeCallback: function() {}
            },
            Object.assign(h, {
                slerp: function(a, b, c, d) {
                    return c.copy(a).slerp(b, d)
                },
                slerpFlat: function(a, b, c, d, e, f, g) {
                    var h = c[d + 0]
                      , i = c[d + 1]
                      , j = c[d + 2]
                      , k = c[d + 3]
                      , l = e[f + 0]
                      , m = e[f + 1]
                      , n = e[f + 2]
                      , o = e[f + 3];
                    if (k !== o || h !== l || i !== m || j !== n) {
                        var p = 1 - g
                          , q = h * l + i * m + j * n + k * o
                          , r = q >= 0 ? 1 : -1
                          , s = 1 - q * q;
                        if (s > Number.EPSILON) {
                            var t = Math.sqrt(s)
                              , u = Math.atan2(t, q * r);
                            p = Math.sin(p * u) / t,
                            g = Math.sin(g * u) / t
                        }
                        var v = g * r;
                        if (h = h * p + l * v,
                        i = i * p + m * v,
                        j = j * p + n * v,
                        k = k * p + o * v,
                        p === 1 - g) {
                            var w = 1 / Math.sqrt(h * h + i * i + j * j + k * k);
                            h *= w,
                            i *= w,
                            j *= w,
                            k *= w
                        }
                    }
                    a[b] = h,
                    a[b + 1] = i,
                    a[b + 2] = j,
                    a[b + 3] = k
                }
            }),
            i.prototype = {
                constructor: i,
                isVector3: !0,
                set: function(a, b, c) {
                    return this.x = a,
                    this.y = b,
                    this.z = c,
                    this
                },
                setScalar: function(a) {
                    return this.x = a,
                    this.y = a,
                    this.z = a,
                    this
                },
                setX: function(a) {
                    return this.x = a,
                    this
                },
                setY: function(a) {
                    return this.y = a,
                    this
                },
                setZ: function(a) {
                    return this.z = a,
                    this
                },
                setComponent: function(a, b) {
                    switch (a) {
                    case 0:
                        this.x = b;
                        break;
                    case 1:
                        this.y = b;
                        break;
                    case 2:
                        this.z = b;
                        break;
                    default:
                        throw new Error("index is out of range: " + a)
                    }
                    return this
                },
                getComponent: function(a) {
                    switch (a) {
                    case 0:
                        return this.x;
                    case 1:
                        return this.y;
                    case 2:
                        return this.z;
                    default:
                        throw new Error("index is out of range: " + a)
                    }
                },
                clone: function() {
                    return new this.constructor(this.x,this.y,this.z)
                },
                copy: function(a) {
                    return this.x = a.x,
                    this.y = a.y,
                    this.z = a.z,
                    this
                },
                add: function(a, b) {
                    return void 0 !== b ? this.addVectors(a, b) : (this.x += a.x,
                    this.y += a.y,
                    this.z += a.z,
                    this)
                },
                addScalar: function(a) {
                    return this.x += a,
                    this.y += a,
                    this.z += a,
                    this
                },
                addVectors: function(a, b) {
                    return this.x = a.x + b.x,
                    this.y = a.y + b.y,
                    this.z = a.z + b.z,
                    this
                },
                addScaledVector: function(a, b) {
                    return this.x += a.x * b,
                    this.y += a.y * b,
                    this.z += a.z * b,
                    this
                },
                sub: function(a, b) {
                    return void 0 !== b ? this.subVectors(a, b) : (this.x -= a.x,
                    this.y -= a.y,
                    this.z -= a.z,
                    this)
                },
                subScalar: function(a) {
                    return this.x -= a,
                    this.y -= a,
                    this.z -= a,
                    this
                },
                subVectors: function(a, b) {
                    return this.x = a.x - b.x,
                    this.y = a.y - b.y,
                    this.z = a.z - b.z,
                    this
                },
                multiply: function(a, b) {
                    return void 0 !== b ? this.multiplyVectors(a, b) : (this.x *= a.x,
                    this.y *= a.y,
                    this.z *= a.z,
                    this)
                },
                multiplyScalar: function(a) {
                    return isFinite(a) ? (this.x *= a,
                    this.y *= a,
                    this.z *= a) : (this.x = 0,
                    this.y = 0,
                    this.z = 0),
                    this
                },
                multiplyVectors: function(a, b) {
                    return this.x = a.x * b.x,
                    this.y = a.y * b.y,
                    this.z = a.z * b.z,
                    this
                },
                applyEuler: function() {
                    var a;
                    return function(b) {
                        return b && b.isEuler,
                        void 0 === a && (a = new h),
                        this.applyQuaternion(a.setFromEuler(b))
                    }
                }(),
                applyAxisAngle: function() {
                    var a;
                    return function(b, c) {
                        return void 0 === a && (a = new h),
                        this.applyQuaternion(a.setFromAxisAngle(b, c))
                    }
                }(),
                applyMatrix3: function(a) {
                    var b = this.x
                      , c = this.y
                      , d = this.z
                      , e = a.elements;
                    return this.x = e[0] * b + e[3] * c + e[6] * d,
                    this.y = e[1] * b + e[4] * c + e[7] * d,
                    this.z = e[2] * b + e[5] * c + e[8] * d,
                    this
                },
                applyMatrix4: function(a) {
                    var b = this.x
                      , c = this.y
                      , d = this.z
                      , e = a.elements;
                    this.x = e[0] * b + e[4] * c + e[8] * d + e[12],
                    this.y = e[1] * b + e[5] * c + e[9] * d + e[13],
                    this.z = e[2] * b + e[6] * c + e[10] * d + e[14];
                    var f = e[3] * b + e[7] * c + e[11] * d + e[15];
                    return this.divideScalar(f)
                },
                applyQuaternion: function(a) {
                    var b = this.x
                      , c = this.y
                      , d = this.z
                      , e = a.x
                      , f = a.y
                      , g = a.z
                      , h = a.w
                      , i = h * b + f * d - g * c
                      , j = h * c + g * b - e * d
                      , k = h * d + e * c - f * b
                      , l = -e * b - f * c - g * d;
                    return this.x = i * h + l * -e + j * -g - k * -f,
                    this.y = j * h + l * -f + k * -e - i * -g,
                    this.z = k * h + l * -g + i * -f - j * -e,
                    this
                },
                project: function() {
                    var a;
                    return function(b) {
                        return void 0 === a && (a = new j),
                        a.multiplyMatrices(b.projectionMatrix, a.getInverse(b.matrixWorld)),
                        this.applyMatrix4(a)
                    }
                }(),
                unproject: function() {
                    var a;
                    return function(b) {
                        return void 0 === a && (a = new j),
                        a.multiplyMatrices(b.matrixWorld, a.getInverse(b.projectionMatrix)),
                        this.applyMatrix4(a)
                    }
                }(),
                transformDirection: function(a) {
                    var b = this.x
                      , c = this.y
                      , d = this.z
                      , e = a.elements;
                    return this.x = e[0] * b + e[4] * c + e[8] * d,
                    this.y = e[1] * b + e[5] * c + e[9] * d,
                    this.z = e[2] * b + e[6] * c + e[10] * d,
                    this.normalize()
                },
                divide: function(a) {
                    return this.x /= a.x,
                    this.y /= a.y,
                    this.z /= a.z,
                    this
                },
                divideScalar: function(a) {
                    return this.multiplyScalar(1 / a)
                },
                min: function(a) {
                    return this.x = Math.min(this.x, a.x),
                    this.y = Math.min(this.y, a.y),
                    this.z = Math.min(this.z, a.z),
                    this
                },
                max: function(a) {
                    return this.x = Math.max(this.x, a.x),
                    this.y = Math.max(this.y, a.y),
                    this.z = Math.max(this.z, a.z),
                    this
                },
                clamp: function(a, b) {
                    return this.x = Math.max(a.x, Math.min(b.x, this.x)),
                    this.y = Math.max(a.y, Math.min(b.y, this.y)),
                    this.z = Math.max(a.z, Math.min(b.z, this.z)),
                    this
                },
                clampScalar: function() {
                    var a, b;
                    return function(c, d) {
                        return void 0 === a && (a = new i,
                        b = new i),
                        a.set(c, c, c),
                        b.set(d, d, d),
                        this.clamp(a, b)
                    }
                }(),
                clampLength: function(a, b) {
                    var c = this.length();
                    return this.multiplyScalar(Math.max(a, Math.min(b, c)) / c)
                },
                floor: function() {
                    return this.x = Math.floor(this.x),
                    this.y = Math.floor(this.y),
                    this.z = Math.floor(this.z),
                    this
                },
                ceil: function() {
                    return this.x = Math.ceil(this.x),
                    this.y = Math.ceil(this.y),
                    this.z = Math.ceil(this.z),
                    this
                },
                round: function() {
                    return this.x = Math.round(this.x),
                    this.y = Math.round(this.y),
                    this.z = Math.round(this.z),
                    this
                },
                roundToZero: function() {
                    return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x),
                    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y),
                    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z),
                    this
                },
                negate: function() {
                    return this.x = -this.x,
                    this.y = -this.y,
                    this.z = -this.z,
                    this
                },
                dot: function(a) {
                    return this.x * a.x + this.y * a.y + this.z * a.z
                },
                lengthSq: function() {
                    return this.x * this.x + this.y * this.y + this.z * this.z
                },
                length: function() {
                    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
                },
                lengthManhattan: function() {
                    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
                },
                normalize: function() {
                    return this.divideScalar(this.length())
                },
                setLength: function(a) {
                    return this.multiplyScalar(a / this.length())
                },
                lerp: function(a, b) {
                    return this.x += (a.x - this.x) * b,
                    this.y += (a.y - this.y) * b,
                    this.z += (a.z - this.z) * b,
                    this
                },
                lerpVectors: function(a, b, c) {
                    return this.subVectors(b, a).multiplyScalar(c).add(a)
                },
                cross: function(a, b) {
                    if (void 0 !== b)
                        return this.crossVectors(a, b);
                    var c = this.x
                      , d = this.y
                      , e = this.z;
                    return this.x = d * a.z - e * a.y,
                    this.y = e * a.x - c * a.z,
                    this.z = c * a.y - d * a.x,
                    this
                },
                crossVectors: function(a, b) {
                    var c = a.x
                      , d = a.y
                      , e = a.z
                      , f = b.x
                      , g = b.y
                      , h = b.z;
                    return this.x = d * h - e * g,
                    this.y = e * f - c * h,
                    this.z = c * g - d * f,
                    this
                },
                projectOnVector: function(a) {
                    var b = a.dot(this) / a.lengthSq();
                    return this.copy(a).multiplyScalar(b)
                },
                projectOnPlane: function() {
                    var a;
                    return function(b) {
                        return void 0 === a && (a = new i),
                        a.copy(this).projectOnVector(b),
                        this.sub(a)
                    }
                }(),
                reflect: function() {
                    var a;
                    return function(b) {
                        return void 0 === a && (a = new i),
                        this.sub(a.copy(b).multiplyScalar(2 * this.dot(b)))
                    }
                }(),
                angleTo: function(a) {
                    var b = this.dot(a) / Math.sqrt(this.lengthSq() * a.lengthSq());
                    return Math.acos(Zg.clamp(b, -1, 1))
                },
                distanceTo: function(a) {
                    return Math.sqrt(this.distanceToSquared(a))
                },
                distanceToSquared: function(a) {
                    var b = this.x - a.x
                      , c = this.y - a.y
                      , d = this.z - a.z;
                    return b * b + c * c + d * d
                },
                distanceToManhattan: function(a) {
                    return Math.abs(this.x - a.x) + Math.abs(this.y - a.y) + Math.abs(this.z - a.z)
                },
                setFromSpherical: function(a) {
                    var b = Math.sin(a.phi) * a.radius;
                    return this.x = b * Math.sin(a.theta),
                    this.y = Math.cos(a.phi) * a.radius,
                    this.z = b * Math.cos(a.theta),
                    this
                },
                setFromCylindrical: function(a) {
                    return this.x = a.radius * Math.sin(a.theta),
                    this.y = a.y,
                    this.z = a.radius * Math.cos(a.theta),
                    this
                },
                setFromMatrixPosition: function(a) {
                    return this.setFromMatrixColumn(a, 3)
                },
                setFromMatrixScale: function(a) {
                    var b = this.setFromMatrixColumn(a, 0).length()
                      , c = this.setFromMatrixColumn(a, 1).length()
                      , d = this.setFromMatrixColumn(a, 2).length();
                    return this.x = b,
                    this.y = c,
                    this.z = d,
                    this
                },
                setFromMatrixColumn: function(a, b) {
                    if ("number" == typeof a) {
                        var c = a;
                        a = b,
                        b = c
                    }
                    return this.fromArray(a.elements, 4 * b)
                },
                equals: function(a) {
                    return a.x === this.x && a.y === this.y && a.z === this.z
                },
                fromArray: function(a, b) {
                    return void 0 === b && (b = 0),
                    this.x = a[b],
                    this.y = a[b + 1],
                    this.z = a[b + 2],
                    this
                },
                toArray: function(a, b) {
                    return void 0 === a && (a = []),
                    void 0 === b && (b = 0),
                    a[b] = this.x,
                    a[b + 1] = this.y,
                    a[b + 2] = this.z,
                    a
                },
                fromBufferAttribute: function(a, b, c) {
                    return this.x = a.getX(b),
                    this.y = a.getY(b),
                    this.z = a.getZ(b),
                    this
                }
            },
            j.prototype = {
                constructor: j,
                isMatrix4: !0,
                set: function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
                    var q = this.elements;
                    return q[0] = a,
                    q[4] = b,
                    q[8] = c,
                    q[12] = d,
                    q[1] = e,
                    q[5] = f,
                    q[9] = g,
                    q[13] = h,
                    q[2] = i,
                    q[6] = j,
                    q[10] = k,
                    q[14] = l,
                    q[3] = m,
                    q[7] = n,
                    q[11] = o,
                    q[15] = p,
                    this
                },
                identity: function() {
                    return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                    this
                },
                clone: function() {
                    return (new j).fromArray(this.elements)
                },
                copy: function(a) {
                    return this.elements.set(a.elements),
                    this
                },
                copyPosition: function(a) {
                    var b = this.elements
                      , c = a.elements;
                    return b[12] = c[12],
                    b[13] = c[13],
                    b[14] = c[14],
                    this
                },
                extractBasis: function(a, b, c) {
                    return a.setFromMatrixColumn(this, 0),
                    b.setFromMatrixColumn(this, 1),
                    c.setFromMatrixColumn(this, 2),
                    this
                },
                makeBasis: function(a, b, c) {
                    return this.set(a.x, b.x, c.x, 0, a.y, b.y, c.y, 0, a.z, b.z, c.z, 0, 0, 0, 0, 1),
                    this
                },
                extractRotation: function() {
                    var a;
                    return function(b) {
                        void 0 === a && (a = new i);
                        var c = this.elements
                          , d = b.elements
                          , e = 1 / a.setFromMatrixColumn(b, 0).length()
                          , f = 1 / a.setFromMatrixColumn(b, 1).length()
                          , g = 1 / a.setFromMatrixColumn(b, 2).length();
                        return c[0] = d[0] * e,
                        c[1] = d[1] * e,
                        c[2] = d[2] * e,
                        c[4] = d[4] * f,
                        c[5] = d[5] * f,
                        c[6] = d[6] * f,
                        c[8] = d[8] * g,
                        c[9] = d[9] * g,
                        c[10] = d[10] * g,
                        this
                    }
                }(),
                makeRotationFromEuler: function(a) {
                    a && a.isEuler;
                    var b = this.elements
                      , c = a.x
                      , d = a.y
                      , e = a.z
                      , f = Math.cos(c)
                      , g = Math.sin(c)
                      , h = Math.cos(d)
                      , i = Math.sin(d)
                      , j = Math.cos(e)
                      , k = Math.sin(e);
                    if ("XYZ" === a.order) {
                        var l = f * j
                          , m = f * k
                          , n = g * j
                          , o = g * k;
                        b[0] = h * j,
                        b[4] = -h * k,
                        b[8] = i,
                        b[1] = m + n * i,
                        b[5] = l - o * i,
                        b[9] = -g * h,
                        b[2] = o - l * i,
                        b[6] = n + m * i,
                        b[10] = f * h
                    } else if ("YXZ" === a.order) {
                        var p = h * j
                          , q = h * k
                          , r = i * j
                          , s = i * k;
                        b[0] = p + s * g,
                        b[4] = r * g - q,
                        b[8] = f * i,
                        b[1] = f * k,
                        b[5] = f * j,
                        b[9] = -g,
                        b[2] = q * g - r,
                        b[6] = s + p * g,
                        b[10] = f * h
                    } else if ("ZXY" === a.order) {
                        var p = h * j
                          , q = h * k
                          , r = i * j
                          , s = i * k;
                        b[0] = p - s * g,
                        b[4] = -f * k,
                        b[8] = r + q * g,
                        b[1] = q + r * g,
                        b[5] = f * j,
                        b[9] = s - p * g,
                        b[2] = -f * i,
                        b[6] = g,
                        b[10] = f * h
                    } else if ("ZYX" === a.order) {
                        var l = f * j
                          , m = f * k
                          , n = g * j
                          , o = g * k;
                        b[0] = h * j,
                        b[4] = n * i - m,
                        b[8] = l * i + o,
                        b[1] = h * k,
                        b[5] = o * i + l,
                        b[9] = m * i - n,
                        b[2] = -i,
                        b[6] = g * h,
                        b[10] = f * h
                    } else if ("YZX" === a.order) {
                        var t = f * h
                          , u = f * i
                          , v = g * h
                          , w = g * i;
                        b[0] = h * j,
                        b[4] = w - t * k,
                        b[8] = v * k + u,
                        b[1] = k,
                        b[5] = f * j,
                        b[9] = -g * j,
                        b[2] = -i * j,
                        b[6] = u * k + v,
                        b[10] = t - w * k
                    } else if ("XZY" === a.order) {
                        var t = f * h
                          , u = f * i
                          , v = g * h
                          , w = g * i;
                        b[0] = h * j,
                        b[4] = -k,
                        b[8] = i * j,
                        b[1] = t * k + w,
                        b[5] = f * j,
                        b[9] = u * k - v,
                        b[2] = v * k - u,
                        b[6] = g * j,
                        b[10] = w * k + t
                    }
                    return b[3] = 0,
                    b[7] = 0,
                    b[11] = 0,
                    b[12] = 0,
                    b[13] = 0,
                    b[14] = 0,
                    b[15] = 1,
                    this
                },
                makeRotationFromQuaternion: function(a) {
                    var b = this.elements
                      , c = a.x
                      , d = a.y
                      , e = a.z
                      , f = a.w
                      , g = c + c
                      , h = d + d
                      , i = e + e
                      , j = c * g
                      , k = c * h
                      , l = c * i
                      , m = d * h
                      , n = d * i
                      , o = e * i
                      , p = f * g
                      , q = f * h
                      , r = f * i;
                    return b[0] = 1 - (m + o),
                    b[4] = k - r,
                    b[8] = l + q,
                    b[1] = k + r,
                    b[5] = 1 - (j + o),
                    b[9] = n - p,
                    b[2] = l - q,
                    b[6] = n + p,
                    b[10] = 1 - (j + m),
                    b[3] = 0,
                    b[7] = 0,
                    b[11] = 0,
                    b[12] = 0,
                    b[13] = 0,
                    b[14] = 0,
                    b[15] = 1,
                    this
                },
                lookAt: function() {
                    var a, b, c;
                    return function(d, e, f) {
                        void 0 === a && (a = new i,
                        b = new i,
                        c = new i);
                        var g = this.elements;
                        return c.subVectors(d, e).normalize(),
                        0 === c.lengthSq() && (c.z = 1),
                        a.crossVectors(f, c).normalize(),
                        0 === a.lengthSq() && (c.z += 1e-4,
                        a.crossVectors(f, c).normalize()),
                        b.crossVectors(c, a),
                        g[0] = a.x,
                        g[4] = b.x,
                        g[8] = c.x,
                        g[1] = a.y,
                        g[5] = b.y,
                        g[9] = c.y,
                        g[2] = a.z,
                        g[6] = b.z,
                        g[10] = c.z,
                        this
                    }
                }(),
                multiply: function(a, b) {
                    return void 0 !== b ? this.multiplyMatrices(a, b) : this.multiplyMatrices(this, a)
                },
                premultiply: function(a) {
                    return this.multiplyMatrices(a, this)
                },
                multiplyMatrices: function(a, b) {
                    var c = a.elements
                      , d = b.elements
                      , e = this.elements
                      , f = c[0]
                      , g = c[4]
                      , h = c[8]
                      , i = c[12]
                      , j = c[1]
                      , k = c[5]
                      , l = c[9]
                      , m = c[13]
                      , n = c[2]
                      , o = c[6]
                      , p = c[10]
                      , q = c[14]
                      , r = c[3]
                      , s = c[7]
                      , t = c[11]
                      , u = c[15]
                      , v = d[0]
                      , w = d[4]
                      , x = d[8]
                      , y = d[12]
                      , z = d[1]
                      , A = d[5]
                      , B = d[9]
                      , C = d[13]
                      , D = d[2]
                      , E = d[6]
                      , F = d[10]
                      , G = d[14]
                      , H = d[3]
                      , I = d[7]
                      , J = d[11]
                      , K = d[15];
                    return e[0] = f * v + g * z + h * D + i * H,
                    e[4] = f * w + g * A + h * E + i * I,
                    e[8] = f * x + g * B + h * F + i * J,
                    e[12] = f * y + g * C + h * G + i * K,
                    e[1] = j * v + k * z + l * D + m * H,
                    e[5] = j * w + k * A + l * E + m * I,
                    e[9] = j * x + k * B + l * F + m * J,
                    e[13] = j * y + k * C + l * G + m * K,
                    e[2] = n * v + o * z + p * D + q * H,
                    e[6] = n * w + o * A + p * E + q * I,
                    e[10] = n * x + o * B + p * F + q * J,
                    e[14] = n * y + o * C + p * G + q * K,
                    e[3] = r * v + s * z + t * D + u * H,
                    e[7] = r * w + s * A + t * E + u * I,
                    e[11] = r * x + s * B + t * F + u * J,
                    e[15] = r * y + s * C + t * G + u * K,
                    this
                },
                multiplyToArray: function(a, b, c) {
                    var d = this.elements;
                    return this.multiplyMatrices(a, b),
                    c[0] = d[0],
                    c[1] = d[1],
                    c[2] = d[2],
                    c[3] = d[3],
                    c[4] = d[4],
                    c[5] = d[5],
                    c[6] = d[6],
                    c[7] = d[7],
                    c[8] = d[8],
                    c[9] = d[9],
                    c[10] = d[10],
                    c[11] = d[11],
                    c[12] = d[12],
                    c[13] = d[13],
                    c[14] = d[14],
                    c[15] = d[15],
                    this
                },
                multiplyScalar: function(a) {
                    var b = this.elements;
                    return b[0] *= a,
                    b[4] *= a,
                    b[8] *= a,
                    b[12] *= a,
                    b[1] *= a,
                    b[5] *= a,
                    b[9] *= a,
                    b[13] *= a,
                    b[2] *= a,
                    b[6] *= a,
                    b[10] *= a,
                    b[14] *= a,
                    b[3] *= a,
                    b[7] *= a,
                    b[11] *= a,
                    b[15] *= a,
                    this
                },
                applyToBufferAttribute: function() {
                    var a;
                    return function(b) {
                        void 0 === a && (a = new i);
                        for (var c = 0, d = b.count; c < d; c++)
                            a.x = b.getX(c),
                            a.y = b.getY(c),
                            a.z = b.getZ(c),
                            a.applyMatrix4(this),
                            b.setXYZ(c, a.x, a.y, a.z);
                        return b
                    }
                }(),
                determinant: function() {
                    var a = this.elements
                      , b = a[0]
                      , c = a[4]
                      , d = a[8]
                      , e = a[12]
                      , f = a[1]
                      , g = a[5]
                      , h = a[9]
                      , i = a[13]
                      , j = a[2]
                      , k = a[6]
                      , l = a[10]
                      , m = a[14];
                    return a[3] * (+e * h * k - d * i * k - e * g * l + c * i * l + d * g * m - c * h * m) + a[7] * (+b * h * m - b * i * l + e * f * l - d * f * m + d * i * j - e * h * j) + a[11] * (+b * i * k - b * g * m - e * f * k + c * f * m + e * g * j - c * i * j) + a[15] * (-d * g * j - b * h * k + b * g * l + d * f * k - c * f * l + c * h * j)
                },
                transpose: function() {
                    var a, b = this.elements;
                    return a = b[1],
                    b[1] = b[4],
                    b[4] = a,
                    a = b[2],
                    b[2] = b[8],
                    b[8] = a,
                    a = b[6],
                    b[6] = b[9],
                    b[9] = a,
                    a = b[3],
                    b[3] = b[12],
                    b[12] = a,
                    a = b[7],
                    b[7] = b[13],
                    b[13] = a,
                    a = b[11],
                    b[11] = b[14],
                    b[14] = a,
                    this
                },
                setPosition: function(a) {
                    var b = this.elements;
                    return b[12] = a.x,
                    b[13] = a.y,
                    b[14] = a.z,
                    this
                },
                getInverse: function(a, b) {
                    var c = this.elements
                      , d = a.elements
                      , e = d[0]
                      , f = d[1]
                      , g = d[2]
                      , h = d[3]
                      , i = d[4]
                      , j = d[5]
                      , k = d[6]
                      , l = d[7]
                      , m = d[8]
                      , n = d[9]
                      , o = d[10]
                      , p = d[11]
                      , q = d[12]
                      , r = d[13]
                      , s = d[14]
                      , t = d[15]
                      , u = n * s * l - r * o * l + r * k * p - j * s * p - n * k * t + j * o * t
                      , v = q * o * l - m * s * l - q * k * p + i * s * p + m * k * t - i * o * t
                      , w = m * r * l - q * n * l + q * j * p - i * r * p - m * j * t + i * n * t
                      , x = q * n * k - m * r * k - q * j * o + i * r * o + m * j * s - i * n * s
                      , y = e * u + f * v + g * w + h * x;
                    if (0 === y) {
                        var z = "THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";
                        if (!0 === b)
                            throw new Error(z);
                        return this.identity()
                    }
                    var A = 1 / y;
                    return c[0] = u * A,
                    c[1] = (r * o * h - n * s * h - r * g * p + f * s * p + n * g * t - f * o * t) * A,
                    c[2] = (j * s * h - r * k * h + r * g * l - f * s * l - j * g * t + f * k * t) * A,
                    c[3] = (n * k * h - j * o * h - n * g * l + f * o * l + j * g * p - f * k * p) * A,
                    c[4] = v * A,
                    c[5] = (m * s * h - q * o * h + q * g * p - e * s * p - m * g * t + e * o * t) * A,
                    c[6] = (q * k * h - i * s * h - q * g * l + e * s * l + i * g * t - e * k * t) * A,
                    c[7] = (i * o * h - m * k * h + m * g * l - e * o * l - i * g * p + e * k * p) * A,
                    c[8] = w * A,
                    c[9] = (q * n * h - m * r * h - q * f * p + e * r * p + m * f * t - e * n * t) * A,
                    c[10] = (i * r * h - q * j * h + q * f * l - e * r * l - i * f * t + e * j * t) * A,
                    c[11] = (m * j * h - i * n * h - m * f * l + e * n * l + i * f * p - e * j * p) * A,
                    c[12] = x * A,
                    c[13] = (m * r * g - q * n * g + q * f * o - e * r * o - m * f * s + e * n * s) * A,
                    c[14] = (q * j * g - i * r * g - q * f * k + e * r * k + i * f * s - e * j * s) * A,
                    c[15] = (i * n * g - m * j * g + m * f * k - e * n * k - i * f * o + e * j * o) * A,
                    this
                },
                scale: function(a) {
                    var b = this.elements
                      , c = a.x
                      , d = a.y
                      , e = a.z;
                    return b[0] *= c,
                    b[4] *= d,
                    b[8] *= e,
                    b[1] *= c,
                    b[5] *= d,
                    b[9] *= e,
                    b[2] *= c,
                    b[6] *= d,
                    b[10] *= e,
                    b[3] *= c,
                    b[7] *= d,
                    b[11] *= e,
                    this
                },
                getMaxScaleOnAxis: function() {
                    var a = this.elements
                      , b = a[0] * a[0] + a[1] * a[1] + a[2] * a[2]
                      , c = a[4] * a[4] + a[5] * a[5] + a[6] * a[6]
                      , d = a[8] * a[8] + a[9] * a[9] + a[10] * a[10];
                    return Math.sqrt(Math.max(b, c, d))
                },
                makeTranslation: function(a, b, c) {
                    return this.set(1, 0, 0, a, 0, 1, 0, b, 0, 0, 1, c, 0, 0, 0, 1),
                    this
                },
                makeRotationX: function(a) {
                    var b = Math.cos(a)
                      , c = Math.sin(a);
                    return this.set(1, 0, 0, 0, 0, b, -c, 0, 0, c, b, 0, 0, 0, 0, 1),
                    this
                },
                makeRotationY: function(a) {
                    var b = Math.cos(a)
                      , c = Math.sin(a);
                    return this.set(b, 0, c, 0, 0, 1, 0, 0, -c, 0, b, 0, 0, 0, 0, 1),
                    this
                },
                makeRotationZ: function(a) {
                    var b = Math.cos(a)
                      , c = Math.sin(a);
                    return this.set(b, -c, 0, 0, c, b, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1),
                    this
                },
                makeRotationAxis: function(a, b) {
                    var c = Math.cos(b)
                      , d = Math.sin(b)
                      , e = 1 - c
                      , f = a.x
                      , g = a.y
                      , h = a.z
                      , i = e * f
                      , j = e * g;
                    return this.set(i * f + c, i * g - d * h, i * h + d * g, 0, i * g + d * h, j * g + c, j * h - d * f, 0, i * h - d * g, j * h + d * f, e * h * h + c, 0, 0, 0, 0, 1),
                    this
                },
                makeScale: function(a, b, c) {
                    return this.set(a, 0, 0, 0, 0, b, 0, 0, 0, 0, c, 0, 0, 0, 0, 1),
                    this
                },
                makeShear: function(a, b, c) {
                    return this.set(1, b, c, 0, a, 1, c, 0, a, b, 1, 0, 0, 0, 0, 1),
                    this
                },
                compose: function(a, b, c) {
                    return this.makeRotationFromQuaternion(b),
                    this.scale(c),
                    this.setPosition(a),
                    this
                },
                decompose: function() {
                    var a, b;
                    return function(c, d, e) {
                        void 0 === a && (a = new i,
                        b = new j);
                        var f = this.elements
                          , g = a.set(f[0], f[1], f[2]).length()
                          , h = a.set(f[4], f[5], f[6]).length()
                          , k = a.set(f[8], f[9], f[10]).length();
                        this.determinant() < 0 && (g = -g),
                        c.x = f[12],
                        c.y = f[13],
                        c.z = f[14],
                        b.elements.set(this.elements);
                        var l = 1 / g
                          , m = 1 / h
                          , n = 1 / k;
                        return b.elements[0] *= l,
                        b.elements[1] *= l,
                        b.elements[2] *= l,
                        b.elements[4] *= m,
                        b.elements[5] *= m,
                        b.elements[6] *= m,
                        b.elements[8] *= n,
                        b.elements[9] *= n,
                        b.elements[10] *= n,
                        d.setFromRotationMatrix(b),
                        e.x = g,
                        e.y = h,
                        e.z = k,
                        this
                    }
                }(),
                makePerspective: function(a, b, c, d, e, f) {
                    var g = this.elements
                      , h = 2 * e / (b - a)
                      , i = 2 * e / (c - d)
                      , j = (b + a) / (b - a)
                      , k = (c + d) / (c - d)
                      , l = -(f + e) / (f - e)
                      , m = -2 * f * e / (f - e);
                    return g[0] = h,
                    g[4] = 0,
                    g[8] = j,
                    g[12] = 0,
                    g[1] = 0,
                    g[5] = i,
                    g[9] = k,
                    g[13] = 0,
                    g[2] = 0,
                    g[6] = 0,
                    g[10] = l,
                    g[14] = m,
                    g[3] = 0,
                    g[7] = 0,
                    g[11] = -1,
                    g[15] = 0,
                    this
                },
                makeOrthographic: function(a, b, c, d, e, f) {
                    var g = this.elements
                      , h = 1 / (b - a)
                      , i = 1 / (c - d)
                      , j = 1 / (f - e)
                      , k = (b + a) * h
                      , l = (c + d) * i
                      , m = (f + e) * j;
                    return g[0] = 2 * h,
                    g[4] = 0,
                    g[8] = 0,
                    g[12] = -k,
                    g[1] = 0,
                    g[5] = 2 * i,
                    g[9] = 0,
                    g[13] = -l,
                    g[2] = 0,
                    g[6] = 0,
                    g[10] = -2 * j,
                    g[14] = -m,
                    g[3] = 0,
                    g[7] = 0,
                    g[11] = 0,
                    g[15] = 1,
                    this
                },
                equals: function(a) {
                    for (var b = this.elements, c = a.elements, d = 0; d < 16; d++)
                        if (b[d] !== c[d])
                            return !1;
                    return !0
                },
                fromArray: function(a, b) {
                    void 0 === b && (b = 0);
                    for (var c = 0; c < 16; c++)
                        this.elements[c] = a[c + b];
                    return this
                },
                toArray: function(a, b) {
                    void 0 === a && (a = []),
                    void 0 === b && (b = 0);
                    var c = this.elements;
                    return a[b] = c[0],
                    a[b + 1] = c[1],
                    a[b + 2] = c[2],
                    a[b + 3] = c[3],
                    a[b + 4] = c[4],
                    a[b + 5] = c[5],
                    a[b + 6] = c[6],
                    a[b + 7] = c[7],
                    a[b + 8] = c[8],
                    a[b + 9] = c[9],
                    a[b + 10] = c[10],
                    a[b + 11] = c[11],
                    a[b + 12] = c[12],
                    a[b + 13] = c[13],
                    a[b + 14] = c[14],
                    a[b + 15] = c[15],
                    a
                }
            },
            k.prototype = Object.create(d.prototype),
            k.prototype.constructor = k,
            k.prototype.isCubeTexture = !0,
            Object.defineProperty(k.prototype, "images", {
                get: function() {
                    return this.image
                },
                set: function(a) {
                    this.image = a
                }
            });
            var _g = new d
              , ah = new k
              , bh = []
              , ch = [];
            P.prototype.setValue = function(a, b) {
                for (var c = this.seq, d = 0, e = c.length; d !== e; ++d) {
                    var f = c[d];
                    f.setValue(a, b[f.id])
                }
            }
            ;
            var dh = /([\w\d_]+)(\])?(\[|\.)?/g;
            S.prototype.setValue = function(a, b, c) {
                var d = this.map[b];
                void 0 !== d && d.setValue(a, c, this.renderer)
            }
            ,
            S.prototype.set = function(a, b, c) {
                var d = this.map[c];
                void 0 !== d && d.setValue(a, b[c], this.renderer)
            }
            ,
            S.prototype.setOptional = function(a, b, c) {
                var d = b[c];
                void 0 !== d && this.setValue(a, c, d)
            }
            ,
            S.upload = function(a, b, c, d) {
                for (var e = 0, f = b.length; e !== f; ++e) {
                    var g = b[e]
                      , h = c[g.id];
                    !1 !== h.needsUpdate && g.setValue(a, h.value, d)
                }
            }
            ,
            S.seqWithValue = function(a, b) {
                for (var c = [], d = 0, e = a.length; d !== e; ++d) {
                    var f = a[d];
                    f.id in b && c.push(f)
                }
                return c
            }
            ;
            var eh = {
                merge: function(a) {
                    for (var b = {}, c = 0; c < a.length; c++) {
                        var d = this.clone(a[c]);
                        for (var e in d)
                            b[e] = d[e]
                    }
                    return b
                },
                clone: function(a) {
                    var b = {};
                    for (var c in a) {
                        b[c] = {};
                        for (var d in a[c]) {
                            var e = a[c][d];
                            e && (e.isColor || e.isMatrix3 || e.isMatrix4 || e.isVector2 || e.isVector3 || e.isVector4 || e.isTexture) ? b[c][d] = e.clone() : Array.isArray(e) ? b[c][d] = e.slice() : b[c][d] = e
                        }
                    }
                    return b
                }
            }
              , fh = {
                alphamap_fragment: "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",
                alphamap_pars_fragment: "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n",
                alphatest_fragment: "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",
                aomap_fragment: "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n",
                aomap_pars_fragment: "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",
                begin_vertex: "\nvec3 transformed = vec3( position );\n",
                beginnormal_vertex: "\nvec3 objectNormal = vec3( normal );\n",
                bsdfs: "float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t\t}\n\t\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 ltcTextureCoords( const in GeometricContext geometry, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = (LUT_SIZE - 1.0)/LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5/LUT_SIZE;\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 P = geometry.position;\n\tfloat theta = acos( dot( N, V ) );\n\tvec2 uv = vec2(\n\t\tsqrt( saturate( roughness ) ),\n\t\tsaturate( theta / ( 0.5 * PI ) ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nvoid clipQuadToHorizon( inout vec3 L[5], out int n ) {\n\tint config = 0;\n\tif ( L[0].z > 0.0 ) config += 1;\n\tif ( L[1].z > 0.0 ) config += 2;\n\tif ( L[2].z > 0.0 ) config += 4;\n\tif ( L[3].z > 0.0 ) config += 8;\n\tn = 0;\n\tif ( config == 0 ) {\n\t} else if ( config == 1 ) {\n\t\tn = 3;\n\t\tL[1] = -L[1].z * L[0] + L[0].z * L[1];\n\t\tL[2] = -L[3].z * L[0] + L[0].z * L[3];\n\t} else if ( config == 2 ) {\n\t\tn = 3;\n\t\tL[0] = -L[0].z * L[1] + L[1].z * L[0];\n\t\tL[2] = -L[2].z * L[1] + L[1].z * L[2];\n\t} else if ( config == 3 ) {\n\t\tn = 4;\n\t\tL[2] = -L[2].z * L[1] + L[1].z * L[2];\n\t\tL[3] = -L[3].z * L[0] + L[0].z * L[3];\n\t} else if ( config == 4 ) {\n\t\tn = 3;\n\t\tL[0] = -L[3].z * L[2] + L[2].z * L[3];\n\t\tL[1] = -L[1].z * L[2] + L[2].z * L[1];\n\t} else if ( config == 5 ) {\n\t\tn = 0;\n\t} else if ( config == 6 ) {\n\t\tn = 4;\n\t\tL[0] = -L[0].z * L[1] + L[1].z * L[0];\n\t\tL[3] = -L[3].z * L[2] + L[2].z * L[3];\n\t} else if ( config == 7 ) {\n\t\tn = 5;\n\t\tL[4] = -L[3].z * L[0] + L[0].z * L[3];\n\t\tL[3] = -L[3].z * L[2] + L[2].z * L[3];\n\t} else if ( config == 8 ) {\n\t\tn = 3;\n\t\tL[0] = -L[0].z * L[3] + L[3].z * L[0];\n\t\tL[1] = -L[2].z * L[3] + L[3].z * L[2];\n\t\tL[2] =  L[3];\n\t} else if ( config == 9 ) {\n\t\tn = 4;\n\t\tL[1] = -L[1].z * L[0] + L[0].z * L[1];\n\t\tL[2] = -L[2].z * L[3] + L[3].z * L[2];\n\t} else if ( config == 10 ) {\n\t\tn = 0;\n\t} else if ( config == 11 ) {\n\t\tn = 5;\n\t\tL[4] = L[3];\n\t\tL[3] = -L[2].z * L[3] + L[3].z * L[2];\n\t\tL[2] = -L[2].z * L[1] + L[1].z * L[2];\n\t} else if ( config == 12 ) {\n\t\tn = 4;\n\t\tL[1] = -L[1].z * L[2] + L[2].z * L[1];\n\t\tL[0] = -L[0].z * L[3] + L[3].z * L[0];\n\t} else if ( config == 13 ) {\n\t\tn = 5;\n\t\tL[4] = L[3];\n\t\tL[3] = L[2];\n\t\tL[2] = -L[1].z * L[2] + L[2].z * L[1];\n\t\tL[1] = -L[1].z * L[0] + L[0].z * L[1];\n\t} else if ( config == 14 ) {\n\t\tn = 5;\n\t\tL[4] = -L[0].z * L[3] + L[3].z * L[0];\n\t\tL[0] = -L[0].z * L[1] + L[1].z * L[0];\n\t} else if ( config == 15 ) {\n\t\tn = 4;\n\t}\n\tif ( n == 3 )\n\t\tL[3] = L[0];\n\tif ( n == 4 )\n\t\tL[4] = L[0];\n}\nfloat integrateLtcBrdfOverRectEdge( vec3 v1, vec3 v2 ) {\n\tfloat cosTheta = dot( v1, v2 );\n\tfloat theta = acos( cosTheta );\n\tfloat res = cross( v1, v2 ).z * ( ( theta > 0.001 ) ? theta / sin( theta ) : 1.0 );\n\treturn res;\n}\nvoid initRectPoints( const in vec3 pos, const in vec3 halfWidth, const in vec3 halfHeight, out vec3 rectPoints[4] ) {\n\trectPoints[0] = pos - halfWidth - halfHeight;\n\trectPoints[1] = pos + halfWidth - halfHeight;\n\trectPoints[2] = pos + halfWidth + halfHeight;\n\trectPoints[3] = pos - halfWidth + halfHeight;\n}\nvec3 integrateLtcBrdfOverRect( const in GeometricContext geometry, const in mat3 brdfMat, const in vec3 rectPoints[4] ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 P = geometry.position;\n\tvec3 T1, T2;\n\tT1 = normalize(V - N * dot( V, N ));\n\tT2 = - cross( N, T1 );\n\tmat3 brdfWrtSurface = brdfMat * transpose( mat3( T1, T2, N ) );\n\tvec3 clippedRect[5];\n\tclippedRect[0] = brdfWrtSurface * ( rectPoints[0] - P );\n\tclippedRect[1] = brdfWrtSurface * ( rectPoints[1] - P );\n\tclippedRect[2] = brdfWrtSurface * ( rectPoints[2] - P );\n\tclippedRect[3] = brdfWrtSurface * ( rectPoints[3] - P );\n\tint n;\n\tclipQuadToHorizon(clippedRect, n);\n\tif ( n == 0 )\n\t\treturn vec3( 0, 0, 0 );\n\tclippedRect[0] = normalize( clippedRect[0] );\n\tclippedRect[1] = normalize( clippedRect[1] );\n\tclippedRect[2] = normalize( clippedRect[2] );\n\tclippedRect[3] = normalize( clippedRect[3] );\n\tclippedRect[4] = normalize( clippedRect[4] );\n\tfloat sum = 0.0;\n\tsum += integrateLtcBrdfOverRectEdge( clippedRect[0], clippedRect[1] );\n\tsum += integrateLtcBrdfOverRectEdge( clippedRect[1], clippedRect[2] );\n\tsum += integrateLtcBrdfOverRectEdge( clippedRect[2], clippedRect[3] );\n\tif (n >= 4)\n\t\tsum += integrateLtcBrdfOverRectEdge( clippedRect[3], clippedRect[4] );\n\tif (n == 5)\n\t\tsum += integrateLtcBrdfOverRectEdge( clippedRect[4], clippedRect[0] );\n\tsum = max( 0.0, sum );\n\tvec3 Lo_i = vec3( sum, sum, sum );\n\treturn Lo_i;\n}\nvec3 Rect_Area_Light_Specular_Reflectance(\n\t\tconst in GeometricContext geometry,\n\t\tconst in vec3 lightPos, const in vec3 lightHalfWidth, const in vec3 lightHalfHeight,\n\t\tconst in float roughness,\n\t\tconst in sampler2D ltcMat, const in sampler2D ltcMag ) {\n\tvec3 rectPoints[4];\n\tinitRectPoints( lightPos, lightHalfWidth, lightHalfHeight, rectPoints );\n\tvec2 uv = ltcTextureCoords( geometry, roughness );\n\tvec4 brdfLtcApproxParams, t;\n\tbrdfLtcApproxParams = texture2D( ltcMat, uv );\n\tt = texture2D( ltcMat, uv );\n\tfloat brdfLtcScalar = texture2D( ltcMag, uv ).a;\n\tmat3 brdfLtcApproxMat = mat3(\n\t\tvec3(   1,   0, t.y ),\n\t\tvec3(   0, t.z,   0 ),\n\t\tvec3( t.w,   0, t.x )\n\t);\n\tvec3 specularReflectance = integrateLtcBrdfOverRect( geometry, brdfLtcApproxMat, rectPoints );\n\tspecularReflectance *= brdfLtcScalar;\n\treturn specularReflectance;\n}\nvec3 Rect_Area_Light_Diffuse_Reflectance(\n\t\tconst in GeometricContext geometry,\n\t\tconst in vec3 lightPos, const in vec3 lightHalfWidth, const in vec3 lightHalfHeight ) {\n\tvec3 rectPoints[4];\n\tinitRectPoints( lightPos, lightHalfWidth, lightHalfHeight, rectPoints );\n\tmat3 diffuseBrdfMat = mat3(1);\n\tvec3 diffuseReflectance = integrateLtcBrdfOverRect( geometry, diffuseBrdfMat, rectPoints );\n\treturn diffuseReflectance;\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",
                bumpmap_pars_fragment: "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",
                clipping_planes_fragment: "#if NUM_CLIPPING_PLANES > 0\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\n\t\tvec4 plane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t\t\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\n\t\t\tvec4 plane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t\n\t#endif\n#endif\n",
                clipping_planes_pars_fragment: "#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n",
                clipping_planes_pars_vertex: "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n",
                clipping_planes_vertex: "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n",
                color_fragment: "#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",
                color_pars_fragment: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n",
                color_pars_vertex: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",
                color_vertex: "#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",
                common: "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transpose( const in mat3 v ) {\n\tmat3 tmp;\n\ttmp[0] = vec3(v[0].x, v[1].x, v[2].x);\n\ttmp[1] = vec3(v[0].y, v[1].y, v[2].y);\n\ttmp[2] = vec3(v[0].z, v[1].z, v[2].z);\n\treturn tmp;\n}\n",
                cube_uv_reflection_fragment: "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n",
                defaultnormal_vertex: "#ifdef FLIP_SIDED\n\tobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;\n",
                displacementmap_pars_vertex: "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n",
                displacementmap_vertex: "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",
                emissivemap_fragment: "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",
                emissivemap_pars_fragment: "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n",
                encodings_fragment: "  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",
                encodings_pars_fragment: "\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n",
                envmap_fragment: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n",
                envmap_pars_fragment: "#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n",
                envmap_pars_vertex: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n",
                envmap_vertex: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n",
                fog_vertex: "\n#ifdef USE_FOG\nfogDepth = -mvPosition.z;\n#endif",
                fog_pars_vertex: "#ifdef USE_FOG\n  varying float fogDepth;\n#endif\n",
                fog_fragment: "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",
                fog_pars_fragment: "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif\n",
                gradientmap_pars_fragment: "#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif\n",
                lightmap_fragment: "#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",
                lightmap_pars_fragment: "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
                lights_lambert_vertex: "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n",
                lights_pars: "uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltcMat;\tuniform sampler2D ltcMag;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = saturate( reflectVec.y * 0.5 + 0.5 );\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n",
                lights_phong_fragment: "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",
                lights_phong_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_BlinnPhong( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 matDiffColor = material.diffuseColor;\n\t\tvec3 matSpecColor = material.specularColor;\n\t\tvec3 lightColor   = rectAreaLight.color;\n\t\tfloat roughness = BlinnExponentToGGXRoughness( material.specularShininess );\n\t\tvec3 spec = Rect_Area_Light_Specular_Reflectance(\n\t\t\t\tgeometry,\n\t\t\t\trectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight,\n\t\t\t\troughness,\n\t\t\t\tltcMat, ltcMag );\n\t\tvec3 diff = Rect_Area_Light_Diffuse_Reflectance(\n\t\t\t\tgeometry,\n\t\t\t\trectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight );\n\t\treflectedLight.directSpecular += lightColor * matSpecColor * spec / PI2;\n\t\treflectedLight.directDiffuse  += lightColor * matDiffColor * diff / PI2;\n\t}\n#endif\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n",
                lights_physical_fragment: "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",
                lights_physical_pars_fragment: "struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 matDiffColor = material.diffuseColor;\n\t\tvec3 matSpecColor = material.specularColor;\n\t\tvec3 lightColor   = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 spec = Rect_Area_Light_Specular_Reflectance(\n\t\t\t\tgeometry,\n\t\t\t\trectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight,\n\t\t\t\troughness,\n\t\t\t\tltcMat, ltcMag );\n\t\tvec3 diff = Rect_Area_Light_Diffuse_Reflectance(\n\t\t\t\tgeometry,\n\t\t\t\trectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight );\n\t\treflectedLight.directSpecular += lightColor * matSpecColor * spec;\n\t\treflectedLight.directDiffuse  += lightColor * matDiffColor * diff;\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",
                lights_template: "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\t#ifndef STANDARD\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n\t#else\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\n\t#endif\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n",
                logdepthbuf_fragment: "#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif",
                logdepthbuf_pars_fragment: "#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n",
                logdepthbuf_pars_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif",
                logdepthbuf_vertex: "#ifdef USE_LOGDEPTHBUF\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\t#endif\n#endif\n",
                map_fragment: "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n",
                map_pars_fragment: "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n",
                map_particle_fragment: "#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",
                map_particle_pars_fragment: "#ifdef USE_MAP\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n#endif\n",
                metalnessmap_fragment: "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.r;\n#endif\n",
                metalnessmap_pars_fragment: "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
                morphnormal_vertex: "#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",
                morphtarget_pars_vertex: "#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",
                morphtarget_vertex: "#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n",
                normal_flip: "#ifdef DOUBLE_SIDED\n\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n#else\n\tfloat flipNormal = 1.0;\n#endif\n",
                normal_fragment: "#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal ) * flipNormal;\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",
                normalmap_pars_fragment: "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n",
                packing: "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 1.0 - 2.0 * rgb.xyz;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",
                premultiplied_alpha_fragment: "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",
                project_vertex: "#ifdef USE_SKINNING\n\tvec4 mvPosition = modelViewMatrix * skinned;\n#else\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\n",
                roughnessmap_fragment: "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.r;\n#endif\n",
                roughnessmap_pars_fragment: "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",
                shadowmap_pars_fragment: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\treturn (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn 1.0;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n",
                shadowmap_pars_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n",
                shadowmap_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n",
                shadowmask_pars_fragment: "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n",
                skinbase_vertex: "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
                skinning_pars_vertex: "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n",
                skinning_vertex: "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n#endif\n",
                skinnormal_vertex: "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",
                specularmap_fragment: "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",
                specularmap_pars_fragment: "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",
                tonemapping_fragment: "#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",
                tonemapping_pars_fragment: "#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",
                uv_pars_fragment: "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",
                uv_pars_vertex: "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n#endif\n",
                uv_vertex: "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",
                uv2_pars_fragment: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",
                uv2_pars_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",
                uv2_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",
                worldpos_vertex: "#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\t#ifdef USE_SKINNING\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\t#else\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\t#endif\n#endif\n",
                cube_frag: "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n",
                cube_vert: "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",
                depth_frag: "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n",
                depth_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",
                distanceRGBA_frag: "uniform vec3 lightPos;\nvarying vec4 vWorldPosition;\n#include <common>\n#include <packing>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\n}\n",
                distanceRGBA_vert: "varying vec4 vWorldPosition;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <skinbase_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition;\n}\n",
                equirect_frag: "uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n",
                equirect_vert: "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",
                linedashed_frag: "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
                linedashed_vert: "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}\n",
                meshbasic_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <normal_flip>\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
                meshbasic_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}\n",
                meshlambert_frag: "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <normal_flip>\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
                meshlambert_vert: "#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
                meshphong_frag: "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
                meshphong_vert: "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
                meshphysical_frag: "#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
                meshphysical_vert: "#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
                normal_frag: "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_flip>\n\t#include <normal_fragment>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}\n",
                normal_vert: "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <displacementmap_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}\n",
                points_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",
                points_vert: "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
                shadow_frag: "uniform float opacity;\n#include <common>\n#include <packing>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0 - getShadowMask() ) );\n}\n",
                shadow_vert: "#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n}\n"
            };
            T.prototype = {
                constructor: T,
                isColor: !0,
                r: 1,
                g: 1,
                b: 1,
                set: function(a) {
                    return a && a.isColor ? this.copy(a) : "number" == typeof a ? this.setHex(a) : "string" == typeof a && this.setStyle(a),
                    this
                },
                setScalar: function(a) {
                    return this.r = a,
                    this.g = a,
                    this.b = a,
                    this
                },
                setHex: function(a) {
                    return a = Math.floor(a),
                    this.r = (a >> 16 & 255) / 255,
                    this.g = (a >> 8 & 255) / 255,
                    this.b = (255 & a) / 255,
                    this
                },
                setRGB: function(a, b, c) {
                    return this.r = a,
                    this.g = b,
                    this.b = c,
                    this
                },
                setHSL: function() {
                    function a(a, b, c) {
                        return c < 0 && (c += 1),
                        c > 1 && (c -= 1),
                        c < 1 / 6 ? a + 6 * (b - a) * c : c < .5 ? b : c < 2 / 3 ? a + 6 * (b - a) * (2 / 3 - c) : a
                    }
                    return function(b, c, d) {
                        if (b = Zg.euclideanModulo(b, 1),
                        c = Zg.clamp(c, 0, 1),
                        d = Zg.clamp(d, 0, 1),
                        0 === c)
                            this.r = this.g = this.b = d;
                        else {
                            var e = d <= .5 ? d * (1 + c) : d + c - d * c
                              , f = 2 * d - e;
                            this.r = a(f, e, b + 1 / 3),
                            this.g = a(f, e, b),
                            this.b = a(f, e, b - 1 / 3)
                        }
                        return this
                    }
                }(),
                setStyle: function(a) {
                    function b(a) {
                        void 0 !== a && parseFloat(a)
                    }
                    var c;
                    if (c = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(a)) {
                        var d, e = c[1], f = c[2];
                        switch (e) {
                        case "rgb":
                        case "rgba":
                            if (d = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(f))
                                return this.r = Math.min(255, parseInt(d[1], 10)) / 255,
                                this.g = Math.min(255, parseInt(d[2], 10)) / 255,
                                this.b = Math.min(255, parseInt(d[3], 10)) / 255,
                                b(d[5]),
                                this;
                            if (d = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(f))
                                return this.r = Math.min(100, parseInt(d[1], 10)) / 100,
                                this.g = Math.min(100, parseInt(d[2], 10)) / 100,
                                this.b = Math.min(100, parseInt(d[3], 10)) / 100,
                                b(d[5]),
                                this;
                            break;
                        case "hsl":
                        case "hsla":
                            if (d = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(f)) {
                                var g = parseFloat(d[1]) / 360
                                  , h = parseInt(d[2], 10) / 100
                                  , i = parseInt(d[3], 10) / 100;
                                return b(d[5]),
                                this.setHSL(g, h, i)
                            }
                        }
                    } else if (c = /^\#([A-Fa-f0-9]+)$/.exec(a)) {
                        var j = c[1]
                          , k = j.length;
                        if (3 === k)
                            return this.r = parseInt(j.charAt(0) + j.charAt(0), 16) / 255,
                            this.g = parseInt(j.charAt(1) + j.charAt(1), 16) / 255,
                            this.b = parseInt(j.charAt(2) + j.charAt(2), 16) / 255,
                            this;
                        if (6 === k)
                            return this.r = parseInt(j.charAt(0) + j.charAt(1), 16) / 255,
                            this.g = parseInt(j.charAt(2) + j.charAt(3), 16) / 255,
                            this.b = parseInt(j.charAt(4) + j.charAt(5), 16) / 255,
                            this
                    }
                    if (a && a.length > 0) {
                        var j = gh[a];
                        void 0 !== j && this.setHex(j)
                    }
                    return this
                },
                clone: function() {
                    return new this.constructor(this.r,this.g,this.b)
                },
                copy: function(a) {
                    return this.r = a.r,
                    this.g = a.g,
                    this.b = a.b,
                    this
                },
                copyGammaToLinear: function(a, b) {
                    return void 0 === b && (b = 2),
                    this.r = Math.pow(a.r, b),
                    this.g = Math.pow(a.g, b),
                    this.b = Math.pow(a.b, b),
                    this
                },
                copyLinearToGamma: function(a, b) {
                    void 0 === b && (b = 2);
                    var c = b > 0 ? 1 / b : 1;
                    return this.r = Math.pow(a.r, c),
                    this.g = Math.pow(a.g, c),
                    this.b = Math.pow(a.b, c),
                    this
                },
                convertGammaToLinear: function() {
                    var a = this.r
                      , b = this.g
                      , c = this.b;
                    return this.r = a * a,
                    this.g = b * b,
                    this.b = c * c,
                    this
                },
                convertLinearToGamma: function() {
                    return this.r = Math.sqrt(this.r),
                    this.g = Math.sqrt(this.g),
                    this.b = Math.sqrt(this.b),
                    this
                },
                getHex: function() {
                    return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
                },
                getHexString: function() {
                    return ("000000" + this.getHex().toString(16)).slice(-6)
                },
                getHSL: function(a) {
                    var b, c, d = a || {
                        h: 0,
                        s: 0,
                        l: 0
                    }, e = this.r, f = this.g, g = this.b, h = Math.max(e, f, g), i = Math.min(e, f, g), j = (i + h) / 2;
                    if (i === h)
                        b = 0,
                        c = 0;
                    else {
                        var k = h - i;
                        switch (c = j <= .5 ? k / (h + i) : k / (2 - h - i),
                        h) {
                        case e:
                            b = (f - g) / k + (f < g ? 6 : 0);
                            break;
                        case f:
                            b = (g - e) / k + 2;
                            break;
                        case g:
                            b = (e - f) / k + 4
                        }
                        b /= 6
                    }
                    return d.h = b,
                    d.s = c,
                    d.l = j,
                    d
                },
                getStyle: function() {
                    return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
                },
                offsetHSL: function(a, b, c) {
                    var d = this.getHSL();
                    return d.h += a,
                    d.s += b,
                    d.l += c,
                    this.setHSL(d.h, d.s, d.l),
                    this
                },
                add: function(a) {
                    return this.r += a.r,
                    this.g += a.g,
                    this.b += a.b,
                    this
                },
                addColors: function(a, b) {
                    return this.r = a.r + b.r,
                    this.g = a.g + b.g,
                    this.b = a.b + b.b,
                    this
                },
                addScalar: function(a) {
                    return this.r += a,
                    this.g += a,
                    this.b += a,
                    this
                },
                sub: function(a) {
                    return this.r = Math.max(0, this.r - a.r),
                    this.g = Math.max(0, this.g - a.g),
                    this.b = Math.max(0, this.b - a.b),
                    this
                },
                multiply: function(a) {
                    return this.r *= a.r,
                    this.g *= a.g,
                    this.b *= a.b,
                    this
                },
                multiplyScalar: function(a) {
                    return this.r *= a,
                    this.g *= a,
                    this.b *= a,
                    this
                },
                lerp: function(a, b) {
                    return this.r += (a.r - this.r) * b,
                    this.g += (a.g - this.g) * b,
                    this.b += (a.b - this.b) * b,
                    this
                },
                equals: function(a) {
                    return a.r === this.r && a.g === this.g && a.b === this.b
                },
                fromArray: function(a, b) {
                    return void 0 === b && (b = 0),
                    this.r = a[b],
                    this.g = a[b + 1],
                    this.b = a[b + 2],
                    this
                },
                toArray: function(a, b) {
                    return void 0 === a && (a = []),
                    void 0 === b && (b = 0),
                    a[b] = this.r,
                    a[b + 1] = this.g,
                    a[b + 2] = this.b,
                    a
                },
                toJSON: function() {
                    return this.getHex()
                }
            };
            var gh = {
                aliceblue: 15792383,
                antiquewhite: 16444375,
                aqua: 65535,
                aquamarine: 8388564,
                azure: 15794175,
                beige: 16119260,
                bisque: 16770244,
                black: 0,
                blanchedalmond: 16772045,
                blue: 255,
                blueviolet: 9055202,
                brown: 10824234,
                burlywood: 14596231,
                cadetblue: 6266528,
                chartreuse: 8388352,
                chocolate: 13789470,
                coral: 16744272,
                cornflowerblue: 6591981,
                cornsilk: 16775388,
                crimson: 14423100,
                cyan: 65535,
                darkblue: 139,
                darkcyan: 35723,
                darkgoldenrod: 12092939,
                darkgray: 11119017,
                darkgreen: 25600,
                darkgrey: 11119017,
                darkkhaki: 12433259,
                darkmagenta: 9109643,
                darkolivegreen: 5597999,
                darkorange: 16747520,
                darkorchid: 10040012,
                darkred: 9109504,
                darksalmon: 15308410,
                darkseagreen: 9419919,
                darkslateblue: 4734347,
                darkslategray: 3100495,
                darkslategrey: 3100495,
                darkturquoise: 52945,
                darkviolet: 9699539,
                deeppink: 16716947,
                deepskyblue: 49151,
                dimgray: 6908265,
                dimgrey: 6908265,
                dodgerblue: 2003199,
                firebrick: 11674146,
                floralwhite: 16775920,
                forestgreen: 2263842,
                fuchsia: 16711935,
                gainsboro: 14474460,
                ghostwhite: 16316671,
                gold: 16766720,
                goldenrod: 14329120,
                gray: 8421504,
                green: 32768,
                greenyellow: 11403055,
                grey: 8421504,
                honeydew: 15794160,
                hotpink: 16738740,
                indianred: 13458524,
                indigo: 4915330,
                ivory: 16777200,
                khaki: 15787660,
                lavender: 15132410,
                lavenderblush: 16773365,
                lawngreen: 8190976,
                lemonchiffon: 16775885,
                lightblue: 11393254,
                lightcoral: 15761536,
                lightcyan: 14745599,
                lightgoldenrodyellow: 16448210,
                lightgray: 13882323,
                lightgreen: 9498256,
                lightgrey: 13882323,
                lightpink: 16758465,
                lightsalmon: 16752762,
                lightseagreen: 2142890,
                lightskyblue: 8900346,
                lightslategray: 7833753,
                lightslategrey: 7833753,
                lightsteelblue: 11584734,
                lightyellow: 16777184,
                lime: 65280,
                limegreen: 3329330,
                linen: 16445670,
                magenta: 16711935,
                maroon: 8388608,
                mediumaquamarine: 6737322,
                mediumblue: 205,
                mediumorchid: 12211667,
                mediumpurple: 9662683,
                mediumseagreen: 3978097,
                mediumslateblue: 8087790,
                mediumspringgreen: 64154,
                mediumturquoise: 4772300,
                mediumvioletred: 13047173,
                midnightblue: 1644912,
                mintcream: 16121850,
                mistyrose: 16770273,
                moccasin: 16770229,
                navajowhite: 16768685,
                navy: 128,
                oldlace: 16643558,
                olive: 8421376,
                olivedrab: 7048739,
                orange: 16753920,
                orangered: 16729344,
                orchid: 14315734,
                palegoldenrod: 15657130,
                palegreen: 10025880,
                paleturquoise: 11529966,
                palevioletred: 14381203,
                papayawhip: 16773077,
                peachpuff: 16767673,
                peru: 13468991,
                pink: 16761035,
                plum: 14524637,
                powderblue: 11591910,
                purple: 8388736,
                red: 16711680,
                rosybrown: 12357519,
                royalblue: 4286945,
                saddlebrown: 9127187,
                salmon: 16416882,
                sandybrown: 16032864,
                seagreen: 3050327,
                seashell: 16774638,
                sienna: 10506797,
                silver: 12632256,
                skyblue: 8900331,
                slateblue: 6970061,
                slategray: 7372944,
                slategrey: 7372944,
                snow: 16775930,
                springgreen: 65407,
                steelblue: 4620980,
                tan: 13808780,
                teal: 32896,
                thistle: 14204888,
                tomato: 16737095,
                turquoise: 4251856,
                violet: 15631086,
                wheat: 16113331,
                white: 16777215,
                whitesmoke: 16119285,
                yellow: 16776960,
                yellowgreen: 10145074
            };
            U.prototype = Object.create(d.prototype),
            U.prototype.constructor = U,
            U.prototype.isDataTexture = !0;
            var hh = {
                common: {
                    diffuse: {
                        value: new T(15658734)
                    },
                    opacity: {
                        value: 1
                    },
                    map: {
                        value: null
                    },
                    offsetRepeat: {
                        value: new e(0,0,1,1)
                    },
                    specularMap: {
                        value: null
                    },
                    alphaMap: {
                        value: null
                    },
                    envMap: {
                        value: null
                    },
                    flipEnvMap: {
                        value: -1
                    },
                    reflectivity: {
                        value: 1
                    },
                    refractionRatio: {
                        value: .98
                    }
                },
                aomap: {
                    aoMap: {
                        value: null
                    },
                    aoMapIntensity: {
                        value: 1
                    }
                },
                lightmap: {
                    lightMap: {
                        value: null
                    },
                    lightMapIntensity: {
                        value: 1
                    }
                },
                emissivemap: {
                    emissiveMap: {
                        value: null
                    }
                },
                bumpmap: {
                    bumpMap: {
                        value: null
                    },
                    bumpScale: {
                        value: 1
                    }
                },
                normalmap: {
                    normalMap: {
                        value: null
                    },
                    normalScale: {
                        value: new c(1,1)
                    }
                },
                displacementmap: {
                    displacementMap: {
                        value: null
                    },
                    displacementScale: {
                        value: 1
                    },
                    displacementBias: {
                        value: 0
                    }
                },
                roughnessmap: {
                    roughnessMap: {
                        value: null
                    }
                },
                metalnessmap: {
                    metalnessMap: {
                        value: null
                    }
                },
                gradientmap: {
                    gradientMap: {
                        value: null
                    }
                },
                fog: {
                    fogDensity: {
                        value: 25e-5
                    },
                    fogNear: {
                        value: 1
                    },
                    fogFar: {
                        value: 2e3
                    },
                    fogColor: {
                        value: new T(16777215)
                    }
                },
                lights: {
                    ambientLightColor: {
                        value: []
                    },
                    directionalLights: {
                        value: [],
                        properties: {
                            direction: {},
                            color: {},
                            shadow: {},
                            shadowBias: {},
                            shadowRadius: {},
                            shadowMapSize: {}
                        }
                    },
                    directionalShadowMap: {
                        value: []
                    },
                    directionalShadowMatrix: {
                        value: []
                    },
                    spotLights: {
                        value: [],
                        properties: {
                            color: {},
                            position: {},
                            direction: {},
                            distance: {},
                            coneCos: {},
                            penumbraCos: {},
                            decay: {},
                            shadow: {},
                            shadowBias: {},
                            shadowRadius: {},
                            shadowMapSize: {}
                        }
                    },
                    spotShadowMap: {
                        value: []
                    },
                    spotShadowMatrix: {
                        value: []
                    },
                    pointLights: {
                        value: [],
                        properties: {
                            color: {},
                            position: {},
                            decay: {},
                            distance: {},
                            shadow: {},
                            shadowBias: {},
                            shadowRadius: {},
                            shadowMapSize: {}
                        }
                    },
                    pointShadowMap: {
                        value: []
                    },
                    pointShadowMatrix: {
                        value: []
                    },
                    hemisphereLights: {
                        value: [],
                        properties: {
                            direction: {},
                            skyColor: {},
                            groundColor: {}
                        }
                    },
                    rectAreaLights: {
                        value: [],
                        properties: {
                            color: {},
                            position: {},
                            width: {},
                            height: {}
                        }
                    }
                },
                points: {
                    diffuse: {
                        value: new T(15658734)
                    },
                    opacity: {
                        value: 1
                    },
                    size: {
                        value: 1
                    },
                    scale: {
                        value: 1
                    },
                    map: {
                        value: null
                    },
                    offsetRepeat: {
                        value: new e(0,0,1,1)
                    }
                }
            }
              , ih = {
                basic: {
                    uniforms: eh.merge([hh.common, hh.aomap, hh.lightmap, hh.fog]),
                    vertexShader: fh.meshbasic_vert,
                    fragmentShader: fh.meshbasic_frag
                },
                lambert: {
                    uniforms: eh.merge([hh.common, hh.aomap, hh.lightmap, hh.emissivemap, hh.fog, hh.lights, {
                        emissive: {
                            value: new T(0)
                        }
                    }]),
                    vertexShader: fh.meshlambert_vert,
                    fragmentShader: fh.meshlambert_frag
                },
                phong: {
                    uniforms: eh.merge([hh.common, hh.aomap, hh.lightmap, hh.emissivemap, hh.bumpmap, hh.normalmap, hh.displacementmap, hh.gradientmap, hh.fog, hh.lights, {
                        emissive: {
                            value: new T(0)
                        },
                        specular: {
                            value: new T(1118481)
                        },
                        shininess: {
                            value: 30
                        }
                    }]),
                    vertexShader: fh.meshphong_vert,
                    fragmentShader: fh.meshphong_frag
                },
                standard: {
                    uniforms: eh.merge([hh.common, hh.aomap, hh.lightmap, hh.emissivemap, hh.bumpmap, hh.normalmap, hh.displacementmap, hh.roughnessmap, hh.metalnessmap, hh.fog, hh.lights, {
                        emissive: {
                            value: new T(0)
                        },
                        roughness: {
                            value: .5
                        },
                        metalness: {
                            value: 0
                        },
                        envMapIntensity: {
                            value: 1
                        }
                    }]),
                    vertexShader: fh.meshphysical_vert,
                    fragmentShader: fh.meshphysical_frag
                },
                points: {
                    uniforms: eh.merge([hh.points, hh.fog]),
                    vertexShader: fh.points_vert,
                    fragmentShader: fh.points_frag
                },
                dashed: {
                    uniforms: eh.merge([hh.common, hh.fog, {
                        scale: {
                            value: 1
                        },
                        dashSize: {
                            value: 1
                        },
                        totalSize: {
                            value: 2
                        }
                    }]),
                    vertexShader: fh.linedashed_vert,
                    fragmentShader: fh.linedashed_frag
                },
                depth: {
                    uniforms: eh.merge([hh.common, hh.displacementmap]),
                    vertexShader: fh.depth_vert,
                    fragmentShader: fh.depth_frag
                },
                normal: {
                    uniforms: eh.merge([hh.common, hh.bumpmap, hh.normalmap, hh.displacementmap, {
                        opacity: {
                            value: 1
                        }
                    }]),
                    vertexShader: fh.normal_vert,
                    fragmentShader: fh.normal_frag
                },
                cube: {
                    uniforms: {
                        tCube: {
                            value: null
                        },
                        tFlip: {
                            value: -1
                        },
                        opacity: {
                            value: 1
                        }
                    },
                    vertexShader: fh.cube_vert,
                    fragmentShader: fh.cube_frag
                },
                equirect: {
                    uniforms: {
                        tEquirect: {
                            value: null
                        },
                        tFlip: {
                            value: -1
                        }
                    },
                    vertexShader: fh.equirect_vert,
                    fragmentShader: fh.equirect_frag
                },
                distanceRGBA: {
                    uniforms: {
                        lightPos: {
                            value: new i
                        }
                    },
                    vertexShader: fh.distanceRGBA_vert,
                    fragmentShader: fh.distanceRGBA_frag
                }
            };
            ih.physical = {
                uniforms: eh.merge([ih.standard.uniforms, {
                    clearCoat: {
                        value: 0
                    },
                    clearCoatRoughness: {
                        value: 0
                    }
                }]),
                vertexShader: fh.meshphysical_vert,
                fragmentShader: fh.meshphysical_frag
            },
            V.prototype = {
                constructor: V,
                set: function(a, b) {
                    return this.min.copy(a),
                    this.max.copy(b),
                    this
                },
                setFromPoints: function(a) {
                    this.makeEmpty();
                    for (var b = 0, c = a.length; b < c; b++)
                        this.expandByPoint(a[b]);
                    return this
                },
                setFromCenterAndSize: function() {
                    var a = new c;
                    return function(b, c) {
                        var d = a.copy(c).multiplyScalar(.5);
                        return this.min.copy(b).sub(d),
                        this.max.copy(b).add(d),
                        this
                    }
                }(),
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(a) {
                    return this.min.copy(a.min),
                    this.max.copy(a.max),
                    this
                },
                makeEmpty: function() {
                    return this.min.x = this.min.y = 1 / 0,
                    this.max.x = this.max.y = -1 / 0,
                    this
                },
                isEmpty: function() {
                    return this.max.x < this.min.x || this.max.y < this.min.y
                },
                getCenter: function(a) {
                    var b = a || new c;
                    return this.isEmpty() ? b.set(0, 0) : b.addVectors(this.min, this.max).multiplyScalar(.5)
                },
                getSize: function(a) {
                    var b = a || new c;
                    return this.isEmpty() ? b.set(0, 0) : b.subVectors(this.max, this.min)
                },
                expandByPoint: function(a) {
                    return this.min.min(a),
                    this.max.max(a),
                    this
                },
                expandByVector: function(a) {
                    return this.min.sub(a),
                    this.max.add(a),
                    this
                },
                expandByScalar: function(a) {
                    return this.min.addScalar(-a),
                    this.max.addScalar(a),
                    this
                },
                containsPoint: function(a) {
                    return !(a.x < this.min.x || a.x > this.max.x || a.y < this.min.y || a.y > this.max.y)
                },
                containsBox: function(a) {
                    return this.min.x <= a.min.x && a.max.x <= this.max.x && this.min.y <= a.min.y && a.max.y <= this.max.y
                },
                getParameter: function(a, b) {
                    return (b || new c).set((a.x - this.min.x) / (this.max.x - this.min.x), (a.y - this.min.y) / (this.max.y - this.min.y))
                },
                intersectsBox: function(a) {
                    return !(a.max.x < this.min.x || a.min.x > this.max.x || a.max.y < this.min.y || a.min.y > this.max.y)
                },
                clampPoint: function(a, b) {
                    return (b || new c).copy(a).clamp(this.min, this.max)
                },
                distanceToPoint: function() {
                    var a = new c;
                    return function(b) {
                        return a.copy(b).clamp(this.min, this.max).sub(b).length()
                    }
                }(),
                intersect: function(a) {
                    return this.min.max(a.min),
                    this.max.min(a.max),
                    this
                },
                union: function(a) {
                    return this.min.min(a.min),
                    this.max.max(a.max),
                    this
                },
                translate: function(a) {
                    return this.min.add(a),
                    this.max.add(a),
                    this
                },
                equals: function(a) {
                    return a.min.equals(this.min) && a.max.equals(this.max)
                }
            };
            var jh = 0;
            Y.prototype = {
                constructor: Y,
                isMaterial: !0,
                get needsUpdate() {
                    return this._needsUpdate
                },
                set needsUpdate(a) {
                    !0 === a && this.update(),
                    this._needsUpdate = a
                },
                setValues: function(a) {
                    if (void 0 !== a)
                        for (var b in a) {
                            var c = a[b];
                            if (void 0 !== c) {
                                var d = this[b];
                                void 0 !== d && (d && d.isColor ? d.set(c) : d && d.isVector3 && c && c.isVector3 ? d.copy(c) : this[b] = "overdraw" === b ? Number(c) : c)
                            }
                        }
                },
                toJSON: function(a) {
                    function b(a) {
                        var b = [];
                        for (var c in a) {
                            var d = a[c];
                            delete d.metadata,
                            b.push(d)
                        }
                        return b
                    }
                    var c = void 0 === a;
                    c && (a = {
                        textures: {},
                        images: {}
                    });
                    var d = {
                        metadata: {
                            version: 4.4,
                            type: "Material",
                            generator: "Material.toJSON"
                        }
                    };
                    if (d.uuid = this.uuid,
                    d.type = this.type,
                    "" !== this.name && (d.name = this.name),
                    this.color && this.color.isColor && (d.color = this.color.getHex()),
                    void 0 !== this.roughness && (d.roughness = this.roughness),
                    void 0 !== this.metalness && (d.metalness = this.metalness),
                    this.emissive && this.emissive.isColor && (d.emissive = this.emissive.getHex()),
                    this.specular && this.specular.isColor && (d.specular = this.specular.getHex()),
                    void 0 !== this.shininess && (d.shininess = this.shininess),
                    void 0 !== this.clearCoat && (d.clearCoat = this.clearCoat),
                    void 0 !== this.clearCoatRoughness && (d.clearCoatRoughness = this.clearCoatRoughness),
                    this.map && this.map.isTexture && (d.map = this.map.toJSON(a).uuid),
                    this.alphaMap && this.alphaMap.isTexture && (d.alphaMap = this.alphaMap.toJSON(a).uuid),
                    this.lightMap && this.lightMap.isTexture && (d.lightMap = this.lightMap.toJSON(a).uuid),
                    this.bumpMap && this.bumpMap.isTexture && (d.bumpMap = this.bumpMap.toJSON(a).uuid,
                    d.bumpScale = this.bumpScale),
                    this.normalMap && this.normalMap.isTexture && (d.normalMap = this.normalMap.toJSON(a).uuid,
                    d.normalScale = this.normalScale.toArray()),
                    this.displacementMap && this.displacementMap.isTexture && (d.displacementMap = this.displacementMap.toJSON(a).uuid,
                    d.displacementScale = this.displacementScale,
                    d.displacementBias = this.displacementBias),
                    this.roughnessMap && this.roughnessMap.isTexture && (d.roughnessMap = this.roughnessMap.toJSON(a).uuid),
                    this.metalnessMap && this.metalnessMap.isTexture && (d.metalnessMap = this.metalnessMap.toJSON(a).uuid),
                    this.emissiveMap && this.emissiveMap.isTexture && (d.emissiveMap = this.emissiveMap.toJSON(a).uuid),
                    this.specularMap && this.specularMap.isTexture && (d.specularMap = this.specularMap.toJSON(a).uuid),
                    this.envMap && this.envMap.isTexture && (d.envMap = this.envMap.toJSON(a).uuid,
                    d.reflectivity = this.reflectivity),
                    this.gradientMap && this.gradientMap.isTexture && (d.gradientMap = this.gradientMap.toJSON(a).uuid),
                    void 0 !== this.size && (d.size = this.size),
                    void 0 !== this.sizeAttenuation && (d.sizeAttenuation = this.sizeAttenuation),
                    this.blending !== jf && (d.blending = this.blending),
                    this.shading !== df && (d.shading = this.shading),
                    this.side !== _e && (d.side = this.side),
                    this.vertexColors !== ef && (d.vertexColors = this.vertexColors),
                    this.opacity < 1 && (d.opacity = this.opacity),
                    !0 === this.transparent && (d.transparent = this.transparent),
                    d.depthFunc = this.depthFunc,
                    d.depthTest = this.depthTest,
                    d.depthWrite = this.depthWrite,
                    this.alphaTest > 0 && (d.alphaTest = this.alphaTest),
                    !0 === this.premultipliedAlpha && (d.premultipliedAlpha = this.premultipliedAlpha),
                    !0 === this.wireframe && (d.wireframe = this.wireframe),
                    this.wireframeLinewidth > 1 && (d.wireframeLinewidth = this.wireframeLinewidth),
                    "round" !== this.wireframeLinecap && (d.wireframeLinecap = this.wireframeLinecap),
                    "round" !== this.wireframeLinejoin && (d.wireframeLinejoin = this.wireframeLinejoin),
                    d.skinning = this.skinning,
                    d.morphTargets = this.morphTargets,
                    c) {
                        var e = b(a.textures)
                          , f = b(a.images);
                        e.length > 0 && (d.textures = e),
                        f.length > 0 && (d.images = f)
                    }
                    return d
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(a) {
                    this.name = a.name,
                    this.fog = a.fog,
                    this.lights = a.lights,
                    this.blending = a.blending,
                    this.side = a.side,
                    this.shading = a.shading,
                    this.vertexColors = a.vertexColors,
                    this.opacity = a.opacity,
                    this.transparent = a.transparent,
                    this.blendSrc = a.blendSrc,
                    this.blendDst = a.blendDst,
                    this.blendEquation = a.blendEquation,
                    this.blendSrcAlpha = a.blendSrcAlpha,
                    this.blendDstAlpha = a.blendDstAlpha,
                    this.blendEquationAlpha = a.blendEquationAlpha,
                    this.depthFunc = a.depthFunc,
                    this.depthTest = a.depthTest,
                    this.depthWrite = a.depthWrite,
                    this.colorWrite = a.colorWrite,
                    this.precision = a.precision,
                    this.polygonOffset = a.polygonOffset,
                    this.polygonOffsetFactor = a.polygonOffsetFactor,
                    this.polygonOffsetUnits = a.polygonOffsetUnits,
                    this.alphaTest = a.alphaTest,
                    this.premultipliedAlpha = a.premultipliedAlpha,
                    this.overdraw = a.overdraw,
                    this.visible = a.visible,
                    this.clipShadows = a.clipShadows,
                    this.clipIntersection = a.clipIntersection;
                    var b = a.clippingPlanes
                      , c = null;
                    if (null !== b) {
                        var d = b.length;
                        c = new Array(d);
                        for (var e = 0; e !== d; ++e)
                            c[e] = b[e].clone()
                    }
                    return this.clippingPlanes = c,
                    this
                },
                update: function() {
                    this.dispatchEvent({
                        type: "update"
                    })
                },
                dispose: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            },
            Object.assign(Y.prototype, b.prototype),
            Z.prototype = Object.create(Y.prototype),
            Z.prototype.constructor = Z,
            Z.prototype.isShaderMaterial = !0,
            Z.prototype.copy = function(a) {
                return Y.prototype.copy.call(this, a),
                this.fragmentShader = a.fragmentShader,
                this.vertexShader = a.vertexShader,
                this.uniforms = eh.clone(a.uniforms),
                this.defines = a.defines,
                this.wireframe = a.wireframe,
                this.wireframeLinewidth = a.wireframeLinewidth,
                this.lights = a.lights,
                this.clipping = a.clipping,
                this.skinning = a.skinning,
                this.morphTargets = a.morphTargets,
                this.morphNormals = a.morphNormals,
                this.extensions = a.extensions,
                this
            }
            ,
            Z.prototype.toJSON = function(a) {
                var b = Y.prototype.toJSON.call(this, a);
                return b.uniforms = this.uniforms,
                b.vertexShader = this.vertexShader,
                b.fragmentShader = this.fragmentShader,
                b
            }
            ,
            $.prototype = Object.create(Y.prototype),
            $.prototype.constructor = $,
            $.prototype.isMeshDepthMaterial = !0,
            $.prototype.copy = function(a) {
                return Y.prototype.copy.call(this, a),
                this.depthPacking = a.depthPacking,
                this.skinning = a.skinning,
                this.morphTargets = a.morphTargets,
                this.map = a.map,
                this.alphaMap = a.alphaMap,
                this.displacementMap = a.displacementMap,
                this.displacementScale = a.displacementScale,
                this.displacementBias = a.displacementBias,
                this.wireframe = a.wireframe,
                this.wireframeLinewidth = a.wireframeLinewidth,
                this
            }
            ,
            _.prototype = {
                constructor: _,
                isBox3: !0,
                set: function(a, b) {
                    return this.min.copy(a),
                    this.max.copy(b),
                    this
                },
                setFromArray: function(a) {
                    for (var b = 1 / 0, c = 1 / 0, d = 1 / 0, e = -1 / 0, f = -1 / 0, g = -1 / 0, h = 0, i = a.length; h < i; h += 3) {
                        var j = a[h]
                          , k = a[h + 1]
                          , l = a[h + 2];
                        j < b && (b = j),
                        k < c && (c = k),
                        l < d && (d = l),
                        j > e && (e = j),
                        k > f && (f = k),
                        l > g && (g = l)
                    }
                    return this.min.set(b, c, d),
                    this.max.set(e, f, g),
                    this
                },
                setFromBufferAttribute: function(a) {
                    for (var b = 1 / 0, c = 1 / 0, d = 1 / 0, e = -1 / 0, f = -1 / 0, g = -1 / 0, h = 0, i = a.count; h < i; h++) {
                        var j = a.getX(h)
                          , k = a.getY(h)
                          , l = a.getZ(h);
                        j < b && (b = j),
                        k < c && (c = k),
                        l < d && (d = l),
                        j > e && (e = j),
                        k > f && (f = k),
                        l > g && (g = l)
                    }
                    return this.min.set(b, c, d),
                    this.max.set(e, f, g),
                    this
                },
                setFromPoints: function(a) {
                    this.makeEmpty();
                    for (var b = 0, c = a.length; b < c; b++)
                        this.expandByPoint(a[b]);
                    return this
                },
                setFromCenterAndSize: function() {
                    var a = new i;
                    return function(b, c) {
                        var d = a.copy(c).multiplyScalar(.5);
                        return this.min.copy(b).sub(d),
                        this.max.copy(b).add(d),
                        this
                    }
                }(),
                setFromObject: function(a) {
                    return this.makeEmpty(),
                    this.expandByObject(a)
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(a) {
                    return this.min.copy(a.min),
                    this.max.copy(a.max),
                    this
                },
                makeEmpty: function() {
                    return this.min.x = this.min.y = this.min.z = 1 / 0,
                    this.max.x = this.max.y = this.max.z = -1 / 0,
                    this
                },
                isEmpty: function() {
                    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
                },
                getCenter: function(a) {
                    var b = a || new i;
                    return this.isEmpty() ? b.set(0, 0, 0) : b.addVectors(this.min, this.max).multiplyScalar(.5)
                },
                getSize: function(a) {
                    var b = a || new i;
                    return this.isEmpty() ? b.set(0, 0, 0) : b.subVectors(this.max, this.min)
                },
                expandByPoint: function(a) {
                    return this.min.min(a),
                    this.max.max(a),
                    this
                },
                expandByVector: function(a) {
                    return this.min.sub(a),
                    this.max.add(a),
                    this
                },
                expandByScalar: function(a) {
                    return this.min.addScalar(-a),
                    this.max.addScalar(a),
                    this
                },
                expandByObject: function() {
                    var a = new i;
                    return function(b) {
                        var c = this;
                        return b.updateMatrixWorld(!0),
                        b.traverse(function(b) {
                            var d, e, f = b.geometry;
                            if (void 0 !== f)
                                if (f.isGeometry) {
                                    var g = f.vertices;
                                    for (d = 0,
                                    e = g.length; d < e; d++)
                                        a.copy(g[d]),
                                        a.applyMatrix4(b.matrixWorld),
                                        c.expandByPoint(a)
                                } else if (f.isBufferGeometry) {
                                    var h = f.attributes.position;
                                    if (void 0 !== h)
                                        for (d = 0,
                                        e = h.count; d < e; d++)
                                            a.fromBufferAttribute(h, d).applyMatrix4(b.matrixWorld),
                                            c.expandByPoint(a)
                                }
                        }),
                        this
                    }
                }(),
                containsPoint: function(a) {
                    return !(a.x < this.min.x || a.x > this.max.x || a.y < this.min.y || a.y > this.max.y || a.z < this.min.z || a.z > this.max.z)
                },
                containsBox: function(a) {
                    return this.min.x <= a.min.x && a.max.x <= this.max.x && this.min.y <= a.min.y && a.max.y <= this.max.y && this.min.z <= a.min.z && a.max.z <= this.max.z
                },
                getParameter: function(a, b) {
                    return (b || new i).set((a.x - this.min.x) / (this.max.x - this.min.x), (a.y - this.min.y) / (this.max.y - this.min.y), (a.z - this.min.z) / (this.max.z - this.min.z))
                },
                intersectsBox: function(a) {
                    return !(a.max.x < this.min.x || a.min.x > this.max.x || a.max.y < this.min.y || a.min.y > this.max.y || a.max.z < this.min.z || a.min.z > this.max.z)
                },
                intersectsSphere: function() {
                    var a;
                    return function(b) {
                        return void 0 === a && (a = new i),
                        this.clampPoint(b.center, a),
                        a.distanceToSquared(b.center) <= b.radius * b.radius
                    }
                }(),
                intersectsPlane: function(a) {
                    var b, c;
                    return a.normal.x > 0 ? (b = a.normal.x * this.min.x,
                    c = a.normal.x * this.max.x) : (b = a.normal.x * this.max.x,
                    c = a.normal.x * this.min.x),
                    a.normal.y > 0 ? (b += a.normal.y * this.min.y,
                    c += a.normal.y * this.max.y) : (b += a.normal.y * this.max.y,
                    c += a.normal.y * this.min.y),
                    a.normal.z > 0 ? (b += a.normal.z * this.min.z,
                    c += a.normal.z * this.max.z) : (b += a.normal.z * this.max.z,
                    c += a.normal.z * this.min.z),
                    b <= a.constant && c >= a.constant
                },
                clampPoint: function(a, b) {
                    return (b || new i).copy(a).clamp(this.min, this.max)
                },
                distanceToPoint: function() {
                    var a = new i;
                    return function(b) {
                        return a.copy(b).clamp(this.min, this.max).sub(b).length()
                    }
                }(),
                getBoundingSphere: function() {
                    var a = new i;
                    return function(b) {
                        var c = b || new aa;
                        return this.getCenter(c.center),
                        c.radius = .5 * this.getSize(a).length(),
                        c
                    }
                }(),
                intersect: function(a) {
                    return this.min.max(a.min),
                    this.max.min(a.max),
                    this.isEmpty() && this.makeEmpty(),
                    this
                },
                union: function(a) {
                    return this.min.min(a.min),
                    this.max.max(a.max),
                    this
                },
                applyMatrix4: function() {
                    var a = [new i, new i, new i, new i, new i, new i, new i, new i];
                    return function(b) {
                        return this.isEmpty() ? this : (a[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(b),
                        a[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(b),
                        a[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(b),
                        a[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(b),
                        a[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(b),
                        a[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(b),
                        a[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(b),
                        a[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(b),
                        this.setFromPoints(a),
                        this)
                    }
                }(),
                translate: function(a) {
                    return this.min.add(a),
                    this.max.add(a),
                    this
                },
                equals: function(a) {
                    return a.min.equals(this.min) && a.max.equals(this.max)
                }
            },
            aa.prototype = {
                constructor: aa,
                set: function(a, b) {
                    return this.center.copy(a),
                    this.radius = b,
                    this
                },
                setFromPoints: function() {
                    var a;
                    return function(b, c) {
                        void 0 === a && (a = new _);
                        var d = this.center;
                        void 0 !== c ? d.copy(c) : a.setFromPoints(b).getCenter(d);
                        for (var e = 0, f = 0, g = b.length; f < g; f++)
                            e = Math.max(e, d.distanceToSquared(b[f]));
                        return this.radius = Math.sqrt(e),
                        this
                    }
                }(),
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(a) {
                    return this.center.copy(a.center),
                    this.radius = a.radius,
                    this
                },
                empty: function() {
                    return this.radius <= 0
                },
                containsPoint: function(a) {
                    return a.distanceToSquared(this.center) <= this.radius * this.radius
                },
                distanceToPoint: function(a) {
                    return a.distanceTo(this.center) - this.radius
                },
                intersectsSphere: function(a) {
                    var b = this.radius + a.radius;
                    return a.center.distanceToSquared(this.center) <= b * b
                },
                intersectsBox: function(a) {
                    return a.intersectsSphere(this)
                },
                intersectsPlane: function(a) {
                    return Math.abs(this.center.dot(a.normal) - a.constant) <= this.radius
                },
                clampPoint: function(a, b) {
                    var c = this.center.distanceToSquared(a)
                      , d = b || new i;
                    return d.copy(a),
                    c > this.radius * this.radius && (d.sub(this.center).normalize(),
                    d.multiplyScalar(this.radius).add(this.center)),
                    d
                },
                getBoundingBox: function(a) {
                    var b = a || new _;
                    return b.set(this.center, this.center),
                    b.expandByScalar(this.radius),
                    b
                },
                applyMatrix4: function(a) {
                    return this.center.applyMatrix4(a),
                    this.radius = this.radius * a.getMaxScaleOnAxis(),
                    this
                },
                translate: function(a) {
                    return this.center.add(a),
                    this
                },
                equals: function(a) {
                    return a.center.equals(this.center) && a.radius === this.radius
                }
            },
            ba.prototype = {
                constructor: ba,
                isMatrix3: !0,
                set: function(a, b, c, d, e, f, g, h, i) {
                    var j = this.elements;
                    return j[0] = a,
                    j[1] = d,
                    j[2] = g,
                    j[3] = b,
                    j[4] = e,
                    j[5] = h,
                    j[6] = c,
                    j[7] = f,
                    j[8] = i,
                    this
                },
                identity: function() {
                    return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1),
                    this
                },
                clone: function() {
                    return (new this.constructor).fromArray(this.elements)
                },
                copy: function(a) {
                    var b = a.elements;
                    return this.set(b[0], b[3], b[6], b[1], b[4], b[7], b[2], b[5], b[8]),
                    this
                },
                setFromMatrix4: function(a) {
                    var b = a.elements;
                    return this.set(b[0], b[4], b[8], b[1], b[5], b[9], b[2], b[6], b[10]),
                    this
                },
                applyToBufferAttribute: function() {
                    var a;
                    return function(b) {
                        void 0 === a && (a = new i);
                        for (var c = 0, d = b.count; c < d; c++)
                            a.x = b.getX(c),
                            a.y = b.getY(c),
                            a.z = b.getZ(c),
                            a.applyMatrix3(this),
                            b.setXYZ(c, a.x, a.y, a.z);
                        return b
                    }
                }(),
                multiplyScalar: function(a) {
                    var b = this.elements;
                    return b[0] *= a,
                    b[3] *= a,
                    b[6] *= a,
                    b[1] *= a,
                    b[4] *= a,
                    b[7] *= a,
                    b[2] *= a,
                    b[5] *= a,
                    b[8] *= a,
                    this
                },
                determinant: function() {
                    var a = this.elements
                      , b = a[0]
                      , c = a[1]
                      , d = a[2]
                      , e = a[3]
                      , f = a[4]
                      , g = a[5]
                      , h = a[6]
                      , i = a[7]
                      , j = a[8];
                    return b * f * j - b * g * i - c * e * j + c * g * h + d * e * i - d * f * h
                },
                getInverse: function(a, b) {
                    a && a.isMatrix4;
                    var c = a.elements
                      , d = this.elements
                      , e = c[0]
                      , f = c[1]
                      , g = c[2]
                      , h = c[3]
                      , i = c[4]
                      , j = c[5]
                      , k = c[6]
                      , l = c[7]
                      , m = c[8]
                      , n = m * i - j * l
                      , o = j * k - m * h
                      , p = l * h - i * k
                      , q = e * n + f * o + g * p;
                    if (0 === q) {
                        var r = "THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0";
                        if (!0 === b)
                            throw new Error(r);
                        return this.identity()
                    }
                    var s = 1 / q;
                    return d[0] = n * s,
                    d[1] = (g * l - m * f) * s,
                    d[2] = (j * f - g * i) * s,
                    d[3] = o * s,
                    d[4] = (m * e - g * k) * s,
                    d[5] = (g * h - j * e) * s,
                    d[6] = p * s,
                    d[7] = (f * k - l * e) * s,
                    d[8] = (i * e - f * h) * s,
                    this
                },
                transpose: function() {
                    var a, b = this.elements;
                    return a = b[1],
                    b[1] = b[3],
                    b[3] = a,
                    a = b[2],
                    b[2] = b[6],
                    b[6] = a,
                    a = b[5],
                    b[5] = b[7],
                    b[7] = a,
                    this
                },
                getNormalMatrix: function(a) {
                    return this.setFromMatrix4(a).getInverse(this).transpose()
                },
                transposeIntoArray: function(a) {
                    var b = this.elements;
                    return a[0] = b[0],
                    a[1] = b[3],
                    a[2] = b[6],
                    a[3] = b[1],
                    a[4] = b[4],
                    a[5] = b[7],
                    a[6] = b[2],
                    a[7] = b[5],
                    a[8] = b[8],
                    this
                },
                fromArray: function(a, b) {
                    void 0 === b && (b = 0);
                    for (var c = 0; c < 9; c++)
                        this.elements[c] = a[c + b];
                    return this
                },
                toArray: function(a, b) {
                    void 0 === a && (a = []),
                    void 0 === b && (b = 0);
                    var c = this.elements;
                    return a[b] = c[0],
                    a[b + 1] = c[1],
                    a[b + 2] = c[2],
                    a[b + 3] = c[3],
                    a[b + 4] = c[4],
                    a[b + 5] = c[5],
                    a[b + 6] = c[6],
                    a[b + 7] = c[7],
                    a[b + 8] = c[8],
                    a
                }
            },
            ca.prototype = {
                constructor: ca,
                set: function(a, b) {
                    return this.normal.copy(a),
                    this.constant = b,
                    this
                },
                setComponents: function(a, b, c, d) {
                    return this.normal.set(a, b, c),
                    this.constant = d,
                    this
                },
                setFromNormalAndCoplanarPoint: function(a, b) {
                    return this.normal.copy(a),
                    this.constant = -b.dot(this.normal),
                    this
                },
                setFromCoplanarPoints: function() {
                    var a = new i
                      , b = new i;
                    return function(c, d, e) {
                        var f = a.subVectors(e, d).cross(b.subVectors(c, d)).normalize();
                        return this.setFromNormalAndCoplanarPoint(f, c),
                        this
                    }
                }(),
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(a) {
                    return this.normal.copy(a.normal),
                    this.constant = a.constant,
                    this
                },
                normalize: function() {
                    var a = 1 / this.normal.length();
                    return this.normal.multiplyScalar(a),
                    this.constant *= a,
                    this
                },
                negate: function() {
                    return this.constant *= -1,
                    this.normal.negate(),
                    this
                },
                distanceToPoint: function(a) {
                    return this.normal.dot(a) + this.constant
                },
                distanceToSphere: function(a) {
                    return this.distanceToPoint(a.center) - a.radius
                },
                projectPoint: function(a, b) {
                    return this.orthoPoint(a, b).sub(a).negate()
                },
                orthoPoint: function(a, b) {
                    var c = this.distanceToPoint(a);
                    return (b || new i).copy(this.normal).multiplyScalar(c)
                },
                intersectLine: function() {
                    var a = new i;
                    return function(b, c) {
                        var d = c || new i
                          , e = b.delta(a)
                          , f = this.normal.dot(e);
                        if (0 !== f) {
                            var g = -(b.start.dot(this.normal) + this.constant) / f;
                            if (!(g < 0 || g > 1))
                                return d.copy(e).multiplyScalar(g).add(b.start)
                        } else if (0 === this.distanceToPoint(b.start))
                            return d.copy(b.start)
                    }
                }(),
                intersectsLine: function(a) {
                    var b = this.distanceToPoint(a.start)
                      , c = this.distanceToPoint(a.end);
                    return b < 0 && c > 0 || c < 0 && b > 0
                },
                intersectsBox: function(a) {
                    return a.intersectsPlane(this)
                },
                intersectsSphere: function(a) {
                    return a.intersectsPlane(this)
                },
                coplanarPoint: function(a) {
                    return (a || new i).copy(this.normal).multiplyScalar(-this.constant)
                },
                applyMatrix4: function() {
                    var a = new i
                      , b = new ba;
                    return function(c, d) {
                        var e = this.coplanarPoint(a).applyMatrix4(c)
                          , f = d || b.getNormalMatrix(c)
                          , g = this.normal.applyMatrix3(f).normalize();
                        return this.constant = -e.dot(g),
                        this
                    }
                }(),
                translate: function(a) {
                    return this.constant = this.constant - a.dot(this.normal),
                    this
                },
                equals: function(a) {
                    return a.normal.equals(this.normal) && a.constant === this.constant
                }
            },
            da.prototype = {
                constructor: da,
                set: function(a, b, c, d, e, f) {
                    var g = this.planes;
                    return g[0].copy(a),
                    g[1].copy(b),
                    g[2].copy(c),
                    g[3].copy(d),
                    g[4].copy(e),
                    g[5].copy(f),
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(a) {
                    for (var b = this.planes, c = 0; c < 6; c++)
                        b[c].copy(a.planes[c]);
                    return this
                },
                setFromMatrix: function(a) {
                    var b = this.planes
                      , c = a.elements
                      , d = c[0]
                      , e = c[1]
                      , f = c[2]
                      , g = c[3]
                      , h = c[4]
                      , i = c[5]
                      , j = c[6]
                      , k = c[7]
                      , l = c[8]
                      , m = c[9]
                      , n = c[10]
                      , o = c[11]
                      , p = c[12]
                      , q = c[13]
                      , r = c[14]
                      , s = c[15];
                    return b[0].setComponents(g - d, k - h, o - l, s - p).normalize(),
                    b[1].setComponents(g + d, k + h, o + l, s + p).normalize(),
                    b[2].setComponents(g + e, k + i, o + m, s + q).normalize(),
                    b[3].setComponents(g - e, k - i, o - m, s - q).normalize(),
                    b[4].setComponents(g - f, k - j, o - n, s - r).normalize(),
                    b[5].setComponents(g + f, k + j, o + n, s + r).normalize(),
                    this
                },
                intersectsObject: function() {
                    var a = new aa;
                    return function(b) {
                        var c = b.geometry;
                        return null === c.boundingSphere && c.computeBoundingSphere(),
                        a.copy(c.boundingSphere).applyMatrix4(b.matrixWorld),
                        this.intersectsSphere(a)
                    }
                }(),
                intersectsSprite: function() {
                    var a = new aa;
                    return function(b) {
                        return a.center.set(0, 0, 0),
                        a.radius = .7071067811865476,
                        a.applyMatrix4(b.matrixWorld),
                        this.intersectsSphere(a)
                    }
                }(),
                intersectsSphere: function(a) {
                    for (var b = this.planes, c = a.center, d = -a.radius, e = 0; e < 6; e++) {
                        if (b[e].distanceToPoint(c) < d)
                            return !1
                    }
                    return !0
                },
                intersectsBox: function() {
                    var a = new i
                      , b = new i;
                    return function(c) {
                        for (var d = this.planes, e = 0; e < 6; e++) {
                            var f = d[e];
                            a.x = f.normal.x > 0 ? c.min.x : c.max.x,
                            b.x = f.normal.x > 0 ? c.max.x : c.min.x,
                            a.y = f.normal.y > 0 ? c.min.y : c.max.y,
                            b.y = f.normal.y > 0 ? c.max.y : c.min.y,
                            a.z = f.normal.z > 0 ? c.min.z : c.max.z,
                            b.z = f.normal.z > 0 ? c.max.z : c.min.z;
                            var g = f.distanceToPoint(a)
                              , h = f.distanceToPoint(b);
                            if (g < 0 && h < 0)
                                return !1
                        }
                        return !0
                    }
                }(),
                containsPoint: function(a) {
                    for (var b = this.planes, c = 0; c < 6; c++)
                        if (b[c].distanceToPoint(a) < 0)
                            return !1;
                    return !0
                }
            },
            fa.prototype = {
                constructor: fa,
                set: function(a, b) {
                    return this.origin.copy(a),
                    this.direction.copy(b),
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(a) {
                    return this.origin.copy(a.origin),
                    this.direction.copy(a.direction),
                    this
                },
                at: function(a, b) {
                    return (b || new i).copy(this.direction).multiplyScalar(a).add(this.origin)
                },
                lookAt: function(a) {
                    return this.direction.copy(a).sub(this.origin).normalize(),
                    this
                },
                recast: function() {
                    var a = new i;
                    return function(b) {
                        return this.origin.copy(this.at(b, a)),
                        this
                    }
                }(),
                closestPointToPoint: function(a, b) {
                    var c = b || new i;
                    c.subVectors(a, this.origin);
                    var d = c.dot(this.direction);
                    return d < 0 ? c.copy(this.origin) : c.copy(this.direction).multiplyScalar(d).add(this.origin)
                },
                distanceToPoint: function(a) {
                    return Math.sqrt(this.distanceSqToPoint(a))
                },
                distanceSqToPoint: function() {
                    var a = new i;
                    return function(b) {
                        var c = a.subVectors(b, this.origin).dot(this.direction);
                        return c < 0 ? this.origin.distanceToSquared(b) : (a.copy(this.direction).multiplyScalar(c).add(this.origin),
                        a.distanceToSquared(b))
                    }
                }(),
                distanceSqToSegment: function() {
                    var a = new i
                      , b = new i
                      , c = new i;
                    return function(d, e, f, g) {
                        a.copy(d).add(e).multiplyScalar(.5),
                        b.copy(e).sub(d).normalize(),
                        c.copy(this.origin).sub(a);
                        var h, i, j, k, l = .5 * d.distanceTo(e), m = -this.direction.dot(b), n = c.dot(this.direction), o = -c.dot(b), p = c.lengthSq(), q = Math.abs(1 - m * m);
                        if (q > 0)
                            if (h = m * o - n,
                            i = m * n - o,
                            k = l * q,
                            h >= 0)
                                if (i >= -k)
                                    if (i <= k) {
                                        var r = 1 / q;
                                        h *= r,
                                        i *= r,
                                        j = h * (h + m * i + 2 * n) + i * (m * h + i + 2 * o) + p
                                    } else
                                        i = l,
                                        h = Math.max(0, -(m * i + n)),
                                        j = -h * h + i * (i + 2 * o) + p;
                                else
                                    i = -l,
                                    h = Math.max(0, -(m * i + n)),
                                    j = -h * h + i * (i + 2 * o) + p;
                            else
                                i <= -k ? (h = Math.max(0, -(-m * l + n)),
                                i = h > 0 ? -l : Math.min(Math.max(-l, -o), l),
                                j = -h * h + i * (i + 2 * o) + p) : i <= k ? (h = 0,
                                i = Math.min(Math.max(-l, -o), l),
                                j = i * (i + 2 * o) + p) : (h = Math.max(0, -(m * l + n)),
                                i = h > 0 ? l : Math.min(Math.max(-l, -o), l),
                                j = -h * h + i * (i + 2 * o) + p);
                        else
                            i = m > 0 ? -l : l,
                            h = Math.max(0, -(m * i + n)),
                            j = -h * h + i * (i + 2 * o) + p;
                        return f && f.copy(this.direction).multiplyScalar(h).add(this.origin),
                        g && g.copy(b).multiplyScalar(i).add(a),
                        j
                    }
                }(),
                intersectSphere: function() {
                    var a = new i;
                    return function(b, c) {
                        a.subVectors(b.center, this.origin);
                        var d = a.dot(this.direction)
                          , e = a.dot(a) - d * d
                          , f = b.radius * b.radius;
                        if (e > f)
                            return null;
                        var g = Math.sqrt(f - e)
                          , h = d - g
                          , i = d + g;
                        return h < 0 && i < 0 ? null : h < 0 ? this.at(i, c) : this.at(h, c)
                    }
                }(),
                intersectsSphere: function(a) {
                    return this.distanceToPoint(a.center) <= a.radius
                },
                distanceToPlane: function(a) {
                    var b = a.normal.dot(this.direction);
                    if (0 === b)
                        return 0 === a.distanceToPoint(this.origin) ? 0 : null;
                    var c = -(this.origin.dot(a.normal) + a.constant) / b;
                    return c >= 0 ? c : null
                },
                intersectPlane: function(a, b) {
                    var c = this.distanceToPlane(a);
                    return null === c ? null : this.at(c, b)
                },
                intersectsPlane: function(a) {
                    var b = a.distanceToPoint(this.origin);
                    return 0 === b || a.normal.dot(this.direction) * b < 0
                },
                intersectBox: function(a, b) {
                    var c, d, e, f, g, h, i = 1 / this.direction.x, j = 1 / this.direction.y, k = 1 / this.direction.z, l = this.origin;
                    return i >= 0 ? (c = (a.min.x - l.x) * i,
                    d = (a.max.x - l.x) * i) : (c = (a.max.x - l.x) * i,
                    d = (a.min.x - l.x) * i),
                    j >= 0 ? (e = (a.min.y - l.y) * j,
                    f = (a.max.y - l.y) * j) : (e = (a.max.y - l.y) * j,
                    f = (a.min.y - l.y) * j),
                    c > f || e > d ? null : ((e > c || c !== c) && (c = e),
                    (f < d || d !== d) && (d = f),
                    k >= 0 ? (g = (a.min.z - l.z) * k,
                    h = (a.max.z - l.z) * k) : (g = (a.max.z - l.z) * k,
                    h = (a.min.z - l.z) * k),
                    c > h || g > d ? null : ((g > c || c !== c) && (c = g),
                    (h < d || d !== d) && (d = h),
                    d < 0 ? null : this.at(c >= 0 ? c : d, b)))
                },
                intersectsBox: function() {
                    var a = new i;
                    return function(b) {
                        return null !== this.intersectBox(b, a)
                    }
                }(),
                intersectTriangle: function() {
                    var a = new i
                      , b = new i
                      , c = new i
                      , d = new i;
                    return function(e, f, g, h, i) {
                        b.subVectors(f, e),
                        c.subVectors(g, e),
                        d.crossVectors(b, c);
                        var j, k = this.direction.dot(d);
                        if (k > 0) {
                            if (h)
                                return null;
                            j = 1
                        } else {
                            if (!(k < 0))
                                return null;
                            j = -1,
                            k = -k
                        }
                        a.subVectors(this.origin, e);
                        var l = j * this.direction.dot(c.crossVectors(a, c));
                        if (l < 0)
                            return null;
                        var m = j * this.direction.dot(b.cross(a));
                        if (m < 0)
                            return null;
                        if (l + m > k)
                            return null;
                        var n = -j * a.dot(d);
                        return n < 0 ? null : this.at(n / k, i)
                    }
                }(),
                applyMatrix4: function(a) {
                    return this.direction.add(this.origin).applyMatrix4(a),
                    this.origin.applyMatrix4(a),
                    this.direction.sub(this.origin),
                    this.direction.normalize(),
                    this
                },
                equals: function(a) {
                    return a.origin.equals(this.origin) && a.direction.equals(this.direction)
                }
            },
            ga.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"],
            ga.DefaultOrder = "XYZ",
            ga.prototype = {
                constructor: ga,
                isEuler: !0,
                get x() {
                    return this._x
                },
                set x(a) {
                    this._x = a,
                    this.onChangeCallback()
                },
                get y() {
                    return this._y
                },
                set y(a) {
                    this._y = a,
                    this.onChangeCallback()
                },
                get z() {
                    return this._z
                },
                set z(a) {
                    this._z = a,
                    this.onChangeCallback()
                },
                get order() {
                    return this._order
                },
                set order(a) {
                    this._order = a,
                    this.onChangeCallback()
                },
                set: function(a, b, c, d) {
                    return this._x = a,
                    this._y = b,
                    this._z = c,
                    this._order = d || this._order,
                    this.onChangeCallback(),
                    this
                },
                clone: function() {
                    return new this.constructor(this._x,this._y,this._z,this._order)
                },
                copy: function(a) {
                    return this._x = a._x,
                    this._y = a._y,
                    this._z = a._z,
                    this._order = a._order,
                    this.onChangeCallback(),
                    this
                },
                setFromRotationMatrix: function(a, b, c) {
                    var d = Zg.clamp
                      , e = a.elements
                      , f = e[0]
                      , g = e[4]
                      , h = e[8]
                      , i = e[1]
                      , j = e[5]
                      , k = e[9]
                      , l = e[2]
                      , m = e[6]
                      , n = e[10];
                    return b = b || this._order,
                    "XYZ" === b ? (this._y = Math.asin(d(h, -1, 1)),
                    Math.abs(h) < .99999 ? (this._x = Math.atan2(-k, n),
                    this._z = Math.atan2(-g, f)) : (this._x = Math.atan2(m, j),
                    this._z = 0)) : "YXZ" === b ? (this._x = Math.asin(-d(k, -1, 1)),
                    Math.abs(k) < .99999 ? (this._y = Math.atan2(h, n),
                    this._z = Math.atan2(i, j)) : (this._y = Math.atan2(-l, f),
                    this._z = 0)) : "ZXY" === b ? (this._x = Math.asin(d(m, -1, 1)),
                    Math.abs(m) < .99999 ? (this._y = Math.atan2(-l, n),
                    this._z = Math.atan2(-g, j)) : (this._y = 0,
                    this._z = Math.atan2(i, f))) : "ZYX" === b ? (this._y = Math.asin(-d(l, -1, 1)),
                    Math.abs(l) < .99999 ? (this._x = Math.atan2(m, n),
                    this._z = Math.atan2(i, f)) : (this._x = 0,
                    this._z = Math.atan2(-g, j))) : "YZX" === b ? (this._z = Math.asin(d(i, -1, 1)),
                    Math.abs(i) < .99999 ? (this._x = Math.atan2(-k, j),
                    this._y = Math.atan2(-l, f)) : (this._x = 0,
                    this._y = Math.atan2(h, n))) : "XZY" === b && (this._z = Math.asin(-d(g, -1, 1)),
                    Math.abs(g) < .99999 ? (this._x = Math.atan2(m, j),
                    this._y = Math.atan2(h, f)) : (this._x = Math.atan2(-k, n),
                    this._y = 0)),
                    this._order = b,
                    !1 !== c && this.onChangeCallback(),
                    this
                },
                setFromQuaternion: function() {
                    var a;
                    return function(b, c, d) {
                        return void 0 === a && (a = new j),
                        a.makeRotationFromQuaternion(b),
                        this.setFromRotationMatrix(a, c, d)
                    }
                }(),
                setFromVector3: function(a, b) {
                    return this.set(a.x, a.y, a.z, b || this._order)
                },
                reorder: function() {
                    var a = new h;
                    return function(b) {
                        return a.setFromEuler(this),
                        this.setFromQuaternion(a, b)
                    }
                }(),
                equals: function(a) {
                    return a._x === this._x && a._y === this._y && a._z === this._z && a._order === this._order
                },
                fromArray: function(a) {
                    return this._x = a[0],
                    this._y = a[1],
                    this._z = a[2],
                    void 0 !== a[3] && (this._order = a[3]),
                    this.onChangeCallback(),
                    this
                },
                toArray: function(a, b) {
                    return void 0 === a && (a = []),
                    void 0 === b && (b = 0),
                    a[b] = this._x,
                    a[b + 1] = this._y,
                    a[b + 2] = this._z,
                    a[b + 3] = this._order,
                    a
                },
                toVector3: function(a) {
                    return a ? a.set(this._x, this._y, this._z) : new i(this._x,this._y,this._z)
                },
                onChange: function(a) {
                    return this.onChangeCallback = a,
                    this
                },
                onChangeCallback: function() {}
            },
            ha.prototype = {
                constructor: ha,
                set: function(a) {
                    this.mask = 1 << a
                },
                enable: function(a) {
                    this.mask |= 1 << a
                },
                toggle: function(a) {
                    this.mask ^= 1 << a
                },
                disable: function(a) {
                    this.mask &= ~(1 << a)
                },
                test: function(a) {
                    return 0 != (this.mask & a.mask)
                }
            };
            var kh = 0;
            ia.DefaultUp = new i(0,1,0),
            ia.DefaultMatrixAutoUpdate = !0,
            ia.prototype = {
                constructor: ia,
                isObject3D: !0,
                applyMatrix: function(a) {
                    this.matrix.multiplyMatrices(a, this.matrix),
                    this.matrix.decompose(this.position, this.quaternion, this.scale)
                },
                setRotationFromAxisAngle: function(a, b) {
                    this.quaternion.setFromAxisAngle(a, b)
                },
                setRotationFromEuler: function(a) {
                    this.quaternion.setFromEuler(a, !0)
                },
                setRotationFromMatrix: function(a) {
                    this.quaternion.setFromRotationMatrix(a)
                },
                setRotationFromQuaternion: function(a) {
                    this.quaternion.copy(a)
                },
                rotateOnAxis: function() {
                    var a = new h;
                    return function(b, c) {
                        return a.setFromAxisAngle(b, c),
                        this.quaternion.multiply(a),
                        this
                    }
                }(),
                rotateX: function() {
                    var a = new i(1,0,0);
                    return function(b) {
                        return this.rotateOnAxis(a, b)
                    }
                }(),
                rotateY: function() {
                    var a = new i(0,1,0);
                    return function(b) {
                        return this.rotateOnAxis(a, b)
                    }
                }(),
                rotateZ: function() {
                    var a = new i(0,0,1);
                    return function(b) {
                        return this.rotateOnAxis(a, b)
                    }
                }(),
                translateOnAxis: function() {
                    var a = new i;
                    return function(b, c) {
                        return a.copy(b).applyQuaternion(this.quaternion),
                        this.position.add(a.multiplyScalar(c)),
                        this
                    }
                }(),
                translateX: function() {
                    var a = new i(1,0,0);
                    return function(b) {
                        return this.translateOnAxis(a, b)
                    }
                }(),
                translateY: function() {
                    var a = new i(0,1,0);
                    return function(b) {
                        return this.translateOnAxis(a, b)
                    }
                }(),
                translateZ: function() {
                    var a = new i(0,0,1);
                    return function(b) {
                        return this.translateOnAxis(a, b)
                    }
                }(),
                localToWorld: function(a) {
                    return a.applyMatrix4(this.matrixWorld)
                },
                worldToLocal: function() {
                    var a = new j;
                    return function(b) {
                        return b.applyMatrix4(a.getInverse(this.matrixWorld))
                    }
                }(),
                lookAt: function() {
                    var a = new j;
                    return function(b) {
                        a.lookAt(b, this.position, this.up),
                        this.quaternion.setFromRotationMatrix(a)
                    }
                }(),
                add: function(a) {
                    if (arguments.length > 1) {
                        for (var b = 0; b < arguments.length; b++)
                            this.add(arguments[b]);
                        return this
                    }
                    return a === this ? this : (a && a.isObject3D && (null !== a.parent && a.parent.remove(a),
                    a.parent = this,
                    a.dispatchEvent({
                        type: "added"
                    }),
                    this.children.push(a)),
                    this)
                },
                remove: function(a) {
                    if (arguments.length > 1)
                        for (var b = 0; b < arguments.length; b++)
                            this.remove(arguments[b]);
                    var c = this.children.indexOf(a);
                    -1 !== c && (a.parent = null,
                    a.dispatchEvent({
                        type: "removed"
                    }),
                    this.children.splice(c, 1))
                },
                getObjectById: function(a) {
                    return this.getObjectByProperty("id", a)
                },
                getObjectByName: function(a) {
                    return this.getObjectByProperty("name", a)
                },
                getObjectByProperty: function(a, b) {
                    if (this[a] === b)
                        return this;
                    for (var c = 0, d = this.children.length; c < d; c++) {
                        var e = this.children[c]
                          , f = e.getObjectByProperty(a, b);
                        if (void 0 !== f)
                            return f
                    }
                },
                getWorldPosition: function(a) {
                    var b = a || new i;
                    return this.updateMatrixWorld(!0),
                    b.setFromMatrixPosition(this.matrixWorld)
                },
                getWorldQuaternion: function() {
                    var a = new i
                      , b = new i;
                    return function(c) {
                        var d = c || new h;
                        return this.updateMatrixWorld(!0),
                        this.matrixWorld.decompose(a, d, b),
                        d
                    }
                }(),
                getWorldRotation: function() {
                    var a = new h;
                    return function(b) {
                        var c = b || new ga;
                        return this.getWorldQuaternion(a),
                        c.setFromQuaternion(a, this.rotation.order, !1)
                    }
                }(),
                getWorldScale: function() {
                    var a = new i
                      , b = new h;
                    return function(c) {
                        var d = c || new i;
                        return this.updateMatrixWorld(!0),
                        this.matrixWorld.decompose(a, b, d),
                        d
                    }
                }(),
                getWorldDirection: function() {
                    var a = new h;
                    return function(b) {
                        var c = b || new i;
                        return this.getWorldQuaternion(a),
                        c.set(0, 0, 1).applyQuaternion(a)
                    }
                }(),
                raycast: function() {},
                traverse: function(a) {
                    a(this);
                    for (var b = this.children, c = 0, d = b.length; c < d; c++)
                        b[c].traverse(a)
                },
                traverseVisible: function(a) {
                    if (!1 !== this.visible) {
                        a(this);
                        for (var b = this.children, c = 0, d = b.length; c < d; c++)
                            b[c].traverseVisible(a)
                    }
                },
                traverseAncestors: function(a) {
                    var b = this.parent;
                    null !== b && (a(b),
                    b.traverseAncestors(a))
                },
                updateMatrix: function() {
                    this.matrix.compose(this.position, this.quaternion, this.scale),
                    this.matrixWorldNeedsUpdate = !0
                },
                updateMatrixWorld: function(a) {
                    !0 === this.matrixAutoUpdate && this.updateMatrix(),
                    !0 !== this.matrixWorldNeedsUpdate && !0 !== a || (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix),
                    this.matrixWorldNeedsUpdate = !1,
                    a = !0);
                    for (var b = this.children, c = 0, d = b.length; c < d; c++)
                        b[c].updateMatrixWorld(a)
                },
                toJSON: function(a) {
                    function b(a) {
                        var b = [];
                        for (var c in a) {
                            var d = a[c];
                            delete d.metadata,
                            b.push(d)
                        }
                        return b
                    }
                    var c = void 0 === a || "" === a
                      , d = {};
                    c && (a = {
                        geometries: {},
                        materials: {},
                        textures: {},
                        images: {}
                    },
                    d.metadata = {
                        version: 4.4,
                        type: "Object",
                        generator: "Object3D.toJSON"
                    });
                    var e = {};
                    if (e.uuid = this.uuid,
                    e.type = this.type,
                    "" !== this.name && (e.name = this.name),
                    "{}" !== JSON.stringify(this.userData) && (e.userData = this.userData),
                    !0 === this.castShadow && (e.castShadow = !0),
                    !0 === this.receiveShadow && (e.receiveShadow = !0),
                    !1 === this.visible && (e.visible = !1),
                    e.matrix = this.matrix.toArray(),
                    void 0 !== this.geometry && (void 0 === a.geometries[this.geometry.uuid] && (a.geometries[this.geometry.uuid] = this.geometry.toJSON(a)),
                    e.geometry = this.geometry.uuid),
                    void 0 !== this.material && (void 0 === a.materials[this.material.uuid] && (a.materials[this.material.uuid] = this.material.toJSON(a)),
                    e.material = this.material.uuid),
                    this.children.length > 0) {
                        e.children = [];
                        for (var f = 0; f < this.children.length; f++)
                            e.children.push(this.children[f].toJSON(a).object)
                    }
                    if (c) {
                        var g = b(a.geometries)
                          , h = b(a.materials)
                          , i = b(a.textures)
                          , j = b(a.images);
                        g.length > 0 && (d.geometries = g),
                        h.length > 0 && (d.materials = h),
                        i.length > 0 && (d.textures = i),
                        j.length > 0 && (d.images = j)
                    }
                    return d.object = e,
                    d
                },
                clone: function(a) {
                    return (new this.constructor).copy(this, a)
                },
                copy: function(a, b) {
                    if (void 0 === b && (b = !0),
                    this.name = a.name,
                    this.up.copy(a.up),
                    this.position.copy(a.position),
                    this.quaternion.copy(a.quaternion),
                    this.scale.copy(a.scale),
                    this.matrix.copy(a.matrix),
                    this.matrixWorld.copy(a.matrixWorld),
                    this.matrixAutoUpdate = a.matrixAutoUpdate,
                    this.matrixWorldNeedsUpdate = a.matrixWorldNeedsUpdate,
                    this.layers.mask = a.layers.mask,
                    this.visible = a.visible,
                    this.castShadow = a.castShadow,
                    this.receiveShadow = a.receiveShadow,
                    this.frustumCulled = a.frustumCulled,
                    this.renderOrder = a.renderOrder,
                    this.userData = JSON.parse(JSON.stringify(a.userData)),
                    !0 === b)
                        for (var c = 0; c < a.children.length; c++) {
                            var d = a.children[c];
                            this.add(d.clone())
                        }
                    return this
                }
            },
            Object.assign(ia.prototype, b.prototype),
            ja.prototype = {
                constructor: ja,
                set: function(a, b) {
                    return this.start.copy(a),
                    this.end.copy(b),
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(a) {
                    return this.start.copy(a.start),
                    this.end.copy(a.end),
                    this
                },
                getCenter: function(a) {
                    return (a || new i).addVectors(this.start, this.end).multiplyScalar(.5)
                },
                delta: function(a) {
                    return (a || new i).subVectors(this.end, this.start)
                },
                distanceSq: function() {
                    return this.start.distanceToSquared(this.end)
                },
                distance: function() {
                    return this.start.distanceTo(this.end)
                },
                at: function(a, b) {
                    var c = b || new i;
                    return this.delta(c).multiplyScalar(a).add(this.start)
                },
                closestPointToPointParameter: function() {
                    var a = new i
                      , b = new i;
                    return function(c, d) {
                        a.subVectors(c, this.start),
                        b.subVectors(this.end, this.start);
                        var e = b.dot(b)
                          , f = b.dot(a)
                          , g = f / e;
                        return d && (g = Zg.clamp(g, 0, 1)),
                        g
                    }
                }(),
                closestPointToPoint: function(a, b, c) {
                    var d = this.closestPointToPointParameter(a, b)
                      , e = c || new i;
                    return this.delta(e).multiplyScalar(d).add(this.start)
                },
                applyMatrix4: function(a) {
                    return this.start.applyMatrix4(a),
                    this.end.applyMatrix4(a),
                    this
                },
                equals: function(a) {
                    return a.start.equals(this.start) && a.end.equals(this.end)
                }
            },
            ka.normal = function() {
                var a = new i;
                return function(b, c, d, e) {
                    var f = e || new i;
                    f.subVectors(d, c),
                    a.subVectors(b, c),
                    f.cross(a);
                    var g = f.lengthSq();
                    return g > 0 ? f.multiplyScalar(1 / Math.sqrt(g)) : f.set(0, 0, 0)
                }
            }(),
            ka.barycoordFromPoint = function() {
                var a = new i
                  , b = new i
                  , c = new i;
                return function(d, e, f, g, h) {
                    a.subVectors(g, e),
                    b.subVectors(f, e),
                    c.subVectors(d, e);
                    var j = a.dot(a)
                      , k = a.dot(b)
                      , l = a.dot(c)
                      , m = b.dot(b)
                      , n = b.dot(c)
                      , o = j * m - k * k
                      , p = h || new i;
                    if (0 === o)
                        return p.set(-2, -1, -1);
                    var q = 1 / o
                      , r = (m * l - k * n) * q
                      , s = (j * n - k * l) * q;
                    return p.set(1 - r - s, s, r)
                }
            }(),
            ka.containsPoint = function() {
                var a = new i;
                return function(b, c, d, e) {
                    var f = ka.barycoordFromPoint(b, c, d, e, a);
                    return f.x >= 0 && f.y >= 0 && f.x + f.y <= 1
                }
            }(),
            ka.prototype = {
                constructor: ka,
                set: function(a, b, c) {
                    return this.a.copy(a),
                    this.b.copy(b),
                    this.c.copy(c),
                    this
                },
                setFromPointsAndIndices: function(a, b, c, d) {
                    return this.a.copy(a[b]),
                    this.b.copy(a[c]),
                    this.c.copy(a[d]),
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(a) {
                    return this.a.copy(a.a),
                    this.b.copy(a.b),
                    this.c.copy(a.c),
                    this
                },
                area: function() {
                    var a = new i
                      , b = new i;
                    return function() {
                        return a.subVectors(this.c, this.b),
                        b.subVectors(this.a, this.b),
                        .5 * a.cross(b).length()
                    }
                }(),
                midpoint: function(a) {
                    return (a || new i).addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
                },
                normal: function(a) {
                    return ka.normal(this.a, this.b, this.c, a)
                },
                plane: function(a) {
                    return (a || new ca).setFromCoplanarPoints(this.a, this.b, this.c)
                },
                barycoordFromPoint: function(a, b) {
                    return ka.barycoordFromPoint(a, this.a, this.b, this.c, b)
                },
                containsPoint: function(a) {
                    return ka.containsPoint(a, this.a, this.b, this.c)
                },
                closestPointToPoint: function() {
                    var a, b, c, d;
                    return function(e, f) {
                        void 0 === a && (a = new ca,
                        b = [new ja, new ja, new ja],
                        c = new i,
                        d = new i);
                        var g = f || new i
                          , h = 1 / 0;
                        if (a.setFromCoplanarPoints(this.a, this.b, this.c),
                        a.projectPoint(e, c),
                        !0 === this.containsPoint(c))
                            g.copy(c);
                        else {
                            b[0].set(this.a, this.b),
                            b[1].set(this.b, this.c),
                            b[2].set(this.c, this.a);
                            for (var j = 0; j < b.length; j++) {
                                b[j].closestPointToPoint(c, !0, d);
                                var k = c.distanceToSquared(d);
                                k < h && (h = k,
                                g.copy(d))
                            }
                        }
                        return g
                    }
                }(),
                equals: function(a) {
                    return a.a.equals(this.a) && a.b.equals(this.b) && a.c.equals(this.c)
                }
            },
            la.prototype = {
                constructor: la,
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(a) {
                    this.a = a.a,
                    this.b = a.b,
                    this.c = a.c,
                    this.normal.copy(a.normal),
                    this.color.copy(a.color),
                    this.materialIndex = a.materialIndex;
                    for (var b = 0, c = a.vertexNormals.length; b < c; b++)
                        this.vertexNormals[b] = a.vertexNormals[b].clone();
                    for (var b = 0, c = a.vertexColors.length; b < c; b++)
                        this.vertexColors[b] = a.vertexColors[b].clone();
                    return this
                }
            },
            ma.prototype = Object.create(Y.prototype),
            ma.prototype.constructor = ma,
            ma.prototype.isMeshBasicMaterial = !0,
            ma.prototype.copy = function(a) {
                return Y.prototype.copy.call(this, a),
                this.color.copy(a.color),
                this.map = a.map,
                this.lightMap = a.lightMap,
                this.lightMapIntensity = a.lightMapIntensity,
                this.aoMap = a.aoMap,
                this.aoMapIntensity = a.aoMapIntensity,
                this.specularMap = a.specularMap,
                this.alphaMap = a.alphaMap,
                this.envMap = a.envMap,
                this.combine = a.combine,
                this.reflectivity = a.reflectivity,
                this.refractionRatio = a.refractionRatio,
                this.wireframe = a.wireframe,
                this.wireframeLinewidth = a.wireframeLinewidth,
                this.wireframeLinecap = a.wireframeLinecap,
                this.wireframeLinejoin = a.wireframeLinejoin,
                this.skinning = a.skinning,
                this.morphTargets = a.morphTargets,
                this
            }
            ,
            na.prototype = {
                constructor: na,
                isBufferAttribute: !0,
                set needsUpdate(a) {
                    !0 === a && this.version++
                },
                setArray: function(a) {
                    if (Array.isArray(a))
                        throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
                    this.count = void 0 !== a ? a.length / this.itemSize : 0,
                    this.array = a
                },
                setDynamic: function(a) {
                    return this.dynamic = a,
                    this
                },
                copy: function(a) {
                    return this.array = new a.array.constructor(a.array),
                    this.itemSize = a.itemSize,
                    this.count = a.count,
                    this.normalized = a.normalized,
                    this.dynamic = a.dynamic,
                    this
                },
                copyAt: function(a, b, c) {
                    a *= this.itemSize,
                    c *= b.itemSize;
                    for (var d = 0, e = this.itemSize; d < e; d++)
                        this.array[a + d] = b.array[c + d];
                    return this
                },
                copyArray: function(a) {
                    return this.array.set(a),
                    this
                },
                copyColorsArray: function(a) {
                    for (var b = this.array, c = 0, d = 0, e = a.length; d < e; d++) {
                        var f = a[d];
                        void 0 === f && (f = new T),
                        b[c++] = f.r,
                        b[c++] = f.g,
                        b[c++] = f.b
                    }
                    return this
                },
                copyIndicesArray: function(a) {
                    for (var b = this.array, c = 0, d = 0, e = a.length; d < e; d++) {
                        var f = a[d];
                        b[c++] = f.a,
                        b[c++] = f.b,
                        b[c++] = f.c
                    }
                    return this
                },
                copyVector2sArray: function(a) {
                    for (var b = this.array, d = 0, e = 0, f = a.length; e < f; e++) {
                        var g = a[e];
                        void 0 === g && (g = new c),
                        b[d++] = g.x,
                        b[d++] = g.y
                    }
                    return this
                },
                copyVector3sArray: function(a) {
                    for (var b = this.array, c = 0, d = 0, e = a.length; d < e; d++) {
                        var f = a[d];
                        void 0 === f && (f = new i),
                        b[c++] = f.x,
                        b[c++] = f.y,
                        b[c++] = f.z
                    }
                    return this
                },
                copyVector4sArray: function(a) {
                    for (var b = this.array, c = 0, d = 0, f = a.length; d < f; d++) {
                        var g = a[d];
                        void 0 === g && (g = new e),
                        b[c++] = g.x,
                        b[c++] = g.y,
                        b[c++] = g.z,
                        b[c++] = g.w
                    }
                    return this
                },
                set: function(a, b) {
                    return void 0 === b && (b = 0),
                    this.array.set(a, b),
                    this
                },
                getX: function(a) {
                    return this.array[a * this.itemSize]
                },
                setX: function(a, b) {
                    return this.array[a * this.itemSize] = b,
                    this
                },
                getY: function(a) {
                    return this.array[a * this.itemSize + 1]
                },
                setY: function(a, b) {
                    return this.array[a * this.itemSize + 1] = b,
                    this
                },
                getZ: function(a) {
                    return this.array[a * this.itemSize + 2]
                },
                setZ: function(a, b) {
                    return this.array[a * this.itemSize + 2] = b,
                    this
                },
                getW: function(a) {
                    return this.array[a * this.itemSize + 3]
                },
                setW: function(a, b) {
                    return this.array[a * this.itemSize + 3] = b,
                    this
                },
                setXY: function(a, b, c) {
                    return a *= this.itemSize,
                    this.array[a + 0] = b,
                    this.array[a + 1] = c,
                    this
                },
                setXYZ: function(a, b, c, d) {
                    return a *= this.itemSize,
                    this.array[a + 0] = b,
                    this.array[a + 1] = c,
                    this.array[a + 2] = d,
                    this
                },
                setXYZW: function(a, b, c, d, e) {
                    return a *= this.itemSize,
                    this.array[a + 0] = b,
                    this.array[a + 1] = c,
                    this.array[a + 2] = d,
                    this.array[a + 3] = e,
                    this
                },
                onUpload: function(a) {
                    return this.onUploadCallback = a,
                    this
                },
                clone: function() {
                    return new this.constructor(this.array,this.itemSize).copy(this)
                }
            },
            oa.prototype = Object.create(na.prototype),
            oa.prototype.constructor = oa,
            pa.prototype = Object.create(na.prototype),
            pa.prototype.constructor = pa,
            qa.prototype = Object.create(na.prototype),
            qa.prototype.constructor = qa,
            ra.prototype = Object.create(na.prototype),
            ra.prototype.constructor = ra,
            sa.prototype = Object.create(na.prototype),
            sa.prototype.constructor = sa,
            ta.prototype = Object.create(na.prototype),
            ta.prototype.constructor = ta,
            ua.prototype = Object.create(na.prototype),
            ua.prototype.constructor = ua,
            va.prototype = Object.create(na.prototype),
            va.prototype.constructor = va,
            wa.prototype = Object.create(na.prototype),
            wa.prototype.constructor = wa,
            Object.assign(xa.prototype, {
                computeGroups: function(a) {
                    for (var b, c = [], d = void 0, e = a.faces, f = 0; f < e.length; f++) {
                        var g = e[f];
                        g.materialIndex !== d && (d = g.materialIndex,
                        void 0 !== b && (b.count = 3 * f - b.start,
                        c.push(b)),
                        b = {
                            start: 3 * f,
                            materialIndex: d
                        })
                    }
                    void 0 !== b && (b.count = 3 * f - b.start,
                    c.push(b)),
                    this.groups = c
                },
                fromGeometry: function(a) {
                    var b, d = a.faces, e = a.vertices, f = a.faceVertexUvs, g = f[0] && f[0].length > 0, h = f[1] && f[1].length > 0, i = a.morphTargets, j = i.length;
                    if (j > 0) {
                        b = [];
                        for (var k = 0; k < j; k++)
                            b[k] = [];
                        this.morphTargets.position = b
                    }
                    var l, m = a.morphNormals, n = m.length;
                    if (n > 0) {
                        l = [];
                        for (var k = 0; k < n; k++)
                            l[k] = [];
                        this.morphTargets.normal = l
                    }
                    for (var o = a.skinIndices, p = a.skinWeights, q = o.length === e.length, r = p.length === e.length, k = 0; k < d.length; k++) {
                        var s = d[k];
                        this.vertices.push(e[s.a], e[s.b], e[s.c]);
                        var t = s.vertexNormals;
                        if (3 === t.length)
                            this.normals.push(t[0], t[1], t[2]);
                        else {
                            var u = s.normal;
                            this.normals.push(u, u, u)
                        }
                        var v = s.vertexColors;
                        if (3 === v.length)
                            this.colors.push(v[0], v[1], v[2]);
                        else {
                            var w = s.color;
                            this.colors.push(w, w, w)
                        }
                        if (!0 === g) {
                            var x = f[0][k];
                            void 0 !== x ? this.uvs.push(x[0], x[1], x[2]) : this.uvs.push(new c, new c, new c)
                        }
                        if (!0 === h) {
                            var x = f[1][k];
                            void 0 !== x ? this.uvs2.push(x[0], x[1], x[2]) : this.uvs2.push(new c, new c, new c)
                        }
                        for (var y = 0; y < j; y++) {
                            var z = i[y].vertices;
                            b[y].push(z[s.a], z[s.b], z[s.c])
                        }
                        for (var y = 0; y < n; y++) {
                            var A = m[y].vertexNormals[k];
                            l[y].push(A.a, A.b, A.c)
                        }
                        q && this.skinIndices.push(o[s.a], o[s.b], o[s.c]),
                        r && this.skinWeights.push(p[s.a], p[s.b], p[s.c])
                    }
                    return this.computeGroups(a),
                    this.verticesNeedUpdate = a.verticesNeedUpdate,
                    this.normalsNeedUpdate = a.normalsNeedUpdate,
                    this.colorsNeedUpdate = a.colorsNeedUpdate,
                    this.uvsNeedUpdate = a.uvsNeedUpdate,
                    this.groupsNeedUpdate = a.groupsNeedUpdate,
                    this
                }
            });
            var lh = 0;
            Aa.prototype = {
                constructor: Aa,
                isGeometry: !0,
                applyMatrix: function(a) {
                    for (var b = (new ba).getNormalMatrix(a), c = 0, d = this.vertices.length; c < d; c++) {
                        this.vertices[c].applyMatrix4(a)
                    }
                    for (var c = 0, d = this.faces.length; c < d; c++) {
                        var e = this.faces[c];
                        e.normal.applyMatrix3(b).normalize();
                        for (var f = 0, g = e.vertexNormals.length; f < g; f++)
                            e.vertexNormals[f].applyMatrix3(b).normalize()
                    }
                    return null !== this.boundingBox && this.computeBoundingBox(),
                    null !== this.boundingSphere && this.computeBoundingSphere(),
                    this.verticesNeedUpdate = !0,
                    this.normalsNeedUpdate = !0,
                    this
                },
                rotateX: function() {
                    var a;
                    return function(b) {
                        return void 0 === a && (a = new j),
                        a.makeRotationX(b),
                        this.applyMatrix(a),
                        this
                    }
                }(),
                rotateY: function() {
                    var a;
                    return function(b) {
                        return void 0 === a && (a = new j),
                        a.makeRotationY(b),
                        this.applyMatrix(a),
                        this
                    }
                }(),
                rotateZ: function() {
                    var a;
                    return function(b) {
                        return void 0 === a && (a = new j),
                        a.makeRotationZ(b),
                        this.applyMatrix(a),
                        this
                    }
                }(),
                translate: function() {
                    var a;
                    return function(b, c, d) {
                        return void 0 === a && (a = new j),
                        a.makeTranslation(b, c, d),
                        this.applyMatrix(a),
                        this
                    }
                }(),
                scale: function() {
                    var a;
                    return function(b, c, d) {
                        return void 0 === a && (a = new j),
                        a.makeScale(b, c, d),
                        this.applyMatrix(a),
                        this
                    }
                }(),
                lookAt: function() {
                    var a;
                    return function(b) {
                        void 0 === a && (a = new ia),
                        a.lookAt(b),
                        a.updateMatrix(),
                        this.applyMatrix(a.matrix)
                    }
                }(),
                fromBufferGeometry: function(a) {
                    function b(a, b, c, e) {
                        var f = void 0 !== h ? [m[a].clone(), m[b].clone(), m[c].clone()] : []
                          , g = void 0 !== j ? [d.colors[a].clone(), d.colors[b].clone(), d.colors[c].clone()] : []
                          , i = new la(a,b,c,f,g,e);
                        d.faces.push(i),
                        void 0 !== k && d.faceVertexUvs[0].push([n[a].clone(), n[b].clone(), n[c].clone()]),
                        void 0 !== l && d.faceVertexUvs[1].push([o[a].clone(), o[b].clone(), o[c].clone()])
                    }
                    var d = this
                      , e = null !== a.index ? a.index.array : void 0
                      , f = a.attributes
                      , g = f.position.array
                      , h = void 0 !== f.normal ? f.normal.array : void 0
                      , j = void 0 !== f.color ? f.color.array : void 0
                      , k = void 0 !== f.uv ? f.uv.array : void 0
                      , l = void 0 !== f.uv2 ? f.uv2.array : void 0;
                    void 0 !== l && (this.faceVertexUvs[1] = []);
                    for (var m = [], n = [], o = [], p = 0, q = 0; p < g.length; p += 3,
                    q += 2)
                        d.vertices.push(new i(g[p],g[p + 1],g[p + 2])),
                        void 0 !== h && m.push(new i(h[p],h[p + 1],h[p + 2])),
                        void 0 !== j && d.colors.push(new T(j[p],j[p + 1],j[p + 2])),
                        void 0 !== k && n.push(new c(k[q],k[q + 1])),
                        void 0 !== l && o.push(new c(l[q],l[q + 1]));
                    if (void 0 !== e) {
                        var r = a.groups;
                        if (r.length > 0)
                            for (var p = 0; p < r.length; p++)
                                for (var s = r[p], t = s.start, u = s.count, q = t, v = t + u; q < v; q += 3)
                                    b(e[q], e[q + 1], e[q + 2], s.materialIndex);
                        else
                            for (var p = 0; p < e.length; p += 3)
                                b(e[p], e[p + 1], e[p + 2])
                    } else
                        for (var p = 0; p < g.length / 3; p += 3)
                            b(p, p + 1, p + 2);
                    return this.computeFaceNormals(),
                    null !== a.boundingBox && (this.boundingBox = a.boundingBox.clone()),
                    null !== a.boundingSphere && (this.boundingSphere = a.boundingSphere.clone()),
                    this
                },
                center: function() {
                    this.computeBoundingBox();
                    var a = this.boundingBox.getCenter().negate();
                    return this.translate(a.x, a.y, a.z),
                    a
                },
                normalize: function() {
                    this.computeBoundingSphere();
                    var a = this.boundingSphere.center
                      , b = this.boundingSphere.radius
                      , c = 0 === b ? 1 : 1 / b
                      , d = new j;
                    return d.set(c, 0, 0, -c * a.x, 0, c, 0, -c * a.y, 0, 0, c, -c * a.z, 0, 0, 0, 1),
                    this.applyMatrix(d),
                    this
                },
                computeFaceNormals: function() {
                    for (var a = new i, b = new i, c = 0, d = this.faces.length; c < d; c++) {
                        var e = this.faces[c]
                          , f = this.vertices[e.a]
                          , g = this.vertices[e.b]
                          , h = this.vertices[e.c];
                        a.subVectors(h, g),
                        b.subVectors(f, g),
                        a.cross(b),
                        a.normalize(),
                        e.normal.copy(a)
                    }
                },
                computeVertexNormals: function(a) {
                    void 0 === a && (a = !0);
                    var b, c, d, e, f, g;
                    for (g = new Array(this.vertices.length),
                    b = 0,
                    c = this.vertices.length; b < c; b++)
                        g[b] = new i;
                    if (a) {
                        var h, j, k, l = new i, m = new i;
                        for (d = 0,
                        e = this.faces.length; d < e; d++)
                            f = this.faces[d],
                            h = this.vertices[f.a],
                            j = this.vertices[f.b],
                            k = this.vertices[f.c],
                            l.subVectors(k, j),
                            m.subVectors(h, j),
                            l.cross(m),
                            g[f.a].add(l),
                            g[f.b].add(l),
                            g[f.c].add(l)
                    } else
                        for (this.computeFaceNormals(),
                        d = 0,
                        e = this.faces.length; d < e; d++)
                            f = this.faces[d],
                            g[f.a].add(f.normal),
                            g[f.b].add(f.normal),
                            g[f.c].add(f.normal);
                    for (b = 0,
                    c = this.vertices.length; b < c; b++)
                        g[b].normalize();
                    for (d = 0,
                    e = this.faces.length; d < e; d++) {
                        f = this.faces[d];
                        var n = f.vertexNormals;
                        3 === n.length ? (n[0].copy(g[f.a]),
                        n[1].copy(g[f.b]),
                        n[2].copy(g[f.c])) : (n[0] = g[f.a].clone(),
                        n[1] = g[f.b].clone(),
                        n[2] = g[f.c].clone())
                    }
                    this.faces.length > 0 && (this.normalsNeedUpdate = !0)
                },
                computeFlatVertexNormals: function() {
                    var a, b, c;
                    for (this.computeFaceNormals(),
                    a = 0,
                    b = this.faces.length; a < b; a++) {
                        c = this.faces[a];
                        var d = c.vertexNormals;
                        3 === d.length ? (d[0].copy(c.normal),
                        d[1].copy(c.normal),
                        d[2].copy(c.normal)) : (d[0] = c.normal.clone(),
                        d[1] = c.normal.clone(),
                        d[2] = c.normal.clone())
                    }
                    this.faces.length > 0 && (this.normalsNeedUpdate = !0)
                },
                computeMorphNormals: function() {
                    var a, b, c, d, e;
                    for (c = 0,
                    d = this.faces.length; c < d; c++)
                        for (e = this.faces[c],
                        e.__originalFaceNormal ? e.__originalFaceNormal.copy(e.normal) : e.__originalFaceNormal = e.normal.clone(),
                        e.__originalVertexNormals || (e.__originalVertexNormals = []),
                        a = 0,
                        b = e.vertexNormals.length; a < b; a++)
                            e.__originalVertexNormals[a] ? e.__originalVertexNormals[a].copy(e.vertexNormals[a]) : e.__originalVertexNormals[a] = e.vertexNormals[a].clone();
                    var f = new Aa;
                    for (f.faces = this.faces,
                    a = 0,
                    b = this.morphTargets.length; a < b; a++) {
                        if (!this.morphNormals[a]) {
                            this.morphNormals[a] = {},
                            this.morphNormals[a].faceNormals = [],
                            this.morphNormals[a].vertexNormals = [];
                            var g, h, j = this.morphNormals[a].faceNormals, k = this.morphNormals[a].vertexNormals;
                            for (c = 0,
                            d = this.faces.length; c < d; c++)
                                g = new i,
                                h = {
                                    a: new i,
                                    b: new i,
                                    c: new i
                                },
                                j.push(g),
                                k.push(h)
                        }
                        var l = this.morphNormals[a];
                        f.vertices = this.morphTargets[a].vertices,
                        f.computeFaceNormals(),
                        f.computeVertexNormals();
                        var g, h;
                        for (c = 0,
                        d = this.faces.length; c < d; c++)
                            e = this.faces[c],
                            g = l.faceNormals[c],
                            h = l.vertexNormals[c],
                            g.copy(e.normal),
                            h.a.copy(e.vertexNormals[0]),
                            h.b.copy(e.vertexNormals[1]),
                            h.c.copy(e.vertexNormals[2])
                    }
                    for (c = 0,
                    d = this.faces.length; c < d; c++)
                        e = this.faces[c],
                        e.normal = e.__originalFaceNormal,
                        e.vertexNormals = e.__originalVertexNormals
                },
                computeLineDistances: function() {
                    for (var a = 0, b = this.vertices, c = 0, d = b.length; c < d; c++)
                        c > 0 && (a += b[c].distanceTo(b[c - 1])),
                        this.lineDistances[c] = a
                },
                computeBoundingBox: function() {
                    null === this.boundingBox && (this.boundingBox = new _),
                    this.boundingBox.setFromPoints(this.vertices)
                },
                computeBoundingSphere: function() {
                    null === this.boundingSphere && (this.boundingSphere = new aa),
                    this.boundingSphere.setFromPoints(this.vertices)
                },
                merge: function(a, b, c) {
                    if (!1 !== (a && a.isGeometry)) {
                        var d, e = this.vertices.length, f = this.vertices, g = a.vertices, h = this.faces, i = a.faces, j = this.faceVertexUvs[0], k = a.faceVertexUvs[0], l = this.colors, m = a.colors;
                        void 0 === c && (c = 0),
                        void 0 !== b && (d = (new ba).getNormalMatrix(b));
                        for (var n = 0, o = g.length; n < o; n++) {
                            var p = g[n]
                              , q = p.clone();
                            void 0 !== b && q.applyMatrix4(b),
                            f.push(q)
                        }
                        for (var n = 0, o = m.length; n < o; n++)
                            l.push(m[n].clone());
                        for (n = 0,
                        o = i.length; n < o; n++) {
                            var r, s, t, u = i[n], v = u.vertexNormals, w = u.vertexColors;
                            r = new la(u.a + e,u.b + e,u.c + e),
                            r.normal.copy(u.normal),
                            void 0 !== d && r.normal.applyMatrix3(d).normalize();
                            for (var x = 0, y = v.length; x < y; x++)
                                s = v[x].clone(),
                                void 0 !== d && s.applyMatrix3(d).normalize(),
                                r.vertexNormals.push(s);
                            r.color.copy(u.color);
                            for (var x = 0, y = w.length; x < y; x++)
                                t = w[x],
                                r.vertexColors.push(t.clone());
                            r.materialIndex = u.materialIndex + c,
                            h.push(r)
                        }
                        for (n = 0,
                        o = k.length; n < o; n++) {
                            var z = k[n]
                              , A = [];
                            if (void 0 !== z) {
                                for (var x = 0, y = z.length; x < y; x++)
                                    A.push(z[x].clone());
                                j.push(A)
                            }
                        }
                    }
                },
                mergeMesh: function(a) {
                    !1 !== (a && a.isMesh) && (a.matrixAutoUpdate && a.updateMatrix(),
                    this.merge(a.geometry, a.matrix))
                },
                mergeVertices: function() {
                    var a, b, c, d, e, f, g, h, i = {}, j = [], k = [], l = Math.pow(10, 4);
                    for (c = 0,
                    d = this.vertices.length; c < d; c++)
                        a = this.vertices[c],
                        b = Math.round(a.x * l) + "_" + Math.round(a.y * l) + "_" + Math.round(a.z * l),
                        void 0 === i[b] ? (i[b] = c,
                        j.push(this.vertices[c]),
                        k[c] = j.length - 1) : k[c] = k[i[b]];
                    var m = [];
                    for (c = 0,
                    d = this.faces.length; c < d; c++) {
                        e = this.faces[c],
                        e.a = k[e.a],
                        e.b = k[e.b],
                        e.c = k[e.c],
                        f = [e.a, e.b, e.c];
                        for (var n = 0; n < 3; n++)
                            if (f[n] === f[(n + 1) % 3]) {
                                m.push(c);
                                break
                            }
                    }
                    for (c = m.length - 1; c >= 0; c--) {
                        var o = m[c];
                        for (this.faces.splice(o, 1),
                        g = 0,
                        h = this.faceVertexUvs.length; g < h; g++)
                            this.faceVertexUvs[g].splice(o, 1)
                    }
                    var p = this.vertices.length - j.length;
                    return this.vertices = j,
                    p
                },
                sortFacesByMaterialIndex: function() {
                    function a(a, b) {
                        return a.materialIndex - b.materialIndex
                    }
                    for (var b = this.faces, c = b.length, d = 0; d < c; d++)
                        b[d]._id = d;
                    b.sort(a);
                    var e, f, g = this.faceVertexUvs[0], h = this.faceVertexUvs[1];
                    g && g.length === c && (e = []),
                    h && h.length === c && (f = []);
                    for (var d = 0; d < c; d++) {
                        var i = b[d]._id;
                        e && e.push(g[i]),
                        f && f.push(h[i])
                    }
                    e && (this.faceVertexUvs[0] = e),
                    f && (this.faceVertexUvs[1] = f)
                },
                toJSON: function() {
                    function a(a, b, c) {
                        return c ? a | 1 << b : a & ~(1 << b)
                    }
                    function b(a) {
                        var b = a.x.toString() + a.y.toString() + a.z.toString();
                        return void 0 !== m[b] ? m[b] : (m[b] = l.length / 3,
                        l.push(a.x, a.y, a.z),
                        m[b])
                    }
                    function c(a) {
                        var b = a.r.toString() + a.g.toString() + a.b.toString();
                        return void 0 !== o[b] ? o[b] : (o[b] = n.length,
                        n.push(a.getHex()),
                        o[b])
                    }
                    function d(a) {
                        var b = a.x.toString() + a.y.toString();
                        return void 0 !== q[b] ? q[b] : (q[b] = p.length / 2,
                        p.push(a.x, a.y),
                        q[b])
                    }
                    var e = {
                        metadata: {
                            version: 4.4,
                            type: "Geometry",
                            generator: "Geometry.toJSON"
                        }
                    };
                    if (e.uuid = this.uuid,
                    e.type = this.type,
                    "" !== this.name && (e.name = this.name),
                    void 0 !== this.parameters) {
                        var f = this.parameters;
                        for (var g in f)
                            void 0 !== f[g] && (e[g] = f[g]);
                        return e
                    }
                    for (var h = [], i = 0; i < this.vertices.length; i++) {
                        var j = this.vertices[i];
                        h.push(j.x, j.y, j.z)
                    }
                    for (var k = [], l = [], m = {}, n = [], o = {}, p = [], q = {}, i = 0; i < this.faces.length; i++) {
                        var r = this.faces[i]
                          , s = void 0 !== this.faceVertexUvs[0][i]
                          , t = r.normal.length() > 0
                          , u = r.vertexNormals.length > 0
                          , v = 1 !== r.color.r || 1 !== r.color.g || 1 !== r.color.b
                          , w = r.vertexColors.length > 0
                          , x = 0;
                        if (x = a(x, 0, 0),
                        x = a(x, 1, !0),
                        x = a(x, 2, !1),
                        x = a(x, 3, s),
                        x = a(x, 4, t),
                        x = a(x, 5, u),
                        x = a(x, 6, v),
                        x = a(x, 7, w),
                        k.push(x),
                        k.push(r.a, r.b, r.c),
                        k.push(r.materialIndex),
                        s) {
                            var y = this.faceVertexUvs[0][i];
                            k.push(d(y[0]), d(y[1]), d(y[2]))
                        }
                        if (t && k.push(b(r.normal)),
                        u) {
                            var z = r.vertexNormals;
                            k.push(b(z[0]), b(z[1]), b(z[2]))
                        }
                        if (v && k.push(c(r.color)),
                        w) {
                            var A = r.vertexColors;
                            k.push(c(A[0]), c(A[1]), c(A[2]))
                        }
                    }
                    return e.data = {},
                    e.data.vertices = h,
                    e.data.normals = l,
                    n.length > 0 && (e.data.colors = n),
                    p.length > 0 && (e.data.uvs = [p]),
                    e.data.faces = k,
                    e
                },
                clone: function() {
                    return (new Aa).copy(this)
                },
                copy: function(a) {
                    var b, c, d, e, f, g;
                    this.vertices = [],
                    this.colors = [],
                    this.faces = [],
                    this.faceVertexUvs = [[]],
                    this.morphTargets = [],
                    this.morphNormals = [],
                    this.skinWeights = [],
                    this.skinIndices = [],
                    this.lineDistances = [],
                    this.boundingBox = null,
                    this.boundingSphere = null,
                    this.name = a.name;
                    var h = a.vertices;
                    for (b = 0,
                    c = h.length; b < c; b++)
                        this.vertices.push(h[b].clone());
                    var i = a.colors;
                    for (b = 0,
                    c = i.length; b < c; b++)
                        this.colors.push(i[b].clone());
                    var j = a.faces;
                    for (b = 0,
                    c = j.length; b < c; b++)
                        this.faces.push(j[b].clone());
                    for (b = 0,
                    c = a.faceVertexUvs.length; b < c; b++) {
                        var k = a.faceVertexUvs[b];
                        for (void 0 === this.faceVertexUvs[b] && (this.faceVertexUvs[b] = []),
                        d = 0,
                        e = k.length; d < e; d++) {
                            var l = k[d]
                              , m = [];
                            for (f = 0,
                            g = l.length; f < g; f++) {
                                var n = l[f];
                                m.push(n.clone())
                            }
                            this.faceVertexUvs[b].push(m)
                        }
                    }
                    var o = a.morphTargets;
                    for (b = 0,
                    c = o.length; b < c; b++) {
                        var p = {};
                        if (p.name = o[b].name,
                        void 0 !== o[b].vertices)
                            for (p.vertices = [],
                            d = 0,
                            e = o[b].vertices.length; d < e; d++)
                                p.vertices.push(o[b].vertices[d].clone());
                        if (void 0 !== o[b].normals)
                            for (p.normals = [],
                            d = 0,
                            e = o[b].normals.length; d < e; d++)
                                p.normals.push(o[b].normals[d].clone());
                        this.morphTargets.push(p)
                    }
                    var q = a.morphNormals;
                    for (b = 0,
                    c = q.length; b < c; b++) {
                        var r = {};
                        if (void 0 !== q[b].vertexNormals)
                            for (r.vertexNormals = [],
                            d = 0,
                            e = q[b].vertexNormals.length; d < e; d++) {
                                var s = q[b].vertexNormals[d]
                                  , t = {};
                                t.a = s.a.clone(),
                                t.b = s.b.clone(),
                                t.c = s.c.clone(),
                                r.vertexNormals.push(t)
                            }
                        if (void 0 !== q[b].faceNormals)
                            for (r.faceNormals = [],
                            d = 0,
                            e = q[b].faceNormals.length; d < e; d++)
                                r.faceNormals.push(q[b].faceNormals[d].clone());
                        this.morphNormals.push(r)
                    }
                    var u = a.skinWeights;
                    for (b = 0,
                    c = u.length; b < c; b++)
                        this.skinWeights.push(u[b].clone());
                    var v = a.skinIndices;
                    for (b = 0,
                    c = v.length; b < c; b++)
                        this.skinIndices.push(v[b].clone());
                    var w = a.lineDistances;
                    for (b = 0,
                    c = w.length; b < c; b++)
                        this.lineDistances.push(w[b]);
                    var x = a.boundingBox;
                    null !== x && (this.boundingBox = x.clone());
                    var y = a.boundingSphere;
                    return null !== y && (this.boundingSphere = y.clone()),
                    this.elementsNeedUpdate = a.elementsNeedUpdate,
                    this.verticesNeedUpdate = a.verticesNeedUpdate,
                    this.uvsNeedUpdate = a.uvsNeedUpdate,
                    this.normalsNeedUpdate = a.normalsNeedUpdate,
                    this.colorsNeedUpdate = a.colorsNeedUpdate,
                    this.lineDistancesNeedUpdate = a.lineDistancesNeedUpdate,
                    this.groupsNeedUpdate = a.groupsNeedUpdate,
                    this
                },
                dispose: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            },
            Object.assign(Aa.prototype, b.prototype),
            Ba.prototype = {
                constructor: Ba,
                isBufferGeometry: !0,
                getIndex: function() {
                    return this.index
                },
                setIndex: function(a) {
                    Array.isArray(a) ? this.index = new (ya(a) > 65535 ? ua : sa)(a,1) : this.index = a
                },
                addAttribute: function(a, b) {
                    return !1 === (b && b.isBufferAttribute) && !1 === (b && b.isInterleavedBufferAttribute) ? void this.addAttribute(a, new na(arguments[1],arguments[2])) : "index" === a ? void this.setIndex(b) : (this.attributes[a] = b,
                    this)
                },
                getAttribute: function(a) {
                    return this.attributes[a]
                },
                removeAttribute: function(a) {
                    return delete this.attributes[a],
                    this
                },
                addGroup: function(a, b, c) {
                    this.groups.push({
                        start: a,
                        count: b,
                        materialIndex: void 0 !== c ? c : 0
                    })
                },
                clearGroups: function() {
                    this.groups = []
                },
                setDrawRange: function(a, b) {
                    this.drawRange.start = a,
                    this.drawRange.count = b
                },
                applyMatrix: function(a) {
                    var b = this.attributes.position;
                    void 0 !== b && (a.applyToBufferAttribute(b),
                    b.needsUpdate = !0);
                    var c = this.attributes.normal;
                    if (void 0 !== c) {
                        (new ba).getNormalMatrix(a).applyToBufferAttribute(c),
                        c.needsUpdate = !0
                    }
                    return null !== this.boundingBox && this.computeBoundingBox(),
                    null !== this.boundingSphere && this.computeBoundingSphere(),
                    this
                },
                rotateX: function() {
                    var a;
                    return function(b) {
                        return void 0 === a && (a = new j),
                        a.makeRotationX(b),
                        this.applyMatrix(a),
                        this
                    }
                }(),
                rotateY: function() {
                    var a;
                    return function(b) {
                        return void 0 === a && (a = new j),
                        a.makeRotationY(b),
                        this.applyMatrix(a),
                        this
                    }
                }(),
                rotateZ: function() {
                    var a;
                    return function(b) {
                        return void 0 === a && (a = new j),
                        a.makeRotationZ(b),
                        this.applyMatrix(a),
                        this
                    }
                }(),
                translate: function() {
                    var a;
                    return function(b, c, d) {
                        return void 0 === a && (a = new j),
                        a.makeTranslation(b, c, d),
                        this.applyMatrix(a),
                        this
                    }
                }(),
                scale: function() {
                    var a;
                    return function(b, c, d) {
                        return void 0 === a && (a = new j),
                        a.makeScale(b, c, d),
                        this.applyMatrix(a),
                        this
                    }
                }(),
                lookAt: function() {
                    var a;
                    return function(b) {
                        void 0 === a && (a = new ia),
                        a.lookAt(b),
                        a.updateMatrix(),
                        this.applyMatrix(a.matrix)
                    }
                }(),
                center: function() {
                    this.computeBoundingBox();
                    var a = this.boundingBox.getCenter().negate();
                    return this.translate(a.x, a.y, a.z),
                    a
                },
                setFromObject: function(a) {
                    var b = a.geometry;
                    if (a.isPoints || a.isLine) {
                        var c = new va(3 * b.vertices.length,3)
                          , d = new va(3 * b.colors.length,3);
                        if (this.addAttribute("position", c.copyVector3sArray(b.vertices)),
                        this.addAttribute("color", d.copyColorsArray(b.colors)),
                        b.lineDistances && b.lineDistances.length === b.vertices.length) {
                            var e = new va(b.lineDistances.length,1);
                            this.addAttribute("lineDistance", e.copyArray(b.lineDistances))
                        }
                        null !== b.boundingSphere && (this.boundingSphere = b.boundingSphere.clone()),
                        null !== b.boundingBox && (this.boundingBox = b.boundingBox.clone())
                    } else
                        a.isMesh && b && b.isGeometry && this.fromGeometry(b);
                    return this
                },
                updateFromObject: function(a) {
                    var b = a.geometry;
                    if (a.isMesh) {
                        var c = b.__directGeometry;
                        if (!0 === b.elementsNeedUpdate && (c = void 0,
                        b.elementsNeedUpdate = !1),
                        void 0 === c)
                            return this.fromGeometry(b);
                        c.verticesNeedUpdate = b.verticesNeedUpdate,
                        c.normalsNeedUpdate = b.normalsNeedUpdate,
                        c.colorsNeedUpdate = b.colorsNeedUpdate,
                        c.uvsNeedUpdate = b.uvsNeedUpdate,
                        c.groupsNeedUpdate = b.groupsNeedUpdate,
                        b.verticesNeedUpdate = !1,
                        b.normalsNeedUpdate = !1,
                        b.colorsNeedUpdate = !1,
                        b.uvsNeedUpdate = !1,
                        b.groupsNeedUpdate = !1,
                        b = c
                    }
                    var d;
                    return !0 === b.verticesNeedUpdate && (d = this.attributes.position,
                    void 0 !== d && (d.copyVector3sArray(b.vertices),
                    d.needsUpdate = !0),
                    b.verticesNeedUpdate = !1),
                    !0 === b.normalsNeedUpdate && (d = this.attributes.normal,
                    void 0 !== d && (d.copyVector3sArray(b.normals),
                    d.needsUpdate = !0),
                    b.normalsNeedUpdate = !1),
                    !0 === b.colorsNeedUpdate && (d = this.attributes.color,
                    void 0 !== d && (d.copyColorsArray(b.colors),
                    d.needsUpdate = !0),
                    b.colorsNeedUpdate = !1),
                    b.uvsNeedUpdate && (d = this.attributes.uv,
                    void 0 !== d && (d.copyVector2sArray(b.uvs),
                    d.needsUpdate = !0),
                    b.uvsNeedUpdate = !1),
                    b.lineDistancesNeedUpdate && (d = this.attributes.lineDistance,
                    void 0 !== d && (d.copyArray(b.lineDistances),
                    d.needsUpdate = !0),
                    b.lineDistancesNeedUpdate = !1),
                    b.groupsNeedUpdate && (b.computeGroups(a.geometry),
                    this.groups = b.groups,
                    b.groupsNeedUpdate = !1),
                    this
                },
                fromGeometry: function(a) {
                    return a.__directGeometry = (new xa).fromGeometry(a),
                    this.fromDirectGeometry(a.__directGeometry)
                },
                fromDirectGeometry: function(a) {
                    var b = new Float32Array(3 * a.vertices.length);
                    if (this.addAttribute("position", new na(b,3).copyVector3sArray(a.vertices)),
                    a.normals.length > 0) {
                        var c = new Float32Array(3 * a.normals.length);
                        this.addAttribute("normal", new na(c,3).copyVector3sArray(a.normals))
                    }
                    if (a.colors.length > 0) {
                        var d = new Float32Array(3 * a.colors.length);
                        this.addAttribute("color", new na(d,3).copyColorsArray(a.colors))
                    }
                    if (a.uvs.length > 0) {
                        var e = new Float32Array(2 * a.uvs.length);
                        this.addAttribute("uv", new na(e,2).copyVector2sArray(a.uvs))
                    }
                    if (a.uvs2.length > 0) {
                        var f = new Float32Array(2 * a.uvs2.length);
                        this.addAttribute("uv2", new na(f,2).copyVector2sArray(a.uvs2))
                    }
                    if (a.indices.length > 0) {
                        var g = ya(a.indices) > 65535 ? Uint32Array : Uint16Array
                          , h = new g(3 * a.indices.length);
                        this.setIndex(new na(h,1).copyIndicesArray(a.indices))
                    }
                    this.groups = a.groups;
                    for (var i in a.morphTargets) {
                        for (var j = [], k = a.morphTargets[i], l = 0, m = k.length; l < m; l++) {
                            var n = k[l]
                              , o = new va(3 * n.length,3);
                            j.push(o.copyVector3sArray(n))
                        }
                        this.morphAttributes[i] = j
                    }
                    if (a.skinIndices.length > 0) {
                        var p = new va(4 * a.skinIndices.length,4);
                        this.addAttribute("skinIndex", p.copyVector4sArray(a.skinIndices))
                    }
                    if (a.skinWeights.length > 0) {
                        var q = new va(4 * a.skinWeights.length,4);
                        this.addAttribute("skinWeight", q.copyVector4sArray(a.skinWeights))
                    }
                    return null !== a.boundingSphere && (this.boundingSphere = a.boundingSphere.clone()),
                    null !== a.boundingBox && (this.boundingBox = a.boundingBox.clone()),
                    this
                },
                computeBoundingBox: function() {
                    null === this.boundingBox && (this.boundingBox = new _);
                    var a = this.attributes.position;
                    void 0 !== a ? this.boundingBox.setFromBufferAttribute(a) : this.boundingBox.makeEmpty(),
                    isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)
                },
                computeBoundingSphere: function() {
                    var a = new _
                      , b = new i;
                    return function() {
                        null === this.boundingSphere && (this.boundingSphere = new aa);
                        var c = this.attributes.position;
                        if (c) {
                            var d = this.boundingSphere.center;
                            a.setFromBufferAttribute(c),
                            a.getCenter(d);
                            for (var e = 0, f = 0, g = c.count; f < g; f++)
                                b.x = c.getX(f),
                                b.y = c.getY(f),
                                b.z = c.getZ(f),
                                e = Math.max(e, d.distanceToSquared(b));
                            this.boundingSphere.radius = Math.sqrt(e),
                            isNaN(this.boundingSphere.radius)
                        }
                    }
                }(),
                computeFaceNormals: function() {},
                computeVertexNormals: function() {
                    var a = this.index
                      , b = this.attributes
                      , c = this.groups;
                    if (b.position) {
                        var d = b.position.array;
                        if (void 0 === b.normal)
                            this.addAttribute("normal", new na(new Float32Array(d.length),3));
                        else
                            for (var e = b.normal.array, f = 0, g = e.length; f < g; f++)
                                e[f] = 0;
                        var h, j, k, l = b.normal.array, m = new i, n = new i, o = new i, p = new i, q = new i;
                        if (a) {
                            var r = a.array;
                            0 === c.length && this.addGroup(0, r.length);
                            for (var s = 0, t = c.length; s < t; ++s)
                                for (var u = c[s], v = u.start, w = u.count, f = v, g = v + w; f < g; f += 3)
                                    h = 3 * r[f + 0],
                                    j = 3 * r[f + 1],
                                    k = 3 * r[f + 2],
                                    m.fromArray(d, h),
                                    n.fromArray(d, j),
                                    o.fromArray(d, k),
                                    p.subVectors(o, n),
                                    q.subVectors(m, n),
                                    p.cross(q),
                                    l[h] += p.x,
                                    l[h + 1] += p.y,
                                    l[h + 2] += p.z,
                                    l[j] += p.x,
                                    l[j + 1] += p.y,
                                    l[j + 2] += p.z,
                                    l[k] += p.x,
                                    l[k + 1] += p.y,
                                    l[k + 2] += p.z
                        } else
                            for (var f = 0, g = d.length; f < g; f += 9)
                                m.fromArray(d, f),
                                n.fromArray(d, f + 3),
                                o.fromArray(d, f + 6),
                                p.subVectors(o, n),
                                q.subVectors(m, n),
                                p.cross(q),
                                l[f] = p.x,
                                l[f + 1] = p.y,
                                l[f + 2] = p.z,
                                l[f + 3] = p.x,
                                l[f + 4] = p.y,
                                l[f + 5] = p.z,
                                l[f + 6] = p.x,
                                l[f + 7] = p.y,
                                l[f + 8] = p.z;
                        this.normalizeNormals(),
                        b.normal.needsUpdate = !0
                    }
                },
                merge: function(a, b) {
                    if (!1 !== (a && a.isBufferGeometry)) {
                        void 0 === b && (b = 0);
                        var c = this.attributes;
                        for (var d in c)
                            if (void 0 !== a.attributes[d])
                                for (var e = c[d], f = e.array, g = a.attributes[d], h = g.array, i = g.itemSize, j = 0, k = i * b; j < h.length; j++,
                                k++)
                                    f[k] = h[j];
                        return this
                    }
                },
                normalizeNormals: function() {
                    for (var a, b, c, d, e = this.attributes.normal.array, f = 0, g = e.length; f < g; f += 3)
                        a = e[f],
                        b = e[f + 1],
                        c = e[f + 2],
                        d = 1 / Math.sqrt(a * a + b * b + c * c),
                        e[f] *= d,
                        e[f + 1] *= d,
                        e[f + 2] *= d
                },
                toNonIndexed: function() {
                    if (null === this.index)
                        return this;
                    var a = new Ba
                      , b = this.index.array
                      , c = this.attributes;
                    for (var d in c) {
                        for (var e = c[d], f = e.array, g = e.itemSize, h = new f.constructor(b.length * g), i = 0, j = 0, k = 0, l = b.length; k < l; k++) {
                            i = b[k] * g;
                            for (var m = 0; m < g; m++)
                                h[j++] = f[i++]
                        }
                        a.addAttribute(d, new na(h,g))
                    }
                    return a
                },
                toJSON: function() {
                    var a = {
                        metadata: {
                            version: 4.4,
                            type: "BufferGeometry",
                            generator: "BufferGeometry.toJSON"
                        }
                    };
                    if (a.uuid = this.uuid,
                    a.type = this.type,
                    "" !== this.name && (a.name = this.name),
                    void 0 !== this.parameters) {
                        var b = this.parameters;
                        for (var c in b)
                            void 0 !== b[c] && (a[c] = b[c]);
                        return a
                    }
                    a.data = {
                        attributes: {}
                    };
                    var d = this.index;
                    if (null !== d) {
                        var e = Array.prototype.slice.call(d.array);
                        a.data.index = {
                            type: d.array.constructor.name,
                            array: e
                        }
                    }
                    var f = this.attributes;
                    for (var c in f) {
                        var g = f[c]
                          , e = Array.prototype.slice.call(g.array);
                        a.data.attributes[c] = {
                            itemSize: g.itemSize,
                            type: g.array.constructor.name,
                            array: e,
                            normalized: g.normalized
                        }
                    }
                    var h = this.groups;
                    h.length > 0 && (a.data.groups = JSON.parse(JSON.stringify(h)));
                    var i = this.boundingSphere;
                    return null !== i && (a.data.boundingSphere = {
                        center: i.center.toArray(),
                        radius: i.radius
                    }),
                    a
                },
                clone: function() {
                    return (new Ba).copy(this)
                },
                copy: function(a) {
                    var b, c, d;
                    this.index = null,
                    this.attributes = {},
                    this.morphAttributes = {},
                    this.groups = [],
                    this.boundingBox = null,
                    this.boundingSphere = null,
                    this.name = a.name;
                    var e = a.index;
                    null !== e && this.setIndex(e.clone());
                    var f = a.attributes;
                    for (b in f) {
                        var g = f[b];
                        this.addAttribute(b, g.clone())
                    }
                    var h = a.morphAttributes;
                    for (b in h) {
                        var i = []
                          , j = h[b];
                        for (c = 0,
                        d = j.length; c < d; c++)
                            i.push(j[c].clone());
                        this.morphAttributes[b] = i
                    }
                    var k = a.groups;
                    for (c = 0,
                    d = k.length; c < d; c++) {
                        var l = k[c];
                        this.addGroup(l.start, l.count, l.materialIndex)
                    }
                    var m = a.boundingBox;
                    null !== m && (this.boundingBox = m.clone());
                    var n = a.boundingSphere;
                    return null !== n && (this.boundingSphere = n.clone()),
                    this.drawRange.start = a.drawRange.start,
                    this.drawRange.count = a.drawRange.count,
                    this
                },
                dispose: function() {
                    this.dispatchEvent({
                        type: "dispose"
                    })
                }
            },
            Ba.MaxIndex = 65535,
            Object.assign(Ba.prototype, b.prototype),
            Ca.prototype = Object.assign(Object.create(ia.prototype), {
                constructor: Ca,
                isMesh: !0,
                setDrawMode: function(a) {
                    this.drawMode = a
                },
                copy: function(a) {
                    return ia.prototype.copy.call(this, a),
                    this.drawMode = a.drawMode,
                    this
                },
                updateMorphTargets: function() {
                    var a = this.geometry.morphTargets;
                    if (void 0 !== a && a.length > 0) {
                        this.morphTargetInfluences = [],
                        this.morphTargetDictionary = {};
                        for (var b = 0, c = a.length; b < c; b++)
                            this.morphTargetInfluences.push(0),
                            this.morphTargetDictionary[a[b].name] = b
                    }
                },
                raycast: function() {
                    function a(a, b, c, d, e, f, g) {
                        return ka.barycoordFromPoint(a, b, c, d, s),
                        e.multiplyScalar(s.x),
                        f.multiplyScalar(s.y),
                        g.multiplyScalar(s.z),
                        e.add(f).add(g),
                        e.clone()
                    }
                    function b(a, b, c, d, e, f, g) {
                        var h = a.material;
                        if (null === (h.side === af ? c.intersectTriangle(f, e, d, !0, g) : c.intersectTriangle(d, e, f, h.side !== bf, g)))
                            return null;
                        u.copy(g),
                        u.applyMatrix4(a.matrixWorld);
                        var i = b.ray.origin.distanceTo(u);
                        return i < b.near || i > b.far ? null : {
                            distance: i,
                            point: u.clone(),
                            object: a
                        }
                    }
                    function d(c, d, e, f, g, i, j, m) {
                        h.fromBufferAttribute(f, i),
                        k.fromBufferAttribute(f, j),
                        l.fromBufferAttribute(f, m);
                        var n = b(c, d, e, h, k, l, t);
                        return n && (g && (p.fromBufferAttribute(g, i),
                        q.fromBufferAttribute(g, j),
                        r.fromBufferAttribute(g, m),
                        n.uv = a(t, h, k, l, p, q, r)),
                        n.face = new la(i,j,m,ka.normal(h, k, l)),
                        n.faceIndex = i),
                        n
                    }
                    var e = new j
                      , f = new fa
                      , g = new aa
                      , h = new i
                      , k = new i
                      , l = new i
                      , m = new i
                      , n = new i
                      , o = new i
                      , p = new c
                      , q = new c
                      , r = new c
                      , s = new i
                      , t = new i
                      , u = new i;
                    return function(c, i) {
                        var j = this.geometry
                          , s = this.material
                          , u = this.matrixWorld;
                        if (void 0 !== s && (null === j.boundingSphere && j.computeBoundingSphere(),
                        g.copy(j.boundingSphere),
                        g.applyMatrix4(u),
                        !1 !== c.ray.intersectsSphere(g) && (e.getInverse(u),
                        f.copy(c.ray).applyMatrix4(e),
                        null === j.boundingBox || !1 !== f.intersectsBox(j.boundingBox)))) {
                            var v;
                            if (j.isBufferGeometry) {
                                var w, x, y, z, A, B = j.index, C = j.attributes.position, D = j.attributes.uv;
                                if (null !== B)
                                    for (z = 0,
                                    A = B.count; z < A; z += 3)
                                        w = B.getX(z),
                                        x = B.getX(z + 1),
                                        y = B.getX(z + 2),
                                        (v = d(this, c, f, C, D, w, x, y)) && (v.faceIndex = Math.floor(z / 3),
                                        i.push(v));
                                else
                                    for (z = 0,
                                    A = C.count; z < A; z += 3)
                                        w = z,
                                        x = z + 1,
                                        y = z + 2,
                                        (v = d(this, c, f, C, D, w, x, y)) && (v.index = w,
                                        i.push(v))
                            } else if (j.isGeometry) {
                                var E, F, G, H, I = s && s.isMultiMaterial, J = !0 === I ? s.materials : null, K = j.vertices, L = j.faces, M = j.faceVertexUvs[0];
                                M.length > 0 && (H = M);
                                for (var N = 0, O = L.length; N < O; N++) {
                                    var P = L[N]
                                      , Q = !0 === I ? J[P.materialIndex] : s;
                                    if (void 0 !== Q) {
                                        if (E = K[P.a],
                                        F = K[P.b],
                                        G = K[P.c],
                                        !0 === Q.morphTargets) {
                                            var R = j.morphTargets
                                              , S = this.morphTargetInfluences;
                                            h.set(0, 0, 0),
                                            k.set(0, 0, 0),
                                            l.set(0, 0, 0);
                                            for (var T = 0, U = R.length; T < U; T++) {
                                                var V = S[T];
                                                if (0 !== V) {
                                                    var W = R[T].vertices;
                                                    h.addScaledVector(m.subVectors(W[P.a], E), V),
                                                    k.addScaledVector(n.subVectors(W[P.b], F), V),
                                                    l.addScaledVector(o.subVectors(W[P.c], G), V)
                                                }
                                            }
                                            h.add(E),
                                            k.add(F),
                                            l.add(G),
                                            E = h,
                                            F = k,
                                            G = l
                                        }
                                        if (v = b(this, c, f, E, F, G, t)) {
                                            if (H) {
                                                var X = H[N];
                                                p.copy(X[0]),
                                                q.copy(X[1]),
                                                r.copy(X[2]),
                                                v.uv = a(t, E, F, G, p, q, r)
                                            }
                                            v.face = P,
                                            v.faceIndex = N,
                                            i.push(v)
                                        }
                                    }
                                }
                            }
                        }
                    }
                }(),
                clone: function() {
                    return new this.constructor(this.geometry,this.material).copy(this)
                }
            }),
            Da.prototype = Object.create(Aa.prototype),
            Da.prototype.constructor = Da,
            Ea.prototype = Object.create(Ba.prototype),
            Ea.prototype.constructor = Ea,
            Fa.prototype = Object.create(Aa.prototype),
            Fa.prototype.constructor = Fa,
            Ga.prototype = Object.create(Ba.prototype),
            Ga.prototype.constructor = Ga,
            Ha.prototype = Object.create(ia.prototype),
            Ha.prototype.constructor = Ha,
            Ha.prototype.isCamera = !0,
            Ha.prototype.getWorldDirection = function() {
                var a = new h;
                return function(b) {
                    var c = b || new i;
                    return this.getWorldQuaternion(a),
                    c.set(0, 0, -1).applyQuaternion(a)
                }
            }(),
            Ha.prototype.lookAt = function() {
                var a = new j;
                return function(b) {
                    a.lookAt(this.position, b, this.up),
                    this.quaternion.setFromRotationMatrix(a)
                }
            }(),
            Ha.prototype.clone = function() {
                return (new this.constructor).copy(this)
            }
            ,
            Ha.prototype.copy = function(a) {
                return ia.prototype.copy.call(this, a),
                this.matrixWorldInverse.copy(a.matrixWorldInverse),
                this.projectionMatrix.copy(a.projectionMatrix),
                this
            }
            ,
            Ia.prototype = Object.assign(Object.create(Ha.prototype), {
                constructor: Ia,
                isPerspectiveCamera: !0,
                copy: function(a) {
                    return Ha.prototype.copy.call(this, a),
                    this.fov = a.fov,
                    this.zoom = a.zoom,
                    this.near = a.near,
                    this.far = a.far,
                    this.focus = a.focus,
                    this.aspect = a.aspect,
                    this.view = null === a.view ? null : Object.assign({}, a.view),
                    this.filmGauge = a.filmGauge,
                    this.filmOffset = a.filmOffset,
                    this
                },
                setFocalLength: function(a) {
                    var b = .5 * this.getFilmHeight() / a;
                    this.fov = 2 * Zg.RAD2DEG * Math.atan(b),
                    this.updateProjectionMatrix()
                },
                getFocalLength: function() {
                    var a = Math.tan(.5 * Zg.DEG2RAD * this.fov);
                    return .5 * this.getFilmHeight() / a
                },
                getEffectiveFOV: function() {
                    return 2 * Zg.RAD2DEG * Math.atan(Math.tan(.5 * Zg.DEG2RAD * this.fov) / this.zoom)
                },
                getFilmWidth: function() {
                    return this.filmGauge * Math.min(this.aspect, 1)
                },
                getFilmHeight: function() {
                    return this.filmGauge / Math.max(this.aspect, 1)
                },
                setViewOffset: function(a, b, c, d, e, f) {
                    this.aspect = a / b,
                    this.view = {
                        fullWidth: a,
                        fullHeight: b,
                        offsetX: c,
                        offsetY: d,
                        width: e,
                        height: f
                    },
                    this.updateProjectionMatrix()
                },
                clearViewOffset: function() {
                    this.view = null,
                    this.updateProjectionMatrix()
                },
                updateProjectionMatrix: function() {
                    var a = this.near
                      , b = a * Math.tan(.5 * Zg.DEG2RAD * this.fov) / this.zoom
                      , c = 2 * b
                      , d = this.aspect * c
                      , e = -.5 * d
                      , f = this.view;
                    if (null !== f) {
                        var g = f.fullWidth
                          , h = f.fullHeight;
                        e += f.offsetX * d / g,
                        b -= f.offsetY * c / h,
                        d *= f.width / g,
                        c *= f.height / h
                    }
                    var i = this.filmOffset;
                    0 !== i && (e += a * i / this.getFilmWidth()),
                    this.projectionMatrix.makePerspective(e, e + d, b, b - c, a, this.far)
                },
                toJSON: function(a) {
                    var b = ia.prototype.toJSON.call(this, a);
                    return b.object.fov = this.fov,
                    b.object.zoom = this.zoom,
                    b.object.near = this.near,
                    b.object.far = this.far,
                    b.object.focus = this.focus,
                    b.object.aspect = this.aspect,
                    null !== this.view && (b.object.view = Object.assign({}, this.view)),
                    b.object.filmGauge = this.filmGauge,
                    b.object.filmOffset = this.filmOffset,
                    b
                }
            }),
            Ja.prototype = Object.assign(Object.create(Ha.prototype), {
                constructor: Ja,
                isOrthographicCamera: !0,
                copy: function(a) {
                    return Ha.prototype.copy.call(this, a),
                    this.left = a.left,
                    this.right = a.right,
                    this.top = a.top,
                    this.bottom = a.bottom,
                    this.near = a.near,
                    this.far = a.far,
                    this.zoom = a.zoom,
                    this.view = null === a.view ? null : Object.assign({}, a.view),
                    this
                },
                setViewOffset: function(a, b, c, d, e, f) {
                    this.view = {
                        fullWidth: a,
                        fullHeight: b,
                        offsetX: c,
                        offsetY: d,
                        width: e,
                        height: f
                    },
                    this.updateProjectionMatrix()
                },
                clearViewOffset: function() {
                    this.view = null,
                    this.updateProjectionMatrix()
                },
                updateProjectionMatrix: function() {
                    var a = (this.right - this.left) / (2 * this.zoom)
                      , b = (this.top - this.bottom) / (2 * this.zoom)
                      , c = (this.right + this.left) / 2
                      , d = (this.top + this.bottom) / 2
                      , e = c - a
                      , f = c + a
                      , g = d + b
                      , h = d - b;
                    if (null !== this.view) {
                        var i = this.zoom / (this.view.width / this.view.fullWidth)
                          , j = this.zoom / (this.view.height / this.view.fullHeight)
                          , k = (this.right - this.left) / this.view.width
                          , l = (this.top - this.bottom) / this.view.height;
                        e += k * (this.view.offsetX / i),
                        f = e + k * (this.view.width / i),
                        g -= l * (this.view.offsetY / j),
                        h = g - l * (this.view.height / j)
                    }
                    this.projectionMatrix.makeOrthographic(e, f, g, h, this.near, this.far)
                },
                toJSON: function(a) {
                    var b = ia.prototype.toJSON.call(this, a);
                    return b.object.zoom = this.zoom,
                    b.object.left = this.left,
                    b.object.right = this.right,
                    b.object.top = this.top,
                    b.object.bottom = this.bottom,
                    b.object.near = this.near,
                    b.object.far = this.far,
                    null !== this.view && (b.object.view = Object.assign({}, this.view)),
                    b
                }
            });
            var mh = 0;
            ib.prototype.isFogExp2 = !0,
            ib.prototype.clone = function() {
                return new ib(this.color.getHex(),this.density)
            }
            ,
            ib.prototype.toJSON = function(a) {
                return {
                    type: "FogExp2",
                    color: this.color.getHex(),
                    density: this.density
                }
            }
            ,
            jb.prototype.isFog = !0,
            jb.prototype.clone = function() {
                return new jb(this.color.getHex(),this.near,this.far)
            }
            ,
            jb.prototype.toJSON = function(a) {
                return {
                    type: "Fog",
                    color: this.color.getHex(),
                    near: this.near,
                    far: this.far
                }
            }
            ,
            kb.prototype = Object.create(ia.prototype),
            kb.prototype.constructor = kb,
            kb.prototype.copy = function(a, b) {
                return ia.prototype.copy.call(this, a, b),
                null !== a.background && (this.background = a.background.clone()),
                null !== a.fog && (this.fog = a.fog.clone()),
                null !== a.overrideMaterial && (this.overrideMaterial = a.overrideMaterial.clone()),
                this.autoUpdate = a.autoUpdate,
                this.matrixAutoUpdate = a.matrixAutoUpdate,
                this
            }
            ,
            kb.prototype.toJSON = function(a) {
                var b = ia.prototype.toJSON.call(this, a);
                return null !== this.background && (b.object.background = this.background.toJSON(a)),
                null !== this.fog && (b.object.fog = this.fog.toJSON()),
                b
            }
            ,
            lb.prototype = Object.assign(Object.create(ia.prototype), {
                constructor: lb,
                isLensFlare: !0,
                copy: function(a) {
                    ia.prototype.copy.call(this, a),
                    this.positionScreen.copy(a.positionScreen),
                    this.customUpdateCallback = a.customUpdateCallback;
                    for (var b = 0, c = a.lensFlares.length; b < c; b++)
                        this.lensFlares.push(a.lensFlares[b]);
                    return this
                },
                add: function(a, b, c, d, e, f) {
                    void 0 === b && (b = -1),
                    void 0 === c && (c = 0),
                    void 0 === f && (f = 1),
                    void 0 === e && (e = new T(16777215)),
                    void 0 === d && (d = jf),
                    c = Math.min(c, Math.max(0, c)),
                    this.lensFlares.push({
                        texture: a,
                        size: b,
                        distance: c,
                        x: 0,
                        y: 0,
                        z: 0,
                        scale: 1,
                        rotation: 0,
                        opacity: f,
                        color: e,
                        blending: d
                    })
                },
                updateLensFlares: function() {
                    var a, b, c = this.lensFlares.length, d = 2 * -this.positionScreen.x, e = 2 * -this.positionScreen.y;
                    for (a = 0; a < c; a++)
                        b = this.lensFlares[a],
                        b.x = this.positionScreen.x + d * b.distance,
                        b.y = this.positionScreen.y + e * b.distance,
                        b.wantedRotation = b.x * Math.PI * .25,
                        b.rotation += .25 * (b.wantedRotation - b.rotation)
                }
            }),
            mb.prototype = Object.create(Y.prototype),
            mb.prototype.constructor = mb,
            mb.prototype.copy = function(a) {
                return Y.prototype.copy.call(this, a),
                this.color.copy(a.color),
                this.map = a.map,
                this.rotation = a.rotation,
                this
            }
            ,
            nb.prototype = Object.assign(Object.create(ia.prototype), {
                constructor: nb,
                isSprite: !0,
                raycast: function() {
                    var a = new i;
                    return function(b, c) {
                        a.setFromMatrixPosition(this.matrixWorld);
                        var d = b.ray.distanceSqToPoint(a);
                        d > this.scale.x * this.scale.y / 4 || c.push({
                            distance: Math.sqrt(d),
                            point: this.position,
                            face: null,
                            object: this
                        })
                    }
                }(),
                clone: function() {
                    return new this.constructor(this.material).copy(this)
                }
            }),
            ob.prototype = Object.assign(Object.create(ia.prototype), {
                constructor: ob,
                copy: function(a) {
                    ia.prototype.copy.call(this, a, !1);
                    for (var b = a.levels, c = 0, d = b.length; c < d; c++) {
                        var e = b[c];
                        this.addLevel(e.object.clone(), e.distance)
                    }
                    return this
                },
                addLevel: function(a, b) {
                    void 0 === b && (b = 0),
                    b = Math.abs(b);
                    for (var c = this.levels, d = 0; d < c.length && !(b < c[d].distance); d++)
                        ;
                    c.splice(d, 0, {
                        distance: b,
                        object: a
                    }),
                    this.add(a)
                },
                getObjectForDistance: function(a) {
                    for (var b = this.levels, c = 1, d = b.length; c < d && !(a < b[c].distance); c++)
                        ;
                    return b[c - 1].object
                },
                raycast: function() {
                    var a = new i;
                    return function(b, c) {
                        a.setFromMatrixPosition(this.matrixWorld);
                        var d = b.ray.origin.distanceTo(a);
                        this.getObjectForDistance(d).raycast(b, c)
                    }
                }(),
                update: function() {
                    var a = new i
                      , b = new i;
                    return function(c) {
                        var d = this.levels;
                        if (d.length > 1) {
                            a.setFromMatrixPosition(c.matrixWorld),
                            b.setFromMatrixPosition(this.matrixWorld);
                            var e = a.distanceTo(b);
                            d[0].object.visible = !0;
                            for (var f = 1, g = d.length; f < g && e >= d[f].distance; f++)
                                d[f - 1].object.visible = !1,
                                d[f].object.visible = !0;
                            for (; f < g; f++)
                                d[f].object.visible = !1
                        }
                    }
                }(),
                toJSON: function(a) {
                    var b = ia.prototype.toJSON.call(this, a);
                    b.object.levels = [];
                    for (var c = this.levels, d = 0, e = c.length; d < e; d++) {
                        var f = c[d];
                        b.object.levels.push({
                            object: f.object.uuid,
                            distance: f.distance
                        })
                    }
                    return b
                }
            }),
            Object.assign(pb.prototype, {
                calculateInverses: function() {
                    this.boneInverses = [];
                    for (var a = 0, b = this.bones.length; a < b; a++) {
                        var c = new j;
                        this.bones[a] && c.getInverse(this.bones[a].matrixWorld),
                        this.boneInverses.push(c)
                    }
                },
                pose: function() {
                    for (var a, b = 0, c = this.bones.length; b < c; b++)
                        (a = this.bones[b]) && a.matrixWorld.getInverse(this.boneInverses[b]);
                    for (var b = 0, c = this.bones.length; b < c; b++)
                        (a = this.bones[b]) && (a.parent && a.parent.isBone ? (a.matrix.getInverse(a.parent.matrixWorld),
                        a.matrix.multiply(a.matrixWorld)) : a.matrix.copy(a.matrixWorld),
                        a.matrix.decompose(a.position, a.quaternion, a.scale))
                },
                update: function() {
                    var a = new j;
                    return function() {
                        for (var b = 0, c = this.bones.length; b < c; b++) {
                            var d = this.bones[b] ? this.bones[b].matrixWorld : this.identityMatrix;
                            a.multiplyMatrices(d, this.boneInverses[b]),
                            a.toArray(this.boneMatrices, 16 * b)
                        }
                        this.useVertexTexture && (this.boneTexture.needsUpdate = !0)
                    }
                }(),
                clone: function() {
                    return new pb(this.bones,this.boneInverses,this.useVertexTexture)
                }
            }),
            qb.prototype = Object.assign(Object.create(ia.prototype), {
                constructor: qb,
                isBone: !0
            }),
            rb.prototype = Object.assign(Object.create(Ca.prototype), {
                constructor: rb,
                isSkinnedMesh: !0,
                bind: function(a, b) {
                    this.skeleton = a,
                    void 0 === b && (this.updateMatrixWorld(!0),
                    this.skeleton.calculateInverses(),
                    b = this.matrixWorld),
                    this.bindMatrix.copy(b),
                    this.bindMatrixInverse.getInverse(b)
                },
                pose: function() {
                    this.skeleton.pose()
                },
                normalizeSkinWeights: function() {
                    if (this.geometry && this.geometry.isGeometry)
                        for (var a = 0; a < this.geometry.skinWeights.length; a++) {
                            var b = this.geometry.skinWeights[a]
                              , c = 1 / b.lengthManhattan();
                            c !== 1 / 0 ? b.multiplyScalar(c) : b.set(1, 0, 0, 0)
                        }
                    else if (this.geometry && this.geometry.isBufferGeometry)
                        for (var d = new e, f = this.geometry.attributes.skinWeight, a = 0; a < f.count; a++) {
                            d.x = f.getX(a),
                            d.y = f.getY(a),
                            d.z = f.getZ(a),
                            d.w = f.getW(a);
                            var c = 1 / d.lengthManhattan();
                            c !== 1 / 0 ? d.multiplyScalar(c) : d.set(1, 0, 0, 0),
                            f.setXYZW(a, d.x, d.y, d.z, d.w)
                        }
                },
                updateMatrixWorld: function(a) {
                    Ca.prototype.updateMatrixWorld.call(this, !0),
                    "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode && this.bindMatrixInverse.getInverse(this.bindMatrix)
                },
                clone: function() {
                    return new this.constructor(this.geometry,this.material,this.skeleton.useVertexTexture).copy(this)
                }
            }),
            sb.prototype = Object.create(Y.prototype),
            sb.prototype.constructor = sb,
            sb.prototype.isLineBasicMaterial = !0,
            sb.prototype.copy = function(a) {
                return Y.prototype.copy.call(this, a),
                this.color.copy(a.color),
                this.linewidth = a.linewidth,
                this.linecap = a.linecap,
                this.linejoin = a.linejoin,
                this
            }
            ,
            tb.prototype = Object.assign(Object.create(ia.prototype), {
                constructor: tb,
                isLine: !0,
                raycast: function() {
                    var a = new j
                      , b = new fa
                      , c = new aa;
                    return function(d, e) {
                        var f = d.linePrecision
                          , g = f * f
                          , h = this.geometry
                          , j = this.matrixWorld;
                        if (null === h.boundingSphere && h.computeBoundingSphere(),
                        c.copy(h.boundingSphere),
                        c.applyMatrix4(j),
                        !1 !== d.ray.intersectsSphere(c)) {
                            a.getInverse(j),
                            b.copy(d.ray).applyMatrix4(a);
                            var k = new i
                              , l = new i
                              , m = new i
                              , n = new i
                              , o = this && this.isLineSegments ? 2 : 1;
                            if (h.isBufferGeometry) {
                                var p = h.index
                                  , q = h.attributes
                                  , r = q.position.array;
                                if (null !== p)
                                    for (var s = p.array, t = 0, u = s.length - 1; t < u; t += o) {
                                        var v = s[t]
                                          , w = s[t + 1];
                                        k.fromArray(r, 3 * v),
                                        l.fromArray(r, 3 * w);
                                        var x = b.distanceSqToSegment(k, l, n, m);
                                        if (!(x > g)) {
                                            n.applyMatrix4(this.matrixWorld);
                                            var y = d.ray.origin.distanceTo(n);
                                            y < d.near || y > d.far || e.push({
                                                distance: y,
                                                point: m.clone().applyMatrix4(this.matrixWorld),
                                                index: t,
                                                face: null,
                                                faceIndex: null,
                                                object: this
                                            })
                                        }
                                    }
                                else
                                    for (var t = 0, u = r.length / 3 - 1; t < u; t += o) {
                                        k.fromArray(r, 3 * t),
                                        l.fromArray(r, 3 * t + 3);
                                        var x = b.distanceSqToSegment(k, l, n, m);
                                        if (!(x > g)) {
                                            n.applyMatrix4(this.matrixWorld);
                                            var y = d.ray.origin.distanceTo(n);
                                            y < d.near || y > d.far || e.push({
                                                distance: y,
                                                point: m.clone().applyMatrix4(this.matrixWorld),
                                                index: t,
                                                face: null,
                                                faceIndex: null,
                                                object: this
                                            })
                                        }
                                    }
                            } else if (h.isGeometry)
                                for (var z = h.vertices, A = z.length, t = 0; t < A - 1; t += o) {
                                    var x = b.distanceSqToSegment(z[t], z[t + 1], n, m);
                                    if (!(x > g)) {
                                        n.applyMatrix4(this.matrixWorld);
                                        var y = d.ray.origin.distanceTo(n);
                                        y < d.near || y > d.far || e.push({
                                            distance: y,
                                            point: m.clone().applyMatrix4(this.matrixWorld),
                                            index: t,
                                            face: null,
                                            faceIndex: null,
                                            object: this
                                        })
                                    }
                                }
                        }
                    }
                }(),
                clone: function() {
                    return new this.constructor(this.geometry,this.material).copy(this)
                }
            }),
            ub.prototype = Object.assign(Object.create(tb.prototype), {
                constructor: ub,
                isLineSegments: !0
            }),
            vb.prototype = Object.create(Y.prototype),
            vb.prototype.constructor = vb,
            vb.prototype.isPointsMaterial = !0,
            vb.prototype.copy = function(a) {
                return Y.prototype.copy.call(this, a),
                this.color.copy(a.color),
                this.map = a.map,
                this.size = a.size,
                this.sizeAttenuation = a.sizeAttenuation,
                this
            }
            ,
            wb.prototype = Object.assign(Object.create(ia.prototype), {
                constructor: wb,
                isPoints: !0,
                raycast: function() {
                    var a = new j
                      , b = new fa
                      , c = new aa;
                    return function(d, e) {
                        function f(a, c) {
                            var f = b.distanceSqToPoint(a);
                            if (f < m) {
                                var h = b.closestPointToPoint(a);
                                h.applyMatrix4(j);
                                var i = d.ray.origin.distanceTo(h);
                                if (i < d.near || i > d.far)
                                    return;
                                e.push({
                                    distance: i,
                                    distanceToRay: Math.sqrt(f),
                                    point: h.clone(),
                                    index: c,
                                    face: null,
                                    object: g
                                })
                            }
                        }
                        var g = this
                          , h = this.geometry
                          , j = this.matrixWorld
                          , k = d.params.Points.threshold;
                        if (null === h.boundingSphere && h.computeBoundingSphere(),
                        c.copy(h.boundingSphere),
                        c.applyMatrix4(j),
                        !1 !== d.ray.intersectsSphere(c)) {
                            a.getInverse(j),
                            b.copy(d.ray).applyMatrix4(a);
                            var l = k / ((this.scale.x + this.scale.y + this.scale.z) / 3)
                              , m = l * l
                              , n = new i;
                            if (h.isBufferGeometry) {
                                var o = h.index
                                  , p = h.attributes
                                  , q = p.position.array;
                                if (null !== o)
                                    for (var r = o.array, s = 0, t = r.length; s < t; s++) {
                                        var u = r[s];
                                        n.fromArray(q, 3 * u),
                                        f(n, u)
                                    }
                                else
                                    for (var s = 0, v = q.length / 3; s < v; s++)
                                        n.fromArray(q, 3 * s),
                                        f(n, s)
                            } else
                                for (var w = h.vertices, s = 0, v = w.length; s < v; s++)
                                    f(w[s], s)
                        }
                    }
                }(),
                clone: function() {
                    return new this.constructor(this.geometry,this.material).copy(this)
                }
            }),
            xb.prototype = Object.assign(Object.create(ia.prototype), {
                constructor: xb
            }),
            yb.prototype = Object.create(d.prototype),
            yb.prototype.constructor = yb,
            zb.prototype = Object.create(d.prototype),
            zb.prototype.constructor = zb,
            zb.prototype.isCompressedTexture = !0,
            Ab.prototype = Object.create(d.prototype),
            Ab.prototype.constructor = Ab,
            Bb.prototype = Object.create(d.prototype),
            Bb.prototype.constructor = Bb,
            Bb.prototype.isDepthTexture = !0,
            Cb.prototype = Object.create(Ba.prototype),
            Cb.prototype.constructor = Cb,
            Db.prototype = Object.create(Aa.prototype),
            Db.prototype.constructor = Db,
            Eb.prototype = Object.create(Ba.prototype),
            Eb.prototype.constructor = Eb,
            Fb.prototype = Object.create(Aa.prototype),
            Fb.prototype.constructor = Fb,
            Gb.prototype = Object.create(Ba.prototype),
            Gb.prototype.constructor = Gb,
            Hb.prototype = Object.create(Aa.prototype),
            Hb.prototype.constructor = Hb,
            Ib.prototype = Object.create(Gb.prototype),
            Ib.prototype.constructor = Ib,
            Jb.prototype = Object.create(Aa.prototype),
            Jb.prototype.constructor = Jb,
            Kb.prototype = Object.create(Gb.prototype),
            Kb.prototype.constructor = Kb,
            Lb.prototype = Object.create(Aa.prototype),
            Lb.prototype.constructor = Lb,
            Mb.prototype = Object.create(Gb.prototype),
            Mb.prototype.constructor = Mb,
            Nb.prototype = Object.create(Aa.prototype),
            Nb.prototype.constructor = Nb,
            Ob.prototype = Object.create(Gb.prototype),
            Ob.prototype.constructor = Ob,
            Pb.prototype = Object.create(Aa.prototype),
            Pb.prototype.constructor = Pb,
            Qb.prototype = Object.create(Ba.prototype),
            Qb.prototype.constructor = Qb,
            Rb.prototype = Object.create(Aa.prototype),
            Rb.prototype.constructor = Rb,
            Sb.prototype = Object.create(Ba.prototype),
            Sb.prototype.constructor = Sb,
            Tb.prototype = Object.create(Aa.prototype),
            Tb.prototype.constructor = Tb,
            Ub.prototype = Object.create(Ba.prototype),
            Ub.prototype.constructor = Ub;
            var nh = {
                area: function(a) {
                    for (var b = a.length, c = 0, d = b - 1, e = 0; e < b; d = e++)
                        c += a[d].x * a[e].y - a[e].x * a[d].y;
                    return .5 * c
                },
                triangulate: function() {
                    function a(a, b, c, d, e, f) {
                        var g, h, i, j, k, l, m, n, o;
                        if (h = a[f[b]].x,
                        i = a[f[b]].y,
                        j = a[f[c]].x,
                        k = a[f[c]].y,
                        l = a[f[d]].x,
                        m = a[f[d]].y,
                        (j - h) * (m - i) - (k - i) * (l - h) <= 0)
                            return !1;
                        var p, q, r, s, t, u, v, w, x, y, z, A, B, C, D;
                        for (p = l - j,
                        q = m - k,
                        r = h - l,
                        s = i - m,
                        t = j - h,
                        u = k - i,
                        g = 0; g < e; g++)
                            if (n = a[f[g]].x,
                            o = a[f[g]].y,
                            !(n === h && o === i || n === j && o === k || n === l && o === m) && (v = n - h,
                            w = o - i,
                            x = n - j,
                            y = o - k,
                            z = n - l,
                            A = o - m,
                            D = p * y - q * x,
                            B = t * w - u * v,
                            C = r * A - s * z,
                            D >= -Number.EPSILON && C >= -Number.EPSILON && B >= -Number.EPSILON))
                                return !1;
                        return !0
                    }
                    return function(b, c) {
                        var d = b.length;
                        if (d < 3)
                            return null;
                        var e, f, g, h = [], i = [], j = [];
                        if (nh.area(b) > 0)
                            for (f = 0; f < d; f++)
                                i[f] = f;
                        else
                            for (f = 0; f < d; f++)
                                i[f] = d - 1 - f;
                        var k = d
                          , l = 2 * k;
                        for (f = k - 1; k > 2; ) {
                            if (l-- <= 0)
                                return c ? j : h;
                            if (e = f,
                            k <= e && (e = 0),
                            f = e + 1,
                            k <= f && (f = 0),
                            g = f + 1,
                            k <= g && (g = 0),
                            a(b, e, f, g, k, i)) {
                                var m, n, o, p, q;
                                for (m = i[e],
                                n = i[f],
                                o = i[g],
                                h.push([b[m], b[n], b[o]]),
                                j.push([i[e], i[f], i[g]]),
                                p = f,
                                q = f + 1; q < k; p++,
                                q++)
                                    i[p] = i[q];
                                k--,
                                l = 2 * k
                            }
                        }
                        return c ? j : h
                    }
                }(),
                triangulateShape: function(a, b) {
                    function c(a) {
                        var b = a.length;
                        b > 2 && a[b - 1].equals(a[0]) && a.pop()
                    }
                    function d(a, b, c) {
                        return a.x !== b.x ? a.x < b.x ? a.x <= c.x && c.x <= b.x : b.x <= c.x && c.x <= a.x : a.y < b.y ? a.y <= c.y && c.y <= b.y : b.y <= c.y && c.y <= a.y
                    }
                    function e(a, b, c, e, f) {
                        var g = b.x - a.x
                          , h = b.y - a.y
                          , i = e.x - c.x
                          , j = e.y - c.y
                          , k = a.x - c.x
                          , l = a.y - c.y
                          , m = h * i - g * j
                          , n = h * k - g * l;
                        if (Math.abs(m) > Number.EPSILON) {
                            var o;
                            if (m > 0) {
                                if (n < 0 || n > m)
                                    return [];
                                if ((o = j * k - i * l) < 0 || o > m)
                                    return []
                            } else {
                                if (n > 0 || n < m)
                                    return [];
                                if ((o = j * k - i * l) > 0 || o < m)
                                    return []
                            }
                            if (0 === o)
                                return !f || 0 !== n && n !== m ? [a] : [];
                            if (o === m)
                                return !f || 0 !== n && n !== m ? [b] : [];
                            if (0 === n)
                                return [c];
                            if (n === m)
                                return [e];
                            var p = o / m;
                            return [{
                                x: a.x + p * g,
                                y: a.y + p * h
                            }]
                        }
                        if (0 !== n || j * k != i * l)
                            return [];
                        var q = 0 === g && 0 === h
                          , r = 0 === i && 0 === j;
                        if (q && r)
                            return a.x !== c.x || a.y !== c.y ? [] : [a];
                        if (q)
                            return d(c, e, a) ? [a] : [];
                        if (r)
                            return d(a, b, c) ? [c] : [];
                        var s, t, u, v, w, x, y, z;
                        return 0 !== g ? (a.x < b.x ? (s = a,
                        u = a.x,
                        t = b,
                        v = b.x) : (s = b,
                        u = b.x,
                        t = a,
                        v = a.x),
                        c.x < e.x ? (w = c,
                        y = c.x,
                        x = e,
                        z = e.x) : (w = e,
                        y = e.x,
                        x = c,
                        z = c.x)) : (a.y < b.y ? (s = a,
                        u = a.y,
                        t = b,
                        v = b.y) : (s = b,
                        u = b.y,
                        t = a,
                        v = a.y),
                        c.y < e.y ? (w = c,
                        y = c.y,
                        x = e,
                        z = e.y) : (w = e,
                        y = e.y,
                        x = c,
                        z = c.y)),
                        u <= y ? v < y ? [] : v === y ? f ? [] : [w] : v <= z ? [w, t] : [w, x] : u > z ? [] : u === z ? f ? [] : [s] : v <= z ? [s, t] : [s, x]
                    }
                    function f(a, b, c, d) {
                        var e = b.x - a.x
                          , f = b.y - a.y
                          , g = c.x - a.x
                          , h = c.y - a.y
                          , i = d.x - a.x
                          , j = d.y - a.y
                          , k = e * h - f * g
                          , l = e * j - f * i;
                        if (Math.abs(k) > Number.EPSILON) {
                            var m = i * h - j * g;
                            return k > 0 ? l >= 0 && m >= 0 : l >= 0 || m >= 0
                        }
                        return l > 0
                    }
                    c(a),
                    b.forEach(c);
                    for (var g, h, i, j, k, l, m = {}, n = a.concat(), o = 0, p = b.length; o < p; o++)
                        Array.prototype.push.apply(n, b[o]);
                    for (g = 0,
                    h = n.length; g < h; g++)
                        k = n[g].x + ":" + n[g].y,
                        m[k],
                        m[k] = g;
                    var q = function(a, b) {
                        for (var c, d, g, h, i, j, k, l, m, n, o, p = a.concat(), q = [], r = [], s = 0, t = b.length; s < t; s++)
                            q.push(s);
                        for (var u = 0, v = 2 * q.length; q.length > 0 && !(--v < 0); )
                            for (g = u; g < p.length; g++) {
                                h = p[g],
                                d = -1;
                                for (var s = 0; s < q.length; s++)
                                    if (j = q[s],
                                    k = h.x + ":" + h.y + ":" + j,
                                    void 0 === r[k]) {
                                        c = b[j];
                                        for (var w = 0; w < c.length; w++)
                                            if (i = c[w],
                                            function(a, b) {
                                                var d = p.length - 1
                                                  , e = a - 1;
                                                e < 0 && (e = d);
                                                var g = a + 1;
                                                g > d && (g = 0);
                                                var h = f(p[a], p[e], p[g], c[b]);
                                                if (!h)
                                                    return !1;
                                                var i = c.length - 1
                                                  , j = b - 1;
                                                j < 0 && (j = i);
                                                var k = b + 1;
                                                return k > i && (k = 0),
                                                !!(h = f(c[b], c[j], c[k], p[a]))
                                            }(g, w) && !function(a, b) {
                                                var c, d, f;
                                                for (c = 0; c < p.length; c++)
                                                    if (d = c + 1,
                                                    d %= p.length,
                                                    f = e(a, b, p[c], p[d], !0),
                                                    f.length > 0)
                                                        return !0;
                                                return !1
                                            }(h, i) && !function(a, c) {
                                                var d, f, g, h, i;
                                                for (d = 0; d < q.length; d++)
                                                    for (f = b[q[d]],
                                                    g = 0; g < f.length; g++)
                                                        if (h = g + 1,
                                                        h %= f.length,
                                                        i = e(a, c, f[g], f[h], !0),
                                                        i.length > 0)
                                                            return !0;
                                                return !1
                                            }(h, i)) {
                                                d = w,
                                                q.splice(s, 1),
                                                l = p.slice(0, g + 1),
                                                m = p.slice(g),
                                                n = c.slice(d),
                                                o = c.slice(0, d + 1),
                                                p = l.concat(n).concat(o).concat(m),
                                                u = g;
                                                break
                                            }
                                        if (d >= 0)
                                            break;
                                        r[k] = !0
                                    }
                                if (d >= 0)
                                    break
                            }
                        return p
                    }(a, b)
                      , r = nh.triangulate(q, !1);
                    for (g = 0,
                    h = r.length; g < h; g++)
                        for (j = r[g],
                        i = 0; i < 3; i++)
                            k = j[i].x + ":" + j[i].y,
                            void 0 !== (l = m[k]) && (j[i] = l);
                    return r.concat()
                },
                isClockWise: function(a) {
                    return nh.area(a) < 0
                }
            };
            Vb.prototype = Object.create(Aa.prototype),
            Vb.prototype.constructor = Vb,
            Vb.prototype.addShapeList = function(a, b) {
                for (var c = a.length, d = 0; d < c; d++) {
                    var e = a[d];
                    this.addShape(e, b)
                }
            }
            ,
            Vb.prototype.addShape = function(a, b) {
                function d(a, b, c) {
                    return b.clone().multiplyScalar(c).add(a)
                }
                function e(a, b, d) {
                    var e, f, g = 1, h = a.x - b.x, i = a.y - b.y, j = d.x - a.x, k = d.y - a.y, l = h * h + i * i, m = h * k - i * j;
                    if (Math.abs(m) > Number.EPSILON) {
                        var n = Math.sqrt(l)
                          , o = Math.sqrt(j * j + k * k)
                          , p = b.x - i / n
                          , q = b.y + h / n
                          , r = d.x - k / o
                          , s = d.y + j / o
                          , t = ((r - p) * k - (s - q) * j) / (h * k - i * j);
                        e = p + h * t - a.x,
                        f = q + i * t - a.y;
                        var u = e * e + f * f;
                        if (u <= 2)
                            return new c(e,f);
                        g = Math.sqrt(u / 2)
                    } else {
                        var v = !1;
                        h > Number.EPSILON ? j > Number.EPSILON && (v = !0) : h < -Number.EPSILON ? j < -Number.EPSILON && (v = !0) : Math.sign(i) === Math.sign(k) && (v = !0),
                        v ? (e = -i,
                        f = h,
                        g = Math.sqrt(l)) : (e = h,
                        f = i,
                        g = Math.sqrt(l / 2))
                    }
                    return new c(e / g,f / g)
                }
                function f(a, b) {
                    var c, d;
                    for (T = a.length; --T >= 0; ) {
                        c = T,
                        d = T - 1,
                        d < 0 && (d = a.length - 1);
                        var e = 0
                          , f = v + 2 * s;
                        for (e = 0; e < f; e++) {
                            var g = Q * e
                              , h = Q * (e + 1);
                            j(b + c + g, b + d + g, b + d + h, b + c + h, a, e, f, c, d)
                        }
                    }
                }
                function g(a, b, c) {
                    C.vertices.push(new i(a,b,c))
                }
                function h(a, b, c) {
                    a += D,
                    b += D,
                    c += D,
                    C.faces.push(new la(a,b,c,null,null,0));
                    var d = y.generateTopUV(C, a, b, c);
                    C.faceVertexUvs[0].push(d)
                }
                function j(a, b, c, d, e, f, g, h, i) {
                    a += D,
                    b += D,
                    c += D,
                    d += D,
                    C.faces.push(new la(a,b,d,null,null,1)),
                    C.faces.push(new la(b,c,d,null,null,1));
                    var j = y.generateSideWallUV(C, a, b, c, d);
                    C.faceVertexUvs[0].push([j[0], j[1], j[3]]),
                    C.faceVertexUvs[0].push([j[1], j[2], j[3]])
                }
                var k, l, m, n, o, p = void 0 !== b.amount ? b.amount : 100, q = void 0 !== b.bevelThickness ? b.bevelThickness : 6, r = void 0 !== b.bevelSize ? b.bevelSize : q - 2, s = void 0 !== b.bevelSegments ? b.bevelSegments : 3, t = void 0 === b.bevelEnabled || b.bevelEnabled, u = void 0 !== b.curveSegments ? b.curveSegments : 12, v = void 0 !== b.steps ? b.steps : 1, w = b.extrudePath, x = !1, y = void 0 !== b.UVGenerator ? b.UVGenerator : Vb.WorldUVGenerator;
                w && (k = w.getSpacedPoints(v),
                x = !0,
                t = !1,
                l = void 0 !== b.frames ? b.frames : w.computeFrenetFrames(v, !1),
                m = new i,
                n = new i,
                o = new i),
                t || (s = 0,
                q = 0,
                r = 0);
                var z, A, B, C = this, D = this.vertices.length, E = a.extractPoints(u), F = E.shape, G = E.holes, H = !nh.isClockWise(F);
                if (H) {
                    for (F = F.reverse(),
                    A = 0,
                    B = G.length; A < B; A++)
                        z = G[A],
                        nh.isClockWise(z) && (G[A] = z.reverse());
                    H = !1
                }
                var I = nh.triangulateShape(F, G)
                  , J = F;
                for (A = 0,
                B = G.length; A < B; A++)
                    z = G[A],
                    F = F.concat(z);
                for (var K, L, M, N, O, P, Q = F.length, R = I.length, S = [], T = 0, U = J.length, V = U - 1, W = T + 1; T < U; T++,
                V++,
                W++)
                    V === U && (V = 0),
                    W === U && (W = 0),
                    S[T] = e(J[T], J[V], J[W]);
                var X, Y = [], Z = S.concat();
                for (A = 0,
                B = G.length; A < B; A++) {
                    for (z = G[A],
                    X = [],
                    T = 0,
                    U = z.length,
                    V = U - 1,
                    W = T + 1; T < U; T++,
                    V++,
                    W++)
                        V === U && (V = 0),
                        W === U && (W = 0),
                        X[T] = e(z[T], z[V], z[W]);
                    Y.push(X),
                    Z = Z.concat(X)
                }
                for (K = 0; K < s; K++) {
                    for (M = K / s,
                    N = q * Math.cos(M * Math.PI / 2),
                    L = r * Math.sin(M * Math.PI / 2),
                    T = 0,
                    U = J.length; T < U; T++)
                        O = d(J[T], S[T], L),
                        g(O.x, O.y, -N);
                    for (A = 0,
                    B = G.length; A < B; A++)
                        for (z = G[A],
                        X = Y[A],
                        T = 0,
                        U = z.length; T < U; T++)
                            O = d(z[T], X[T], L),
                            g(O.x, O.y, -N)
                }
                for (L = r,
                T = 0; T < Q; T++)
                    O = t ? d(F[T], Z[T], L) : F[T],
                    x ? (n.copy(l.normals[0]).multiplyScalar(O.x),
                    m.copy(l.binormals[0]).multiplyScalar(O.y),
                    o.copy(k[0]).add(n).add(m),
                    g(o.x, o.y, o.z)) : g(O.x, O.y, 0);
                var $;
                for ($ = 1; $ <= v; $++)
                    for (T = 0; T < Q; T++)
                        O = t ? d(F[T], Z[T], L) : F[T],
                        x ? (n.copy(l.normals[$]).multiplyScalar(O.x),
                        m.copy(l.binormals[$]).multiplyScalar(O.y),
                        o.copy(k[$]).add(n).add(m),
                        g(o.x, o.y, o.z)) : g(O.x, O.y, p / v * $);
                for (K = s - 1; K >= 0; K--) {
                    for (M = K / s,
                    N = q * Math.cos(M * Math.PI / 2),
                    L = r * Math.sin(M * Math.PI / 2),
                    T = 0,
                    U = J.length; T < U; T++)
                        O = d(J[T], S[T], L),
                        g(O.x, O.y, p + N);
                    for (A = 0,
                    B = G.length; A < B; A++)
                        for (z = G[A],
                        X = Y[A],
                        T = 0,
                        U = z.length; T < U; T++)
                            O = d(z[T], X[T], L),
                            x ? g(O.x, O.y + k[v - 1].y, k[v - 1].x + N) : g(O.x, O.y, p + N)
                }
                !function() {
                    if (t) {
                        var a = 0
                          , b = Q * a;
                        for (T = 0; T < R; T++)
                            P = I[T],
                            h(P[2] + b, P[1] + b, P[0] + b);
                        for (a = v + 2 * s,
                        b = Q * a,
                        T = 0; T < R; T++)
                            P = I[T],
                            h(P[0] + b, P[1] + b, P[2] + b)
                    } else {
                        for (T = 0; T < R; T++)
                            P = I[T],
                            h(P[2], P[1], P[0]);
                        for (T = 0; T < R; T++)
                            P = I[T],
                            h(P[0] + Q * v, P[1] + Q * v, P[2] + Q * v)
                    }
                }(),
                function() {
                    var a = 0;
                    for (f(J, a),
                    a += J.length,
                    A = 0,
                    B = G.length; A < B; A++)
                        z = G[A],
                        f(z, a),
                        a += z.length
                }()
            }
            ,
            Vb.WorldUVGenerator = {
                generateTopUV: function(a, b, d, e) {
                    var f = a.vertices
                      , g = f[b]
                      , h = f[d]
                      , i = f[e];
                    return [new c(g.x,g.y), new c(h.x,h.y), new c(i.x,i.y)]
                },
                generateSideWallUV: function(a, b, d, e, f) {
                    var g = a.vertices
                      , h = g[b]
                      , i = g[d]
                      , j = g[e]
                      , k = g[f];
                    return Math.abs(h.y - i.y) < .01 ? [new c(h.x,1 - h.z), new c(i.x,1 - i.z), new c(j.x,1 - j.z), new c(k.x,1 - k.z)] : [new c(h.y,1 - h.z), new c(i.y,1 - i.z), new c(j.y,1 - j.z), new c(k.y,1 - k.z)]
                }
            },
            Wb.prototype = Object.create(Vb.prototype),
            Wb.prototype.constructor = Wb,
            Xb.prototype = Object.create(Aa.prototype),
            Xb.prototype.constructor = Xb,
            Yb.prototype = Object.create(Ba.prototype),
            Yb.prototype.constructor = Yb,
            Zb.prototype = Object.create(Aa.prototype),
            Zb.prototype.constructor = Zb,
            $b.prototype = Object.create(Ba.prototype),
            $b.prototype.constructor = $b,
            _b.prototype = Object.create(Aa.prototype),
            _b.prototype.constructor = _b,
            ac.prototype = Object.create(Ba.prototype),
            ac.prototype.constructor = ac,
            bc.prototype = Object.create(Aa.prototype),
            bc.prototype.constructor = bc,
            cc.prototype = Object.create(Ba.prototype),
            cc.prototype.constructor = cc,
            dc.prototype = Object.create(Ba.prototype),
            dc.prototype.constructor = dc,
            ec.prototype = Object.create(Aa.prototype),
            ec.prototype.constructor = ec,
            fc.prototype = Object.create(Ba.prototype),
            fc.prototype.constructor = fc,
            gc.prototype = Object.create(ec.prototype),
            gc.prototype.constructor = gc,
            hc.prototype = Object.create(fc.prototype),
            hc.prototype.constructor = hc,
            ic.prototype = Object.create(Aa.prototype),
            ic.prototype.constructor = ic,
            jc.prototype = Object.create(Ba.prototype),
            jc.prototype.constructor = jc;
            var oh = Object.freeze({
                WireframeGeometry: Cb,
                ParametricGeometry: Db,
                ParametricBufferGeometry: Eb,
                TetrahedronGeometry: Hb,
                TetrahedronBufferGeometry: Ib,
                OctahedronGeometry: Jb,
                OctahedronBufferGeometry: Kb,
                IcosahedronGeometry: Lb,
                IcosahedronBufferGeometry: Mb,
                DodecahedronGeometry: Nb,
                DodecahedronBufferGeometry: Ob,
                PolyhedronGeometry: Fb,
                PolyhedronBufferGeometry: Gb,
                TubeGeometry: Pb,
                TubeBufferGeometry: Qb,
                TorusKnotGeometry: Rb,
                TorusKnotBufferGeometry: Sb,
                TorusGeometry: Tb,
                TorusBufferGeometry: Ub,
                TextGeometry: Wb,
                SphereGeometry: Xb,
                SphereBufferGeometry: Yb,
                RingGeometry: Zb,
                RingBufferGeometry: $b,
                PlaneGeometry: Fa,
                PlaneBufferGeometry: Ga,
                LatheGeometry: _b,
                LatheBufferGeometry: ac,
                ShapeGeometry: bc,
                ShapeBufferGeometry: cc,
                ExtrudeGeometry: Vb,
                EdgesGeometry: dc,
                ConeGeometry: gc,
                ConeBufferGeometry: hc,
                CylinderGeometry: ec,
                CylinderBufferGeometry: fc,
                CircleGeometry: ic,
                CircleBufferGeometry: jc,
                BoxGeometry: Da,
                BoxBufferGeometry: Ea
            });
            kc.prototype = Object.create(Z.prototype),
            kc.prototype.constructor = kc,
            kc.prototype.isShadowMaterial = !0,
            lc.prototype = Object.create(Z.prototype),
            lc.prototype.constructor = lc,
            lc.prototype.isRawShaderMaterial = !0,
            mc.prototype = {
                constructor: mc,
                isMultiMaterial: !0,
                toJSON: function(a) {
                    for (var b = {
                        metadata: {
                            version: 4.2,
                            type: "material",
                            generator: "MaterialExporter"
                        },
                        uuid: this.uuid,
                        type: this.type,
                        materials: []
                    }, c = this.materials, d = 0, e = c.length; d < e; d++) {
                        var f = c[d].toJSON(a);
                        delete f.metadata,
                        b.materials.push(f)
                    }
                    return b.visible = this.visible,
                    b
                },
                clone: function() {
                    for (var a = new this.constructor, b = 0; b < this.materials.length; b++)
                        a.materials.push(this.materials[b].clone());
                    return a.visible = this.visible,
                    a
                }
            },
            nc.prototype = Object.create(Y.prototype),
            nc.prototype.constructor = nc,
            nc.prototype.isMeshStandardMaterial = !0,
            nc.prototype.copy = function(a) {
                return Y.prototype.copy.call(this, a),
                this.defines = {
                    STANDARD: ""
                },
                this.color.copy(a.color),
                this.roughness = a.roughness,
                this.metalness = a.metalness,
                this.map = a.map,
                this.lightMap = a.lightMap,
                this.lightMapIntensity = a.lightMapIntensity,
                this.aoMap = a.aoMap,
                this.aoMapIntensity = a.aoMapIntensity,
                this.emissive.copy(a.emissive),
                this.emissiveMap = a.emissiveMap,
                this.emissiveIntensity = a.emissiveIntensity,
                this.bumpMap = a.bumpMap,
                this.bumpScale = a.bumpScale,
                this.normalMap = a.normalMap,
                this.normalScale.copy(a.normalScale),
                this.displacementMap = a.displacementMap,
                this.displacementScale = a.displacementScale,
                this.displacementBias = a.displacementBias,
                this.roughnessMap = a.roughnessMap,
                this.metalnessMap = a.metalnessMap,
                this.alphaMap = a.alphaMap,
                this.envMap = a.envMap,
                this.envMapIntensity = a.envMapIntensity,
                this.refractionRatio = a.refractionRatio,
                this.wireframe = a.wireframe,
                this.wireframeLinewidth = a.wireframeLinewidth,
                this.wireframeLinecap = a.wireframeLinecap,
                this.wireframeLinejoin = a.wireframeLinejoin,
                this.skinning = a.skinning,
                this.morphTargets = a.morphTargets,
                this.morphNormals = a.morphNormals,
                this
            }
            ,
            oc.prototype = Object.create(nc.prototype),
            oc.prototype.constructor = oc,
            oc.prototype.isMeshPhysicalMaterial = !0,
            oc.prototype.copy = function(a) {
                return nc.prototype.copy.call(this, a),
                this.defines = {
                    PHYSICAL: ""
                },
                this.reflectivity = a.reflectivity,
                this.clearCoat = a.clearCoat,
                this.clearCoatRoughness = a.clearCoatRoughness,
                this
            }
            ,
            pc.prototype = Object.create(Y.prototype),
            pc.prototype.constructor = pc,
            pc.prototype.isMeshPhongMaterial = !0,
            pc.prototype.copy = function(a) {
                return Y.prototype.copy.call(this, a),
                this.color.copy(a.color),
                this.specular.copy(a.specular),
                this.shininess = a.shininess,
                this.map = a.map,
                this.lightMap = a.lightMap,
                this.lightMapIntensity = a.lightMapIntensity,
                this.aoMap = a.aoMap,
                this.aoMapIntensity = a.aoMapIntensity,
                this.emissive.copy(a.emissive),
                this.emissiveMap = a.emissiveMap,
                this.emissiveIntensity = a.emissiveIntensity,
                this.bumpMap = a.bumpMap,
                this.bumpScale = a.bumpScale,
                this.normalMap = a.normalMap,
                this.normalScale.copy(a.normalScale),
                this.displacementMap = a.displacementMap,
                this.displacementScale = a.displacementScale,
                this.displacementBias = a.displacementBias,
                this.specularMap = a.specularMap,
                this.alphaMap = a.alphaMap,
                this.envMap = a.envMap,
                this.combine = a.combine,
                this.reflectivity = a.reflectivity,
                this.refractionRatio = a.refractionRatio,
                this.wireframe = a.wireframe,
                this.wireframeLinewidth = a.wireframeLinewidth,
                this.wireframeLinecap = a.wireframeLinecap,
                this.wireframeLinejoin = a.wireframeLinejoin,
                this.skinning = a.skinning,
                this.morphTargets = a.morphTargets,
                this.morphNormals = a.morphNormals,
                this
            }
            ,
            qc.prototype = Object.create(pc.prototype),
            qc.prototype.constructor = qc,
            qc.prototype.isMeshToonMaterial = !0,
            qc.prototype.copy = function(a) {
                return pc.prototype.copy.call(this, a),
                this.gradientMap = a.gradientMap,
                this
            }
            ,
            rc.prototype = Object.create(Y.prototype),
            rc.prototype.constructor = rc,
            rc.prototype.isMeshNormalMaterial = !0,
            rc.prototype.copy = function(a) {
                return Y.prototype.copy.call(this, a),
                this.bumpMap = a.bumpMap,
                this.bumpScale = a.bumpScale,
                this.normalMap = a.normalMap,
                this.normalScale.copy(a.normalScale),
                this.displacementMap = a.displacementMap,
                this.displacementScale = a.displacementScale,
                this.displacementBias = a.displacementBias,
                this.wireframe = a.wireframe,
                this.wireframeLinewidth = a.wireframeLinewidth,
                this.skinning = a.skinning,
                this.morphTargets = a.morphTargets,
                this.morphNormals = a.morphNormals,
                this
            }
            ,
            sc.prototype = Object.create(Y.prototype),
            sc.prototype.constructor = sc,
            sc.prototype.isMeshLambertMaterial = !0,
            sc.prototype.copy = function(a) {
                return Y.prototype.copy.call(this, a),
                this.color.copy(a.color),
                this.map = a.map,
                this.lightMap = a.lightMap,
                this.lightMapIntensity = a.lightMapIntensity,
                this.aoMap = a.aoMap,
                this.aoMapIntensity = a.aoMapIntensity,
                this.emissive.copy(a.emissive),
                this.emissiveMap = a.emissiveMap,
                this.emissiveIntensity = a.emissiveIntensity,
                this.specularMap = a.specularMap,
                this.alphaMap = a.alphaMap,
                this.envMap = a.envMap,
                this.combine = a.combine,
                this.reflectivity = a.reflectivity,
                this.refractionRatio = a.refractionRatio,
                this.wireframe = a.wireframe,
                this.wireframeLinewidth = a.wireframeLinewidth,
                this.wireframeLinecap = a.wireframeLinecap,
                this.wireframeLinejoin = a.wireframeLinejoin,
                this.skinning = a.skinning,
                this.morphTargets = a.morphTargets,
                this.morphNormals = a.morphNormals,
                this
            }
            ,
            tc.prototype = Object.create(Y.prototype),
            tc.prototype.constructor = tc,
            tc.prototype.isLineDashedMaterial = !0,
            tc.prototype.copy = function(a) {
                return Y.prototype.copy.call(this, a),
                this.color.copy(a.color),
                this.linewidth = a.linewidth,
                this.scale = a.scale,
                this.dashSize = a.dashSize,
                this.gapSize = a.gapSize,
                this
            }
            ;
            var ph = Object.freeze({
                ShadowMaterial: kc,
                SpriteMaterial: mb,
                RawShaderMaterial: lc,
                ShaderMaterial: Z,
                PointsMaterial: vb,
                MultiMaterial: mc,
                MeshPhysicalMaterial: oc,
                MeshStandardMaterial: nc,
                MeshPhongMaterial: pc,
                MeshToonMaterial: qc,
                MeshNormalMaterial: rc,
                MeshLambertMaterial: sc,
                MeshDepthMaterial: $,
                MeshBasicMaterial: ma,
                LineDashedMaterial: tc,
                LineBasicMaterial: sb,
                Material: Y
            })
              , qh = {
                enabled: !1,
                files: {},
                add: function(a, b) {
                    !1 !== this.enabled && (this.files[a] = b)
                },
                get: function(a) {
                    if (!1 !== this.enabled)
                        return this.files[a]
                },
                remove: function(a) {
                    delete this.files[a]
                },
                clear: function() {
                    this.files = {}
                }
            }
              , rh = new uc;
            Object.assign(vc.prototype, {
                load: function(a, b, c, d) {
                    void 0 === a && (a = ""),
                    void 0 !== this.path && (a = this.path + a);
                    var e = this
                      , f = qh.get(a);
                    if (void 0 !== f)
                        return e.manager.itemStart(a),
                        setTimeout(function() {
                            b && b(f),
                            e.manager.itemEnd(a)
                        }, 0),
                        f;
                    var g = /^data:(.*?)(;base64)?,(.*)$/
                      , h = a.match(g);
                    if (h) {
                        var i = h[1]
                          , j = !!h[2]
                          , k = h[3];
                        k = window.decodeURIComponent(k),
                        j && (k = window.atob(k));
                        try {
                            var l, m = (this.responseType || "").toLowerCase();
                            switch (m) {
                            case "arraybuffer":
                            case "blob":
                                l = new ArrayBuffer(k.length);
                                for (var n = new Uint8Array(l), o = 0; o < k.length; o++)
                                    n[o] = k.charCodeAt(o);
                                "blob" === m && (l = new Blob([l],{
                                    type: i
                                }));
                                break;
                            case "document":
                                var p = new DOMParser;
                                l = p.parseFromString(k, i);
                                break;
                            case "json":
                                l = JSON.parse(k);
                                break;
                            default:
                                l = k
                            }
                            window.setTimeout(function() {
                                b && b(l),
                                e.manager.itemEnd(a)
                            }, 0)
                        } catch (b) {
                            window.setTimeout(function() {
                                d && d(b),
                                e.manager.itemError(a)
                            }, 0)
                        }
                    } else {
                        var q = new XMLHttpRequest;
                        q.open("GET", a, !0),
                        q.addEventListener("load", function(c) {
                            var f = c.target.response;
                            qh.add(a, f),
                            200 === this.status ? (b && b(f),
                            e.manager.itemEnd(a)) : 0 === this.status ? (b && b(f),
                            e.manager.itemEnd(a)) : (d && d(c),
                            e.manager.itemError(a))
                        }, !1),
                        void 0 !== c && q.addEventListener("progress", function(a) {
                            c(a)
                        }, !1),
                        q.addEventListener("error", function(b) {
                            d && d(b),
                            e.manager.itemError(a)
                        }, !1),
                        void 0 !== this.responseType && (q.responseType = this.responseType),
                        void 0 !== this.withCredentials && (q.withCredentials = this.withCredentials),
                        q.overrideMimeType && q.overrideMimeType(void 0 !== this.mimeType ? this.mimeType : "text/plain"),
                        q.send(null)
                    }
                    return e.manager.itemStart(a),
                    q
                },
                setPath: function(a) {
                    return this.path = a,
                    this
                },
                setResponseType: function(a) {
                    return this.responseType = a,
                    this
                },
                setWithCredentials: function(a) {
                    return this.withCredentials = a,
                    this
                },
                setMimeType: function(a) {
                    return this.mimeType = a,
                    this
                }
            }),
            Object.assign(wc.prototype, {
                load: function(a, b, c, d) {
                    var e = this
                      , f = []
                      , g = new zb;
                    g.image = f;
                    var h = new vc(this.manager);
                    if (h.setPath(this.path),
                    h.setResponseType("arraybuffer"),
                    Array.isArray(a))
                        for (var i = 0, j = 0, k = a.length; j < k; ++j)
                            !function(j) {
                                h.load(a[j], function(a) {
                                    var c = e._parser(a, !0);
                                    f[j] = {
                                        width: c.width,
                                        height: c.height,
                                        format: c.format,
                                        mipmaps: c.mipmaps
                                    },
                                    6 === (i += 1) && (1 === c.mipmapCount && (g.minFilter = fg),
                                    g.format = c.format,
                                    g.needsUpdate = !0,
                                    b && b(g))
                                }, c, d)
                            }(j);
                    else
                        h.load(a, function(a) {
                            var c = e._parser(a, !0);
                            if (c.isCubemap)
                                for (var d = c.mipmaps.length / c.mipmapCount, h = 0; h < d; h++) {
                                    f[h] = {
                                        mipmaps: []
                                    };
                                    for (var i = 0; i < c.mipmapCount; i++)
                                        f[h].mipmaps.push(c.mipmaps[h * c.mipmapCount + i]),
                                        f[h].format = c.format,
                                        f[h].width = c.width,
                                        f[h].height = c.height
                                }
                            else
                                g.image.width = c.width,
                                g.image.height = c.height,
                                g.mipmaps = c.mipmaps;
                            1 === c.mipmapCount && (g.minFilter = fg),
                            g.format = c.format,
                            g.needsUpdate = !0,
                            b && b(g)
                        }, c, d);
                    return g
                },
                setPath: function(a) {
                    return this.path = a,
                    this
                }
            }),
            Object.assign(xc.prototype, {
                load: function(a, b, c, d) {
                    var e = this
                      , f = new U
                      , g = new vc(this.manager);
                    return g.setResponseType("arraybuffer"),
                    g.load(a, function(a) {
                        var c = e._parser(a);
                        c && (void 0 !== c.image ? f.image = c.image : void 0 !== c.data && (f.image.width = c.width,
                        f.image.height = c.height,
                        f.image.data = c.data),
                        f.wrapS = void 0 !== c.wrapS ? c.wrapS : ag,
                        f.wrapT = void 0 !== c.wrapT ? c.wrapT : ag,
                        f.magFilter = void 0 !== c.magFilter ? c.magFilter : fg,
                        f.minFilter = void 0 !== c.minFilter ? c.minFilter : hg,
                        f.anisotropy = void 0 !== c.anisotropy ? c.anisotropy : 1,
                        void 0 !== c.format && (f.format = c.format),
                        void 0 !== c.type && (f.type = c.type),
                        void 0 !== c.mipmaps && (f.mipmaps = c.mipmaps),
                        1 === c.mipmapCount && (f.minFilter = fg),
                        f.needsUpdate = !0,
                        b && b(f, c))
                    }, c, d),
                    f
                }
            }),
            Object.assign(yc.prototype, {
                load: function(a, b, c, d) {
                    void 0 === a && (a = ""),
                    void 0 !== this.path && (a = this.path + a);
                    var e = this
                      , f = qh.get(a);
                    if (void 0 !== f)
                        return e.manager.itemStart(a),
                        setTimeout(function() {
                            b && b(f),
                            e.manager.itemEnd(a)
                        }, 0),
                        f;
                    var g = document.createElementNS("http://www.w3.org/1999/xhtml", "img");
                    return g.addEventListener("load", function() {
                        qh.add(a, this),
                        b && b(this),
                        e.manager.itemEnd(a)
                    }, !1),
                    g.addEventListener("error", function(b) {
                        d && d(b),
                        e.manager.itemError(a)
                    }, !1),
                    void 0 !== this.crossOrigin && (g.crossOrigin = this.crossOrigin),
                    e.manager.itemStart(a),
                    g.src = a,
                    g
                },
                setCrossOrigin: function(a) {
                    return this.crossOrigin = a,
                    this
                },
                setPath: function(a) {
                    return this.path = a,
                    this
                }
            }),
            Object.assign(zc.prototype, {
                load: function(a, b, c, d) {
                    var e = new k
                      , f = new yc(this.manager);
                    f.setCrossOrigin(this.crossOrigin),
                    f.setPath(this.path);
                    for (var g = 0, h = 0; h < a.length; ++h)
                        !function(c) {
                            f.load(a[c], function(a) {
                                e.images[c] = a,
                                6 == ++g && (e.needsUpdate = !0,
                                b && b(e))
                            }, void 0, d)
                        }(h);
                    return e
                },
                setCrossOrigin: function(a) {
                    return this.crossOrigin = a,
                    this
                },
                setPath: function(a) {
                    return this.path = a,
                    this
                }
            }),
            Object.assign(Ac.prototype, {
                load: function(a, b, c, e) {
                    var f = new d
                      , g = new yc(this.manager);
                    return g.setCrossOrigin(this.crossOrigin),
                    g.setPath(this.path),
                    g.load(a, function(c) {
                        var d = a.search(/\.(jpg|jpeg)$/) > 0 || 0 === a.search(/^data\:image\/jpeg/);
                        f.format = d ? vg : wg,
                        f.image = c,
                        f.needsUpdate = !0,
                        void 0 !== b && b(f)
                    }, c, e),
                    f
                },
                setCrossOrigin: function(a) {
                    return this.crossOrigin = a,
                    this
                },
                setPath: function(a) {
                    return this.path = a,
                    this
                }
            }),
            Bc.prototype = Object.assign(Object.create(ia.prototype), {
                constructor: Bc,
                isLight: !0,
                copy: function(a) {
                    return ia.prototype.copy.call(this, a),
                    this.color.copy(a.color),
                    this.intensity = a.intensity,
                    this
                },
                toJSON: function(a) {
                    var b = ia.prototype.toJSON.call(this, a);
                    return b.object.color = this.color.getHex(),
                    b.object.intensity = this.intensity,
                    void 0 !== this.groundColor && (b.object.groundColor = this.groundColor.getHex()),
                    void 0 !== this.distance && (b.object.distance = this.distance),
                    void 0 !== this.angle && (b.object.angle = this.angle),
                    void 0 !== this.decay && (b.object.decay = this.decay),
                    void 0 !== this.penumbra && (b.object.penumbra = this.penumbra),
                    void 0 !== this.shadow && (b.object.shadow = this.shadow.toJSON()),
                    b
                }
            }),
            Cc.prototype = Object.assign(Object.create(Bc.prototype), {
                constructor: Cc,
                isHemisphereLight: !0,
                copy: function(a) {
                    return Bc.prototype.copy.call(this, a),
                    this.groundColor.copy(a.groundColor),
                    this
                }
            }),
            Object.assign(Dc.prototype, {
                copy: function(a) {
                    return this.camera = a.camera.clone(),
                    this.bias = a.bias,
                    this.radius = a.radius,
                    this.mapSize.copy(a.mapSize),
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                toJSON: function() {
                    var a = {};
                    return 0 !== this.bias && (a.bias = this.bias),
                    1 !== this.radius && (a.radius = this.radius),
                    512 === this.mapSize.x && 512 === this.mapSize.y || (a.mapSize = this.mapSize.toArray()),
                    a.camera = this.camera.toJSON(!1).object,
                    delete a.camera.matrix,
                    a
                }
            }),
            Ec.prototype = Object.assign(Object.create(Dc.prototype), {
                constructor: Ec,
                isSpotLightShadow: !0,
                update: function(a) {
                    var b = 2 * Zg.RAD2DEG * a.angle
                      , c = this.mapSize.width / this.mapSize.height
                      , d = a.distance || 500
                      , e = this.camera;
                    b === e.fov && c === e.aspect && d === e.far || (e.fov = b,
                    e.aspect = c,
                    e.far = d,
                    e.updateProjectionMatrix())
                }
            }),
            Fc.prototype = Object.assign(Object.create(Bc.prototype), {
                constructor: Fc,
                isSpotLight: !0,
                copy: function(a) {
                    return Bc.prototype.copy.call(this, a),
                    this.distance = a.distance,
                    this.angle = a.angle,
                    this.penumbra = a.penumbra,
                    this.decay = a.decay,
                    this.target = a.target.clone(),
                    this.shadow = a.shadow.clone(),
                    this
                }
            }),
            Gc.prototype = Object.assign(Object.create(Bc.prototype), {
                constructor: Gc,
                isPointLight: !0,
                copy: function(a) {
                    return Bc.prototype.copy.call(this, a),
                    this.distance = a.distance,
                    this.decay = a.decay,
                    this.shadow = a.shadow.clone(),
                    this
                }
            }),
            Hc.prototype = Object.assign(Object.create(Dc.prototype), {
                constructor: Hc
            }),
            Ic.prototype = Object.assign(Object.create(Bc.prototype), {
                constructor: Ic,
                isDirectionalLight: !0,
                copy: function(a) {
                    return Bc.prototype.copy.call(this, a),
                    this.target = a.target.clone(),
                    this.shadow = a.shadow.clone(),
                    this
                }
            }),
            Jc.prototype = Object.assign(Object.create(Bc.prototype), {
                constructor: Jc,
                isAmbientLight: !0
            });
            var sh = {
                arraySlice: function(a, b, c) {
                    return sh.isTypedArray(a) ? new a.constructor(a.subarray(b, c)) : a.slice(b, c)
                },
                convertArray: function(a, b, c) {
                    return !a || !c && a.constructor === b ? a : "number" == typeof b.BYTES_PER_ELEMENT ? new b(a) : Array.prototype.slice.call(a)
                },
                isTypedArray: function(a) {
                    return ArrayBuffer.isView(a) && !(a instanceof DataView)
                },
                getKeyframeOrder: function(a) {
                    function b(b, c) {
                        return a[b] - a[c]
                    }
                    for (var c = a.length, d = new Array(c), e = 0; e !== c; ++e)
                        d[e] = e;
                    return d.sort(b),
                    d
                },
                sortedArray: function(a, b, c) {
                    for (var d = a.length, e = new a.constructor(d), f = 0, g = 0; g !== d; ++f)
                        for (var h = c[f] * b, i = 0; i !== b; ++i)
                            e[g++] = a[h + i];
                    return e
                },
                flattenJSON: function(a, b, c, d) {
                    for (var e = 1, f = a[0]; void 0 !== f && void 0 === f[d]; )
                        f = a[e++];
                    if (void 0 !== f) {
                        var g = f[d];
                        if (void 0 !== g)
                            if (Array.isArray(g))
                                do {
                                    g = f[d],
                                    void 0 !== g && (b.push(f.time),
                                    c.push.apply(c, g)),
                                    f = a[e++]
                                } while (void 0 !== f);
                            else if (void 0 !== g.toArray)
                                do {
                                    g = f[d],
                                    void 0 !== g && (b.push(f.time),
                                    g.toArray(c, c.length)),
                                    f = a[e++]
                                } while (void 0 !== f);
                            else
                                do {
                                    g = f[d],
                                    void 0 !== g && (b.push(f.time),
                                    c.push(g)),
                                    f = a[e++]
                                } while (void 0 !== f)
                    }
                }
            };
            Kc.prototype = {
                constructor: Kc,
                evaluate: function(a) {
                    var b = this.parameterPositions
                      , c = this._cachedIndex
                      , d = b[c]
                      , e = b[c - 1];
                    a: {
                        b: {
                            var f;
                            c: {
                                d: if (!(a < d)) {
                                    for (var g = c + 2; ; ) {
                                        if (void 0 === d) {
                                            if (a < e)
                                                break d;
                                            return c = b.length,
                                            this._cachedIndex = c,
                                            this.afterEnd_(c - 1, a, e)
                                        }
                                        if (c === g)
                                            break;
                                        if (e = d,
                                        d = b[++c],
                                        a < d)
                                            break b
                                    }
                                    f = b.length;
                                    break c
                                }
                                {
                                    if (a >= e)
                                        break a;
                                    var h = b[1];
                                    a < h && (c = 2,
                                    e = h);
                                    for (var g = c - 2; ; ) {
                                        if (void 0 === e)
                                            return this._cachedIndex = 0,
                                            this.beforeStart_(0, a, d);
                                        if (c === g)
                                            break;
                                        if (d = e,
                                        e = b[--c - 1],
                                        a >= e)
                                            break b
                                    }
                                    f = c,
                                    c = 0
                                }
                            }
                            for (; c < f; ) {
                                var i = c + f >>> 1;
                                a < b[i] ? f = i : c = i + 1
                            }
                            if (d = b[c],
                            void 0 === (e = b[c - 1]))
                                return this._cachedIndex = 0,
                                this.beforeStart_(0, a, d);
                            if (void 0 === d)
                                return c = b.length,
                                this._cachedIndex = c,
                                this.afterEnd_(c - 1, e, a)
                        }
                        this._cachedIndex = c,
                        this.intervalChanged_(c, e, d)
                    }
                    return this.interpolate_(c, e, a, d)
                },
                settings: null,
                DefaultSettings_: {},
                getSettings_: function() {
                    return this.settings || this.DefaultSettings_
                },
                copySampleValue_: function(a) {
                    for (var b = this.resultBuffer, c = this.sampleValues, d = this.valueSize, e = a * d, f = 0; f !== d; ++f)
                        b[f] = c[e + f];
                    return b
                },
                interpolate_: function(a, b, c, d) {
                    throw new Error("call to abstract method")
                },
                intervalChanged_: function(a, b, c) {}
            },
            Object.assign(Kc.prototype, {
                beforeStart_: Kc.prototype.copySampleValue_,
                afterEnd_: Kc.prototype.copySampleValue_
            }),
            Lc.prototype = Object.assign(Object.create(Kc.prototype), {
                constructor: Lc,
                DefaultSettings_: {
                    endingStart: Mg,
                    endingEnd: Mg
                },
                intervalChanged_: function(a, b, c) {
                    var d = this.parameterPositions
                      , e = a - 2
                      , f = a + 1
                      , g = d[e]
                      , h = d[f];
                    if (void 0 === g)
                        switch (this.getSettings_().endingStart) {
                        case 2401:
                            e = a,
                            g = 2 * b - c;
                            break;
                        case 2402:
                            e = d.length - 2,
                            g = b + d[e] - d[e + 1];
                            break;
                        default:
                            e = a,
                            g = c
                        }
                    if (void 0 === h)
                        switch (this.getSettings_().endingEnd) {
                        case 2401:
                            f = a,
                            h = 2 * c - b;
                            break;
                        case 2402:
                            f = 1,
                            h = c + d[1] - d[0];
                            break;
                        default:
                            f = a - 1,
                            h = b
                        }
                    var i = .5 * (c - b)
                      , j = this.valueSize;
                    this._weightPrev = i / (b - g),
                    this._weightNext = i / (h - c),
                    this._offsetPrev = e * j,
                    this._offsetNext = f * j
                },
                interpolate_: function(a, b, c, d) {
                    for (var e = this.resultBuffer, f = this.sampleValues, g = this.valueSize, h = a * g, i = h - g, j = this._offsetPrev, k = this._offsetNext, l = this._weightPrev, m = this._weightNext, n = (c - b) / (d - b), o = n * n, p = o * n, q = -l * p + 2 * l * o - l * n, r = (1 + l) * p + (-1.5 - 2 * l) * o + (-.5 + l) * n + 1, s = (-1 - m) * p + (1.5 + m) * o + .5 * n, t = m * p - m * o, u = 0; u !== g; ++u)
                        e[u] = q * f[j + u] + r * f[i + u] + s * f[h + u] + t * f[k + u];
                    return e
                }
            }),
            Mc.prototype = Object.assign(Object.create(Kc.prototype), {
                constructor: Mc,
                interpolate_: function(a, b, c, d) {
                    for (var e = this.resultBuffer, f = this.sampleValues, g = this.valueSize, h = a * g, i = h - g, j = (c - b) / (d - b), k = 1 - j, l = 0; l !== g; ++l)
                        e[l] = f[i + l] * k + f[h + l] * j;
                    return e
                }
            }),
            Nc.prototype = Object.assign(Object.create(Kc.prototype), {
                constructor: Nc,
                interpolate_: function(a, b, c, d) {
                    return this.copySampleValue_(a - 1)
                }
            });
            var th;
            th = {
                TimeBufferType: Float32Array,
                ValueBufferType: Float32Array,
                DefaultInterpolation: 2301,
                InterpolantFactoryMethodDiscrete: function(a) {
                    return new Nc(this.times,this.values,this.getValueSize(),a)
                },
                InterpolantFactoryMethodLinear: function(a) {
                    return new Mc(this.times,this.values,this.getValueSize(),a)
                },
                InterpolantFactoryMethodSmooth: function(a) {
                    return new Lc(this.times,this.values,this.getValueSize(),a)
                },
                setInterpolation: function(a) {
                    var b;
                    switch (a) {
                    case 2300:
                        b = this.InterpolantFactoryMethodDiscrete;
                        break;
                    case 2301:
                        b = this.InterpolantFactoryMethodLinear;
                        break;
                    case 2302:
                        b = this.InterpolantFactoryMethodSmooth
                    }
                    if (void 0 !== b)
                        this.createInterpolant = b;
                    else {
                        var c = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
                        if (void 0 === this.createInterpolant) {
                            if (a === this.DefaultInterpolation)
                                throw new Error(c);
                            this.setInterpolation(this.DefaultInterpolation)
                        }
                    }
                },
                getInterpolation: function() {
                    switch (this.createInterpolant) {
                    case this.InterpolantFactoryMethodDiscrete:
                        return 2300;
                    case this.InterpolantFactoryMethodLinear:
                        return 2301;
                    case this.InterpolantFactoryMethodSmooth:
                        return 2302
                    }
                },
                getValueSize: function() {
                    return this.values.length / this.times.length
                },
                shift: function(a) {
                    if (0 !== a)
                        for (var b = this.times, c = 0, d = b.length; c !== d; ++c)
                            b[c] += a;
                    return this
                },
                scale: function(a) {
                    if (1 !== a)
                        for (var b = this.times, c = 0, d = b.length; c !== d; ++c)
                            b[c] *= a;
                    return this
                },
                trim: function(a, b) {
                    for (var c = this.times, d = c.length, e = 0, f = d - 1; e !== d && c[e] < a; )
                        ++e;
                    for (; -1 !== f && c[f] > b; )
                        --f;
                    if (++f,
                    0 !== e || f !== d) {
                        e >= f && (f = Math.max(f, 1),
                        e = f - 1);
                        var g = this.getValueSize();
                        this.times = sh.arraySlice(c, e, f),
                        this.values = sh.arraySlice(this.values, e * g, f * g)
                    }
                    return this
                },
                validate: function() {
                    var a = !0
                      , b = this.getValueSize();
                    b - Math.floor(b) != 0 && (a = !1);
                    var c = this.times
                      , d = this.values
                      , e = c.length;
                    0 === e && (a = !1);
                    for (var f = null, g = 0; g !== e; g++) {
                        var h = c[g];
                        if ("number" == typeof h && isNaN(h)) {
                            a = !1;
                            break
                        }
                        if (null !== f && f > h) {
                            a = !1;
                            break
                        }
                        f = h
                    }
                    if (void 0 !== d && sh.isTypedArray(d))
                        for (var g = 0, i = d.length; g !== i; ++g) {
                            var j = d[g];
                            if (isNaN(j)) {
                                a = !1;
                                break
                            }
                        }
                    return a
                },
                optimize: function() {
                    for (var a = this.times, b = this.values, c = this.getValueSize(), d = 2302 === this.getInterpolation(), e = 1, f = a.length - 1, g = 1; g < f; ++g) {
                        var h = !1
                          , i = a[g];
                        if (i !== a[g + 1] && (1 !== g || i !== i[0]))
                            if (d)
                                h = !0;
                            else
                                for (var j = g * c, k = j - c, l = j + c, m = 0; m !== c; ++m) {
                                    var n = b[j + m];
                                    if (n !== b[k + m] || n !== b[l + m]) {
                                        h = !0;
                                        break
                                    }
                                }
                        if (h) {
                            if (g !== e) {
                                a[e] = a[g];
                                for (var o = g * c, p = e * c, m = 0; m !== c; ++m)
                                    b[p + m] = b[o + m]
                            }
                            ++e
                        }
                    }
                    if (f > 0) {
                        a[e] = a[f];
                        for (var o = f * c, p = e * c, m = 0; m !== c; ++m)
                            b[p + m] = b[o + m];
                        ++e
                    }
                    return e !== a.length && (this.times = sh.arraySlice(a, 0, e),
                    this.values = sh.arraySlice(b, 0, e * c)),
                    this
                }
            },
            Pc.prototype = Object.assign(Object.create(th), {
                constructor: Pc,
                ValueTypeName: "vector"
            }),
            Qc.prototype = Object.assign(Object.create(Kc.prototype), {
                constructor: Qc,
                interpolate_: function(a, b, c, d) {
                    for (var e = this.resultBuffer, f = this.sampleValues, g = this.valueSize, i = a * g, j = (c - b) / (d - b), k = i + g; i !== k; i += 4)
                        h.slerpFlat(e, 0, f, i - g, f, i, j);
                    return e
                }
            }),
            Rc.prototype = Object.assign(Object.create(th), {
                constructor: Rc,
                ValueTypeName: "quaternion",
                DefaultInterpolation: 2301,
                InterpolantFactoryMethodLinear: function(a) {
                    return new Qc(this.times,this.values,this.getValueSize(),a)
                },
                InterpolantFactoryMethodSmooth: void 0
            }),
            Sc.prototype = Object.assign(Object.create(th), {
                constructor: Sc,
                ValueTypeName: "number"
            }),
            Tc.prototype = Object.assign(Object.create(th), {
                constructor: Tc,
                ValueTypeName: "string",
                ValueBufferType: Array,
                DefaultInterpolation: 2300,
                InterpolantFactoryMethodLinear: void 0,
                InterpolantFactoryMethodSmooth: void 0
            }),
            Uc.prototype = Object.assign(Object.create(th), {
                constructor: Uc,
                ValueTypeName: "bool",
                ValueBufferType: Array,
                DefaultInterpolation: 2300,
                InterpolantFactoryMethodLinear: void 0,
                InterpolantFactoryMethodSmooth: void 0
            }),
            Vc.prototype = Object.assign(Object.create(th), {
                constructor: Vc,
                ValueTypeName: "color"
            }),
            Wc.prototype = th,
            th.constructor = Wc,
            Object.assign(Wc, {
                parse: function(a) {
                    if (void 0 === a.type)
                        throw new Error("track type undefined, can not parse");
                    var b = Wc._getTrackTypeForValueTypeName(a.type);
                    if (void 0 === a.times) {
                        var c = []
                          , d = [];
                        sh.flattenJSON(a.keys, c, d, "value"),
                        a.times = c,
                        a.values = d
                    }
                    return void 0 !== b.parse ? b.parse(a) : new b(a.name,a.times,a.values,a.interpolation)
                },
                toJSON: function(a) {
                    var b, c = a.constructor;
                    if (void 0 !== c.toJSON)
                        b = c.toJSON(a);
                    else {
                        b = {
                            name: a.name,
                            times: sh.convertArray(a.times, Array),
                            values: sh.convertArray(a.values, Array)
                        };
                        var d = a.getInterpolation();
                        d !== a.DefaultInterpolation && (b.interpolation = d)
                    }
                    return b.type = a.ValueTypeName,
                    b
                },
                _getTrackTypeForValueTypeName: function(a) {
                    switch (a.toLowerCase()) {
                    case "scalar":
                    case "double":
                    case "float":
                    case "number":
                    case "integer":
                        return Sc;
                    case "vector":
                    case "vector2":
                    case "vector3":
                    case "vector4":
                        return Pc;
                    case "color":
                        return Vc;
                    case "quaternion":
                        return Rc;
                    case "bool":
                    case "boolean":
                        return Uc;
                    case "string":
                        return Tc
                    }
                    throw new Error("Unsupported typeName: " + a)
                }
            }),
            Xc.prototype = {
                constructor: Xc,
                resetDuration: function() {
                    for (var a = this.tracks, b = 0, c = 0, d = a.length; c !== d; ++c) {
                        var e = this.tracks[c];
                        b = Math.max(b, e.times[e.times.length - 1])
                    }
                    this.duration = b
                },
                trim: function() {
                    for (var a = 0; a < this.tracks.length; a++)
                        this.tracks[a].trim(0, this.duration);
                    return this
                },
                optimize: function() {
                    for (var a = 0; a < this.tracks.length; a++)
                        this.tracks[a].optimize();
                    return this
                }
            },
            Object.assign(Xc, {
                parse: function(a) {
                    for (var b = [], c = a.tracks, d = 1 / (a.fps || 1), e = 0, f = c.length; e !== f; ++e)
                        b.push(Wc.parse(c[e]).scale(d));
                    return new Xc(a.name,a.duration,b)
                },
                toJSON: function(a) {
                    for (var b = [], c = a.tracks, d = {
                        name: a.name,
                        duration: a.duration,
                        tracks: b
                    }, e = 0, f = c.length; e !== f; ++e)
                        b.push(Wc.toJSON(c[e]));
                    return d
                },
                CreateFromMorphTargetSequence: function(a, b, c, d) {
                    for (var e = b.length, f = [], g = 0; g < e; g++) {
                        var h = []
                          , i = [];
                        h.push((g + e - 1) % e, g, (g + 1) % e),
                        i.push(0, 1, 0);
                        var j = sh.getKeyframeOrder(h);
                        h = sh.sortedArray(h, 1, j),
                        i = sh.sortedArray(i, 1, j),
                        d || 0 !== h[0] || (h.push(e),
                        i.push(i[0])),
                        f.push(new Sc(".morphTargetInfluences[" + b[g].name + "]",h,i).scale(1 / c))
                    }
                    return new Xc(a,-1,f)
                },
                findByName: function(a, b) {
                    var c = a;
                    if (!Array.isArray(a)) {
                        var d = a;
                        c = d.geometry && d.geometry.animations || d.animations
                    }
                    for (var e = 0; e < c.length; e++)
                        if (c[e].name === b)
                            return c[e];
                    return null
                },
                CreateClipsFromMorphTargetSequences: function(a, b, c) {
                    for (var d = {}, e = /^([\w-]*?)([\d]+)$/, f = 0, g = a.length; f < g; f++) {
                        var h = a[f]
                          , i = h.name.match(e);
                        if (i && i.length > 1) {
                            var j = i[1]
                              , k = d[j];
                            k || (d[j] = k = []),
                            k.push(h)
                        }
                    }
                    var l = [];
                    for (var j in d)
                        l.push(Xc.CreateFromMorphTargetSequence(j, d[j], b, c));
                    return l
                },
                parseAnimation: function(a, b) {
                    if (!a)
                        return null;
                    for (var c = function(a, b, c, d, e) {
                        if (0 !== c.length) {
                            var f = []
                              , g = [];
                            sh.flattenJSON(c, f, g, d),
                            0 !== f.length && e.push(new a(b,f,g))
                        }
                    }, d = [], e = a.name || "default", f = a.length || -1, g = a.fps || 30, h = a.hierarchy || [], i = 0; i < h.length; i++) {
                        var j = h[i].keys;
                        if (j && 0 !== j.length)
                            if (j[0].morphTargets) {
                                for (var k = {}, l = 0; l < j.length; l++)
                                    if (j[l].morphTargets)
                                        for (var m = 0; m < j[l].morphTargets.length; m++)
                                            k[j[l].morphTargets[m]] = -1;
                                for (var n in k) {
                                    for (var o = [], p = [], m = 0; m !== j[l].morphTargets.length; ++m) {
                                        var q = j[l];
                                        o.push(q.time),
                                        p.push(q.morphTarget === n ? 1 : 0)
                                    }
                                    d.push(new Sc(".morphTargetInfluence[" + n + "]",o,p))
                                }
                                f = k.length * (g || 1)
                            } else {
                                var r = ".bones[" + b[i].name + "]";
                                c(Pc, r + ".position", j, "pos", d),
                                c(Rc, r + ".quaternion", j, "rot", d),
                                c(Pc, r + ".scale", j, "scl", d)
                            }
                    }
                    return 0 === d.length ? null : new Xc(e,f,d)
                }
            }),
            Object.assign(Yc.prototype, {
                load: function(a, b, c, d) {
                    var e = this;
                    new vc(e.manager).load(a, function(a) {
                        b(e.parse(JSON.parse(a)))
                    }, c, d)
                },
                setTextures: function(a) {
                    this.textures = a
                },
                parse: function(a) {
                    function b(a) {
                        return d[a],
                        d[a]
                    }
                    var d = this.textures
                      , e = new ph[a.type];
                    if (void 0 !== a.uuid && (e.uuid = a.uuid),
                    void 0 !== a.name && (e.name = a.name),
                    void 0 !== a.color && e.color.setHex(a.color),
                    void 0 !== a.roughness && (e.roughness = a.roughness),
                    void 0 !== a.metalness && (e.metalness = a.metalness),
                    void 0 !== a.emissive && e.emissive.setHex(a.emissive),
                    void 0 !== a.specular && e.specular.setHex(a.specular),
                    void 0 !== a.shininess && (e.shininess = a.shininess),
                    void 0 !== a.clearCoat && (e.clearCoat = a.clearCoat),
                    void 0 !== a.clearCoatRoughness && (e.clearCoatRoughness = a.clearCoatRoughness),
                    void 0 !== a.uniforms && (e.uniforms = a.uniforms),
                    void 0 !== a.vertexShader && (e.vertexShader = a.vertexShader),
                    void 0 !== a.fragmentShader && (e.fragmentShader = a.fragmentShader),
                    void 0 !== a.vertexColors && (e.vertexColors = a.vertexColors),
                    void 0 !== a.fog && (e.fog = a.fog),
                    void 0 !== a.shading && (e.shading = a.shading),
                    void 0 !== a.blending && (e.blending = a.blending),
                    void 0 !== a.side && (e.side = a.side),
                    void 0 !== a.opacity && (e.opacity = a.opacity),
                    void 0 !== a.transparent && (e.transparent = a.transparent),
                    void 0 !== a.alphaTest && (e.alphaTest = a.alphaTest),
                    void 0 !== a.depthTest && (e.depthTest = a.depthTest),
                    void 0 !== a.depthWrite && (e.depthWrite = a.depthWrite),
                    void 0 !== a.colorWrite && (e.colorWrite = a.colorWrite),
                    void 0 !== a.wireframe && (e.wireframe = a.wireframe),
                    void 0 !== a.wireframeLinewidth && (e.wireframeLinewidth = a.wireframeLinewidth),
                    void 0 !== a.wireframeLinecap && (e.wireframeLinecap = a.wireframeLinecap),
                    void 0 !== a.wireframeLinejoin && (e.wireframeLinejoin = a.wireframeLinejoin),
                    void 0 !== a.skinning && (e.skinning = a.skinning),
                    void 0 !== a.morphTargets && (e.morphTargets = a.morphTargets),
                    void 0 !== a.size && (e.size = a.size),
                    void 0 !== a.sizeAttenuation && (e.sizeAttenuation = a.sizeAttenuation),
                    void 0 !== a.map && (e.map = b(a.map)),
                    void 0 !== a.alphaMap && (e.alphaMap = b(a.alphaMap),
                    e.transparent = !0),
                    void 0 !== a.bumpMap && (e.bumpMap = b(a.bumpMap)),
                    void 0 !== a.bumpScale && (e.bumpScale = a.bumpScale),
                    void 0 !== a.normalMap && (e.normalMap = b(a.normalMap)),
                    void 0 !== a.normalScale) {
                        var f = a.normalScale;
                        !1 === Array.isArray(f) && (f = [f, f]),
                        e.normalScale = (new c).fromArray(f)
                    }
                    if (void 0 !== a.displacementMap && (e.displacementMap = b(a.displacementMap)),
                    void 0 !== a.displacementScale && (e.displacementScale = a.displacementScale),
                    void 0 !== a.displacementBias && (e.displacementBias = a.displacementBias),
                    void 0 !== a.roughnessMap && (e.roughnessMap = b(a.roughnessMap)),
                    void 0 !== a.metalnessMap && (e.metalnessMap = b(a.metalnessMap)),
                    void 0 !== a.emissiveMap && (e.emissiveMap = b(a.emissiveMap)),
                    void 0 !== a.emissiveIntensity && (e.emissiveIntensity = a.emissiveIntensity),
                    void 0 !== a.specularMap && (e.specularMap = b(a.specularMap)),
                    void 0 !== a.envMap && (e.envMap = b(a.envMap)),
                    void 0 !== a.reflectivity && (e.reflectivity = a.reflectivity),
                    void 0 !== a.lightMap && (e.lightMap = b(a.lightMap)),
                    void 0 !== a.lightMapIntensity && (e.lightMapIntensity = a.lightMapIntensity),
                    void 0 !== a.aoMap && (e.aoMap = b(a.aoMap)),
                    void 0 !== a.aoMapIntensity && (e.aoMapIntensity = a.aoMapIntensity),
                    void 0 !== a.gradientMap && (e.gradientMap = b(a.gradientMap)),
                    void 0 !== a.materials)
                        for (var g = 0, h = a.materials.length; g < h; g++)
                            e.materials.push(this.parse(a.materials[g]));
                    return e
                }
            }),
            Object.assign(Zc.prototype, {
                load: function(a, b, c, d) {
                    var e = this;
                    new vc(e.manager).load(a, function(a) {
                        b(e.parse(JSON.parse(a)))
                    }, c, d)
                },
                parse: function(a) {
                    var b = new Ba
                      , c = a.data.index
                      , d = {
                        Int8Array: Int8Array,
                        Uint8Array: Uint8Array,
                        Uint8ClampedArray: Uint8ClampedArray,
                        Int16Array: Int16Array,
                        Uint16Array: Uint16Array,
                        Int32Array: Int32Array,
                        Uint32Array: Uint32Array,
                        Float32Array: Float32Array,
                        Float64Array: Float64Array
                    };
                    if (void 0 !== c) {
                        var e = new d[c.type](c.array);
                        b.setIndex(new na(e,1))
                    }
                    var f = a.data.attributes;
                    for (var g in f) {
                        var h = f[g]
                          , e = new d[h.type](h.array);
                        b.addAttribute(g, new na(e,h.itemSize,h.normalized))
                    }
                    var j = a.data.groups || a.data.drawcalls || a.data.offsets;
                    if (void 0 !== j)
                        for (var k = 0, l = j.length; k !== l; ++k) {
                            var m = j[k];
                            b.addGroup(m.start, m.count, m.materialIndex)
                        }
                    var n = a.data.boundingSphere;
                    if (void 0 !== n) {
                        var o = new i;
                        void 0 !== n.center && o.fromArray(n.center),
                        b.boundingSphere = new aa(o,n.radius)
                    }
                    return b
                }
            }),
            $c.prototype = {
                constructor: $c,
                crossOrigin: void 0,
                extractUrlBase: function(a) {
                    var b = a.split("/");
                    return 1 === b.length ? "./" : (b.pop(),
                    b.join("/") + "/")
                },
                initMaterials: function(a, b, c) {
                    for (var d = [], e = 0; e < a.length; ++e)
                        d[e] = this.createMaterial(a[e], b, c);
                    return d
                },
                createMaterial: function() {
                    var a, b, c, d = {
                        NoBlending: hf,
                        NormalBlending: jf,
                        AdditiveBlending: kf,
                        SubtractiveBlending: lf,
                        MultiplyBlending: mf,
                        CustomBlending: nf
                    };
                    return function(e, f, g) {
                        function h(a, c, d, e, h) {
                            var j, k = f + a, l = $c.Handlers.get(k);
                            null !== l ? j = l.load(k) : (b.setCrossOrigin(g),
                            j = b.load(k)),
                            void 0 !== c && (j.repeat.fromArray(c),
                            1 !== c[0] && (j.wrapS = _f),
                            1 !== c[1] && (j.wrapT = _f)),
                            void 0 !== d && j.offset.fromArray(d),
                            void 0 !== e && ("repeat" === e[0] && (j.wrapS = _f),
                            "mirror" === e[0] && (j.wrapS = bg),
                            "repeat" === e[1] && (j.wrapT = _f),
                            "mirror" === e[1] && (j.wrapT = bg)),
                            void 0 !== h && (j.anisotropy = h);
                            var m = Zg.generateUUID();
                            return i[m] = j,
                            m
                        }
                        void 0 === a && (a = new T),
                        void 0 === b && (b = new Ac),
                        void 0 === c && (c = new Yc);
                        var i = {}
                          , j = {
                            uuid: Zg.generateUUID(),
                            type: "MeshLambertMaterial"
                        };
                        for (var k in e) {
                            var l = e[k];
                            switch (k) {
                            case "DbgColor":
                            case "DbgIndex":
                            case "opticalDensity":
                            case "illumination":
                                break;
                            case "DbgName":
                                j.name = l;
                                break;
                            case "blending":
                                j.blending = d[l];
                                break;
                            case "colorAmbient":
                            case "mapAmbient":
                                break;
                            case "colorDiffuse":
                                j.color = a.fromArray(l).getHex();
                                break;
                            case "colorSpecular":
                                j.specular = a.fromArray(l).getHex();
                                break;
                            case "colorEmissive":
                                j.emissive = a.fromArray(l).getHex();
                                break;
                            case "specularCoef":
                                j.shininess = l;
                                break;
                            case "shading":
                                "basic" === l.toLowerCase() && (j.type = "MeshBasicMaterial"),
                                "phong" === l.toLowerCase() && (j.type = "MeshPhongMaterial"),
                                "standard" === l.toLowerCase() && (j.type = "MeshStandardMaterial");
                                break;
                            case "mapDiffuse":
                                j.map = h(l, e.mapDiffuseRepeat, e.mapDiffuseOffset, e.mapDiffuseWrap, e.mapDiffuseAnisotropy);
                                break;
                            case "mapDiffuseRepeat":
                            case "mapDiffuseOffset":
                            case "mapDiffuseWrap":
                            case "mapDiffuseAnisotropy":
                                break;
                            case "mapEmissive":
                                j.emissiveMap = h(l, e.mapEmissiveRepeat, e.mapEmissiveOffset, e.mapEmissiveWrap, e.mapEmissiveAnisotropy);
                                break;
                            case "mapEmissiveRepeat":
                            case "mapEmissiveOffset":
                            case "mapEmissiveWrap":
                            case "mapEmissiveAnisotropy":
                                break;
                            case "mapLight":
                                j.lightMap = h(l, e.mapLightRepeat, e.mapLightOffset, e.mapLightWrap, e.mapLightAnisotropy);
                                break;
                            case "mapLightRepeat":
                            case "mapLightOffset":
                            case "mapLightWrap":
                            case "mapLightAnisotropy":
                                break;
                            case "mapAO":
                                j.aoMap = h(l, e.mapAORepeat, e.mapAOOffset, e.mapAOWrap, e.mapAOAnisotropy);
                                break;
                            case "mapAORepeat":
                            case "mapAOOffset":
                            case "mapAOWrap":
                            case "mapAOAnisotropy":
                                break;
                            case "mapBump":
                                j.bumpMap = h(l, e.mapBumpRepeat, e.mapBumpOffset, e.mapBumpWrap, e.mapBumpAnisotropy);
                                break;
                            case "mapBumpScale":
                                j.bumpScale = l;
                                break;
                            case "mapBumpRepeat":
                            case "mapBumpOffset":
                            case "mapBumpWrap":
                            case "mapBumpAnisotropy":
                                break;
                            case "mapNormal":
                                j.normalMap = h(l, e.mapNormalRepeat, e.mapNormalOffset, e.mapNormalWrap, e.mapNormalAnisotropy);
                                break;
                            case "mapNormalFactor":
                                j.normalScale = [l, l];
                                break;
                            case "mapNormalRepeat":
                            case "mapNormalOffset":
                            case "mapNormalWrap":
                            case "mapNormalAnisotropy":
                                break;
                            case "mapSpecular":
                                j.specularMap = h(l, e.mapSpecularRepeat, e.mapSpecularOffset, e.mapSpecularWrap, e.mapSpecularAnisotropy);
                                break;
                            case "mapSpecularRepeat":
                            case "mapSpecularOffset":
                            case "mapSpecularWrap":
                            case "mapSpecularAnisotropy":
                                break;
                            case "mapMetalness":
                                j.metalnessMap = h(l, e.mapMetalnessRepeat, e.mapMetalnessOffset, e.mapMetalnessWrap, e.mapMetalnessAnisotropy);
                                break;
                            case "mapMetalnessRepeat":
                            case "mapMetalnessOffset":
                            case "mapMetalnessWrap":
                            case "mapMetalnessAnisotropy":
                                break;
                            case "mapRoughness":
                                j.roughnessMap = h(l, e.mapRoughnessRepeat, e.mapRoughnessOffset, e.mapRoughnessWrap, e.mapRoughnessAnisotropy);
                                break;
                            case "mapRoughnessRepeat":
                            case "mapRoughnessOffset":
                            case "mapRoughnessWrap":
                            case "mapRoughnessAnisotropy":
                                break;
                            case "mapAlpha":
                                j.alphaMap = h(l, e.mapAlphaRepeat, e.mapAlphaOffset, e.mapAlphaWrap, e.mapAlphaAnisotropy);
                                break;
                            case "mapAlphaRepeat":
                            case "mapAlphaOffset":
                            case "mapAlphaWrap":
                            case "mapAlphaAnisotropy":
                                break;
                            case "flipSided":
                                j.side = af;
                                break;
                            case "doubleSided":
                                j.side = bf;
                                break;
                            case "transparency":
                                j.opacity = l;
                                break;
                            case "depthTest":
                            case "depthWrite":
                            case "colorWrite":
                            case "opacity":
                            case "reflectivity":
                            case "transparent":
                            case "visible":
                            case "wireframe":
                                j[k] = l;
                                break;
                            case "vertexColors":
                                !0 === l && (j.vertexColors = gf),
                                "face" === l && (j.vertexColors = ff)
                            }
                        }
                        return "MeshBasicMaterial" === j.type && delete j.emissive,
                        "MeshPhongMaterial" !== j.type && delete j.specular,
                        j.opacity < 1 && (j.transparent = !0),
                        c.setTextures(i),
                        c.parse(j)
                    }
                }()
            },
            $c.Handlers = {
                handlers: [],
                add: function(a, b) {
                    this.handlers.push(a, b)
                },
                get: function(a) {
                    for (var b = this.handlers, c = 0, d = b.length; c < d; c += 2) {
                        var e = b[c]
                          , f = b[c + 1];
                        if (e.test(a))
                            return f
                    }
                    return null
                }
            },
            Object.assign(_c.prototype, {
                load: function(a, b, c, d) {
                    var e = this
                      , f = this.texturePath && "string" == typeof this.texturePath ? this.texturePath : $c.prototype.extractUrlBase(a)
                      , g = new vc(this.manager);
                    g.setWithCredentials(this.withCredentials),
                    g.load(a, function(a) {
                        var c = JSON.parse(a)
                          , d = c.metadata;
                        if (void 0 !== d) {
                            var g = d.type;
                            if (void 0 !== g) {
                                if ("object" === g.toLowerCase())
                                    return;
                                if ("scene" === g.toLowerCase())
                                    return
                            }
                        }
                        var h = e.parse(c, f);
                        b(h.geometry, h.materials)
                    }, c, d)
                },
                setTexturePath: function(a) {
                    this.texturePath = a
                },
                parse: function(a, b) {
                    var d = new Aa
                      , f = void 0 !== a.scale ? 1 / a.scale : 1;
                    if (function(b) {
                        function e(a, b) {
                            return a & 1 << b
                        }
                        var f, g, h, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H = a.faces, I = a.vertices, J = a.normals, K = a.colors, L = 0;
                        if (void 0 !== a.uvs) {
                            for (f = 0; f < a.uvs.length; f++)
                                a.uvs[f].length && L++;
                            for (f = 0; f < L; f++)
                                d.faceVertexUvs[f] = []
                        }
                        for (j = 0,
                        k = I.length; j < k; )
                            x = new i,
                            x.x = I[j++] * b,
                            x.y = I[j++] * b,
                            x.z = I[j++] * b,
                            d.vertices.push(x);
                        for (j = 0,
                        k = H.length; j < k; )
                            if (p = H[j++],
                            q = e(p, 0),
                            r = e(p, 1),
                            s = e(p, 3),
                            t = e(p, 4),
                            u = e(p, 5),
                            v = e(p, 6),
                            w = e(p, 7),
                            q) {
                                if (z = new la,
                                z.a = H[j],
                                z.b = H[j + 1],
                                z.c = H[j + 3],
                                A = new la,
                                A.a = H[j + 1],
                                A.b = H[j + 2],
                                A.c = H[j + 3],
                                j += 4,
                                r && (o = H[j++],
                                z.materialIndex = o,
                                A.materialIndex = o),
                                h = d.faces.length,
                                s)
                                    for (f = 0; f < L; f++)
                                        for (D = a.uvs[f],
                                        d.faceVertexUvs[f][h] = [],
                                        d.faceVertexUvs[f][h + 1] = [],
                                        g = 0; g < 4; g++)
                                            n = H[j++],
                                            F = D[2 * n],
                                            G = D[2 * n + 1],
                                            E = new c(F,G),
                                            2 !== g && d.faceVertexUvs[f][h].push(E),
                                            0 !== g && d.faceVertexUvs[f][h + 1].push(E);
                                if (t && (m = 3 * H[j++],
                                z.normal.set(J[m++], J[m++], J[m]),
                                A.normal.copy(z.normal)),
                                u)
                                    for (f = 0; f < 4; f++)
                                        m = 3 * H[j++],
                                        C = new i(J[m++],J[m++],J[m]),
                                        2 !== f && z.vertexNormals.push(C),
                                        0 !== f && A.vertexNormals.push(C);
                                if (v && (l = H[j++],
                                B = K[l],
                                z.color.setHex(B),
                                A.color.setHex(B)),
                                w)
                                    for (f = 0; f < 4; f++)
                                        l = H[j++],
                                        B = K[l],
                                        2 !== f && z.vertexColors.push(new T(B)),
                                        0 !== f && A.vertexColors.push(new T(B));
                                d.faces.push(z),
                                d.faces.push(A)
                            } else {
                                if (y = new la,
                                y.a = H[j++],
                                y.b = H[j++],
                                y.c = H[j++],
                                r && (o = H[j++],
                                y.materialIndex = o),
                                h = d.faces.length,
                                s)
                                    for (f = 0; f < L; f++)
                                        for (D = a.uvs[f],
                                        d.faceVertexUvs[f][h] = [],
                                        g = 0; g < 3; g++)
                                            n = H[j++],
                                            F = D[2 * n],
                                            G = D[2 * n + 1],
                                            E = new c(F,G),
                                            d.faceVertexUvs[f][h].push(E);
                                if (t && (m = 3 * H[j++],
                                y.normal.set(J[m++], J[m++], J[m])),
                                u)
                                    for (f = 0; f < 3; f++)
                                        m = 3 * H[j++],
                                        C = new i(J[m++],J[m++],J[m]),
                                        y.vertexNormals.push(C);
                                if (v && (l = H[j++],
                                y.color.setHex(K[l])),
                                w)
                                    for (f = 0; f < 3; f++)
                                        l = H[j++],
                                        y.vertexColors.push(new T(K[l]));
                                d.faces.push(y)
                            }
                    }(f),
                    function() {
                        var b = void 0 !== a.influencesPerVertex ? a.influencesPerVertex : 2;
                        if (a.skinWeights)
                            for (var c = 0, f = a.skinWeights.length; c < f; c += b) {
                                var g = a.skinWeights[c]
                                  , h = b > 1 ? a.skinWeights[c + 1] : 0
                                  , i = b > 2 ? a.skinWeights[c + 2] : 0
                                  , j = b > 3 ? a.skinWeights[c + 3] : 0;
                                d.skinWeights.push(new e(g,h,i,j))
                            }
                        if (a.skinIndices)
                            for (var c = 0, f = a.skinIndices.length; c < f; c += b) {
                                var k = a.skinIndices[c]
                                  , l = b > 1 ? a.skinIndices[c + 1] : 0
                                  , m = b > 2 ? a.skinIndices[c + 2] : 0
                                  , n = b > 3 ? a.skinIndices[c + 3] : 0;
                                d.skinIndices.push(new e(k,l,m,n))
                            }
                        d.bones = a.bones,
                        d.bones && d.bones.length > 0 && (d.skinWeights.length !== d.skinIndices.length || (d.skinIndices.length,
                        d.vertices.length))
                    }(),
                    function(b) {
                        if (void 0 !== a.morphTargets)
                            for (var c = 0, e = a.morphTargets.length; c < e; c++) {
                                d.morphTargets[c] = {},
                                d.morphTargets[c].name = a.morphTargets[c].name,
                                d.morphTargets[c].vertices = [];
                                for (var f = d.morphTargets[c].vertices, g = a.morphTargets[c].vertices, h = 0, j = g.length; h < j; h += 3) {
                                    var k = new i;
                                    k.x = g[h] * b,
                                    k.y = g[h + 1] * b,
                                    k.z = g[h + 2] * b,
                                    f.push(k)
                                }
                            }
                        if (void 0 !== a.morphColors && a.morphColors.length > 0)
                            for (var l = d.faces, m = a.morphColors[0].colors, c = 0, e = l.length; c < e; c++)
                                l[c].color.fromArray(m, 3 * c)
                    }(f),
                    function() {
                        var b = []
                          , c = [];
                        void 0 !== a.animation && c.push(a.animation),
                        void 0 !== a.animations && (a.animations.length ? c = c.concat(a.animations) : c.push(a.animations));
                        for (var e = 0; e < c.length; e++) {
                            var f = Xc.parseAnimation(c[e], d.bones);
                            f && b.push(f)
                        }
                        if (d.morphTargets) {
                            var g = Xc.CreateClipsFromMorphTargetSequences(d.morphTargets, 10);
                            b = b.concat(g)
                        }
                        b.length > 0 && (d.animations = b)
                    }(),
                    d.computeFaceNormals(),
                    d.computeBoundingSphere(),
                    void 0 === a.materials || 0 === a.materials.length)
                        return {
                            geometry: d
                        };
                    var g = $c.prototype.initMaterials(a.materials, b, this.crossOrigin);
                    return {
                        geometry: d,
                        materials: g
                    }
                }
            }),
            Object.assign(ad.prototype, {
                load: function(a, b, c, d) {
                    "" === this.texturePath && (this.texturePath = a.substring(0, a.lastIndexOf("/") + 1));
                    var e = this;
                    new vc(e.manager).load(a, function(a) {
                        var c = null;
                        try {
                            c = JSON.parse(a)
                        } catch (a) {
                            return void (void 0 !== d && d(a))
                        }
                        var f = c.metadata;
                        void 0 !== f && void 0 !== f.type && "geometry" !== f.type.toLowerCase() && e.parse(c, b)
                    }, c, d)
                },
                setTexturePath: function(a) {
                    this.texturePath = a
                },
                setCrossOrigin: function(a) {
                    this.crossOrigin = a
                },
                parse: function(a, b) {
                    var c = this.parseGeometries(a.geometries)
                      , d = this.parseImages(a.images, function() {
                        void 0 !== b && b(g)
                    })
                      , e = this.parseTextures(a.textures, d)
                      , f = this.parseMaterials(a.materials, e)
                      , g = this.parseObject(a.object, c, f);
                    return a.animations && (g.animations = this.parseAnimations(a.animations)),
                    void 0 !== a.images && 0 !== a.images.length || void 0 !== b && b(g),
                    g
                },
                parseGeometries: function(a) {
                    var b = {};
                    if (void 0 !== a)
                        for (var c = new _c, d = new Zc, e = 0, f = a.length; e < f; e++) {
                            var g, h = a[e];
                            switch (h.type) {
                            case "PlaneGeometry":
                            case "PlaneBufferGeometry":
                                g = new oh[h.type](h.width,h.height,h.widthSegments,h.heightSegments);
                                break;
                            case "BoxGeometry":
                            case "BoxBufferGeometry":
                            case "CubeGeometry":
                                g = new oh[h.type](h.width,h.height,h.depth,h.widthSegments,h.heightSegments,h.depthSegments);
                                break;
                            case "CircleGeometry":
                            case "CircleBufferGeometry":
                                g = new oh[h.type](h.radius,h.segments,h.thetaStart,h.thetaLength);
                                break;
                            case "CylinderGeometry":
                            case "CylinderBufferGeometry":
                                g = new oh[h.type](h.radiusTop,h.radiusBottom,h.height,h.radialSegments,h.heightSegments,h.openEnded,h.thetaStart,h.thetaLength);
                                break;
                            case "ConeGeometry":
                            case "ConeBufferGeometry":
                                g = new oh[h.type](h.radius,h.height,h.radialSegments,h.heightSegments,h.openEnded,h.thetaStart,h.thetaLength);
                                break;
                            case "SphereGeometry":
                            case "SphereBufferGeometry":
                                g = new oh[h.type](h.radius,h.widthSegments,h.heightSegments,h.phiStart,h.phiLength,h.thetaStart,h.thetaLength);
                                break;
                            case "DodecahedronGeometry":
                            case "IcosahedronGeometry":
                            case "OctahedronGeometry":
                            case "TetrahedronGeometry":
                                g = new oh[h.type](h.radius,h.detail);
                                break;
                            case "RingGeometry":
                            case "RingBufferGeometry":
                                g = new oh[h.type](h.innerRadius,h.outerRadius,h.thetaSegments,h.phiSegments,h.thetaStart,h.thetaLength);
                                break;
                            case "TorusGeometry":
                            case "TorusBufferGeometry":
                                g = new oh[h.type](h.radius,h.tube,h.radialSegments,h.tubularSegments,h.arc);
                                break;
                            case "TorusKnotGeometry":
                            case "TorusKnotBufferGeometry":
                                g = new oh[h.type](h.radius,h.tube,h.tubularSegments,h.radialSegments,h.p,h.q);
                                break;
                            case "LatheGeometry":
                            case "LatheBufferGeometry":
                                g = new oh[h.type](h.points,h.segments,h.phiStart,h.phiLength);
                                break;
                            case "BufferGeometry":
                                g = d.parse(h);
                                break;
                            case "Geometry":
                                g = c.parse(h.data, this.texturePath).geometry;
                                break;
                            default:
                                continue
                            }
                            g.uuid = h.uuid,
                            void 0 !== h.name && (g.name = h.name),
                            b[h.uuid] = g
                        }
                    return b
                },
                parseMaterials: function(a, b) {
                    var c = {};
                    if (void 0 !== a) {
                        var d = new Yc;
                        d.setTextures(b);
                        for (var e = 0, f = a.length; e < f; e++) {
                            var g = d.parse(a[e]);
                            c[g.uuid] = g
                        }
                    }
                    return c
                },
                parseAnimations: function(a) {
                    for (var b = [], c = 0; c < a.length; c++) {
                        var d = Xc.parse(a[c]);
                        b.push(d)
                    }
                    return b
                },
                parseImages: function(a, b) {
                    var c = this
                      , d = {};
                    if (void 0 !== a && a.length > 0) {
                        var e = new uc(b)
                          , f = new yc(e);
                        f.setCrossOrigin(this.crossOrigin);
                        for (var g = 0, h = a.length; g < h; g++) {
                            var i = a[g]
                              , j = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(i.url) ? i.url : c.texturePath + i.url;
                            d[i.uuid] = function(a) {
                                return c.manager.itemStart(a),
                                f.load(a, function() {
                                    c.manager.itemEnd(a)
                                }, void 0, function() {
                                    c.manager.itemError(a)
                                })
                            }(j)
                        }
                    }
                    return d
                },
                parseTextures: function(a, b) {
                    function c(a, b) {
                        return "number" == typeof a ? a : b[a]
                    }
                    var e = {
                        UVMapping: 300,
                        CubeReflectionMapping: Uf,
                        CubeRefractionMapping: Vf,
                        EquirectangularReflectionMapping: Wf,
                        EquirectangularRefractionMapping: Xf,
                        SphericalReflectionMapping: Yf,
                        CubeUVReflectionMapping: Zf,
                        CubeUVRefractionMapping: $f
                    }
                      , f = {
                        RepeatWrapping: _f,
                        ClampToEdgeWrapping: ag,
                        MirroredRepeatWrapping: bg
                    }
                      , g = {
                        NearestFilter: cg,
                        NearestMipMapNearestFilter: dg,
                        NearestMipMapLinearFilter: eg,
                        LinearFilter: fg,
                        LinearMipMapNearestFilter: gg,
                        LinearMipMapLinearFilter: hg
                    }
                      , h = {};
                    if (void 0 !== a)
                        for (var i = 0, j = a.length; i < j; i++) {
                            var k = a[i];
                            k.image,
                            b[k.image];
                            var l = new d(b[k.image]);
                            l.needsUpdate = !0,
                            l.uuid = k.uuid,
                            void 0 !== k.name && (l.name = k.name),
                            void 0 !== k.mapping && (l.mapping = c(k.mapping, e)),
                            void 0 !== k.offset && l.offset.fromArray(k.offset),
                            void 0 !== k.repeat && l.repeat.fromArray(k.repeat),
                            void 0 !== k.wrap && (l.wrapS = c(k.wrap[0], f),
                            l.wrapT = c(k.wrap[1], f)),
                            void 0 !== k.minFilter && (l.minFilter = c(k.minFilter, g)),
                            void 0 !== k.magFilter && (l.magFilter = c(k.magFilter, g)),
                            void 0 !== k.anisotropy && (l.anisotropy = k.anisotropy),
                            void 0 !== k.flipY && (l.flipY = k.flipY),
                            h[k.uuid] = l
                        }
                    return h
                },
                parseObject: function() {
                    var a = new j;
                    return function(b, c, d) {
                        function e(a) {
                            return c[a],
                            c[a]
                        }
                        function f(a) {
                            if (void 0 !== a)
                                return d[a],
                                d[a]
                        }
                        var g;
                        switch (b.type) {
                        case "Scene":
                            g = new kb,
                            void 0 !== b.background && Number.isInteger(b.background) && (g.background = new T(b.background)),
                            void 0 !== b.fog && ("Fog" === b.fog.type ? g.fog = new jb(b.fog.color,b.fog.near,b.fog.far) : "FogExp2" === b.fog.type && (g.fog = new ib(b.fog.color,b.fog.density)));
                            break;
                        case "PerspectiveCamera":
                            g = new Ia(b.fov,b.aspect,b.near,b.far),
                            void 0 !== b.focus && (g.focus = b.focus),
                            void 0 !== b.zoom && (g.zoom = b.zoom),
                            void 0 !== b.filmGauge && (g.filmGauge = b.filmGauge),
                            void 0 !== b.filmOffset && (g.filmOffset = b.filmOffset),
                            void 0 !== b.view && (g.view = Object.assign({}, b.view));
                            break;
                        case "OrthographicCamera":
                            g = new Ja(b.left,b.right,b.top,b.bottom,b.near,b.far);
                            break;
                        case "AmbientLight":
                            g = new Jc(b.color,b.intensity);
                            break;
                        case "DirectionalLight":
                            g = new Ic(b.color,b.intensity);
                            break;
                        case "PointLight":
                            g = new Gc(b.color,b.intensity,b.distance,b.decay);
                            break;
                        case "SpotLight":
                            g = new Fc(b.color,b.intensity,b.distance,b.angle,b.penumbra,b.decay);
                            break;
                        case "HemisphereLight":
                            g = new Cc(b.color,b.groundColor,b.intensity);
                            break;
                        case "Mesh":
                            var h = e(b.geometry)
                              , i = f(b.material);
                            g = h.bones && h.bones.length > 0 ? new rb(h,i) : new Ca(h,i);
                            break;
                        case "LOD":
                            g = new ob;
                            break;
                        case "Line":
                            g = new tb(e(b.geometry),f(b.material),b.mode);
                            break;
                        case "LineSegments":
                            g = new ub(e(b.geometry),f(b.material));
                            break;
                        case "PointCloud":
                        case "Points":
                            g = new wb(e(b.geometry),f(b.material));
                            break;
                        case "Sprite":
                            g = new nb(f(b.material));
                            break;
                        case "Group":
                            g = new xb;
                            break;
                        case "SkinnedMesh":
                        default:
                            g = new ia
                        }
                        if (g.uuid = b.uuid,
                        void 0 !== b.name && (g.name = b.name),
                        void 0 !== b.matrix ? (a.fromArray(b.matrix),
                        a.decompose(g.position, g.quaternion, g.scale)) : (void 0 !== b.position && g.position.fromArray(b.position),
                        void 0 !== b.rotation && g.rotation.fromArray(b.rotation),
                        void 0 !== b.quaternion && g.quaternion.fromArray(b.quaternion),
                        void 0 !== b.scale && g.scale.fromArray(b.scale)),
                        void 0 !== b.castShadow && (g.castShadow = b.castShadow),
                        void 0 !== b.receiveShadow && (g.receiveShadow = b.receiveShadow),
                        b.shadow && (void 0 !== b.shadow.bias && (g.shadow.bias = b.shadow.bias),
                        void 0 !== b.shadow.radius && (g.shadow.radius = b.shadow.radius),
                        void 0 !== b.shadow.mapSize && g.shadow.mapSize.fromArray(b.shadow.mapSize),
                        void 0 !== b.shadow.camera && (g.shadow.camera = this.parseObject(b.shadow.camera))),
                        void 0 !== b.visible && (g.visible = b.visible),
                        void 0 !== b.userData && (g.userData = b.userData),
                        void 0 !== b.children)
                            for (var j in b.children)
                                g.add(this.parseObject(b.children[j], c, d));
                        if ("LOD" === b.type)
                            for (var k = b.levels, l = 0; l < k.length; l++) {
                                var m = k[l]
                                  , j = g.getObjectByProperty("uuid", m.object);
                                void 0 !== j && g.addLevel(j, m.distance)
                            }
                        return g
                    }
                }()
            }),
            ld.prototype = {
                constructor: ld,
                getPoint: function(a) {
                    return null
                },
                getPointAt: function(a) {
                    var b = this.getUtoTmapping(a);
                    return this.getPoint(b)
                },
                getPoints: function(a) {
                    isNaN(a) && (a = 5);
                    for (var b = [], c = 0; c <= a; c++)
                        b.push(this.getPoint(c / a));
                    return b
                },
                getSpacedPoints: function(a) {
                    isNaN(a) && (a = 5);
                    for (var b = [], c = 0; c <= a; c++)
                        b.push(this.getPointAt(c / a));
                    return b
                },
                getLength: function() {
                    var a = this.getLengths();
                    return a[a.length - 1]
                },
                getLengths: function(a) {
                    if (isNaN(a) && (a = this.__arcLengthDivisions ? this.__arcLengthDivisions : 200),
                    this.cacheArcLengths && this.cacheArcLengths.length === a + 1 && !this.needsUpdate)
                        return this.cacheArcLengths;
                    this.needsUpdate = !1;
                    var b, c, d = [], e = this.getPoint(0), f = 0;
                    for (d.push(0),
                    c = 1; c <= a; c++)
                        b = this.getPoint(c / a),
                        f += b.distanceTo(e),
                        d.push(f),
                        e = b;
                    return this.cacheArcLengths = d,
                    d
                },
                updateArcLengths: function() {
                    this.needsUpdate = !0,
                    this.getLengths()
                },
                getUtoTmapping: function(a, b) {
                    var c, d = this.getLengths(), e = 0, f = d.length;
                    c = b || a * d[f - 1];
                    for (var g, h = 0, i = f - 1; h <= i; )
                        if (e = Math.floor(h + (i - h) / 2),
                        (g = d[e] - c) < 0)
                            h = e + 1;
                        else {
                            if (!(g > 0)) {
                                i = e;
                                break
                            }
                            i = e - 1
                        }
                    if (e = i,
                    d[e] === c) {
                        var j = e / (f - 1);
                        return j
                    }
                    var k = d[e]
                      , l = d[e + 1]
                      , m = l - k
                      , n = (c - k) / m
                      , j = (e + n) / (f - 1);
                    return j
                },
                getTangent: function(a) {
                    var b = a - 1e-4
                      , c = a + 1e-4;
                    b < 0 && (b = 0),
                    c > 1 && (c = 1);
                    var d = this.getPoint(b);
                    return this.getPoint(c).clone().sub(d).normalize()
                },
                getTangentAt: function(a) {
                    var b = this.getUtoTmapping(a);
                    return this.getTangent(b)
                },
                computeFrenetFrames: function(a, b) {
                    var c, d, e, f = new i, g = [], h = [], k = [], l = new i, m = new j;
                    for (c = 0; c <= a; c++)
                        d = c / a,
                        g[c] = this.getTangentAt(d),
                        g[c].normalize();
                    h[0] = new i,
                    k[0] = new i;
                    var n = Number.MAX_VALUE
                      , o = Math.abs(g[0].x)
                      , p = Math.abs(g[0].y)
                      , q = Math.abs(g[0].z);
                    for (o <= n && (n = o,
                    f.set(1, 0, 0)),
                    p <= n && (n = p,
                    f.set(0, 1, 0)),
                    q <= n && f.set(0, 0, 1),
                    l.crossVectors(g[0], f).normalize(),
                    h[0].crossVectors(g[0], l),
                    k[0].crossVectors(g[0], h[0]),
                    c = 1; c <= a; c++)
                        h[c] = h[c - 1].clone(),
                        k[c] = k[c - 1].clone(),
                        l.crossVectors(g[c - 1], g[c]),
                        l.length() > Number.EPSILON && (l.normalize(),
                        e = Math.acos(Zg.clamp(g[c - 1].dot(g[c]), -1, 1)),
                        h[c].applyMatrix4(m.makeRotationAxis(l, e))),
                        k[c].crossVectors(g[c], h[c]);
                    if (!0 === b)
                        for (e = Math.acos(Zg.clamp(h[0].dot(h[a]), -1, 1)),
                        e /= a,
                        g[0].dot(l.crossVectors(h[0], h[a])) > 0 && (e = -e),
                        c = 1; c <= a; c++)
                            h[c].applyMatrix4(m.makeRotationAxis(g[c], e * c)),
                            k[c].crossVectors(g[c], h[c]);
                    return {
                        tangents: g,
                        normals: h,
                        binormals: k
                    }
                }
            },
            md.prototype = Object.create(ld.prototype),
            md.prototype.constructor = md,
            md.prototype.isLineCurve = !0,
            md.prototype.getPoint = function(a) {
                if (1 === a)
                    return this.v2.clone();
                var b = this.v2.clone().sub(this.v1);
                return b.multiplyScalar(a).add(this.v1),
                b
            }
            ,
            md.prototype.getPointAt = function(a) {
                return this.getPoint(a)
            }
            ,
            md.prototype.getTangent = function(a) {
                return this.v2.clone().sub(this.v1).normalize()
            }
            ,
            nd.prototype = Object.assign(Object.create(ld.prototype), {
                constructor: nd,
                add: function(a) {
                    this.curves.push(a)
                },
                closePath: function() {
                    var a = this.curves[0].getPoint(0)
                      , b = this.curves[this.curves.length - 1].getPoint(1);
                    a.equals(b) || this.curves.push(new md(b,a))
                },
                getPoint: function(a) {
                    for (var b = a * this.getLength(), c = this.getCurveLengths(), d = 0; d < c.length; ) {
                        if (c[d] >= b) {
                            var e = c[d] - b
                              , f = this.curves[d]
                              , g = f.getLength()
                              , h = 0 === g ? 0 : 1 - e / g;
                            return f.getPointAt(h)
                        }
                        d++
                    }
                    return null
                },
                getLength: function() {
                    var a = this.getCurveLengths();
                    return a[a.length - 1]
                },
                updateArcLengths: function() {
                    this.needsUpdate = !0,
                    this.cacheLengths = null,
                    this.getLengths()
                },
                getCurveLengths: function() {
                    if (this.cacheLengths && this.cacheLengths.length === this.curves.length)
                        return this.cacheLengths;
                    for (var a = [], b = 0, c = 0, d = this.curves.length; c < d; c++)
                        b += this.curves[c].getLength(),
                        a.push(b);
                    return this.cacheLengths = a,
                    a
                },
                getSpacedPoints: function(a) {
                    isNaN(a) && (a = 40);
                    for (var b = [], c = 0; c <= a; c++)
                        b.push(this.getPoint(c / a));
                    return this.autoClose && b.push(b[0]),
                    b
                },
                getPoints: function(a) {
                    a = a || 12;
                    for (var b, c = [], d = 0, e = this.curves; d < e.length; d++)
                        for (var f = e[d], g = f && f.isEllipseCurve ? 2 * a : f && f.isLineCurve ? 1 : f && f.isSplineCurve ? a * f.points.length : a, h = f.getPoints(g), i = 0; i < h.length; i++) {
                            var j = h[i];
                            b && b.equals(j) || (c.push(j),
                            b = j)
                        }
                    return this.autoClose && c.length > 1 && !c[c.length - 1].equals(c[0]) && c.push(c[0]),
                    c
                },
                createPointsGeometry: function(a) {
                    var b = this.getPoints(a);
                    return this.createGeometry(b)
                },
                createSpacedPointsGeometry: function(a) {
                    var b = this.getSpacedPoints(a);
                    return this.createGeometry(b)
                },
                createGeometry: function(a) {
                    for (var b = new Aa, c = 0, d = a.length; c < d; c++) {
                        var e = a[c];
                        b.vertices.push(new i(e.x,e.y,e.z || 0))
                    }
                    return b
                }
            }),
            od.prototype = Object.create(ld.prototype),
            od.prototype.constructor = od,
            od.prototype.isEllipseCurve = !0,
            od.prototype.getPoint = function(a) {
                for (var b = 2 * Math.PI, d = this.aEndAngle - this.aStartAngle, e = Math.abs(d) < Number.EPSILON; d < 0; )
                    d += b;
                for (; d > b; )
                    d -= b;
                d < Number.EPSILON && (d = e ? 0 : b),
                !0 !== this.aClockwise || e || (d === b ? d = -b : d -= b);
                var f = this.aStartAngle + a * d
                  , g = this.aX + this.xRadius * Math.cos(f)
                  , h = this.aY + this.yRadius * Math.sin(f);
                if (0 !== this.aRotation) {
                    var i = Math.cos(this.aRotation)
                      , j = Math.sin(this.aRotation)
                      , k = g - this.aX
                      , l = h - this.aY;
                    g = k * i - l * j + this.aX,
                    h = k * j + l * i + this.aY
                }
                return new c(g,h)
            }
            ,
            pd.prototype = Object.create(ld.prototype),
            pd.prototype.constructor = pd,
            pd.prototype.isSplineCurve = !0,
            pd.prototype.getPoint = function(a) {
                var b = this.points
                  , d = (b.length - 1) * a
                  , e = Math.floor(d)
                  , f = d - e
                  , g = b[0 === e ? e : e - 1]
                  , h = b[e]
                  , i = b[e > b.length - 2 ? b.length - 1 : e + 1]
                  , j = b[e > b.length - 3 ? b.length - 1 : e + 2];
                return new c(bd(f, g.x, h.x, i.x, j.x),bd(f, g.y, h.y, i.y, j.y))
            }
            ,
            qd.prototype = Object.create(ld.prototype),
            qd.prototype.constructor = qd,
            qd.prototype.getPoint = function(a) {
                var b = this.v0
                  , d = this.v1
                  , e = this.v2
                  , f = this.v3;
                return new c(kd(a, b.x, d.x, e.x, f.x),kd(a, b.y, d.y, e.y, f.y))
            }
            ,
            rd.prototype = Object.create(ld.prototype),
            rd.prototype.constructor = rd,
            rd.prototype.getPoint = function(a) {
                var b = this.v0
                  , d = this.v1
                  , e = this.v2;
                return new c(fd(a, b.x, d.x, e.x),fd(a, b.y, d.y, e.y))
            }
            ;
            var uh = Object.assign(Object.create(nd.prototype), {
                fromPoints: function(a) {
                    this.moveTo(a[0].x, a[0].y);
                    for (var b = 1, c = a.length; b < c; b++)
                        this.lineTo(a[b].x, a[b].y)
                },
                moveTo: function(a, b) {
                    this.currentPoint.set(a, b)
                },
                lineTo: function(a, b) {
                    var d = new md(this.currentPoint.clone(),new c(a,b));
                    this.curves.push(d),
                    this.currentPoint.set(a, b)
                },
                quadraticCurveTo: function(a, b, d, e) {
                    var f = new rd(this.currentPoint.clone(),new c(a,b),new c(d,e));
                    this.curves.push(f),
                    this.currentPoint.set(d, e)
                },
                bezierCurveTo: function(a, b, d, e, f, g) {
                    var h = new qd(this.currentPoint.clone(),new c(a,b),new c(d,e),new c(f,g));
                    this.curves.push(h),
                    this.currentPoint.set(f, g)
                },
                splineThru: function(a) {
                    var b = [this.currentPoint.clone()].concat(a)
                      , c = new pd(b);
                    this.curves.push(c),
                    this.currentPoint.copy(a[a.length - 1])
                },
                arc: function(a, b, c, d, e, f) {
                    var g = this.currentPoint.x
                      , h = this.currentPoint.y;
                    this.absarc(a + g, b + h, c, d, e, f)
                },
                absarc: function(a, b, c, d, e, f) {
                    this.absellipse(a, b, c, c, d, e, f)
                },
                ellipse: function(a, b, c, d, e, f, g, h) {
                    var i = this.currentPoint.x
                      , j = this.currentPoint.y;
                    this.absellipse(a + i, b + j, c, d, e, f, g, h)
                },
                absellipse: function(a, b, c, d, e, f, g, h) {
                    var i = new od(a,b,c,d,e,f,g,h);
                    if (this.curves.length > 0) {
                        var j = i.getPoint(0);
                        j.equals(this.currentPoint) || this.lineTo(j.x, j.y)
                    }
                    this.curves.push(i);
                    var k = i.getPoint(1);
                    this.currentPoint.copy(k)
                }
            });
            sd.prototype = uh,
            uh.constructor = sd,
            td.prototype = Object.assign(Object.create(uh), {
                constructor: td,
                getPointsHoles: function(a) {
                    for (var b = [], c = 0, d = this.holes.length; c < d; c++)
                        b[c] = this.holes[c].getPoints(a);
                    return b
                },
                extractAllPoints: function(a) {
                    return {
                        shape: this.getPoints(a),
                        holes: this.getPointsHoles(a)
                    }
                },
                extractPoints: function(a) {
                    return this.extractAllPoints(a)
                }
            }),
            ud.prototype = {
                moveTo: function(a, b) {
                    this.currentPath = new sd,
                    this.subPaths.push(this.currentPath),
                    this.currentPath.moveTo(a, b)
                },
                lineTo: function(a, b) {
                    this.currentPath.lineTo(a, b)
                },
                quadraticCurveTo: function(a, b, c, d) {
                    this.currentPath.quadraticCurveTo(a, b, c, d)
                },
                bezierCurveTo: function(a, b, c, d, e, f) {
                    this.currentPath.bezierCurveTo(a, b, c, d, e, f)
                },
                splineThru: function(a) {
                    this.currentPath.splineThru(a)
                },
                toShapes: function(a, b) {
                    function c(a) {
                        for (var b = [], c = 0, d = a.length; c < d; c++) {
                            var e = a[c]
                              , f = new td;
                            f.curves = e.curves,
                            b.push(f)
                        }
                        return b
                    }
                    var d = nh.isClockWise
                      , e = this.subPaths;
                    if (0 === e.length)
                        return [];
                    if (!0 === b)
                        return c(e);
                    var f, g, h, i = [];
                    if (1 === e.length)
                        return g = e[0],
                        h = new td,
                        h.curves = g.curves,
                        i.push(h),
                        i;
                    var j = !d(e[0].getPoints());
                    j = a ? !j : j;
                    var k, l = [], m = [], n = [], o = 0;
                    m[o] = void 0,
                    n[o] = [];
                    for (var p = 0, q = e.length; p < q; p++)
                        g = e[p],
                        k = g.getPoints(),
                        f = d(k),
                        f = a ? !f : f,
                        f ? (!j && m[o] && o++,
                        m[o] = {
                            s: new td,
                            p: k
                        },
                        m[o].s.curves = g.curves,
                        j && o++,
                        n[o] = []) : n[o].push({
                            h: g,
                            p: k[0]
                        });
                    if (!m[0])
                        return c(e);
                    if (m.length > 1) {
                        for (var r = !1, s = [], t = 0, u = m.length; t < u; t++)
                            l[t] = [];
                        for (var t = 0, u = m.length; t < u; t++)
                            for (var v = n[t], w = 0; w < v.length; w++) {
                                for (var x = v[w], y = !0, z = 0; z < m.length; z++)
                                    (function(a, b) {
                                        for (var c = b.length, d = !1, e = c - 1, f = 0; f < c; e = f++) {
                                            var g = b[e]
                                              , h = b[f]
                                              , i = h.x - g.x
                                              , j = h.y - g.y;
                                            if (Math.abs(j) > Number.EPSILON) {
                                                if (j < 0 && (g = b[f],
                                                i = -i,
                                                h = b[e],
                                                j = -j),
                                                a.y < g.y || a.y > h.y)
                                                    continue;
                                                if (a.y === g.y) {
                                                    if (a.x === g.x)
                                                        return !0
                                                } else {
                                                    var k = j * (a.x - g.x) - i * (a.y - g.y);
                                                    if (0 === k)
                                                        return !0;
                                                    if (k < 0)
                                                        continue;
                                                    d = !d
                                                }
                                            } else {
                                                if (a.y !== g.y)
                                                    continue;
                                                if (h.x <= a.x && a.x <= g.x || g.x <= a.x && a.x <= h.x)
                                                    return !0
                                            }
                                        }
                                        return d
                                    }
                                    )(x.p, m[z].p) && (t !== z && s.push({
                                        froms: t,
                                        tos: z,
                                        hole: w
                                    }),
                                    y ? (y = !1,
                                    l[z].push(x)) : r = !0);
                                y && l[t].push(x)
                            }
                        s.length > 0 && (r || (n = l))
                    }
                    for (var A, p = 0, B = m.length; p < B; p++) {
                        h = m[p].s,
                        i.push(h),
                        A = n[p];
                        for (var C = 0, D = A.length; C < D; C++)
                            h.holes.push(A[C].h)
                    }
                    return i
                }
            },
            Object.assign(vd.prototype, {
                isFont: !0,
                generateShapes: function(a, b, c) {
                    function d(a, b, d, f) {
                        var g = e.glyphs[a] || e.glyphs["?"];
                        if (g) {
                            var h, i, j, k, l, m, n, o, p, q, r, s = new ud, t = [];
                            if (g.o)
                                for (var u = g._cachedOutline || (g._cachedOutline = g.o.split(" ")), v = 0, w = u.length; v < w; ) {
                                    var x = u[v++];
                                    switch (x) {
                                    case "m":
                                        h = u[v++] * b + d,
                                        i = u[v++] * b + f,
                                        s.moveTo(h, i);
                                        break;
                                    case "l":
                                        h = u[v++] * b + d,
                                        i = u[v++] * b + f,
                                        s.lineTo(h, i);
                                        break;
                                    case "q":
                                        if (j = u[v++] * b + d,
                                        k = u[v++] * b + f,
                                        n = u[v++] * b + d,
                                        o = u[v++] * b + f,
                                        s.quadraticCurveTo(n, o, j, k),
                                        r = t[t.length - 1]) {
                                            l = r.x,
                                            m = r.y;
                                            for (var y = 1; y <= c; y++) {
                                                var z = y / c;
                                                fd(z, l, n, j),
                                                fd(z, m, o, k)
                                            }
                                        }
                                        break;
                                    case "b":
                                        if (j = u[v++] * b + d,
                                        k = u[v++] * b + f,
                                        n = u[v++] * b + d,
                                        o = u[v++] * b + f,
                                        p = u[v++] * b + d,
                                        q = u[v++] * b + f,
                                        s.bezierCurveTo(n, o, p, q, j, k),
                                        r = t[t.length - 1]) {
                                            l = r.x,
                                            m = r.y;
                                            for (var y = 1; y <= c; y++) {
                                                var z = y / c;
                                                kd(z, l, n, p, j),
                                                kd(z, m, o, q, k)
                                            }
                                        }
                                    }
                                }
                            return {
                                offsetX: g.ha * b,
                                path: s
                            }
                        }
                    }
                    void 0 === b && (b = 100),
                    void 0 === c && (c = 4);
                    for (var e = this.data, f = function(a) {
                        for (var c = String(a).split(""), f = b / e.resolution, g = (e.boundingBox.yMax - e.boundingBox.yMin + e.underlineThickness) * f, h = 0, i = 0, j = [], k = 0; k < c.length; k++) {
                            var l = c[k];
                            if ("\n" === l)
                                h = 0,
                                i -= g;
                            else {
                                var m = d(l, f, h, i);
                                h += m.offsetX,
                                j.push(m.path)
                            }
                        }
                        return j
                    }(a), g = [], h = 0, i = f.length; h < i; h++)
                        Array.prototype.push.apply(g, f[h].toShapes());
                    return g
                }
            }),
            Object.assign(wd.prototype, {
                load: function(a, b, c, d) {
                    var e = this;
                    new vc(this.manager).load(a, function(a) {
                        var c;
                        try {
                            c = JSON.parse(a)
                        } catch (b) {
                            c = JSON.parse(a.substring(65, a.length - 2))
                        }
                        var d = e.parse(c);
                        b && b(d)
                    }, c, d)
                },
                parse: function(a) {
                    return new vd(a)
                }
            });
            var vh, wh = {
                getContext: function() {
                    return void 0 === vh && (vh = new (window.AudioContext || window.webkitAudioContext)),
                    vh
                },
                setContext: function(a) {
                    vh = a
                }
            };
            Object.assign(xd.prototype, {
                load: function(a, b, c, d) {
                    var e = new vc(this.manager);
                    e.setResponseType("arraybuffer"),
                    e.load(a, function(a) {
                        wh.getContext().decodeAudioData(a, function(a) {
                            b(a)
                        })
                    }, c, d)
                }
            }),
            yd.prototype = Object.assign(Object.create(Bc.prototype), {
                constructor: yd,
                isRectAreaLight: !0,
                copy: function(a) {
                    return Bc.prototype.copy.call(this, a),
                    this.width = a.width,
                    this.height = a.height,
                    this
                }
            }),
            Object.assign(zd.prototype, {
                update: function() {
                    var a, b, c, d, e, f, g, h = new j, i = new j;
                    return function(j) {
                        if (a !== this || b !== j.focus || c !== j.fov || d !== j.aspect * this.aspect || e !== j.near || f !== j.far || g !== j.zoom) {
                            a = this,
                            b = j.focus,
                            c = j.fov,
                            d = j.aspect * this.aspect,
                            e = j.near,
                            f = j.far,
                            g = j.zoom;
                            var k, l, m = j.projectionMatrix.clone(), n = this.eyeSep / 2, o = n * e / b, p = e * Math.tan(Zg.DEG2RAD * c * .5) / g;
                            i.elements[12] = -n,
                            h.elements[12] = n,
                            k = -p * d + o,
                            l = p * d + o,
                            m.elements[0] = 2 * e / (l - k),
                            m.elements[8] = (l + k) / (l - k),
                            this.cameraL.projectionMatrix.copy(m),
                            k = -p * d - o,
                            l = p * d - o,
                            m.elements[0] = 2 * e / (l - k),
                            m.elements[8] = (l + k) / (l - k),
                            this.cameraR.projectionMatrix.copy(m)
                        }
                        this.cameraL.matrixWorld.copy(j.matrixWorld).multiply(i),
                        this.cameraR.matrixWorld.copy(j.matrixWorld).multiply(h)
                    }
                }()
            }),
            Ad.prototype = Object.create(ia.prototype),
            Ad.prototype.constructor = Ad,
            Bd.prototype = Object.assign(Object.create(ia.prototype), {
                constructor: Bd,
                getInput: function() {
                    return this.gain
                },
                removeFilter: function() {
                    null !== this.filter && (this.gain.disconnect(this.filter),
                    this.filter.disconnect(this.context.destination),
                    this.gain.connect(this.context.destination),
                    this.filter = null)
                },
                getFilter: function() {
                    return this.filter
                },
                setFilter: function(a) {
                    null !== this.filter ? (this.gain.disconnect(this.filter),
                    this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination),
                    this.filter = a,
                    this.gain.connect(this.filter),
                    this.filter.connect(this.context.destination)
                },
                getMasterVolume: function() {
                    return this.gain.gain.value
                },
                setMasterVolume: function(a) {
                    this.gain.gain.value = a
                },
                updateMatrixWorld: function() {
                    var a = new i
                      , b = new h
                      , c = new i
                      , d = new i;
                    return function(e) {
                        ia.prototype.updateMatrixWorld.call(this, e);
                        var f = this.context.listener
                          , g = this.up;
                        this.matrixWorld.decompose(a, b, c),
                        d.set(0, 0, -1).applyQuaternion(b),
                        f.positionX ? (f.positionX.setValueAtTime(a.x, this.context.currentTime),
                        f.positionY.setValueAtTime(a.y, this.context.currentTime),
                        f.positionZ.setValueAtTime(a.z, this.context.currentTime),
                        f.forwardX.setValueAtTime(d.x, this.context.currentTime),
                        f.forwardY.setValueAtTime(d.y, this.context.currentTime),
                        f.forwardZ.setValueAtTime(d.z, this.context.currentTime),
                        f.upX.setValueAtTime(g.x, this.context.currentTime),
                        f.upY.setValueAtTime(g.y, this.context.currentTime),
                        f.upZ.setValueAtTime(g.z, this.context.currentTime)) : (f.setPosition(a.x, a.y, a.z),
                        f.setOrientation(d.x, d.y, d.z, g.x, g.y, g.z))
                    }
                }()
            }),
            Cd.prototype = Object.assign(Object.create(ia.prototype), {
                constructor: Cd,
                getOutput: function() {
                    return this.gain
                },
                setNodeSource: function(a) {
                    return this.hasPlaybackControl = !1,
                    this.sourceType = "audioNode",
                    this.source = a,
                    this.connect(),
                    this
                },
                setBuffer: function(a) {
                    return this.buffer = a,
                    this.sourceType = "buffer",
                    this.autoplay && this.play(),
                    this
                },
                play: function() {
                    if (!0 !== this.isPlaying && !1 !== this.hasPlaybackControl) {
                        var a = this.context.createBufferSource();
                        return a.buffer = this.buffer,
                        a.loop = this.loop,
                        a.onended = this.onEnded.bind(this),
                        a.playbackRate.setValueAtTime(this.playbackRate, this.startTime),
                        a.start(0, this.startTime),
                        this.isPlaying = !0,
                        this.source = a,
                        this.connect()
                    }
                },
                pause: function() {
                    if (!1 !== this.hasPlaybackControl)
                        return this.source.stop(),
                        this.startTime = this.context.currentTime,
                        this.isPlaying = !1,
                        this
                },
                stop: function() {
                    if (!1 !== this.hasPlaybackControl)
                        return this.source.stop(),
                        this.startTime = 0,
                        this.isPlaying = !1,
                        this
                },
                connect: function() {
                    if (this.filters.length > 0) {
                        this.source.connect(this.filters[0]);
                        for (var a = 1, b = this.filters.length; a < b; a++)
                            this.filters[a - 1].connect(this.filters[a]);
                        this.filters[this.filters.length - 1].connect(this.getOutput())
                    } else
                        this.source.connect(this.getOutput());
                    return this
                },
                disconnect: function() {
                    if (this.filters.length > 0) {
                        this.source.disconnect(this.filters[0]);
                        for (var a = 1, b = this.filters.length; a < b; a++)
                            this.filters[a - 1].disconnect(this.filters[a]);
                        this.filters[this.filters.length - 1].disconnect(this.getOutput())
                    } else
                        this.source.disconnect(this.getOutput());
                    return this
                },
                getFilters: function() {
                    return this.filters
                },
                setFilters: function(a) {
                    return a || (a = []),
                    !0 === this.isPlaying ? (this.disconnect(),
                    this.filters = a,
                    this.connect()) : this.filters = a,
                    this
                },
                getFilter: function() {
                    return this.getFilters()[0]
                },
                setFilter: function(a) {
                    return this.setFilters(a ? [a] : [])
                },
                setPlaybackRate: function(a) {
                    if (!1 !== this.hasPlaybackControl)
                        return this.playbackRate = a,
                        !0 === this.isPlaying && this.source.playbackRate.setValueAtTime(this.playbackRate, this.context.currentTime),
                        this
                },
                getPlaybackRate: function() {
                    return this.playbackRate
                },
                onEnded: function() {
                    this.isPlaying = !1
                },
                getLoop: function() {
                    return !1 !== this.hasPlaybackControl && this.loop
                },
                setLoop: function(a) {
                    if (!1 !== this.hasPlaybackControl)
                        return this.loop = a,
                        !0 === this.isPlaying && (this.source.loop = this.loop),
                        this
                },
                getVolume: function() {
                    return this.gain.gain.value
                },
                setVolume: function(a) {
                    return this.gain.gain.value = a,
                    this
                }
            }),
            Dd.prototype = Object.assign(Object.create(Cd.prototype), {
                constructor: Dd,
                getOutput: function() {
                    return this.panner
                },
                getRefDistance: function() {
                    return this.panner.refDistance
                },
                setRefDistance: function(a) {
                    this.panner.refDistance = a
                },
                getRolloffFactor: function() {
                    return this.panner.rolloffFactor
                },
                setRolloffFactor: function(a) {
                    this.panner.rolloffFactor = a
                },
                getDistanceModel: function() {
                    return this.panner.distanceModel
                },
                setDistanceModel: function(a) {
                    this.panner.distanceModel = a
                },
                getMaxDistance: function() {
                    return this.panner.maxDistance
                },
                setMaxDistance: function(a) {
                    this.panner.maxDistance = a
                },
                updateMatrixWorld: function() {
                    var a = new i;
                    return function(b) {
                        ia.prototype.updateMatrixWorld.call(this, b),
                        a.setFromMatrixPosition(this.matrixWorld),
                        this.panner.setPosition(a.x, a.y, a.z)
                    }
                }()
            }),
            Object.assign(Ed.prototype, {
                getFrequencyData: function() {
                    return this.analyser.getByteFrequencyData(this.data),
                    this.data
                },
                getAverageFrequency: function() {
                    for (var a = 0, b = this.getFrequencyData(), c = 0; c < b.length; c++)
                        a += b[c];
                    return a / b.length
                }
            }),
            Fd.prototype = {
                constructor: Fd,
                accumulate: function(a, b) {
                    var c = this.buffer
                      , d = this.valueSize
                      , e = a * d + d
                      , f = this.cumulativeWeight;
                    if (0 === f) {
                        for (var g = 0; g !== d; ++g)
                            c[e + g] = c[g];
                        f = b
                    } else {
                        f += b;
                        var h = b / f;
                        this._mixBufferRegion(c, e, 0, h, d)
                    }
                    this.cumulativeWeight = f
                },
                apply: function(a) {
                    var b = this.valueSize
                      , c = this.buffer
                      , d = a * b + b
                      , e = this.cumulativeWeight
                      , f = this.binding;
                    if (this.cumulativeWeight = 0,
                    e < 1) {
                        var g = 3 * b;
                        this._mixBufferRegion(c, d, g, 1 - e, b)
                    }
                    for (var h = b, i = b + b; h !== i; ++h)
                        if (c[h] !== c[h + b]) {
                            f.setValue(c, d);
                            break
                        }
                },
                saveOriginalState: function() {
                    var a = this.binding
                      , b = this.buffer
                      , c = this.valueSize
                      , d = 3 * c;
                    a.getValue(b, d);
                    for (var e = c, f = d; e !== f; ++e)
                        b[e] = b[d + e % c];
                    this.cumulativeWeight = 0
                },
                restoreOriginalState: function() {
                    var a = 3 * this.valueSize;
                    this.binding.setValue(this.buffer, a)
                },
                _select: function(a, b, c, d, e) {
                    if (d >= .5)
                        for (var f = 0; f !== e; ++f)
                            a[b + f] = a[c + f]
                },
                _slerp: function(a, b, c, d, e) {
                    h.slerpFlat(a, b, a, b, a, c, d)
                },
                _lerp: function(a, b, c, d, e) {
                    for (var f = 1 - d, g = 0; g !== e; ++g) {
                        var h = b + g;
                        a[h] = a[h] * f + a[c + g] * d
                    }
                }
            },
            Gd.prototype = {
                constructor: Gd,
                getValue: function(a, b) {
                    this.bind(),
                    this.getValue(a, b)
                },
                setValue: function(a, b) {
                    this.bind(),
                    this.setValue(a, b)
                },
                bind: function() {
                    var a = this.node
                      , b = this.parsedPath
                      , c = b.objectName
                      , d = b.propertyName
                      , e = b.propertyIndex;
                    if (a || (a = Gd.findNode(this.rootNode, b.nodeName) || this.rootNode,
                    this.node = a),
                    this.getValue = this._getValue_unavailable,
                    this.setValue = this._setValue_unavailable,
                    a) {
                        if (c) {
                            var f = b.objectIndex;
                            switch (c) {
                            case "materials":
                                if (!a.material)
                                    return;
                                if (!a.material.materials)
                                    return;
                                a = a.material.materials;
                                break;
                            case "bones":
                                if (!a.skeleton)
                                    return;
                                a = a.skeleton.bones;
                                for (var g = 0; g < a.length; g++)
                                    if (a[g].name === f) {
                                        f = g;
                                        break
                                    }
                                break;
                            default:
                                if (void 0 === a[c])
                                    return;
                                a = a[c]
                            }
                            if (void 0 !== f) {
                                if (void 0 === a[f])
                                    return;
                                a = a[f]
                            }
                        }
                        var h = a[d];
                        if (void 0 !== h) {
                            var i = this.Versioning.None;
                            void 0 !== a.needsUpdate ? (i = this.Versioning.NeedsUpdate,
                            this.targetObject = a) : void 0 !== a.matrixWorldNeedsUpdate && (i = this.Versioning.MatrixWorldNeedsUpdate,
                            this.targetObject = a);
                            var j = this.BindingType.Direct;
                            if (void 0 !== e) {
                                if ("morphTargetInfluences" === d) {
                                    if (!a.geometry)
                                        return;
                                    if (!a.geometry.morphTargets)
                                        return;
                                    for (var g = 0; g < this.node.geometry.morphTargets.length; g++)
                                        if (a.geometry.morphTargets[g].name === e) {
                                            e = g;
                                            break
                                        }
                                }
                                j = this.BindingType.ArrayElement,
                                this.resolvedProperty = h,
                                this.propertyIndex = e
                            } else
                                void 0 !== h.fromArray && void 0 !== h.toArray ? (j = this.BindingType.HasFromToArray,
                                this.resolvedProperty = h) : void 0 !== h.length ? (j = this.BindingType.EntireArray,
                                this.resolvedProperty = h) : this.propertyName = d;
                            this.getValue = this.GetterByBindingType[j],
                            this.setValue = this.SetterByBindingTypeAndVersioning[j][i]
                        } else {
                            b.nodeName
                        }
                    }
                },
                unbind: function() {
                    this.node = null,
                    this.getValue = this._getValue_unbound,
                    this.setValue = this._setValue_unbound
                }
            },
            Object.assign(Gd.prototype, {
                _getValue_unavailable: function() {},
                _setValue_unavailable: function() {},
                _getValue_unbound: Gd.prototype.getValue,
                _setValue_unbound: Gd.prototype.setValue,
                BindingType: {
                    Direct: 0,
                    EntireArray: 1,
                    ArrayElement: 2,
                    HasFromToArray: 3
                },
                Versioning: {
                    None: 0,
                    NeedsUpdate: 1,
                    MatrixWorldNeedsUpdate: 2
                },
                GetterByBindingType: [function(a, b) {
                    a[b] = this.node[this.propertyName]
                }
                , function(a, b) {
                    for (var c = this.resolvedProperty, d = 0, e = c.length; d !== e; ++d)
                        a[b++] = c[d]
                }
                , function(a, b) {
                    a[b] = this.resolvedProperty[this.propertyIndex]
                }
                , function(a, b) {
                    this.resolvedProperty.toArray(a, b)
                }
                ],
                SetterByBindingTypeAndVersioning: [[function(a, b) {
                    this.node[this.propertyName] = a[b]
                }
                , function(a, b) {
                    this.node[this.propertyName] = a[b],
                    this.targetObject.needsUpdate = !0
                }
                , function(a, b) {
                    this.node[this.propertyName] = a[b],
                    this.targetObject.matrixWorldNeedsUpdate = !0
                }
                ], [function(a, b) {
                    for (var c = this.resolvedProperty, d = 0, e = c.length; d !== e; ++d)
                        c[d] = a[b++]
                }
                , function(a, b) {
                    for (var c = this.resolvedProperty, d = 0, e = c.length; d !== e; ++d)
                        c[d] = a[b++];
                    this.targetObject.needsUpdate = !0
                }
                , function(a, b) {
                    for (var c = this.resolvedProperty, d = 0, e = c.length; d !== e; ++d)
                        c[d] = a[b++];
                    this.targetObject.matrixWorldNeedsUpdate = !0
                }
                ], [function(a, b) {
                    this.resolvedProperty[this.propertyIndex] = a[b]
                }
                , function(a, b) {
                    this.resolvedProperty[this.propertyIndex] = a[b],
                    this.targetObject.needsUpdate = !0
                }
                , function(a, b) {
                    this.resolvedProperty[this.propertyIndex] = a[b],
                    this.targetObject.matrixWorldNeedsUpdate = !0
                }
                ], [function(a, b) {
                    this.resolvedProperty.fromArray(a, b)
                }
                , function(a, b) {
                    this.resolvedProperty.fromArray(a, b),
                    this.targetObject.needsUpdate = !0
                }
                , function(a, b) {
                    this.resolvedProperty.fromArray(a, b),
                    this.targetObject.matrixWorldNeedsUpdate = !0
                }
                ]]
            }),
            Gd.Composite = function(a, b, c) {
                var d = c || Gd.parseTrackName(b);
                this._targetGroup = a,
                this._bindings = a.subscribe_(b, d)
            }
            ,
            Gd.Composite.prototype = {
                constructor: Gd.Composite,
                getValue: function(a, b) {
                    this.bind();
                    var c = this._targetGroup.nCachedObjects_
                      , d = this._bindings[c];
                    void 0 !== d && d.getValue(a, b)
                },
                setValue: function(a, b) {
                    for (var c = this._bindings, d = this._targetGroup.nCachedObjects_, e = c.length; d !== e; ++d)
                        c[d].setValue(a, b)
                },
                bind: function() {
                    for (var a = this._bindings, b = this._targetGroup.nCachedObjects_, c = a.length; b !== c; ++b)
                        a[b].bind()
                },
                unbind: function() {
                    for (var a = this._bindings, b = this._targetGroup.nCachedObjects_, c = a.length; b !== c; ++b)
                        a[b].unbind()
                }
            },
            Gd.create = function(a, b, c) {
                return a && a.isAnimationObjectGroup ? new Gd.Composite(a,b,c) : new Gd(a,b,c)
            }
            ,
            Gd.parseTrackName = function(a) {
                var b = /^((?:[\w-]+[\/:])*)([\w-]+)?(?:\.([\w-]+)(?:\[(.+)\])?)?\.([\w-]+)(?:\[(.+)\])?$/
                  , c = b.exec(a);
                if (!c)
                    throw new Error("cannot parse trackName at all: " + a);
                var d = {
                    nodeName: c[2],
                    objectName: c[3],
                    objectIndex: c[4],
                    propertyName: c[5],
                    propertyIndex: c[6]
                };
                if (null === d.propertyName || 0 === d.propertyName.length)
                    throw new Error("can not parse propertyName from trackName: " + a);
                return d
            }
            ,
            Gd.findNode = function(a, b) {
                if (!b || "" === b || "root" === b || "." === b || -1 === b || b === a.name || b === a.uuid)
                    return a;
                if (a.skeleton) {
                    var c = function(a) {
                        for (var c = 0; c < a.bones.length; c++) {
                            var d = a.bones[c];
                            if (d.name === b)
                                return d
                        }
                        return null
                    }(a.skeleton);
                    if (c)
                        return c
                }
                if (a.children) {
                    var d = function(a) {
                        for (var c = 0; c < a.length; c++) {
                            var e = a[c];
                            if (e.name === b || e.uuid === b)
                                return e;
                            var f = d(e.children);
                            if (f)
                                return f
                        }
                        return null
                    }
                      , e = d(a.children);
                    if (e)
                        return e
                }
                return null
            }
            ,
            Hd.prototype = {
                constructor: Hd,
                isAnimationObjectGroup: !0,
                add: function(a) {
                    for (var b = this._objects, c = b.length, d = this.nCachedObjects_, e = this._indicesByUUID, f = this._paths, g = this._parsedPaths, h = this._bindings, i = h.length, j = 0, k = arguments.length; j !== k; ++j) {
                        var l = arguments[j]
                          , m = l.uuid
                          , n = e[m];
                        if (void 0 === n) {
                            n = c++,
                            e[m] = n,
                            b.push(l);
                            for (var o = 0, p = i; o !== p; ++o)
                                h[o].push(new Gd(l,f[o],g[o]))
                        } else if (n < d) {
                            b[n];
                            var q = --d
                              , r = b[q];
                            e[r.uuid] = n,
                            b[n] = r,
                            e[m] = q,
                            b[q] = l;
                            for (var o = 0, p = i; o !== p; ++o) {
                                var s = h[o]
                                  , t = s[q]
                                  , u = s[n];
                                s[n] = t,
                                void 0 === u && (u = new Gd(l,f[o],g[o])),
                                s[q] = u
                            }
                        } else
                            b[n]
                    }
                    this.nCachedObjects_ = d
                },
                remove: function(a) {
                    for (var b = this._objects, c = this.nCachedObjects_, d = this._indicesByUUID, e = this._bindings, f = e.length, g = 0, h = arguments.length; g !== h; ++g) {
                        var i = arguments[g]
                          , j = i.uuid
                          , k = d[j];
                        if (void 0 !== k && k >= c) {
                            var l = c++
                              , m = b[l];
                            d[m.uuid] = k,
                            b[k] = m,
                            d[j] = l,
                            b[l] = i;
                            for (var n = 0, o = f; n !== o; ++n) {
                                var p = e[n]
                                  , q = p[l]
                                  , r = p[k];
                                p[k] = q,
                                p[l] = r
                            }
                        }
                    }
                    this.nCachedObjects_ = c
                },
                uncache: function(a) {
                    for (var b = this._objects, c = b.length, d = this.nCachedObjects_, e = this._indicesByUUID, f = this._bindings, g = f.length, h = 0, i = arguments.length; h !== i; ++h) {
                        var j = arguments[h]
                          , k = j.uuid
                          , l = e[k];
                        if (void 0 !== l)
                            if (delete e[k],
                            l < d) {
                                var m = --d
                                  , n = b[m]
                                  , o = --c
                                  , p = b[o];
                                e[n.uuid] = l,
                                b[l] = n,
                                e[p.uuid] = m,
                                b[m] = p,
                                b.pop();
                                for (var q = 0, r = g; q !== r; ++q) {
                                    var s = f[q]
                                      , t = s[m]
                                      , u = s[o];
                                    s[l] = t,
                                    s[m] = u,
                                    s.pop()
                                }
                            } else {
                                var o = --c
                                  , p = b[o];
                                e[p.uuid] = l,
                                b[l] = p,
                                b.pop();
                                for (var q = 0, r = g; q !== r; ++q) {
                                    var s = f[q];
                                    s[l] = s[o],
                                    s.pop()
                                }
                            }
                    }
                    this.nCachedObjects_ = d
                },
                subscribe_: function(a, b) {
                    var c = this._bindingsIndicesByPath
                      , d = c[a]
                      , e = this._bindings;
                    if (void 0 !== d)
                        return e[d];
                    var f = this._paths
                      , g = this._parsedPaths
                      , h = this._objects
                      , i = h.length
                      , j = this.nCachedObjects_
                      , k = new Array(i);
                    d = e.length,
                    c[a] = d,
                    f.push(a),
                    g.push(b),
                    e.push(k);
                    for (var l = j, m = h.length; l !== m; ++l) {
                        var n = h[l];
                        k[l] = new Gd(n,a,b)
                    }
                    return k
                },
                unsubscribe_: function(a) {
                    var b = this._bindingsIndicesByPath
                      , c = b[a];
                    if (void 0 !== c) {
                        var d = this._paths
                          , e = this._parsedPaths
                          , f = this._bindings
                          , g = f.length - 1
                          , h = f[g];
                        b[a[g]] = c,
                        f[c] = h,
                        f.pop(),
                        e[c] = e[g],
                        e.pop(),
                        d[c] = d[g],
                        d.pop()
                    }
                }
            },
            Id.prototype = {
                constructor: Id,
                play: function() {
                    return this._mixer._activateAction(this),
                    this
                },
                stop: function() {
                    return this._mixer._deactivateAction(this),
                    this.reset()
                },
                reset: function() {
                    return this.paused = !1,
                    this.enabled = !0,
                    this.time = 0,
                    this._loopCount = -1,
                    this._startTime = null,
                    this.stopFading().stopWarping()
                },
                isRunning: function() {
                    return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this)
                },
                isScheduled: function() {
                    return this._mixer._isActiveAction(this)
                },
                startAt: function(a) {
                    return this._startTime = a,
                    this
                },
                setLoop: function(a, b) {
                    return this.loop = a,
                    this.repetitions = b,
                    this
                },
                setEffectiveWeight: function(a) {
                    return this.weight = a,
                    this._effectiveWeight = this.enabled ? a : 0,
                    this.stopFading()
                },
                getEffectiveWeight: function() {
                    return this._effectiveWeight
                },
                fadeIn: function(a) {
                    return this._scheduleFading(a, 0, 1)
                },
                fadeOut: function(a) {
                    return this._scheduleFading(a, 1, 0)
                },
                crossFadeFrom: function(a, b, c) {
                    if (a.fadeOut(b),
                    this.fadeIn(b),
                    c) {
                        var d = this._clip.duration
                          , e = a._clip.duration
                          , f = e / d
                          , g = d / e;
                        a.warp(1, f, b),
                        this.warp(g, 1, b)
                    }
                    return this
                },
                crossFadeTo: function(a, b, c) {
                    return a.crossFadeFrom(this, b, c)
                },
                stopFading: function() {
                    var a = this._weightInterpolant;
                    return null !== a && (this._weightInterpolant = null,
                    this._mixer._takeBackControlInterpolant(a)),
                    this
                },
                setEffectiveTimeScale: function(a) {
                    return this.timeScale = a,
                    this._effectiveTimeScale = this.paused ? 0 : a,
                    this.stopWarping()
                },
                getEffectiveTimeScale: function() {
                    return this._effectiveTimeScale
                },
                setDuration: function(a) {
                    return this.timeScale = this._clip.duration / a,
                    this.stopWarping()
                },
                syncWith: function(a) {
                    return this.time = a.time,
                    this.timeScale = a.timeScale,
                    this.stopWarping()
                },
                halt: function(a) {
                    return this.warp(this._effectiveTimeScale, 0, a)
                },
                warp: function(a, b, c) {
                    var d = this._mixer
                      , e = d.time
                      , f = this._timeScaleInterpolant
                      , g = this.timeScale;
                    null === f && (f = d._lendControlInterpolant(),
                    this._timeScaleInterpolant = f);
                    var h = f.parameterPositions
                      , i = f.sampleValues;
                    return h[0] = e,
                    h[1] = e + c,
                    i[0] = a / g,
                    i[1] = b / g,
                    this
                },
                stopWarping: function() {
                    var a = this._timeScaleInterpolant;
                    return null !== a && (this._timeScaleInterpolant = null,
                    this._mixer._takeBackControlInterpolant(a)),
                    this
                },
                getMixer: function() {
                    return this._mixer
                },
                getClip: function() {
                    return this._clip
                },
                getRoot: function() {
                    return this._localRoot || this._mixer._root
                },
                _update: function(a, b, c, d) {
                    var e = this._startTime;
                    if (null !== e) {
                        var f = (a - e) * c;
                        if (f < 0 || 0 === c)
                            return;
                        this._startTime = null,
                        b = c * f
                    }
                    b *= this._updateTimeScale(a);
                    var g = this._updateTime(b)
                      , h = this._updateWeight(a);
                    if (h > 0)
                        for (var i = this._interpolants, j = this._propertyBindings, k = 0, l = i.length; k !== l; ++k)
                            i[k].evaluate(g),
                            j[k].accumulate(d, h)
                },
                _updateWeight: function(a) {
                    var b = 0;
                    if (this.enabled) {
                        b = this.weight;
                        var c = this._weightInterpolant;
                        if (null !== c) {
                            var d = c.evaluate(a)[0];
                            b *= d,
                            a > c.parameterPositions[1] && (this.stopFading(),
                            0 === d && (this.enabled = !1))
                        }
                    }
                    return this._effectiveWeight = b,
                    b
                },
                _updateTimeScale: function(a) {
                    var b = 0;
                    if (!this.paused) {
                        b = this.timeScale;
                        var c = this._timeScaleInterpolant;
                        if (null !== c) {
                            b *= c.evaluate(a)[0],
                            a > c.parameterPositions[1] && (this.stopWarping(),
                            0 === b ? this.paused = !0 : this.timeScale = b)
                        }
                    }
                    return this._effectiveTimeScale = b,
                    b
                },
                _updateTime: function(a) {
                    var b = this.time + a;
                    if (0 === a)
                        return b;
                    var c = this._clip.duration
                      , d = this.loop
                      , e = this._loopCount;
                    if (2200 === d) {
                        -1 === e && (this._loopCount = 0,
                        this._setEndings(!0, !0, !1));
                        a: {
                            if (b >= c)
                                b = c;
                            else {
                                if (!(b < 0))
                                    break a;
                                b = 0
                            }
                            this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                            this._mixer.dispatchEvent({
                                type: "finished",
                                action: this,
                                direction: a < 0 ? -1 : 1
                            })
                        }
                    } else {
                        var f = 2202 === d;
                        if (-1 === e && (a >= 0 ? (e = 0,
                        this._setEndings(!0, 0 === this.repetitions, f)) : this._setEndings(0 === this.repetitions, !0, f)),
                        b >= c || b < 0) {
                            var g = Math.floor(b / c);
                            b -= c * g,
                            e += Math.abs(g);
                            var h = this.repetitions - e;
                            if (h < 0)
                                this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                                b = a > 0 ? c : 0,
                                this._mixer.dispatchEvent({
                                    type: "finished",
                                    action: this,
                                    direction: a > 0 ? 1 : -1
                                });
                            else {
                                if (0 === h) {
                                    var i = a < 0;
                                    this._setEndings(i, !i, f)
                                } else
                                    this._setEndings(!1, !1, f);
                                this._loopCount = e,
                                this._mixer.dispatchEvent({
                                    type: "loop",
                                    action: this,
                                    loopDelta: g
                                })
                            }
                        }
                        if (f && 1 == (1 & e))
                            return this.time = b,
                            c - b
                    }
                    return this.time = b,
                    b
                },
                _setEndings: function(a, b, c) {
                    var d = this._interpolantSettings;
                    c ? (d.endingStart = 2401,
                    d.endingEnd = 2401) : (d.endingStart = a ? this.zeroSlopeAtStart ? 2401 : Mg : 2402,
                    d.endingEnd = b ? this.zeroSlopeAtEnd ? 2401 : Mg : 2402)
                },
                _scheduleFading: function(a, b, c) {
                    var d = this._mixer
                      , e = d.time
                      , f = this._weightInterpolant;
                    null === f && (f = d._lendControlInterpolant(),
                    this._weightInterpolant = f);
                    var g = f.parameterPositions
                      , h = f.sampleValues;
                    return g[0] = e,
                    h[0] = b,
                    g[1] = e + a,
                    h[1] = c,
                    this
                }
            },
            Jd.prototype = {
                constructor: Jd,
                clipAction: function(a, b) {
                    var c = b || this._root
                      , d = c.uuid
                      , e = "string" == typeof a ? Xc.findByName(c, a) : a
                      , f = null !== e ? e.uuid : a
                      , g = this._actionsByClip[f]
                      , h = null;
                    if (void 0 !== g) {
                        var i = g.actionByRoot[d];
                        if (void 0 !== i)
                            return i;
                        h = g.knownActions[0],
                        null === e && (e = h._clip)
                    }
                    if (null === e)
                        return null;
                    var j = new Id(this,e,b);
                    return this._bindAction(j, h),
                    this._addInactiveAction(j, f, d),
                    j
                },
                existingAction: function(a, b) {
                    var c = b || this._root
                      , d = c.uuid
                      , e = "string" == typeof a ? Xc.findByName(c, a) : a
                      , f = e ? e.uuid : a
                      , g = this._actionsByClip[f];
                    return void 0 !== g ? g.actionByRoot[d] || null : null
                },
                stopAllAction: function() {
                    var a = this._actions
                      , b = this._nActiveActions
                      , c = this._bindings
                      , d = this._nActiveBindings;
                    this._nActiveActions = 0,
                    this._nActiveBindings = 0;
                    for (var e = 0; e !== b; ++e)
                        a[e].reset();
                    for (var e = 0; e !== d; ++e)
                        c[e].useCount = 0;
                    return this
                },
                update: function(a) {
                    a *= this.timeScale;
                    for (var b = this._actions, c = this._nActiveActions, d = this.time += a, e = Math.sign(a), f = this._accuIndex ^= 1, g = 0; g !== c; ++g) {
                        var h = b[g];
                        h.enabled && h._update(d, a, e, f)
                    }
                    for (var i = this._bindings, j = this._nActiveBindings, g = 0; g !== j; ++g)
                        i[g].apply(f);
                    return this
                },
                getRoot: function() {
                    return this._root
                },
                uncacheClip: function(a) {
                    var b = this._actions
                      , c = a.uuid
                      , d = this._actionsByClip
                      , e = d[c];
                    if (void 0 !== e) {
                        for (var f = e.knownActions, g = 0, h = f.length; g !== h; ++g) {
                            var i = f[g];
                            this._deactivateAction(i);
                            var j = i._cacheIndex
                              , k = b[b.length - 1];
                            i._cacheIndex = null,
                            i._byClipCacheIndex = null,
                            k._cacheIndex = j,
                            b[j] = k,
                            b.pop(),
                            this._removeInactiveBindingsForAction(i)
                        }
                        delete d[c]
                    }
                },
                uncacheRoot: function(a) {
                    var b = a.uuid
                      , c = this._actionsByClip;
                    for (var d in c) {
                        var e = c[d].actionByRoot
                          , f = e[b];
                        void 0 !== f && (this._deactivateAction(f),
                        this._removeInactiveAction(f))
                    }
                    var g = this._bindingsByRootAndName
                      , h = g[b];
                    if (void 0 !== h)
                        for (var i in h) {
                            var j = h[i];
                            j.restoreOriginalState(),
                            this._removeInactiveBinding(j)
                        }
                },
                uncacheAction: function(a, b) {
                    var c = this.existingAction(a, b);
                    null !== c && (this._deactivateAction(c),
                    this._removeInactiveAction(c))
                }
            },
            Object.assign(Jd.prototype, {
                _bindAction: function(a, b) {
                    var c = a._localRoot || this._root
                      , d = a._clip.tracks
                      , e = d.length
                      , f = a._propertyBindings
                      , g = a._interpolants
                      , h = c.uuid
                      , i = this._bindingsByRootAndName
                      , j = i[h];
                    void 0 === j && (j = {},
                    i[h] = j);
                    for (var k = 0; k !== e; ++k) {
                        var l = d[k]
                          , m = l.name
                          , n = j[m];
                        if (void 0 !== n)
                            f[k] = n;
                        else {
                            if (void 0 !== (n = f[k])) {
                                null === n._cacheIndex && (++n.referenceCount,
                                this._addInactiveBinding(n, h, m));
                                continue
                            }
                            var o = b && b._propertyBindings[k].binding.parsedPath;
                            n = new Fd(Gd.create(c, m, o),l.ValueTypeName,l.getValueSize()),
                            ++n.referenceCount,
                            this._addInactiveBinding(n, h, m),
                            f[k] = n
                        }
                        g[k].resultBuffer = n.buffer
                    }
                },
                _activateAction: function(a) {
                    if (!this._isActiveAction(a)) {
                        if (null === a._cacheIndex) {
                            var b = (a._localRoot || this._root).uuid
                              , c = a._clip.uuid
                              , d = this._actionsByClip[c];
                            this._bindAction(a, d && d.knownActions[0]),
                            this._addInactiveAction(a, c, b)
                        }
                        for (var e = a._propertyBindings, f = 0, g = e.length; f !== g; ++f) {
                            var h = e[f];
                            0 == h.useCount++ && (this._lendBinding(h),
                            h.saveOriginalState())
                        }
                        this._lendAction(a)
                    }
                },
                _deactivateAction: function(a) {
                    if (this._isActiveAction(a)) {
                        for (var b = a._propertyBindings, c = 0, d = b.length; c !== d; ++c) {
                            var e = b[c];
                            0 == --e.useCount && (e.restoreOriginalState(),
                            this._takeBackBinding(e))
                        }
                        this._takeBackAction(a)
                    }
                },
                _initMemoryManager: function() {
                    this._actions = [],
                    this._nActiveActions = 0,
                    this._actionsByClip = {},
                    this._bindings = [],
                    this._nActiveBindings = 0,
                    this._bindingsByRootAndName = {},
                    this._controlInterpolants = [],
                    this._nActiveControlInterpolants = 0;
                    var a = this;
                    this.stats = {
                        actions: {
                            get total() {
                                return a._actions.length
                            },
                            get inUse() {
                                return a._nActiveActions
                            }
                        },
                        bindings: {
                            get total() {
                                return a._bindings.length
                            },
                            get inUse() {
                                return a._nActiveBindings
                            }
                        },
                        controlInterpolants: {
                            get total() {
                                return a._controlInterpolants.length
                            },
                            get inUse() {
                                return a._nActiveControlInterpolants
                            }
                        }
                    }
                },
                _isActiveAction: function(a) {
                    var b = a._cacheIndex;
                    return null !== b && b < this._nActiveActions
                },
                _addInactiveAction: function(a, b, c) {
                    var d = this._actions
                      , e = this._actionsByClip
                      , f = e[b];
                    if (void 0 === f)
                        f = {
                            knownActions: [a],
                            actionByRoot: {}
                        },
                        a._byClipCacheIndex = 0,
                        e[b] = f;
                    else {
                        var g = f.knownActions;
                        a._byClipCacheIndex = g.length,
                        g.push(a)
                    }
                    a._cacheIndex = d.length,
                    d.push(a),
                    f.actionByRoot[c] = a
                },
                _removeInactiveAction: function(a) {
                    var b = this._actions
                      , c = b[b.length - 1]
                      , d = a._cacheIndex;
                    c._cacheIndex = d,
                    b[d] = c,
                    b.pop(),
                    a._cacheIndex = null;
                    var e = a._clip.uuid
                      , f = this._actionsByClip
                      , g = f[e]
                      , h = g.knownActions
                      , i = h[h.length - 1]
                      , j = a._byClipCacheIndex;
                    i._byClipCacheIndex = j,
                    h[j] = i,
                    h.pop(),
                    a._byClipCacheIndex = null,
                    delete g.actionByRoot[(b._localRoot || this._root).uuid],
                    0 === h.length && delete f[e],
                    this._removeInactiveBindingsForAction(a)
                },
                _removeInactiveBindingsForAction: function(a) {
                    for (var b = a._propertyBindings, c = 0, d = b.length; c !== d; ++c) {
                        var e = b[c];
                        0 == --e.referenceCount && this._removeInactiveBinding(e)
                    }
                },
                _lendAction: function(a) {
                    var b = this._actions
                      , c = a._cacheIndex
                      , d = this._nActiveActions++
                      , e = b[d];
                    a._cacheIndex = d,
                    b[d] = a,
                    e._cacheIndex = c,
                    b[c] = e
                },
                _takeBackAction: function(a) {
                    var b = this._actions
                      , c = a._cacheIndex
                      , d = --this._nActiveActions
                      , e = b[d];
                    a._cacheIndex = d,
                    b[d] = a,
                    e._cacheIndex = c,
                    b[c] = e
                },
                _addInactiveBinding: function(a, b, c) {
                    var d = this._bindingsByRootAndName
                      , e = d[b]
                      , f = this._bindings;
                    void 0 === e && (e = {},
                    d[b] = e),
                    e[c] = a,
                    a._cacheIndex = f.length,
                    f.push(a)
                },
                _removeInactiveBinding: function(a) {
                    var b = this._bindings
                      , c = a.binding
                      , d = c.rootNode.uuid
                      , e = c.path
                      , f = this._bindingsByRootAndName
                      , g = f[d]
                      , h = b[b.length - 1]
                      , i = a._cacheIndex;
                    h._cacheIndex = i,
                    b[i] = h,
                    b.pop(),
                    delete g[e];
                    a: {
                        for (var j in g)
                            break a;
                        delete f[d]
                    }
                },
                _lendBinding: function(a) {
                    var b = this._bindings
                      , c = a._cacheIndex
                      , d = this._nActiveBindings++
                      , e = b[d];
                    a._cacheIndex = d,
                    b[d] = a,
                    e._cacheIndex = c,
                    b[c] = e
                },
                _takeBackBinding: function(a) {
                    var b = this._bindings
                      , c = a._cacheIndex
                      , d = --this._nActiveBindings
                      , e = b[d];
                    a._cacheIndex = d,
                    b[d] = a,
                    e._cacheIndex = c,
                    b[c] = e
                },
                _lendControlInterpolant: function() {
                    var a = this._controlInterpolants
                      , b = this._nActiveControlInterpolants++
                      , c = a[b];
                    return void 0 === c && (c = new Mc(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),
                    c.__cacheIndex = b,
                    a[b] = c),
                    c
                },
                _takeBackControlInterpolant: function(a) {
                    var b = this._controlInterpolants
                      , c = a.__cacheIndex
                      , d = --this._nActiveControlInterpolants
                      , e = b[d];
                    a.__cacheIndex = d,
                    b[d] = a,
                    e.__cacheIndex = c,
                    b[c] = e
                },
                _controlInterpolantsResultBuffer: new Float32Array(1)
            }),
            Object.assign(Jd.prototype, b.prototype),
            Kd.prototype.clone = function() {
                return new Kd(void 0 === this.value.clone ? this.value : this.value.clone())
            }
            ,
            Ld.prototype = Object.create(Ba.prototype),
            Ld.prototype.constructor = Ld,
            Ld.prototype.isInstancedBufferGeometry = !0,
            Ld.prototype.addGroup = function(a, b, c) {
                this.groups.push({
                    start: a,
                    count: b,
                    materialIndex: c
                })
            }
            ,
            Ld.prototype.copy = function(a) {
                var b = a.index;
                null !== b && this.setIndex(b.clone());
                var c = a.attributes;
                for (var d in c) {
                    var e = c[d];
                    this.addAttribute(d, e.clone())
                }
                for (var f = a.groups, g = 0, h = f.length; g < h; g++) {
                    var i = f[g];
                    this.addGroup(i.start, i.count, i.materialIndex)
                }
                return this
            }
            ,
            Md.prototype = {
                constructor: Md,
                isInterleavedBufferAttribute: !0,
                get count() {
                    return this.data.count
                },
                get array() {
                    return this.data.array
                },
                setX: function(a, b) {
                    return this.data.array[a * this.data.stride + this.offset] = b,
                    this
                },
                setY: function(a, b) {
                    return this.data.array[a * this.data.stride + this.offset + 1] = b,
                    this
                },
                setZ: function(a, b) {
                    return this.data.array[a * this.data.stride + this.offset + 2] = b,
                    this
                },
                setW: function(a, b) {
                    return this.data.array[a * this.data.stride + this.offset + 3] = b,
                    this
                },
                getX: function(a) {
                    return this.data.array[a * this.data.stride + this.offset]
                },
                getY: function(a) {
                    return this.data.array[a * this.data.stride + this.offset + 1]
                },
                getZ: function(a) {
                    return this.data.array[a * this.data.stride + this.offset + 2]
                },
                getW: function(a) {
                    return this.data.array[a * this.data.stride + this.offset + 3]
                },
                setXY: function(a, b, c) {
                    return a = a * this.data.stride + this.offset,
                    this.data.array[a + 0] = b,
                    this.data.array[a + 1] = c,
                    this
                },
                setXYZ: function(a, b, c, d) {
                    return a = a * this.data.stride + this.offset,
                    this.data.array[a + 0] = b,
                    this.data.array[a + 1] = c,
                    this.data.array[a + 2] = d,
                    this
                },
                setXYZW: function(a, b, c, d, e) {
                    return a = a * this.data.stride + this.offset,
                    this.data.array[a + 0] = b,
                    this.data.array[a + 1] = c,
                    this.data.array[a + 2] = d,
                    this.data.array[a + 3] = e,
                    this
                }
            },
            Nd.prototype = {
                constructor: Nd,
                isInterleavedBuffer: !0,
                set needsUpdate(a) {
                    !0 === a && this.version++
                },
                setArray: function(a) {
                    if (Array.isArray(a))
                        throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
                    this.count = void 0 !== a ? a.length / this.stride : 0,
                    this.array = a
                },
                setDynamic: function(a) {
                    return this.dynamic = a,
                    this
                },
                copy: function(a) {
                    return this.array = new a.array.constructor(a.array),
                    this.count = a.count,
                    this.stride = a.stride,
                    this.dynamic = a.dynamic,
                    this
                },
                copyAt: function(a, b, c) {
                    a *= this.stride,
                    c *= b.stride;
                    for (var d = 0, e = this.stride; d < e; d++)
                        this.array[a + d] = b.array[c + d];
                    return this
                },
                set: function(a, b) {
                    return void 0 === b && (b = 0),
                    this.array.set(a, b),
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                onUpload: function(a) {
                    return this.onUploadCallback = a,
                    this
                }
            },
            Od.prototype = Object.create(Nd.prototype),
            Od.prototype.constructor = Od,
            Od.prototype.isInstancedInterleavedBuffer = !0,
            Od.prototype.copy = function(a) {
                return Nd.prototype.copy.call(this, a),
                this.meshPerAttribute = a.meshPerAttribute,
                this
            }
            ,
            Pd.prototype = Object.create(na.prototype),
            Pd.prototype.constructor = Pd,
            Pd.prototype.isInstancedBufferAttribute = !0,
            Pd.prototype.copy = function(a) {
                return na.prototype.copy.call(this, a),
                this.meshPerAttribute = a.meshPerAttribute,
                this
            }
            ,
            Qd.prototype = {
                constructor: Qd,
                linePrecision: 1,
                set: function(a, b) {
                    this.ray.set(a, b)
                },
                setFromCamera: function(a, b) {
                    b && b.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(b.matrixWorld),
                    this.ray.direction.set(a.x, a.y, .5).unproject(b).sub(this.ray.origin).normalize()) : b && b.isOrthographicCamera && (this.ray.origin.set(a.x, a.y, (b.near + b.far) / (b.near - b.far)).unproject(b),
                    this.ray.direction.set(0, 0, -1).transformDirection(b.matrixWorld))
                },
                intersectObject: function(a, b) {
                    var c = [];
                    return Sd(a, this, c, b),
                    c.sort(Rd),
                    c
                },
                intersectObjects: function(a, b) {
                    var c = [];
                    if (!1 === Array.isArray(a))
                        return c;
                    for (var d = 0, e = a.length; d < e; d++)
                        Sd(a[d], this, c, b);
                    return c.sort(Rd),
                    c
                }
            },
            Td.prototype = {
                constructor: Td,
                start: function() {
                    this.startTime = (performance || Date).now(),
                    this.oldTime = this.startTime,
                    this.elapsedTime = 0,
                    this.running = !0
                },
                stop: function() {
                    this.getElapsedTime(),
                    this.running = !1
                },
                getElapsedTime: function() {
                    return this.getDelta(),
                    this.elapsedTime
                },
                getDelta: function() {
                    var a = 0;
                    if (this.autoStart && !this.running && this.start(),
                    this.running) {
                        var b = (performance || Date).now();
                        a = (b - this.oldTime) / 1e3,
                        this.oldTime = b,
                        this.elapsedTime += a
                    }
                    return a
                }
            },
            Ud.prototype = {
                constructor: Ud,
                set: function(a, b, c) {
                    return this.radius = a,
                    this.phi = b,
                    this.theta = c,
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(a) {
                    return this.radius = a.radius,
                    this.phi = a.phi,
                    this.theta = a.theta,
                    this
                },
                makeSafe: function() {
                    return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)),
                    this
                },
                setFromVector3: function(a) {
                    return this.radius = a.length(),
                    0 === this.radius ? (this.theta = 0,
                    this.phi = 0) : (this.theta = Math.atan2(a.x, a.z),
                    this.phi = Math.acos(Zg.clamp(a.y / this.radius, -1, 1))),
                    this
                }
            },
            Vd.prototype = {
                constructor: Vd,
                set: function(a, b, c) {
                    return this.radius = a,
                    this.theta = b,
                    this.y = c,
                    this
                },
                clone: function() {
                    return (new this.constructor).copy(this)
                },
                copy: function(a) {
                    return this.radius = a.radius,
                    this.theta = a.theta,
                    this.y = a.y,
                    this
                },
                setFromVector3: function(a) {
                    return this.radius = Math.sqrt(a.x * a.x + a.z * a.z),
                    this.theta = Math.atan2(a.x, a.z),
                    this.y = a.y,
                    this
                }
            },
            Wd.prototype = Object.create(Ca.prototype),
            Wd.prototype.constructor = Wd,
            Wd.prototype.createAnimation = function(a, b, c, d) {
                var e = {
                    start: b,
                    end: c,
                    length: c - b + 1,
                    fps: d,
                    duration: (c - b) / d,
                    lastFrame: 0,
                    currentFrame: 0,
                    active: !1,
                    time: 0,
                    direction: 1,
                    weight: 1,
                    directionBackwards: !1,
                    mirroredLoop: !1
                };
                this.animationsMap[a] = e,
                this.animationsList.push(e)
            }
            ,
            Wd.prototype.autoCreateAnimations = function(a) {
                for (var b, c = /([a-z]+)_?(\d+)/i, d = {}, e = this.geometry, f = 0, g = e.morphTargets.length; f < g; f++) {
                    var h = e.morphTargets[f]
                      , i = h.name.match(c);
                    if (i && i.length > 1) {
                        var j = i[1];
                        d[j] || (d[j] = {
                            start: 1 / 0,
                            end: -1 / 0
                        });
                        var k = d[j];
                        f < k.start && (k.start = f),
                        f > k.end && (k.end = f),
                        b || (b = j)
                    }
                }
                for (var j in d) {
                    var k = d[j];
                    this.createAnimation(j, k.start, k.end, a)
                }
                this.firstAnimation = b
            }
            ,
            Wd.prototype.setAnimationDirectionForward = function(a) {
                var b = this.animationsMap[a];
                b && (b.direction = 1,
                b.directionBackwards = !1)
            }
            ,
            Wd.prototype.setAnimationDirectionBackward = function(a) {
                var b = this.animationsMap[a];
                b && (b.direction = -1,
                b.directionBackwards = !0)
            }
            ,
            Wd.prototype.setAnimationFPS = function(a, b) {
                var c = this.animationsMap[a];
                c && (c.fps = b,
                c.duration = (c.end - c.start) / c.fps)
            }
            ,
            Wd.prototype.setAnimationDuration = function(a, b) {
                var c = this.animationsMap[a];
                c && (c.duration = b,
                c.fps = (c.end - c.start) / c.duration)
            }
            ,
            Wd.prototype.setAnimationWeight = function(a, b) {
                var c = this.animationsMap[a];
                c && (c.weight = b)
            }
            ,
            Wd.prototype.setAnimationTime = function(a, b) {
                var c = this.animationsMap[a];
                c && (c.time = b)
            }
            ,
            Wd.prototype.getAnimationTime = function(a) {
                var b = 0
                  , c = this.animationsMap[a];
                return c && (b = c.time),
                b
            }
            ,
            Wd.prototype.getAnimationDuration = function(a) {
                var b = -1
                  , c = this.animationsMap[a];
                return c && (b = c.duration),
                b
            }
            ,
            Wd.prototype.playAnimation = function(a) {
                var b = this.animationsMap[a];
                b && (b.time = 0,
                b.active = !0)
            }
            ,
            Wd.prototype.stopAnimation = function(a) {
                var b = this.animationsMap[a];
                b && (b.active = !1)
            }
            ,
            Wd.prototype.update = function(a) {
                for (var b = 0, c = this.animationsList.length; b < c; b++) {
                    var d = this.animationsList[b];
                    if (d.active) {
                        var e = d.duration / d.length;
                        d.time += d.direction * a,
                        d.mirroredLoop ? (d.time > d.duration || d.time < 0) && (d.direction *= -1,
                        d.time > d.duration && (d.time = d.duration,
                        d.directionBackwards = !0),
                        d.time < 0 && (d.time = 0,
                        d.directionBackwards = !1)) : (d.time = d.time % d.duration,
                        d.time < 0 && (d.time += d.duration));
                        var f = d.start + Zg.clamp(Math.floor(d.time / e), 0, d.length - 1)
                          , g = d.weight;
                        f !== d.currentFrame && (this.morphTargetInfluences[d.lastFrame] = 0,
                        this.morphTargetInfluences[d.currentFrame] = 1 * g,
                        this.morphTargetInfluences[f] = 0,
                        d.lastFrame = d.currentFrame,
                        d.currentFrame = f);
                        var h = d.time % e / e;
                        d.directionBackwards && (h = 1 - h),
                        d.currentFrame !== d.lastFrame ? (this.morphTargetInfluences[d.currentFrame] = h * g,
                        this.morphTargetInfluences[d.lastFrame] = (1 - h) * g) : this.morphTargetInfluences[d.currentFrame] = g
                    }
                }
            }
            ,
            Xd.prototype = Object.create(ia.prototype),
            Xd.prototype.constructor = Xd,
            Xd.prototype.isImmediateRenderObject = !0,
            Yd.prototype = Object.create(ub.prototype),
            Yd.prototype.constructor = Yd,
            Yd.prototype.update = function() {
                var a = new i
                  , b = new i
                  , c = new ba;
                return function() {
                    var d = ["a", "b", "c"];
                    this.object.updateMatrixWorld(!0),
                    c.getNormalMatrix(this.object.matrixWorld);
                    var e = this.object.matrixWorld
                      , f = this.geometry.attributes.position
                      , g = this.object.geometry;
                    if (g && g.isGeometry)
                        for (var h = g.vertices, i = g.faces, j = 0, k = 0, l = i.length; k < l; k++)
                            for (var m = i[k], n = 0, o = m.vertexNormals.length; n < o; n++) {
                                var p = h[m[d[n]]]
                                  , q = m.vertexNormals[n];
                                a.copy(p).applyMatrix4(e),
                                b.copy(q).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a),
                                f.setXYZ(j, a.x, a.y, a.z),
                                j += 1,
                                f.setXYZ(j, b.x, b.y, b.z),
                                j += 1
                            }
                    else if (g && g.isBufferGeometry)
                        for (var r = g.attributes.position, s = g.attributes.normal, j = 0, n = 0, o = r.count; n < o; n++)
                            a.set(r.getX(n), r.getY(n), r.getZ(n)).applyMatrix4(e),
                            b.set(s.getX(n), s.getY(n), s.getZ(n)),
                            b.applyMatrix3(c).normalize().multiplyScalar(this.size).add(a),
                            f.setXYZ(j, a.x, a.y, a.z),
                            j += 1,
                            f.setXYZ(j, b.x, b.y, b.z),
                            j += 1;
                    return f.needsUpdate = !0,
                    this
                }
            }(),
            Zd.prototype = Object.create(ia.prototype),
            Zd.prototype.constructor = Zd,
            Zd.prototype.dispose = function() {
                this.cone.geometry.dispose(),
                this.cone.material.dispose()
            }
            ,
            Zd.prototype.update = function() {
                var a = new i
                  , b = new i;
                return function() {
                    var c = this.light.distance ? this.light.distance : 1e3
                      , d = c * Math.tan(this.light.angle);
                    this.cone.scale.set(d, d, c),
                    a.setFromMatrixPosition(this.light.matrixWorld),
                    b.setFromMatrixPosition(this.light.target.matrixWorld),
                    this.cone.lookAt(b.sub(a)),
                    this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
                }
            }(),
            $d.prototype = Object.create(ub.prototype),
            $d.prototype.constructor = $d,
            $d.prototype.getBoneList = function(a) {
                var b = [];
                a && a.isBone && b.push(a);
                for (var c = 0; c < a.children.length; c++)
                    b.push.apply(b, this.getBoneList(a.children[c]));
                return b
            }
            ,
            $d.prototype.update = function() {
                var a = new i
                  , b = new j
                  , c = new j;
                return function() {
                    var d = this.geometry
                      , e = d.getAttribute("position");
                    c.getInverse(this.root.matrixWorld);
                    for (var f = 0, g = 0; f < this.bones.length; f++) {
                        var h = this.bones[f];
                        h.parent && h.parent.isBone && (b.multiplyMatrices(c, h.matrixWorld),
                        a.setFromMatrixPosition(b),
                        e.setXYZ(g, a.x, a.y, a.z),
                        b.multiplyMatrices(c, h.parent.matrixWorld),
                        a.setFromMatrixPosition(b),
                        e.setXYZ(g + 1, a.x, a.y, a.z),
                        g += 2)
                    }
                    d.getAttribute("position").needsUpdate = !0
                }
            }(),
            _d.prototype = Object.create(Ca.prototype),
            _d.prototype.constructor = _d,
            _d.prototype.dispose = function() {
                this.geometry.dispose(),
                this.material.dispose()
            }
            ,
            _d.prototype.update = function() {
                this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
            }
            ,
            ae.prototype = Object.create(ia.prototype),
            ae.prototype.constructor = ae,
            ae.prototype.dispose = function() {
                this.children[0].geometry.dispose(),
                this.children[0].material.dispose(),
                this.children[1].geometry.dispose(),
                this.children[1].material.dispose()
            }
            ,
            ae.prototype.update = function() {
                var a = new i
                  , b = new i;
                return function() {
                    var c = this.children[0]
                      , d = this.children[1];
                    if (this.light.target) {
                        a.setFromMatrixPosition(this.light.matrixWorld),
                        b.setFromMatrixPosition(this.light.target.matrixWorld);
                        var e = b.clone().sub(a);
                        c.lookAt(e),
                        d.lookAt(e)
                    }
                    c.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),
                    d.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);
                    var f = .5 * this.light.width
                      , g = .5 * this.light.height
                      , h = c.geometry.getAttribute("position")
                      , i = h.array;
                    i[0] = f,
                    i[1] = -g,
                    i[2] = 0,
                    i[3] = f,
                    i[4] = g,
                    i[5] = 0,
                    i[6] = -f,
                    i[7] = g,
                    i[8] = 0,
                    i[9] = -f,
                    i[10] = g,
                    i[11] = 0,
                    i[12] = -f,
                    i[13] = -g,
                    i[14] = 0,
                    i[15] = f,
                    i[16] = -g,
                    i[17] = 0,
                    h.needsUpdate = !0
                }
            }(),
            be.prototype = Object.create(ia.prototype),
            be.prototype.constructor = be,
            be.prototype.dispose = function() {
                this.children[0].geometry.dispose(),
                this.children[0].material.dispose()
            }
            ,
            be.prototype.update = function() {
                var a = new i
                  , b = new T
                  , c = new T;
                return function() {
                    var d = this.children[0]
                      , e = d.geometry.getAttribute("color");
                    b.copy(this.light.color).multiplyScalar(this.light.intensity),
                    c.copy(this.light.groundColor).multiplyScalar(this.light.intensity);
                    for (var f = 0, g = e.count; f < g; f++) {
                        var h = f < g / 2 ? b : c;
                        e.setXYZ(f, h.r, h.g, h.b)
                    }
                    d.lookAt(a.setFromMatrixPosition(this.light.matrixWorld).negate()),
                    e.needsUpdate = !0
                }
            }(),
            ce.prototype = Object.create(ub.prototype),
            ce.prototype.constructor = ce,
            de.prototype = Object.create(ub.prototype),
            de.prototype.constructor = de,
            ee.prototype = Object.create(ub.prototype),
            ee.prototype.constructor = ee,
            ee.prototype.update = function() {
                var a = new i
                  , b = new i
                  , c = new ba;
                return function() {
                    this.object.updateMatrixWorld(!0),
                    c.getNormalMatrix(this.object.matrixWorld);
                    for (var d = this.object.matrixWorld, e = this.geometry.attributes.position, f = this.object.geometry, g = f.vertices, h = f.faces, i = 0, j = 0, k = h.length; j < k; j++) {
                        var l = h[j]
                          , m = l.normal;
                        a.copy(g[l.a]).add(g[l.b]).add(g[l.c]).divideScalar(3).applyMatrix4(d),
                        b.copy(m).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a),
                        e.setXYZ(i, a.x, a.y, a.z),
                        i += 1,
                        e.setXYZ(i, b.x, b.y, b.z),
                        i += 1
                    }
                    return e.needsUpdate = !0,
                    this
                }
            }(),
            fe.prototype = Object.create(ia.prototype),
            fe.prototype.constructor = fe,
            fe.prototype.dispose = function() {
                var a = this.children[0]
                  , b = this.children[1];
                a.geometry.dispose(),
                a.material.dispose(),
                b.geometry.dispose(),
                b.material.dispose()
            }
            ,
            fe.prototype.update = function() {
                var a = new i
                  , b = new i
                  , c = new i;
                return function() {
                    a.setFromMatrixPosition(this.light.matrixWorld),
                    b.setFromMatrixPosition(this.light.target.matrixWorld),
                    c.subVectors(b, a);
                    var d = this.children[0]
                      , e = this.children[1];
                    d.lookAt(c),
                    d.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),
                    e.lookAt(c),
                    e.scale.z = c.length()
                }
            }(),
            ge.prototype = Object.create(ub.prototype),
            ge.prototype.constructor = ge,
            ge.prototype.update = function() {
                function a(a, f, g, h) {
                    d.set(f, g, h).unproject(e);
                    var i = c[a];
                    if (void 0 !== i)
                        for (var j = b.getAttribute("position"), k = 0, l = i.length; k < l; k++)
                            j.setXYZ(i[k], d.x, d.y, d.z)
                }
                var b, c, d = new i, e = new Ha;
                return function() {
                    b = this.geometry,
                    c = this.pointMap;
                    e.projectionMatrix.copy(this.camera.projectionMatrix),
                    a("c", 0, 0, -1),
                    a("t", 0, 0, 1),
                    a("n1", -1, -1, -1),
                    a("n2", 1, -1, -1),
                    a("n3", -1, 1, -1),
                    a("n4", 1, 1, -1),
                    a("f1", -1, -1, 1),
                    a("f2", 1, -1, 1),
                    a("f3", -1, 1, 1),
                    a("f4", 1, 1, 1),
                    a("u1", .7, 1.1, -1),
                    a("u2", -.7, 1.1, -1),
                    a("u3", 0, 2, -1),
                    a("cf1", -1, 0, 1),
                    a("cf2", 1, 0, 1),
                    a("cf3", 0, -1, 1),
                    a("cf4", 0, 1, 1),
                    a("cn1", -1, 0, -1),
                    a("cn2", 1, 0, -1),
                    a("cn3", 0, -1, -1),
                    a("cn4", 0, 1, -1),
                    b.getAttribute("position").needsUpdate = !0
                }
            }(),
            he.prototype = Object.create(ub.prototype),
            he.prototype.constructor = he,
            he.prototype.update = function() {
                var a = new _;
                return function(b) {
                    if (b && b.isBox3 ? a.copy(b) : a.setFromObject(b),
                    !a.isEmpty()) {
                        var c = a.min
                          , d = a.max
                          , e = this.geometry.attributes.position
                          , f = e.array;
                        f[0] = d.x,
                        f[1] = d.y,
                        f[2] = d.z,
                        f[3] = c.x,
                        f[4] = d.y,
                        f[5] = d.z,
                        f[6] = c.x,
                        f[7] = c.y,
                        f[8] = d.z,
                        f[9] = d.x,
                        f[10] = c.y,
                        f[11] = d.z,
                        f[12] = d.x,
                        f[13] = d.y,
                        f[14] = c.z,
                        f[15] = c.x,
                        f[16] = d.y,
                        f[17] = c.z,
                        f[18] = c.x,
                        f[19] = c.y,
                        f[20] = c.z,
                        f[21] = d.x,
                        f[22] = c.y,
                        f[23] = c.z,
                        e.needsUpdate = !0,
                        this.geometry.computeBoundingSphere()
                    }
                }
            }();
            var xh, yh;
            ie.prototype = Object.create(ia.prototype),
            ie.prototype.constructor = ie,
            ie.prototype.setDirection = function() {
                var a, b = new i;
                return function(c) {
                    c.y > .99999 ? this.quaternion.set(0, 0, 0, 1) : c.y < -.99999 ? this.quaternion.set(1, 0, 0, 0) : (b.set(c.z, 0, -c.x).normalize(),
                    a = Math.acos(c.y),
                    this.quaternion.setFromAxisAngle(b, a))
                }
            }(),
            ie.prototype.setLength = function(a, b, c) {
                void 0 === b && (b = .2 * a),
                void 0 === c && (c = .2 * b),
                this.line.scale.set(1, Math.max(0, a - b), 1),
                this.line.updateMatrix(),
                this.cone.scale.set(c, b, c),
                this.cone.position.y = a,
                this.cone.updateMatrix()
            }
            ,
            ie.prototype.setColor = function(a) {
                this.line.material.color.copy(a),
                this.cone.material.color.copy(a)
            }
            ,
            je.prototype = Object.create(ub.prototype),
            je.prototype.constructor = je;
            var zh = new i
              , Ah = new ke
              , Bh = new ke
              , Ch = new ke;
            le.prototype = Object.create(ld.prototype),
            le.prototype.constructor = le,
            le.prototype.getPoint = function(a) {
                var b = this.points
                  , c = b.length
                  , d = (c - (this.closed ? 0 : 1)) * a
                  , e = Math.floor(d)
                  , f = d - e;
                this.closed ? e += e > 0 ? 0 : (Math.floor(Math.abs(e) / b.length) + 1) * b.length : 0 === f && e === c - 1 && (e = c - 2,
                f = 1);
                var g, h, j, k;
                if (this.closed || e > 0 ? g = b[(e - 1) % c] : (zh.subVectors(b[0], b[1]).add(b[0]),
                g = zh),
                h = b[e % c],
                j = b[(e + 1) % c],
                this.closed || e + 2 < c ? k = b[(e + 2) % c] : (zh.subVectors(b[c - 1], b[c - 2]).add(b[c - 1]),
                k = zh),
                void 0 === this.type || "centripetal" === this.type || "chordal" === this.type) {
                    var l = "chordal" === this.type ? .5 : .25
                      , m = Math.pow(g.distanceToSquared(h), l)
                      , n = Math.pow(h.distanceToSquared(j), l)
                      , o = Math.pow(j.distanceToSquared(k), l);
                    n < 1e-4 && (n = 1),
                    m < 1e-4 && (m = n),
                    o < 1e-4 && (o = n),
                    Ah.initNonuniformCatmullRom(g.x, h.x, j.x, k.x, m, n, o),
                    Bh.initNonuniformCatmullRom(g.y, h.y, j.y, k.y, m, n, o),
                    Ch.initNonuniformCatmullRom(g.z, h.z, j.z, k.z, m, n, o)
                } else if ("catmullrom" === this.type) {
                    var p = void 0 !== this.tension ? this.tension : .5;
                    Ah.initCatmullRom(g.x, h.x, j.x, k.x, p),
                    Bh.initCatmullRom(g.y, h.y, j.y, k.y, p),
                    Ch.initCatmullRom(g.z, h.z, j.z, k.z, p)
                }
                return new i(Ah.calc(f),Bh.calc(f),Ch.calc(f))
            }
            ,
            me.prototype = Object.create(ld.prototype),
            me.prototype.constructor = me,
            me.prototype.getPoint = function(a) {
                var b = this.v0
                  , c = this.v1
                  , d = this.v2
                  , e = this.v3;
                return new i(kd(a, b.x, c.x, d.x, e.x),kd(a, b.y, c.y, d.y, e.y),kd(a, b.z, c.z, d.z, e.z))
            }
            ,
            ne.prototype = Object.create(ld.prototype),
            ne.prototype.constructor = ne,
            ne.prototype.getPoint = function(a) {
                var b = this.v0
                  , c = this.v1
                  , d = this.v2;
                return new i(fd(a, b.x, c.x, d.x),fd(a, b.y, c.y, d.y),fd(a, b.z, c.z, d.z))
            }
            ,
            oe.prototype = Object.create(ld.prototype),
            oe.prototype.constructor = oe,
            oe.prototype.getPoint = function(a) {
                if (1 === a)
                    return this.v2.clone();
                var b = new i;
                return b.subVectors(this.v2, this.v1),
                b.multiplyScalar(a),
                b.add(this.v1),
                b
            }
            ,
            pe.prototype = Object.create(od.prototype),
            pe.prototype.constructor = pe;
            var Dh = {
                createMultiMaterialObject: function(a, b) {
                    for (var c = new xb, d = 0, e = b.length; d < e; d++)
                        c.add(new Ca(a,b[d]));
                    return c
                },
                detach: function(a, b, c) {
                    a.applyMatrix(b.matrixWorld),
                    b.remove(a),
                    c.add(a)
                },
                attach: function(a, b, c) {
                    var d = new j;
                    d.getInverse(c.matrixWorld),
                    a.applyMatrix(d),
                    b.remove(a),
                    c.add(a)
                }
            };
            ld.create = function(a, b) {
                return a.prototype = Object.create(ld.prototype),
                a.prototype.constructor = a,
                a.prototype.getPoint = b,
                a
            }
            ,
            Je.prototype = Object.create(le.prototype),
            Ke.prototype = Object.create(le.prototype),
            Le.prototype = Object.create(le.prototype),
            Object.assign(Le.prototype, {
                initFromArray: function(a) {},
                getControlPointsArray: function(a) {},
                reparametrizeByArcLength: function(a) {}
            }),
            ce.prototype.setColors = function() {}
            ,
            Object.assign(V.prototype, {
                center: function(a) {
                    return this.getCenter(a)
                },
                empty: function() {
                    return this.isEmpty()
                },
                isIntersectionBox: function(a) {
                    return this.intersectsBox(a)
                },
                size: function(a) {
                    return this.getSize(a)
                }
            }),
            Object.assign(_.prototype, {
                center: function(a) {
                    return this.getCenter(a)
                },
                empty: function() {
                    return this.isEmpty()
                },
                isIntersectionBox: function(a) {
                    return this.intersectsBox(a)
                },
                isIntersectionSphere: function(a) {
                    return this.intersectsSphere(a)
                },
                size: function(a) {
                    return this.getSize(a)
                }
            }),
            ja.prototype.center = function(a) {
                return this.getCenter(a)
            }
            ,
            Zg.random16 = function() {
                return Math.random()
            }
            ,
            Object.assign(ba.prototype, {
                flattenToArrayOffset: function(a, b) {
                    return this.toArray(a, b)
                },
                multiplyVector3: function(a) {
                    return a.applyMatrix3(this)
                },
                multiplyVector3Array: function(a) {
                    return this.applyToVector3Array(a)
                },
                applyToBuffer: function(a, b, c) {
                    return this.applyToBufferAttribute(a)
                },
                applyToVector3Array: function(a, b, c) {}
            }),
            Object.assign(j.prototype, {
                extractPosition: function(a) {
                    return this.copyPosition(a)
                },
                flattenToArrayOffset: function(a, b) {
                    return this.toArray(a, b)
                },
                getPosition: function() {
                    var a;
                    return function() {
                        return void 0 === a && (a = new i),
                        a.setFromMatrixColumn(this, 3)
                    }
                }(),
                setRotationFromQuaternion: function(a) {
                    return this.makeRotationFromQuaternion(a)
                },
                multiplyVector3: function(a) {
                    return a.applyMatrix4(this)
                },
                multiplyVector4: function(a) {
                    return a.applyMatrix4(this)
                },
                multiplyVector3Array: function(a) {
                    return this.applyToVector3Array(a)
                },
                rotateAxis: function(a) {
                    a.transformDirection(this)
                },
                crossVector: function(a) {
                    return a.applyMatrix4(this)
                },
                translate: function() {},
                rotateX: function() {},
                rotateY: function() {},
                rotateZ: function() {},
                rotateByAxis: function() {},
                applyToBuffer: function(a, b, c) {
                    return this.applyToBufferAttribute(a)
                },
                applyToVector3Array: function(a, b, c) {},
                makeFrustum: function(a, b, c, d, e, f) {
                    return this.makePerspective(a, b, d, c, e, f)
                }
            }),
            ca.prototype.isIntersectionLine = function(a) {
                return this.intersectsLine(a)
            }
            ,
            h.prototype.multiplyVector3 = function(a) {
                return a.applyQuaternion(this)
            }
            ,
            Object.assign(fa.prototype, {
                isIntersectionBox: function(a) {
                    return this.intersectsBox(a)
                },
                isIntersectionPlane: function(a) {
                    return this.intersectsPlane(a)
                },
                isIntersectionSphere: function(a) {
                    return this.intersectsSphere(a)
                }
            }),
            Object.assign(td.prototype, {
                extrude: function(a) {
                    return new Vb(this,a)
                },
                makeGeometry: function(a) {
                    return new bc(this,a)
                }
            }),
            Object.assign(c.prototype, {
                fromAttribute: function(a, b, c) {
                    return this.fromBufferAttribute(a, b, c)
                }
            }),
            Object.assign(i.prototype, {
                setEulerFromRotationMatrix: function() {},
                setEulerFromQuaternion: function() {},
                getPositionFromMatrix: function(a) {
                    return this.setFromMatrixPosition(a)
                },
                getScaleFromMatrix: function(a) {
                    return this.setFromMatrixScale(a)
                },
                getColumnFromMatrix: function(a, b) {
                    return this.setFromMatrixColumn(b, a)
                },
                applyProjection: function(a) {
                    return this.applyMatrix4(a)
                },
                fromAttribute: function(a, b, c) {
                    return this.fromBufferAttribute(a, b, c)
                }
            }),
            Object.assign(e.prototype, {
                fromAttribute: function(a, b, c) {
                    return this.fromBufferAttribute(a, b, c)
                }
            }),
            Aa.prototype.computeTangents = function() {}
            ,
            Object.assign(ia.prototype, {
                getChildByName: function(a) {
                    return this.getObjectByName(a)
                },
                renderDepth: function() {},
                translate: function(a, b) {
                    return this.translateOnAxis(b, a)
                }
            }),
            Object.defineProperties(ia.prototype, {
                eulerOrder: {
                    get: function() {
                        return this.rotation.order
                    },
                    set: function(a) {
                        this.rotation.order = a
                    }
                },
                useQuaternion: {
                    get: function() {},
                    set: function() {}
                }
            }),
            Object.defineProperties(ob.prototype, {
                objects: {
                    get: function() {
                        return this.levels
                    }
                }
            }),
            Ia.prototype.setLens = function(a, b) {
                void 0 !== b && (this.filmGauge = b),
                this.setFocalLength(a)
            }
            ,
            Object.defineProperties(Bc.prototype, {
                onlyShadow: {
                    set: function() {}
                },
                shadowCameraFov: {
                    set: function(a) {
                        this.shadow.camera.fov = a
                    }
                },
                shadowCameraLeft: {
                    set: function(a) {
                        this.shadow.camera.left = a
                    }
                },
                shadowCameraRight: {
                    set: function(a) {
                        this.shadow.camera.right = a
                    }
                },
                shadowCameraTop: {
                    set: function(a) {
                        this.shadow.camera.top = a
                    }
                },
                shadowCameraBottom: {
                    set: function(a) {
                        this.shadow.camera.bottom = a
                    }
                },
                shadowCameraNear: {
                    set: function(a) {
                        this.shadow.camera.near = a
                    }
                },
                shadowCameraFar: {
                    set: function(a) {
                        this.shadow.camera.far = a
                    }
                },
                shadowCameraVisible: {
                    set: function() {}
                },
                shadowBias: {
                    set: function(a) {
                        this.shadow.bias = a
                    }
                },
                shadowDarkness: {
                    set: function() {}
                },
                shadowMapWidth: {
                    set: function(a) {
                        this.shadow.mapSize.width = a
                    }
                },
                shadowMapHeight: {
                    set: function(a) {
                        this.shadow.mapSize.height = a
                    }
                }
            }),
            Object.defineProperties(na.prototype, {
                length: {
                    get: function() {
                        return this.array.length
                    }
                }
            }),
            Object.assign(Ba.prototype, {
                addIndex: function(a) {
                    this.setIndex(a)
                },
                addDrawCall: function(a, b, c) {
                    this.addGroup(a, b)
                },
                clearDrawCalls: function() {
                    this.clearGroups()
                },
                computeTangents: function() {},
                computeOffsets: function() {}
            }),
            Object.defineProperties(Ba.prototype, {
                drawcalls: {
                    get: function() {
                        return this.groups
                    }
                },
                offsets: {
                    get: function() {
                        return this.groups
                    }
                }
            }),
            Object.defineProperties(Kd.prototype, {
                dynamic: {
                    set: function() {}
                },
                onUpdate: {
                    value: function() {
                        return this
                    }
                }
            }),
            Object.defineProperties(Y.prototype, {
                wrapAround: {
                    get: function() {},
                    set: function() {}
                },
                wrapRGB: {
                    get: function() {
                        return new T
                    }
                }
            }),
            Object.defineProperties(pc.prototype, {
                metal: {
                    get: function() {
                        return !1
                    },
                    set: function() {}
                }
            }),
            Object.defineProperties(Z.prototype, {
                derivatives: {
                    get: function() {
                        return this.extensions.derivatives
                    },
                    set: function(a) {
                        this.extensions.derivatives = a
                    }
                }
            }),
            Object.assign(hb.prototype, {
                supportsFloatTextures: function() {
                    return this.extensions.get("OES_texture_float")
                },
                supportsHalfFloatTextures: function() {
                    return this.extensions.get("OES_texture_half_float")
                },
                supportsStandardDerivatives: function() {
                    return this.extensions.get("OES_standard_derivatives")
                },
                supportsCompressedTextureS3TC: function() {
                    return this.extensions.get("WEBGL_compressed_texture_s3tc")
                },
                supportsCompressedTexturePVRTC: function() {
                    return this.extensions.get("WEBGL_compressed_texture_pvrtc")
                },
                supportsBlendMinMax: function() {
                    return this.extensions.get("EXT_blend_minmax")
                },
                supportsVertexTextures: function() {
                    return this.capabilities.vertexTextures
                },
                supportsInstancedArrays: function() {
                    return this.extensions.get("ANGLE_instanced_arrays")
                },
                enableScissorTest: function(a) {
                    this.setScissorTest(a)
                },
                initMaterial: function() {},
                addPrePlugin: function() {},
                addPostPlugin: function() {},
                updateShadowMap: function() {}
            }),
            Object.defineProperties(hb.prototype, {
                shadowMapEnabled: {
                    get: function() {
                        return this.shadowMap.enabled
                    },
                    set: function(a) {
                        this.shadowMap.enabled = a
                    }
                },
                shadowMapType: {
                    get: function() {
                        return this.shadowMap.type
                    },
                    set: function(a) {
                        this.shadowMap.type = a
                    }
                },
                shadowMapCullFace: {
                    get: function() {
                        return this.shadowMap.cullFace
                    },
                    set: function(a) {
                        this.shadowMap.cullFace = a
                    }
                }
            }),
            Object.defineProperties(ea.prototype, {
                cullFace: {
                    get: function() {
                        return this.renderReverseSided ? Xe : We
                    },
                    set: function(a) {
                        var b = a !== We;
                        this.renderReverseSided = b
                    }
                }
            }),
            Object.defineProperties(f.prototype, {
                wrapS: {
                    get: function() {
                        return this.texture.wrapS
                    },
                    set: function(a) {
                        this.texture.wrapS = a
                    }
                },
                wrapT: {
                    get: function() {
                        return this.texture.wrapT
                    },
                    set: function(a) {
                        this.texture.wrapT = a
                    }
                },
                magFilter: {
                    get: function() {
                        return this.texture.magFilter
                    },
                    set: function(a) {
                        this.texture.magFilter = a
                    }
                },
                minFilter: {
                    get: function() {
                        return this.texture.minFilter
                    },
                    set: function(a) {
                        this.texture.minFilter = a
                    }
                },
                anisotropy: {
                    get: function() {
                        return this.texture.anisotropy
                    },
                    set: function(a) {
                        this.texture.anisotropy = a
                    }
                },
                offset: {
                    get: function() {
                        return this.texture.offset
                    },
                    set: function(a) {
                        this.texture.offset = a
                    }
                },
                repeat: {
                    get: function() {
                        return this.texture.repeat
                    },
                    set: function(a) {
                        this.texture.repeat = a
                    }
                },
                format: {
                    get: function() {
                        return this.texture.format
                    },
                    set: function(a) {
                        this.texture.format = a
                    }
                },
                type: {
                    get: function() {
                        return this.texture.type
                    },
                    set: function(a) {
                        this.texture.type = a
                    }
                },
                generateMipmaps: {
                    get: function() {
                        return this.texture.generateMipmaps
                    },
                    set: function(a) {
                        this.texture.generateMipmaps = a
                    }
                }
            }),
            Cd.prototype.load = function(a) {
                var b = this;
                return (new xd).load(a, function(a) {
                    b.setBuffer(a)
                }),
                this
            }
            ,
            Ed.prototype.getData = function() {
                return this.getFrequencyData()
            }
            ;
            var Eh = {
                merge: function(a, b, c) {
                    var d;
                    b.isMesh && (b.matrixAutoUpdate && b.updateMatrix(),
                    d = b.matrix,
                    b = b.geometry),
                    a.merge(b, d, c)
                },
                center: function(a) {
                    return a.center()
                }
            }
              , Fh = {
                crossOrigin: void 0,
                loadTexture: function(a, b, c, d) {
                    var e = new Ac;
                    e.setCrossOrigin(this.crossOrigin);
                    var f = e.load(a, c, void 0, d);
                    return b && (f.mapping = b),
                    f
                },
                loadTextureCube: function(a, b, c, d) {
                    var e = new zc;
                    e.setCrossOrigin(this.crossOrigin);
                    var f = e.load(a, c, void 0, d);
                    return b && (f.mapping = b),
                    f
                },
                loadCompressedTexture: function() {},
                loadCompressedTextureCube: function() {}
            };
            a.WebGLRenderTargetCube = g,
            a.WebGLRenderTarget = f,
            a.WebGLRenderer = hb,
            a.ShaderLib = ih,
            a.UniformsLib = hh,
            a.UniformsUtils = eh,
            a.ShaderChunk = fh,
            a.FogExp2 = ib,
            a.Fog = jb,
            a.Scene = kb,
            a.LensFlare = lb,
            a.Sprite = nb,
            a.LOD = ob,
            a.SkinnedMesh = rb,
            a.Skeleton = pb,
            a.Bone = qb,
            a.Mesh = Ca,
            a.LineSegments = ub,
            a.Line = tb,
            a.Points = wb,
            a.Group = xb,
            a.VideoTexture = yb,
            a.DataTexture = U,
            a.CompressedTexture = zb,
            a.CubeTexture = k,
            a.CanvasTexture = Ab,
            a.DepthTexture = Bb,
            a.Texture = d,
            a.CompressedTextureLoader = wc,
            a.DataTextureLoader = xc,
            a.CubeTextureLoader = zc,
            a.TextureLoader = Ac,
            a.ObjectLoader = ad,
            a.MaterialLoader = Yc,
            a.BufferGeometryLoader = Zc,
            a.DefaultLoadingManager = rh,
            a.LoadingManager = uc,
            a.JSONLoader = _c,
            a.ImageLoader = yc,
            a.FontLoader = wd,
            a.FileLoader = vc,
            a.Loader = $c,
            a.Cache = qh,
            a.AudioLoader = xd,
            a.SpotLightShadow = Ec,
            a.SpotLight = Fc,
            a.PointLight = Gc,
            a.RectAreaLight = yd,
            a.HemisphereLight = Cc,
            a.DirectionalLightShadow = Hc,
            a.DirectionalLight = Ic,
            a.AmbientLight = Jc,
            a.LightShadow = Dc,
            a.Light = Bc,
            a.StereoCamera = zd,
            a.PerspectiveCamera = Ia,
            a.OrthographicCamera = Ja,
            a.CubeCamera = Ad,
            a.Camera = Ha,
            a.AudioListener = Bd,
            a.PositionalAudio = Dd,
            a.AudioContext = wh,
            a.AudioAnalyser = Ed,
            a.Audio = Cd,
            a.VectorKeyframeTrack = Pc,
            a.StringKeyframeTrack = Tc,
            a.QuaternionKeyframeTrack = Rc,
            a.NumberKeyframeTrack = Sc,
            a.ColorKeyframeTrack = Vc,
            a.BooleanKeyframeTrack = Uc,
            a.PropertyMixer = Fd,
            a.PropertyBinding = Gd,
            a.KeyframeTrack = Wc,
            a.AnimationUtils = sh,
            a.AnimationObjectGroup = Hd,
            a.AnimationMixer = Jd,
            a.AnimationClip = Xc,
            a.Uniform = Kd,
            a.InstancedBufferGeometry = Ld,
            a.BufferGeometry = Ba,
            a.GeometryIdCount = za,
            a.Geometry = Aa,
            a.InterleavedBufferAttribute = Md,
            a.InstancedInterleavedBuffer = Od,
            a.InterleavedBuffer = Nd,
            a.InstancedBufferAttribute = Pd,
            a.Face3 = la,
            a.Object3D = ia,
            a.Raycaster = Qd,
            a.Layers = ha,
            a.EventDispatcher = b,
            a.Clock = Td,
            a.QuaternionLinearInterpolant = Qc,
            a.LinearInterpolant = Mc,
            a.DiscreteInterpolant = Nc,
            a.CubicInterpolant = Lc,
            a.Interpolant = Kc,
            a.Triangle = ka,
            a.Math = Zg,
            a.Spherical = Ud,
            a.Cylindrical = Vd,
            a.Plane = ca,
            a.Frustum = da,
            a.Sphere = aa,
            a.Ray = fa,
            a.Matrix4 = j,
            a.Matrix3 = ba,
            a.Box3 = _,
            a.Box2 = V,
            a.Line3 = ja,
            a.Euler = ga,
            a.Vector4 = e,
            a.Vector3 = i,
            a.Vector2 = c,
            a.Quaternion = h,
            a.Color = T,
            a.MorphBlendMesh = Wd,
            a.ImmediateRenderObject = Xd,
            a.VertexNormalsHelper = Yd,
            a.SpotLightHelper = Zd,
            a.SkeletonHelper = $d,
            a.PointLightHelper = _d,
            a.RectAreaLightHelper = ae,
            a.HemisphereLightHelper = be,
            a.GridHelper = ce,
            a.PolarGridHelper = de,
            a.FaceNormalsHelper = ee,
            a.DirectionalLightHelper = fe,
            a.CameraHelper = ge,
            a.BoxHelper = he,
            a.ArrowHelper = ie,
            a.AxisHelper = je,
            a.CatmullRomCurve3 = le,
            a.CubicBezierCurve3 = me,
            a.QuadraticBezierCurve3 = ne,
            a.LineCurve3 = oe,
            a.ArcCurve = pe,
            a.EllipseCurve = od,
            a.SplineCurve = pd,
            a.CubicBezierCurve = qd,
            a.QuadraticBezierCurve = rd,
            a.LineCurve = md,
            a.Shape = td,
            a.Path = sd,
            a.ShapePath = ud,
            a.Font = vd,
            a.CurvePath = nd,
            a.Curve = ld,
            a.ShapeUtils = nh,
            a.SceneUtils = Dh,
            a.WireframeGeometry = Cb,
            a.ParametricGeometry = Db,
            a.ParametricBufferGeometry = Eb,
            a.TetrahedronGeometry = Hb,
            a.TetrahedronBufferGeometry = Ib,
            a.OctahedronGeometry = Jb,
            a.OctahedronBufferGeometry = Kb,
            a.IcosahedronGeometry = Lb,
            a.IcosahedronBufferGeometry = Mb,
            a.DodecahedronGeometry = Nb,
            a.DodecahedronBufferGeometry = Ob,
            a.PolyhedronGeometry = Fb,
            a.PolyhedronBufferGeometry = Gb,
            a.TubeGeometry = Pb,
            a.TubeBufferGeometry = Qb,
            a.TorusKnotGeometry = Rb,
            a.TorusKnotBufferGeometry = Sb,
            a.TorusGeometry = Tb,
            a.TorusBufferGeometry = Ub,
            a.TextGeometry = Wb,
            a.SphereGeometry = Xb,
            a.SphereBufferGeometry = Yb,
            a.RingGeometry = Zb,
            a.RingBufferGeometry = $b,
            a.PlaneGeometry = Fa,
            a.PlaneBufferGeometry = Ga,
            a.LatheGeometry = _b,
            a.LatheBufferGeometry = ac,
            a.ShapeGeometry = bc,
            a.ShapeBufferGeometry = cc,
            a.ExtrudeGeometry = Vb,
            a.EdgesGeometry = dc,
            a.ConeGeometry = gc,
            a.ConeBufferGeometry = hc,
            a.CylinderGeometry = ec,
            a.CylinderBufferGeometry = fc,
            a.CircleGeometry = ic,
            a.CircleBufferGeometry = jc,
            a.BoxGeometry = Da,
            a.BoxBufferGeometry = Ea,
            a.ShadowMaterial = kc,
            a.SpriteMaterial = mb,
            a.RawShaderMaterial = lc,
            a.ShaderMaterial = Z,
            a.PointsMaterial = vb,
            a.MultiMaterial = mc,
            a.MeshPhysicalMaterial = oc,
            a.MeshStandardMaterial = nc,
            a.MeshPhongMaterial = pc,
            a.MeshToonMaterial = qc;
            a.MeshNormalMaterial = rc,
            a.MeshLambertMaterial = sc,
            a.MeshDepthMaterial = $,
            a.MeshBasicMaterial = ma,
            a.LineDashedMaterial = tc,
            a.LineBasicMaterial = sb,
            a.Material = Y,
            a.Float64BufferAttribute = wa,
            a.Float32BufferAttribute = va,
            a.Uint32BufferAttribute = ua,
            a.Int32BufferAttribute = ta,
            a.Uint16BufferAttribute = sa,
            a.Int16BufferAttribute = ra,
            a.Uint8ClampedBufferAttribute = qa,
            a.Uint8BufferAttribute = pa,
            a.Int8BufferAttribute = oa,
            a.BufferAttribute = na,
            a.REVISION = Te,
            a.MOUSE = Ue,
            a.CullFaceNone = Ve,
            a.CullFaceBack = We,
            a.CullFaceFront = Xe,
            a.CullFaceFrontBack = 3,
            a.FrontFaceDirectionCW = Ye,
            a.FrontFaceDirectionCCW = 1,
            a.BasicShadowMap = 0,
            a.PCFShadowMap = Ze,
            a.PCFSoftShadowMap = $e,
            a.FrontSide = _e,
            a.BackSide = af,
            a.DoubleSide = bf,
            a.FlatShading = cf,
            a.SmoothShading = df,
            a.NoColors = ef,
            a.FaceColors = ff,
            a.VertexColors = gf,
            a.NoBlending = hf,
            a.NormalBlending = jf,
            a.AdditiveBlending = kf,
            a.SubtractiveBlending = lf,
            a.MultiplyBlending = mf,
            a.CustomBlending = nf,
            a.AddEquation = of,
            a.SubtractEquation = pf,
            a.ReverseSubtractEquation = qf,
            a.MinEquation = rf,
            a.MaxEquation = sf,
            a.ZeroFactor = tf,
            a.OneFactor = uf,
            a.SrcColorFactor = vf,
            a.OneMinusSrcColorFactor = wf,
            a.SrcAlphaFactor = xf,
            a.OneMinusSrcAlphaFactor = yf,
            a.DstAlphaFactor = zf,
            a.OneMinusDstAlphaFactor = Af,
            a.DstColorFactor = Bf,
            a.OneMinusDstColorFactor = Cf,
            a.SrcAlphaSaturateFactor = Df,
            a.NeverDepth = Ef,
            a.AlwaysDepth = Ff,
            a.LessDepth = Gf,
            a.LessEqualDepth = Hf,
            a.EqualDepth = If,
            a.GreaterEqualDepth = Jf,
            a.GreaterDepth = Kf,
            a.NotEqualDepth = Lf,
            a.MultiplyOperation = Mf,
            a.MixOperation = Nf,
            a.AddOperation = Of,
            a.NoToneMapping = Pf,
            a.LinearToneMapping = Qf,
            a.ReinhardToneMapping = Rf,
            a.Uncharted2ToneMapping = Sf,
            a.CineonToneMapping = Tf,
            a.UVMapping = 300,
            a.CubeReflectionMapping = Uf,
            a.CubeRefractionMapping = Vf,
            a.EquirectangularReflectionMapping = Wf,
            a.EquirectangularRefractionMapping = Xf,
            a.SphericalReflectionMapping = Yf,
            a.CubeUVReflectionMapping = Zf,
            a.CubeUVRefractionMapping = $f,
            a.RepeatWrapping = _f,
            a.ClampToEdgeWrapping = ag,
            a.MirroredRepeatWrapping = bg,
            a.NearestFilter = cg,
            a.NearestMipMapNearestFilter = dg,
            a.NearestMipMapLinearFilter = eg,
            a.LinearFilter = fg,
            a.LinearMipMapNearestFilter = gg,
            a.LinearMipMapLinearFilter = hg,
            a.UnsignedByteType = ig,
            a.ByteType = jg,
            a.ShortType = kg,
            a.UnsignedShortType = lg,
            a.IntType = mg,
            a.UnsignedIntType = ng,
            a.FloatType = og,
            a.HalfFloatType = pg,
            a.UnsignedShort4444Type = qg,
            a.UnsignedShort5551Type = rg,
            a.UnsignedShort565Type = sg,
            a.UnsignedInt248Type = tg,
            a.AlphaFormat = ug,
            a.RGBFormat = vg,
            a.RGBAFormat = wg,
            a.LuminanceFormat = xg,
            a.LuminanceAlphaFormat = yg,
            a.RGBEFormat = zg,
            a.DepthFormat = Ag,
            a.DepthStencilFormat = Bg,
            a.RGB_S3TC_DXT1_Format = Cg,
            a.RGBA_S3TC_DXT1_Format = Dg,
            a.RGBA_S3TC_DXT3_Format = Eg,
            a.RGBA_S3TC_DXT5_Format = Fg,
            a.RGB_PVRTC_4BPPV1_Format = Gg,
            a.RGB_PVRTC_2BPPV1_Format = Hg,
            a.RGBA_PVRTC_4BPPV1_Format = Ig,
            a.RGBA_PVRTC_2BPPV1_Format = Jg,
            a.RGB_ETC1_Format = Kg,
            a.LoopOnce = 2200,
            a.LoopRepeat = Lg,
            a.LoopPingPong = 2202,
            a.InterpolateDiscrete = 2300,
            a.InterpolateLinear = 2301,
            a.InterpolateSmooth = 2302,
            a.ZeroCurvatureEnding = Mg,
            a.ZeroSlopeEnding = 2401,
            a.WrapAroundEnding = 2402,
            a.TrianglesDrawMode = Ng,
            a.TriangleStripDrawMode = Og,
            a.TriangleFanDrawMode = Pg,
            a.LinearEncoding = Qg,
            a.sRGBEncoding = Rg,
            a.GammaEncoding = Sg,
            a.RGBEEncoding = Tg,
            a.LogLuvEncoding = 3003,
            a.RGBM7Encoding = Ug,
            a.RGBM16Encoding = Vg,
            a.RGBDEncoding = Wg,
            a.BasicDepthPacking = Xg,
            a.RGBADepthPacking = Yg,
            a.CubeGeometry = Da,
            a.Face4 = qe,
            a.LineStrip = 0,
            a.LinePieces = 1,
            a.MeshFaceMaterial = re,
            a.PointCloud = se,
            a.Particle = te,
            a.ParticleSystem = ue,
            a.PointCloudMaterial = ve,
            a.ParticleBasicMaterial = we,
            a.ParticleSystemMaterial = xe,
            a.Vertex = ye,
            a.DynamicBufferAttribute = ze,
            a.Int8Attribute = Ae,
            a.Uint8Attribute = Be,
            a.Uint8ClampedAttribute = Ce,
            a.Int16Attribute = De,
            a.Uint16Attribute = Ee,
            a.Int32Attribute = Fe,
            a.Uint32Attribute = Ge,
            a.Float32Attribute = He,
            a.Float64Attribute = Ie,
            a.ClosedSplineCurve3 = Je,
            a.SplineCurve3 = Ke,
            a.Spline = Le,
            a.BoundingBoxHelper = Me,
            a.EdgesHelper = Ne,
            a.WireframeHelper = Oe,
            a.XHRLoader = Pe,
            a.BinaryTextureLoader = Qe,
            a.GeometryUtils = Eh,
            a.ImageUtils = Fh,
            a.Projector = Re,
            a.CanvasRenderer = Se,
            Object.defineProperty(a, "__esModule", {
                value: !0
            })
        })
    }
    , {}],
    11: [function(a, b, c) {
        (function(d) {
            (function() {
                !function(d, e) {
                    "object" == typeof c && "object" == typeof b ? b.exports = e(function() {
                        try {
                            return a("fs")
                        } catch (a) {}
                    }(), a("path")) : "function" == typeof define && define.amd ? define(["fs", "path"], e) : "object" == typeof c ? c.Twig = e(function() {
                        try {
                            return a("fs")
                        } catch (a) {}
                    }(), a("path")) : d.Twig = e(d.fs, d.path)
                }(this, function(b, c) {
                    return function(a) {
                        function b(d) {
                            if (c[d])
                                return c[d].exports;
                            var e = c[d] = {
                                exports: {},
                                id: d,
                                loaded: !1
                            };
                            return a[d].call(e.exports, e, e.exports, b),
                            e.loaded = !0,
                            e.exports
                        }
                        var c = {};
                        return b.m = a,
                        b.c = c,
                        b.p = "",
                        b(0)
                    }([function(a, b, c) {
                        var d = {
                            VERSION: "0.10.2"
                        };
                        c(1)(d),
                        c(2)(d),
                        c(3)(d),
                        c(5)(d),
                        c(6)(d),
                        c(7)(d),
                        c(17)(d),
                        c(18)(d),
                        c(21)(d),
                        c(22)(d),
                        c(23)(d),
                        c(24)(d),
                        c(25)(d),
                        c(26)(d),
                        a.exports = d.exports
                    }
                    , function(a, b) {
                        a.exports = function(a) {
                            "use strict";
                            function b(a, b) {
                                var c = Object.prototype.toString.call(b).slice(8, -1);
                                return void 0 !== b && null !== b && c === a
                            }
                            return a.trace = !1,
                            a.debug = !1,
                            a.cache = !0,
                            a.placeholders = {
                                parent: "{{|PARENT|}}"
                            },
                            a.indexOf = function(a, b) {
                                if (Array.prototype.hasOwnProperty("indexOf"))
                                    return a.indexOf(b);
                                if (void 0 === a || null === a)
                                    throw new TypeError;
                                var c = Object(a)
                                  , d = c.length >>> 0;
                                if (0 === d)
                                    return -1;
                                var e = 0;
                                if (arguments.length > 0 && (e = Number(arguments[1]),
                                e !== e ? e = 0 : 0 !== e && e !== 1 / 0 && e !== -1 / 0 && (e = (e > 0 || -1) * Math.floor(Math.abs(e)))),
                                e >= d)
                                    return -1;
                                for (var f = e >= 0 ? e : Math.max(d - Math.abs(e), 0); f < d; f++)
                                    if (f in c && c[f] === b)
                                        return f;
                                return a == b ? 0 : -1
                            }
                            ,
                            a.forEach = function(a, b, c) {
                                if (Array.prototype.forEach)
                                    return a.forEach(b, c);
                                var d, e;
                                if (null == a)
                                    throw new TypeError(" this is null or not defined");
                                var f = Object(a)
                                  , g = f.length >>> 0;
                                if ("[object Function]" != {}.toString.call(b))
                                    throw new TypeError(b + " is not a function");
                                for (c && (d = c),
                                e = 0; e < g; ) {
                                    var h;
                                    e in f && (h = f[e],
                                    b.call(d, h, e, f)),
                                    e++
                                }
                            }
                            ,
                            a.merge = function(b, c, d) {
                                return a.forEach(Object.keys(c), function(a) {
                                    (!d || a in b) && (b[a] = c[a])
                                }),
                                b
                            }
                            ,
                            a.Error = function(a) {
                                this.message = a,
                                this.name = "TwigException",
                                this.type = "TwigException"
                            }
                            ,
                            a.Error.prototype.toString = function() {
                                return this.name + ": " + this.message
                            }
                            ,
                            a.log = {
                                trace: function() {
                                    a.trace && console
                                },
                                debug: function() {
                                    a.debug && console
                                }
                            },
                            "undefined" != typeof console ? void 0 !== console.error ? a.log.error = function() {}
                            : void 0 !== console.log && (a.log.error = function() {}
                            ) : a.log.error = function() {}
                            ,
                            a.ChildContext = function(a) {
                                var b = function() {};
                                return b.prototype = a,
                                new b
                            }
                            ,
                            a.token = {},
                            a.token.type = {
                                output: "output",
                                logic: "logic",
                                comment: "comment",
                                raw: "raw",
                                output_whitespace_pre: "output_whitespace_pre",
                                output_whitespace_post: "output_whitespace_post",
                                output_whitespace_both: "output_whitespace_both",
                                logic_whitespace_pre: "logic_whitespace_pre",
                                logic_whitespace_post: "logic_whitespace_post",
                                logic_whitespace_both: "logic_whitespace_both"
                            },
                            a.token.definitions = [{
                                type: a.token.type.raw,
                                open: "{% raw %}",
                                close: "{% endraw %}"
                            }, {
                                type: a.token.type.raw,
                                open: "{% verbatim %}",
                                close: "{% endverbatim %}"
                            }, {
                                type: a.token.type.output_whitespace_pre,
                                open: "{{-",
                                close: "}}"
                            }, {
                                type: a.token.type.output_whitespace_post,
                                open: "{{",
                                close: "-}}"
                            }, {
                                type: a.token.type.output_whitespace_both,
                                open: "{{-",
                                close: "-}}"
                            }, {
                                type: a.token.type.logic_whitespace_pre,
                                open: "{%-",
                                close: "%}"
                            }, {
                                type: a.token.type.logic_whitespace_post,
                                open: "{%",
                                close: "-%}"
                            }, {
                                type: a.token.type.logic_whitespace_both,
                                open: "{%-",
                                close: "-%}"
                            }, {
                                type: a.token.type.output,
                                open: "{{",
                                close: "}}"
                            }, {
                                type: a.token.type.logic,
                                open: "{%",
                                close: "%}"
                            }, {
                                type: a.token.type.comment,
                                open: "{#",
                                close: "#}"
                            }],
                            a.token.strings = ['"', "'"],
                            a.token.findStart = function(b) {
                                var c, d, e, f, g = {
                                    position: null,
                                    close_position: null,
                                    def: null
                                };
                                for (c = 0; c < a.token.definitions.length; c++)
                                    d = a.token.definitions[c],
                                    e = b.indexOf(d.open),
                                    f = b.indexOf(d.close),
                                    a.log.trace("Twig.token.findStart: ", "Searching for ", d.open, " found at ", e),
                                    e >= 0 && d.open.length !== d.close.length && f < 0 || (e >= 0 && (null === g.position || e < g.position) ? (g.position = e,
                                    g.def = d,
                                    g.close_position = f) : e >= 0 && null !== g.position && e === g.position && (d.open.length > g.def.open.length ? (g.position = e,
                                    g.def = d,
                                    g.close_position = f) : d.open.length === g.def.open.length && (d.close.length,
                                    g.def.close.length,
                                    f >= 0 && f < g.close_position && (g.position = e,
                                    g.def = d,
                                    g.close_position = f))));
                                return delete g.close_position,
                                g
                            }
                            ,
                            a.token.findEnd = function(b, c, d) {
                                for (var e, f, g = null, h = !1, i = 0, j = null, k = null, l = null, m = null, n = null, o = null; !h; ) {
                                    if (j = null,
                                    k = null,
                                    !((l = b.indexOf(c.close, i)) >= 0))
                                        throw new a.Error("Unable to find closing bracket '" + c.close + "' opened near template position " + d);
                                    if (g = l,
                                    h = !0,
                                    c.type === a.token.type.comment)
                                        break;
                                    if (c.type === a.token.type.raw)
                                        break;
                                    for (f = a.token.strings.length,
                                    e = 0; e < f; e += 1)
                                        (n = b.indexOf(a.token.strings[e], i)) > 0 && n < l && (null === j || n < j) && (j = n,
                                        k = a.token.strings[e]);
                                    if (null !== j)
                                        for (m = j + 1,
                                        g = null,
                                        h = !1; ; ) {
                                            if ((o = b.indexOf(k, m)) < 0)
                                                throw "Unclosed string in template";
                                            if ("\\" !== b.substr(o - 1, 1)) {
                                                i = o + 1;
                                                break
                                            }
                                            m = o + 1
                                        }
                                }
                                return g
                            }
                            ,
                            a.tokenize = function(b) {
                                for (var c = [], d = 0, e = null, f = null; b.length > 0; )
                                    if (e = a.token.findStart(b),
                                    a.log.trace("Twig.tokenize: ", "Found token: ", e),
                                    null !== e.position) {
                                        if (e.position > 0 && c.push({
                                            type: a.token.type.raw,
                                            value: b.substring(0, e.position)
                                        }),
                                        b = b.substr(e.position + e.def.open.length),
                                        d += e.position + e.def.open.length,
                                        f = a.token.findEnd(b, e.def, d),
                                        a.log.trace("Twig.tokenize: ", "Token ends at ", f),
                                        c.push({
                                            type: e.def.type,
                                            value: b.substring(0, f).trim()
                                        }),
                                        "\n" === b.substr(f + e.def.close.length, 1))
                                            switch (e.def.type) {
                                            case "logic_whitespace_pre":
                                            case "logic_whitespace_post":
                                            case "logic_whitespace_both":
                                            case "logic":
                                                f += 1
                                            }
                                        b = b.substr(f + e.def.close.length),
                                        d += f + e.def.close.length
                                    } else
                                        c.push({
                                            type: a.token.type.raw,
                                            value: b
                                        }),
                                        b = "";
                                return c
                            }
                            ,
                            a.compile = function(b) {
                                try {
                                    for (var c = [], d = [], e = [], f = null, g = null, h = null, i = null, j = null, k = null, l = null, m = null, n = null, o = null, p = null, q = null, r = function(b) {
                                        a.expression.compile.apply(this, [b]),
                                        d.length > 0 ? e.push(b) : c.push(b)
                                    }, s = function(b) {
                                        if (g = a.logic.compile.apply(this, [b]),
                                        o = g.type,
                                        p = a.logic.handler[o].open,
                                        q = a.logic.handler[o].next,
                                        a.log.trace("Twig.compile: ", "Compiled logic token to ", g, " next is: ", q, " open is : ", p),
                                        void 0 !== p && !p) {
                                            if (i = d.pop(),
                                            l = a.logic.handler[i.type],
                                            a.indexOf(l.next, o) < 0)
                                                throw new Error(o + " not expected after a " + i.type);
                                            i.output = i.output || [],
                                            i.output = i.output.concat(e),
                                            e = [],
                                            n = {
                                                type: a.token.type.logic,
                                                token: i
                                            },
                                            d.length > 0 ? e.push(n) : c.push(n)
                                        }
                                        void 0 !== q && q.length > 0 ? (a.log.trace("Twig.compile: ", "Pushing ", g, " to logic stack."),
                                        d.length > 0 && (i = d.pop(),
                                        i.output = i.output || [],
                                        i.output = i.output.concat(e),
                                        d.push(i),
                                        e = []),
                                        d.push(g)) : void 0 !== p && p && (n = {
                                            type: a.token.type.logic,
                                            token: g
                                        },
                                        d.length > 0 ? e.push(n) : c.push(n))
                                    }; b.length > 0; ) {
                                        switch (f = b.shift(),
                                        j = c[c.length - 1],
                                        k = e[e.length - 1],
                                        m = b[0],
                                        a.log.trace("Compiling token ", f),
                                        f.type) {
                                        case a.token.type.raw:
                                            d.length > 0 ? e.push(f) : c.push(f);
                                            break;
                                        case a.token.type.logic:
                                            s.call(this, f);
                                            break;
                                        case a.token.type.comment:
                                            break;
                                        case a.token.type.output:
                                            r.call(this, f);
                                            break;
                                        case a.token.type.logic_whitespace_pre:
                                        case a.token.type.logic_whitespace_post:
                                        case a.token.type.logic_whitespace_both:
                                        case a.token.type.output_whitespace_pre:
                                        case a.token.type.output_whitespace_post:
                                        case a.token.type.output_whitespace_both:
                                            switch (f.type !== a.token.type.output_whitespace_post && f.type !== a.token.type.logic_whitespace_post && (j && j.type === a.token.type.raw && (c.pop(),
                                            null === j.value.match(/^\s*$/) && (j.value = j.value.trim(),
                                            c.push(j))),
                                            k && k.type === a.token.type.raw && (e.pop(),
                                            null === k.value.match(/^\s*$/) && (k.value = k.value.trim(),
                                            e.push(k)))),
                                            f.type) {
                                            case a.token.type.output_whitespace_pre:
                                            case a.token.type.output_whitespace_post:
                                            case a.token.type.output_whitespace_both:
                                                r.call(this, f);
                                                break;
                                            case a.token.type.logic_whitespace_pre:
                                            case a.token.type.logic_whitespace_post:
                                            case a.token.type.logic_whitespace_both:
                                                s.call(this, f)
                                            }
                                            f.type !== a.token.type.output_whitespace_pre && f.type !== a.token.type.logic_whitespace_pre && m && m.type === a.token.type.raw && (b.shift(),
                                            null === m.value.match(/^\s*$/) && (m.value = m.value.trim(),
                                            b.unshift(m)))
                                        }
                                        a.log.trace("Twig.compile: ", " Output: ", c, " Logic Stack: ", d, " Pending Output: ", e)
                                    }
                                    if (d.length > 0)
                                        throw h = d.pop(),
                                        new Error("Unable to find an end tag for " + h.type + ", expecting one of " + h.next);
                                    return c
                                } catch (b) {
                                    if (this.options.rethrow)
                                        throw b;
                                    a.log.error("Error compiling twig template " + this.id + ": "),
                                    b.stack ? a.log.error(b.stack) : a.log.error(b.toString())
                                }
                            }
                            ,
                            a.parse = function(b, c) {
                                try {
                                    var d = []
                                      , e = !0
                                      , f = this;
                                    return a.forEach(b, function(b) {
                                        switch (a.log.debug("Twig.parse: ", "Parsing token: ", b),
                                        b.type) {
                                        case a.token.type.raw:
                                            d.push(a.filters.raw(b.value));
                                            break;
                                        case a.token.type.logic:
                                            var g = b.token
                                              , h = a.logic.parse.apply(f, [g, c, e]);
                                            void 0 !== h.chain && (e = h.chain),
                                            void 0 !== h.context && (c = h.context),
                                            void 0 !== h.output && d.push(h.output);
                                            break;
                                        case a.token.type.comment:
                                            break;
                                        case a.token.type.output_whitespace_pre:
                                        case a.token.type.output_whitespace_post:
                                        case a.token.type.output_whitespace_both:
                                        case a.token.type.output:
                                            a.log.debug("Twig.parse: ", "Output token: ", b.stack),
                                            d.push(a.expression.parse.apply(f, [b.stack, c]))
                                        }
                                    }),
                                    a.output.apply(this, [d])
                                } catch (b) {
                                    if (this.options.rethrow)
                                        throw b;
                                    if (a.log.error("Error parsing twig template " + this.id + ": "),
                                    b.stack ? a.log.error(b.stack) : a.log.error(b.toString()),
                                    a.debug)
                                        return b.toString()
                                }
                            }
                            ,
                            a.prepare = function(b) {
                                var c, d;
                                return a.log.debug("Twig.prepare: ", "Tokenizing ", b),
                                d = a.tokenize.apply(this, [b]),
                                a.log.debug("Twig.prepare: ", "Compiling ", d),
                                c = a.compile.apply(this, [d]),
                                a.log.debug("Twig.prepare: ", "Compiled ", c),
                                c
                            }
                            ,
                            a.output = function(b) {
                                if (!this.options.autoescape)
                                    return b.join("");
                                var c = "html";
                                "string" == typeof this.options.autoescape && (c = this.options.autoescape);
                                var d = [];
                                return a.forEach(b, function(b) {
                                    b && !0 !== b.twig_markup && b.twig_markup != c && (b = a.filters.escape(b, [c])),
                                    d.push(b)
                                }),
                                a.Markup(d.join(""))
                            }
                            ,
                            a.Templates = {
                                loaders: {},
                                parsers: {},
                                registry: {}
                            },
                            a.validateId = function(b) {
                                if ("prototype" === b)
                                    throw new a.Error(b + " is not a valid twig identifier");
                                if (a.cache && a.Templates.registry.hasOwnProperty(b))
                                    throw new a.Error("There is already a template with the ID " + b);
                                return !0
                            }
                            ,
                            a.Templates.registerLoader = function(b, c, d) {
                                if ("function" != typeof c)
                                    throw new a.Error("Unable to add loader for " + b + ": Invalid function reference given.");
                                d && (c = c.bind(d)),
                                this.loaders[b] = c
                            }
                            ,
                            a.Templates.unRegisterLoader = function(a) {
                                this.isRegisteredLoader(a) && delete this.loaders[a]
                            }
                            ,
                            a.Templates.isRegisteredLoader = function(a) {
                                return this.loaders.hasOwnProperty(a)
                            }
                            ,
                            a.Templates.registerParser = function(b, c, d) {
                                if ("function" != typeof c)
                                    throw new a.Error("Unable to add parser for " + b + ": Invalid function regerence given.");
                                d && (c = c.bind(d)),
                                this.parsers[b] = c
                            }
                            ,
                            a.Templates.unRegisterParser = function(a) {
                                this.isRegisteredParser(a) && delete this.parsers[a]
                            }
                            ,
                            a.Templates.isRegisteredParser = function(a) {
                                return this.parsers.hasOwnProperty(a)
                            }
                            ,
                            a.Templates.save = function(b) {
                                if (void 0 === b.id)
                                    throw new a.Error("Unable to save template with no id");
                                a.Templates.registry[b.id] = b
                            }
                            ,
                            a.Templates.load = function(b) {
                                return a.Templates.registry.hasOwnProperty(b) ? a.Templates.registry[b] : null
                            }
                            ,
                            a.Templates.loadRemote = function(b, c, d, e) {
                                var f;
                                return void 0 === c.async && (c.async = !0),
                                void 0 === c.id && (c.id = b),
                                a.cache && a.Templates.registry.hasOwnProperty(c.id) ? ("function" == typeof d && d(a.Templates.registry[c.id]),
                                a.Templates.registry[c.id]) : (c.parser = c.parser || "twig",
                                f = this.loaders[c.method] || this.loaders.fs,
                                f.apply(this, arguments))
                            }
                            ,
                            a.Template = function(c) {
                                var d = c.data
                                  , e = c.id
                                  , f = c.blocks
                                  , g = c.macros || {}
                                  , h = c.base
                                  , i = c.path
                                  , j = c.url
                                  , k = c.name
                                  , l = c.method
                                  , m = c.options;
                                this.id = e,
                                this.method = l,
                                this.base = h,
                                this.path = i,
                                this.url = j,
                                this.name = k,
                                this.macros = g,
                                this.options = m,
                                this.reset(f),
                                b("String", d) ? this.tokens = a.prepare.apply(this, [d]) : this.tokens = d,
                                void 0 !== e && a.Templates.save(this)
                            }
                            ,
                            a.Template.prototype.reset = function(b) {
                                a.log.debug("Twig.Template.reset", "Reseting template " + this.id),
                                this.blocks = {},
                                this.importedBlocks = [],
                                this.originalBlockTokens = {},
                                this.child = {
                                    blocks: b || {}
                                },
                                this.extend = null
                            }
                            ,
                            a.Template.prototype.render = function(b, c) {
                                c = c || {};
                                var d, e;
                                if (this.context = b || {},
                                this.reset(),
                                c.blocks && (this.blocks = c.blocks),
                                c.macros && (this.macros = c.macros),
                                d = a.parse.apply(this, [this.tokens, this.context]),
                                this.extend) {
                                    var f;
                                    return this.options.allowInlineIncludes && (f = a.Templates.load(this.extend)) && (f.options = this.options),
                                    f || (e = a.path.parsePath(this, this.extend),
                                    f = a.Templates.loadRemote(e, {
                                        method: this.getLoaderMethod(),
                                        base: this.base,
                                        async: !1,
                                        id: e,
                                        options: this.options
                                    })),
                                    this.parent = f,
                                    this.parent.render(this.context, {
                                        blocks: this.blocks
                                    })
                                }
                                return "blocks" == c.output ? this.blocks : "macros" == c.output ? this.macros : d
                            }
                            ,
                            a.Template.prototype.importFile = function(b) {
                                var c, d;
                                if (!this.url && this.options.allowInlineIncludes) {
                                    if (b = this.path ? this.path + "/" + b : b,
                                    !(d = a.Templates.load(b)) && !(d = a.Templates.loadRemote(c, {
                                        id: b,
                                        method: this.getLoaderMethod(),
                                        async: !1,
                                        path: b,
                                        options: this.options
                                    })))
                                        throw new a.Error("Unable to find the template " + b);
                                    return d.options = this.options,
                                    d
                                }
                                return c = a.path.parsePath(this, b),
                                d = a.Templates.loadRemote(c, {
                                    method: this.getLoaderMethod(),
                                    base: this.base,
                                    async: !1,
                                    options: this.options,
                                    id: c
                                })
                            }
                            ,
                            a.Template.prototype.importBlocks = function(b, c) {
                                var d = this.importFile(b)
                                  , e = this.context
                                  , f = this;
                                c = c || !1,
                                d.render(e),
                                a.forEach(Object.keys(d.blocks), function(a) {
                                    (c || void 0 === f.blocks[a]) && (f.blocks[a] = d.blocks[a],
                                    f.importedBlocks.push(a))
                                })
                            }
                            ,
                            a.Template.prototype.importMacros = function(b) {
                                var c = a.path.parsePath(this, b);
                                return a.Templates.loadRemote(c, {
                                    method: this.getLoaderMethod(),
                                    async: !1,
                                    id: c
                                })
                            }
                            ,
                            a.Template.prototype.getLoaderMethod = function() {
                                return this.path ? "fs" : this.url ? "ajax" : this.method || "fs"
                            }
                            ,
                            a.Template.prototype.compile = function(b) {
                                return a.compiler.compile(this, b)
                            }
                            ,
                            a.Markup = function(a, b) {
                                return void 0 === b && (b = !0),
                                "string" == typeof a && a.length > 0 && (a = new String(a),
                                a.twig_markup = b),
                                a
                            }
                            ,
                            a
                        }
                    }
                    , function(a, b) {
                        a.exports = function(a) {
                            return a.compiler = {
                                module: {}
                            },
                            a.compiler.compile = function(b, c) {
                                var d, e = JSON.stringify(b.tokens), f = b.id;
                                if (c.module) {
                                    if (void 0 === a.compiler.module[c.module])
                                        throw new a.Error("Unable to find module type " + c.module);
                                    d = a.compiler.module[c.module](f, e, c.twig)
                                } else
                                    d = a.compiler.wrap(f, e);
                                return d
                            }
                            ,
                            a.compiler.module = {
                                amd: function(b, c, d) {
                                    return 'define(["' + d + '"], function (Twig) {\n\tvar twig, templates;\ntwig = Twig.twig;\ntemplates = ' + a.compiler.wrap(b, c) + "\n\treturn templates;\n});"
                                },
                                node: function(b, c) {
                                    return 'var twig = require("twig").twig;\nexports.template = ' + a.compiler.wrap(b, c)
                                },
                                cjs2: function(b, c, d) {
                                    return 'module.declare([{ twig: "' + d + '" }], function (require, exports, module) {\n\tvar twig = require("twig").twig;\n\texports.template = ' + a.compiler.wrap(b, c) + "\n});"
                                }
                            },
                            a.compiler.wrap = function(a, b) {
                                return 'twig({id:"' + a.replace('"', '\\"') + '", data:' + b + ", precompiled: true});\n"
                            }
                            ,
                            a
                        }
                    }
                    , function(a, b, c) {
                        a.exports = function(a) {
                            "use strict";
                            a.expression = {},
                            c(4)(a),
                            a.expression.reservedWords = ["true", "false", "null", "TRUE", "FALSE", "NULL", "_context", "and", "or", "in", "not in", "if"],
                            a.expression.type = {
                                comma: "Twig.expression.type.comma",
                                operator: {
                                    unary: "Twig.expression.type.operator.unary",
                                    binary: "Twig.expression.type.operator.binary"
                                },
                                string: "Twig.expression.type.string",
                                bool: "Twig.expression.type.bool",
                                slice: "Twig.expression.type.slice",
                                array: {
                                    start: "Twig.expression.type.array.start",
                                    end: "Twig.expression.type.array.end"
                                },
                                object: {
                                    start: "Twig.expression.type.object.start",
                                    end: "Twig.expression.type.object.end"
                                },
                                parameter: {
                                    start: "Twig.expression.type.parameter.start",
                                    end: "Twig.expression.type.parameter.end"
                                },
                                subexpression: {
                                    start: "Twig.expression.type.subexpression.start",
                                    end: "Twig.expression.type.subexpression.end"
                                },
                                key: {
                                    period: "Twig.expression.type.key.period",
                                    brackets: "Twig.expression.type.key.brackets"
                                },
                                filter: "Twig.expression.type.filter",
                                _function: "Twig.expression.type._function",
                                variable: "Twig.expression.type.variable",
                                number: "Twig.expression.type.number",
                                _null: "Twig.expression.type.null",
                                context: "Twig.expression.type.context",
                                test: "Twig.expression.type.test"
                            },
                            a.expression.set = {
                                operations: [a.expression.type.filter, a.expression.type.operator.unary, a.expression.type.operator.binary, a.expression.type.array.end, a.expression.type.object.end, a.expression.type.parameter.end, a.expression.type.subexpression.end, a.expression.type.comma, a.expression.type.test],
                                expressions: [a.expression.type._function, a.expression.type.bool, a.expression.type.string, a.expression.type.variable, a.expression.type.number, a.expression.type._null, a.expression.type.context, a.expression.type.parameter.start, a.expression.type.array.start, a.expression.type.object.start, a.expression.type.subexpression.start]
                            },
                            a.expression.set.operations_extended = a.expression.set.operations.concat([a.expression.type.key.period, a.expression.type.key.brackets, a.expression.type.slice]),
                            a.expression.fn = {
                                compile: {
                                    push: function(a, b, c) {
                                        c.push(a)
                                    },
                                    push_both: function(a, b, c) {
                                        c.push(a),
                                        b.push(a)
                                    }
                                },
                                parse: {
                                    push: function(a, b, c) {
                                        b.push(a)
                                    },
                                    push_value: function(a, b, c) {
                                        b.push(a.value)
                                    }
                                }
                            },
                            a.expression.definitions = [{
                                type: a.expression.type.test,
                                regex: /^is\s+(not)?\s*([a-zA-Z_][a-zA-Z0-9_]*(\s?as)?)/,
                                next: a.expression.set.operations.concat([a.expression.type.parameter.start]),
                                compile: function(a, b, c) {
                                    a.filter = a.match[2],
                                    a.modifier = a.match[1],
                                    delete a.match,
                                    delete a.value,
                                    c.push(a)
                                },
                                parse: function(b, c, d) {
                                    var e = c.pop()
                                      , f = b.params && a.expression.parse.apply(this, [b.params, d])
                                      , g = a.test(b.filter, e, f);
                                    "not" == b.modifier ? c.push(!g) : c.push(g)
                                }
                            }, {
                                type: a.expression.type.comma,
                                regex: /^,/,
                                next: a.expression.set.expressions.concat([a.expression.type.array.end, a.expression.type.object.end]),
                                compile: function(b, c, d) {
                                    var e, f = c.length - 1;
                                    for (delete b.match,
                                    delete b.value; f >= 0; f--) {
                                        if (e = c.pop(),
                                        e.type === a.expression.type.object.start || e.type === a.expression.type.parameter.start || e.type === a.expression.type.array.start) {
                                            c.push(e);
                                            break
                                        }
                                        d.push(e)
                                    }
                                    d.push(b)
                                }
                            }, {
                                type: a.expression.type.number,
                                regex: /^\-?\d+(\.\d+)?/,
                                next: a.expression.set.operations,
                                compile: function(a, b, c) {
                                    a.value = Number(a.value),
                                    c.push(a)
                                },
                                parse: a.expression.fn.parse.push_value
                            }, {
                                type: a.expression.type.operator.binary,
                                regex: /(^\?\:|^[\+\-~%\?]|^[\:](?!\d\])|^[!=]==?|^[!<>]=?|^\*\*?|^\/\/?|^(and)[\(|\s+]|^(or)[\(|\s+]|^(in)[\(|\s+]|^(not in)[\(|\s+]|^\.\.)/,
                                next: a.expression.set.expressions.concat([a.expression.type.operator.unary]),
                                transform: function(a, b) {
                                    switch (a[0]) {
                                    case "and(":
                                    case "or(":
                                    case "in(":
                                    case "not in(":
                                        return b[b.length - 1].value = a[2],
                                        a[0];
                                    default:
                                        return ""
                                    }
                                },
                                compile: function(b, c, d) {
                                    delete b.match,
                                    b.value = b.value.trim();
                                    var e = b.value
                                      , f = a.expression.operator.lookup(e, b);
                                    for (a.log.trace("Twig.expression.compile: ", "Operator: ", f, " from ", e); c.length > 0 && (c[c.length - 1].type == a.expression.type.operator.unary || c[c.length - 1].type == a.expression.type.operator.binary) && (f.associativity === a.expression.operator.leftToRight && f.precidence >= c[c.length - 1].precidence || f.associativity === a.expression.operator.rightToLeft && f.precidence > c[c.length - 1].precidence); ) {
                                        var g = c.pop();
                                        d.push(g)
                                    }
                                    if (":" === e) {
                                        if (!c[c.length - 1] || "?" !== c[c.length - 1].value) {
                                            var h = d.pop();
                                            if (h.type === a.expression.type.string || h.type === a.expression.type.variable)
                                                b.key = h.value;
                                            else if (h.type === a.expression.type.number)
                                                b.key = h.value.toString();
                                            else {
                                                if (!h.expression || h.type !== a.expression.type.parameter.end && h.type != a.expression.type.subexpression.end)
                                                    throw new a.Error("Unexpected value before ':' of " + h.type + " = " + h.value);
                                                b.params = h.params
                                            }
                                            return void d.push(b)
                                        }
                                    } else
                                        c.push(f)
                                },
                                parse: function(b, c, d) {
                                    b.key ? c.push(b) : b.params ? (b.key = a.expression.parse.apply(this, [b.params, d]),
                                    c.push(b),
                                    d.loop || delete b.params) : a.expression.operator.parse(b.value, c)
                                }
                            }, {
                                type: a.expression.type.operator.unary,
                                regex: /(^not\s+)/,
                                next: a.expression.set.expressions,
                                compile: function(b, c, d) {
                                    delete b.match,
                                    b.value = b.value.trim();
                                    var e = b.value
                                      , f = a.expression.operator.lookup(e, b);
                                    for (a.log.trace("Twig.expression.compile: ", "Operator: ", f, " from ", e); c.length > 0 && (c[c.length - 1].type == a.expression.type.operator.unary || c[c.length - 1].type == a.expression.type.operator.binary) && (f.associativity === a.expression.operator.leftToRight && f.precidence >= c[c.length - 1].precidence || f.associativity === a.expression.operator.rightToLeft && f.precidence > c[c.length - 1].precidence); ) {
                                        var g = c.pop();
                                        d.push(g)
                                    }
                                    c.push(f)
                                },
                                parse: function(b, c, d) {
                                    a.expression.operator.parse(b.value, c)
                                }
                            }, {
                                type: a.expression.type.string,
                                regex: /^(["'])(?:(?=(\\?))\2[\s\S])*?\1/,
                                next: a.expression.set.operations_extended,
                                compile: function(b, c, d) {
                                    var e = b.value;
                                    delete b.match,
                                    e = '"' === e.substring(0, 1) ? e.replace('\\"', '"') : e.replace("\\'", "'"),
                                    b.value = e.substring(1, e.length - 1).replace(/\\n/g, "\n").replace(/\\r/g, "\r"),
                                    a.log.trace("Twig.expression.compile: ", "String value: ", b.value),
                                    d.push(b)
                                },
                                parse: a.expression.fn.parse.push_value
                            }, {
                                type: a.expression.type.subexpression.start,
                                regex: /^\(/,
                                next: a.expression.set.expressions.concat([a.expression.type.subexpression.end]),
                                compile: function(a, b, c) {
                                    a.value = "(",
                                    c.push(a),
                                    b.push(a)
                                },
                                parse: a.expression.fn.parse.push
                            }, {
                                type: a.expression.type.subexpression.end,
                                regex: /^\)/,
                                next: a.expression.set.operations_extended,
                                validate: function(b, c) {
                                    for (var d = c.length - 1, e = !1, f = !1, g = 0; !e && d >= 0; ) {
                                        var h = c[d];
                                        e = h.type === a.expression.type.subexpression.start,
                                        e && f && (f = !1,
                                        e = !1),
                                        h.type === a.expression.type.parameter.start ? g++ : h.type === a.expression.type.parameter.end ? g-- : h.type === a.expression.type.subexpression.end && (f = !0),
                                        d--
                                    }
                                    return e && 0 === g
                                },
                                compile: function(b, c, d) {
                                    var e, f = b;
                                    for (e = c.pop(); c.length > 0 && e.type != a.expression.type.subexpression.start; )
                                        d.push(e),
                                        e = c.pop();
                                    for (var g = []; b.type !== a.expression.type.subexpression.start; )
                                        g.unshift(b),
                                        b = d.pop();
                                    g.unshift(b);
                                    e = c[c.length - 1],
                                    void 0 === e || e.type !== a.expression.type._function && e.type !== a.expression.type.filter && e.type !== a.expression.type.test && e.type !== a.expression.type.key.brackets ? (f.expression = !0,
                                    g.pop(),
                                    g.shift(),
                                    f.params = g,
                                    d.push(f)) : (f.expression = !1,
                                    e.params = g)
                                },
                                parse: function(b, c, d) {
                                    var e = null;
                                    if (!b.expression)
                                        throw new a.Error("Unexpected subexpression end when token is not marked as an expression");
                                    e = a.expression.parse.apply(this, [b.params, d]),
                                    c.push(e)
                                }
                            }, {
                                type: a.expression.type.parameter.start,
                                regex: /^\(/,
                                next: a.expression.set.expressions.concat([a.expression.type.parameter.end]),
                                validate: function(b, c) {
                                    var d = c[c.length - 1];
                                    return d && a.indexOf(a.expression.reservedWords, d.value.trim()) < 0
                                },
                                compile: a.expression.fn.compile.push_both,
                                parse: a.expression.fn.parse.push
                            }, {
                                type: a.expression.type.parameter.end,
                                regex: /^\)/,
                                next: a.expression.set.operations_extended,
                                compile: function(b, c, d) {
                                    var e, f = b;
                                    for (e = c.pop(); c.length > 0 && e.type != a.expression.type.parameter.start; )
                                        d.push(e),
                                        e = c.pop();
                                    for (var g = []; b.type !== a.expression.type.parameter.start; )
                                        g.unshift(b),
                                        b = d.pop();
                                    g.unshift(b);
                                    b = d[d.length - 1],
                                    void 0 === b || b.type !== a.expression.type._function && b.type !== a.expression.type.filter && b.type !== a.expression.type.test && b.type !== a.expression.type.key.brackets ? (f.expression = !0,
                                    g.pop(),
                                    g.shift(),
                                    f.params = g,
                                    d.push(f)) : (f.expression = !1,
                                    b.params = g)
                                },
                                parse: function(b, c, d) {
                                    var e = []
                                      , f = !1
                                      , g = null;
                                    if (b.expression)
                                        g = a.expression.parse.apply(this, [b.params, d]),
                                        c.push(g);
                                    else {
                                        for (; c.length > 0; ) {
                                            if ((g = c.pop()) && g.type && g.type == a.expression.type.parameter.start) {
                                                f = !0;
                                                break
                                            }
                                            e.unshift(g)
                                        }
                                        if (!f)
                                            throw new a.Error("Expected end of parameter set.");
                                        c.push(e)
                                    }
                                }
                            }, {
                                type: a.expression.type.slice,
                                regex: /^\[(\d*\:\d*)\]/,
                                next: a.expression.set.operations_extended,
                                compile: function(a, b, c) {
                                    var d = a.match[1].split(":")
                                      , e = d[0] ? parseInt(d[0]) : void 0
                                      , f = d[1] ? parseInt(d[1]) : void 0;
                                    a.value = "slice",
                                    a.params = [e, f],
                                    f || (a.params = [e]),
                                    c.push(a)
                                },
                                parse: function(b, c, d) {
                                    var e = c.pop()
                                      , f = b.params;
                                    c.push(a.filter.apply(this, [b.value, e, f]))
                                }
                            }, {
                                type: a.expression.type.array.start,
                                regex: /^\[/,
                                next: a.expression.set.expressions.concat([a.expression.type.array.end]),
                                compile: a.expression.fn.compile.push_both,
                                parse: a.expression.fn.parse.push
                            }, {
                                type: a.expression.type.array.end,
                                regex: /^\]/,
                                next: a.expression.set.operations_extended,
                                compile: function(b, c, d) {
                                    for (var e, f = c.length - 1; f >= 0 && (e = c.pop(),
                                    e.type !== a.expression.type.array.start); f--)
                                        d.push(e);
                                    d.push(b)
                                },
                                parse: function(b, c, d) {
                                    for (var e = [], f = !1, g = null; c.length > 0; ) {
                                        if (g = c.pop(),
                                        g.type && g.type == a.expression.type.array.start) {
                                            f = !0;
                                            break
                                        }
                                        e.unshift(g)
                                    }
                                    if (!f)
                                        throw new a.Error("Expected end of array.");
                                    c.push(e)
                                }
                            }, {
                                type: a.expression.type.object.start,
                                regex: /^\{/,
                                next: a.expression.set.expressions.concat([a.expression.type.object.end]),
                                compile: a.expression.fn.compile.push_both,
                                parse: a.expression.fn.parse.push
                            }, {
                                type: a.expression.type.object.end,
                                regex: /^\}/,
                                next: a.expression.set.operations_extended,
                                compile: function(b, c, d) {
                                    for (var e, f = c.length - 1; f >= 0 && (!(e = c.pop()) || e.type !== a.expression.type.object.start); f--)
                                        d.push(e);
                                    d.push(b)
                                },
                                parse: function(b, c, d) {
                                    for (var e = {}, f = !1, g = null, h = !1, i = null; c.length > 0; ) {
                                        if ((g = c.pop()) && g.type && g.type === a.expression.type.object.start) {
                                            f = !0;
                                            break
                                        }
                                        if (g && g.type && (g.type === a.expression.type.operator.binary || g.type === a.expression.type.operator.unary) && g.key) {
                                            if (!h)
                                                throw new a.Error("Missing value for key '" + g.key + "' in object definition.");
                                            e[g.key] = i,
                                            void 0 === e._keys && (e._keys = []),
                                            e._keys.unshift(g.key),
                                            i = null,
                                            h = !1
                                        } else
                                            h = !0,
                                            i = g
                                    }
                                    if (!f)
                                        throw new a.Error("Unexpected end of object.");
                                    c.push(e)
                                }
                            }, {
                                type: a.expression.type.filter,
                                regex: /^\|\s?([a-zA-Z_][a-zA-Z0-9_\-]*)/,
                                next: a.expression.set.operations_extended.concat([a.expression.type.parameter.start]),
                                compile: function(a, b, c) {
                                    a.value = a.match[1],
                                    c.push(a)
                                },
                                parse: function(b, c, d) {
                                    var e = c.pop()
                                      , f = b.params && a.expression.parse.apply(this, [b.params, d]);
                                    c.push(a.filter.apply(this, [b.value, e, f]))
                                }
                            }, {
                                type: a.expression.type._function,
                                regex: /^([a-zA-Z_][a-zA-Z0-9_]*)\s*\(/,
                                next: a.expression.type.parameter.start,
                                validate: function(b, c) {
                                    return b[1] && a.indexOf(a.expression.reservedWords, b[1]) < 0
                                },
                                transform: function(a, b) {
                                    return "("
                                },
                                compile: function(a, b, c) {
                                    var d = a.match[1];
                                    a.fn = d,
                                    delete a.match,
                                    delete a.value,
                                    c.push(a)
                                },
                                parse: function(b, c, d) {
                                    var e, f = b.params && a.expression.parse.apply(this, [b.params, d]), g = b.fn;
                                    if (a.functions[g])
                                        e = a.functions[g].apply(this, f);
                                    else {
                                        if ("function" != typeof d[g])
                                            throw new a.Error(g + " function does not exist and is not defined in the context");
                                        e = d[g].apply(d, f)
                                    }
                                    c.push(e)
                                }
                            }, {
                                type: a.expression.type.variable,
                                regex: /^[a-zA-Z_][a-zA-Z0-9_]*/,
                                next: a.expression.set.operations_extended.concat([a.expression.type.parameter.start]),
                                compile: a.expression.fn.compile.push,
                                validate: function(b, c) {
                                    return a.indexOf(a.expression.reservedWords, b[0]) < 0
                                },
                                parse: function(b, c, d) {
                                    var e = a.expression.resolve.apply(this, [d[b.value], d]);
                                    c.push(e)
                                }
                            }, {
                                type: a.expression.type.key.period,
                                regex: /^\.([a-zA-Z0-9_]+)/,
                                next: a.expression.set.operations_extended.concat([a.expression.type.parameter.start]),
                                compile: function(a, b, c) {
                                    a.key = a.match[1],
                                    delete a.match,
                                    delete a.value,
                                    c.push(a)
                                },
                                parse: function(b, c, d, e) {
                                    var f, g = b.params && a.expression.parse.apply(this, [b.params, d]), h = b.key, i = c.pop();
                                    if (null === i || void 0 === i) {
                                        if (this.options.strict_variables)
                                            throw new a.Error("Can't access a key " + h + " on an null or undefined object.");
                                        f = void 0
                                    } else {
                                        var j = function(a) {
                                            return a.substr(0, 1).toUpperCase() + a.substr(1)
                                        };
                                        f = "object" == typeof i && h in i ? i[h] : void 0 !== i["get" + j(h)] ? i["get" + j(h)] : void 0 !== i["is" + j(h)] ? i["is" + j(h)] : void 0
                                    }
                                    c.push(a.expression.resolve.apply(this, [f, d, g, e]))
                                }
                            }, {
                                type: a.expression.type.key.brackets,
                                regex: /^\[([^\]\:]*)\]/,
                                next: a.expression.set.operations_extended.concat([a.expression.type.parameter.start]),
                                compile: function(b, c, d) {
                                    var e = b.match[1];
                                    delete b.value,
                                    delete b.match,
                                    b.stack = a.expression.compile({
                                        value: e
                                    }).stack,
                                    d.push(b)
                                },
                                parse: function(b, c, d, e) {
                                    var f, g = b.params && a.expression.parse.apply(this, [b.params, d]), h = a.expression.parse.apply(this, [b.stack, d]), i = c.pop();
                                    if (null === i || void 0 === i) {
                                        if (this.options.strict_variables)
                                            throw new a.Error("Can't access a key " + h + " on an null or undefined object.");
                                        return null
                                    }
                                    f = "object" == typeof i && h in i ? i[h] : null,
                                    c.push(a.expression.resolve.apply(this, [f, i, g, e]))
                                }
                            }, {
                                type: a.expression.type._null,
                                regex: /^(null|NULL|none|NONE)/,
                                next: a.expression.set.operations,
                                compile: function(a, b, c) {
                                    delete a.match,
                                    a.value = null,
                                    c.push(a)
                                },
                                parse: a.expression.fn.parse.push_value
                            }, {
                                type: a.expression.type.context,
                                regex: /^_context/,
                                next: a.expression.set.operations_extended.concat([a.expression.type.parameter.start]),
                                compile: a.expression.fn.compile.push,
                                parse: function(a, b, c) {
                                    b.push(c)
                                }
                            }, {
                                type: a.expression.type.bool,
                                regex: /^(true|TRUE|false|FALSE)/,
                                next: a.expression.set.operations,
                                compile: function(a, b, c) {
                                    a.value = "true" === a.match[0].toLowerCase(),
                                    delete a.match,
                                    c.push(a)
                                },
                                parse: a.expression.fn.parse.push_value
                            }],
                            a.expression.resolve = function(b, c, d, e) {
                                if ("function" == typeof b) {
                                    if (e && e.type === a.expression.type.parameter.end) {
                                        d = e.params && a.expression.parse.apply(this, [e.params, c, !0]),
                                        e.cleanup = !0
                                    }
                                    return b.apply(c, d || [])
                                }
                                return b
                            }
                            ,
                            a.expression.handler = {},
                            a.expression.extendType = function(b) {
                                a.expression.type[b] = "Twig.expression.type." + b
                            }
                            ,
                            a.expression.extend = function(b) {
                                if (!b.type)
                                    throw new a.Error("Unable to extend logic definition. No type provided for " + b);
                                a.expression.handler[b.type] = b
                            }
                            ;
                            for (; a.expression.definitions.length > 0; )
                                a.expression.extend(a.expression.definitions.shift());
                            return a.expression.tokenize = function(b) {
                                var c, d, e, f, g, h, i = [], j = 0, k = null, l = [];
                                for (h = function() {
                                    var b = Array.prototype.slice.apply(arguments);
                                    b.pop(),
                                    b.pop();
                                    return a.log.trace("Twig.expression.tokenize", "Matched a ", c, " regular expression of ", b),
                                    k && a.indexOf(k, c) < 0 ? (l.push(c + " cannot follow a " + i[i.length - 1].type + " at template:" + j + " near '" + b[0].substring(0, 20) + "...'"),
                                    b[0]) : a.expression.handler[c].validate && !a.expression.handler[c].validate(b, i) ? b[0] : (l = [],
                                    i.push({
                                        type: c,
                                        value: b[0],
                                        match: b
                                    }),
                                    g = !0,
                                    k = f,
                                    j += b[0].length,
                                    a.expression.handler[c].transform ? a.expression.handler[c].transform(b, i) : "")
                                }
                                ,
                                a.log.debug("Twig.expression.tokenize", "Tokenizing expression ", b); b.length > 0; ) {
                                    b = b.trim();
                                    for (c in a.expression.handler)
                                        if (a.expression.handler.hasOwnProperty(c)) {
                                            for (f = a.expression.handler[c].next,
                                            d = a.expression.handler[c].regex,
                                            a.log.trace("Checking type ", c, " on ", b),
                                            e = d instanceof Array ? d : [d],
                                            g = !1; e.length > 0; )
                                                d = e.pop(),
                                                b = b.replace(d, h);
                                            if (g)
                                                break
                                        }
                                    if (!g)
                                        throw l.length > 0 ? new a.Error(l.join(" OR ")) : new a.Error("Unable to parse '" + b + "' at template position" + j)
                                }
                                return a.log.trace("Twig.expression.tokenize", "Tokenized to ", i),
                                i
                            }
                            ,
                            a.expression.compile = function(b) {
                                var c = b.value
                                  , d = a.expression.tokenize(c)
                                  , e = null
                                  , f = []
                                  , g = []
                                  , h = null;
                                for (a.log.trace("Twig.expression.compile: ", "Compiling ", c); d.length > 0; )
                                    e = d.shift(),
                                    h = a.expression.handler[e.type],
                                    a.log.trace("Twig.expression.compile: ", "Compiling ", e),
                                    h.compile && h.compile(e, g, f),
                                    a.log.trace("Twig.expression.compile: ", "Stack is", g),
                                    a.log.trace("Twig.expression.compile: ", "Output is", f);
                                for (; g.length > 0; )
                                    f.push(g.pop());
                                return a.log.trace("Twig.expression.compile: ", "Final output is", f),
                                b.stack = f,
                                delete b.value,
                                b
                            }
                            ,
                            a.expression.parse = function(b, c, d) {
                                var e = this;
                                b instanceof Array || (b = [b]);
                                var f, g = [], h = null, i = [];
                                if (a.forEach(b, function(d, j) {
                                    d.cleanup || (b.length > j + 1 && (f = b[j + 1]),
                                    h = a.expression.handler[d.type],
                                    h.parse && h.parse.apply(e, [d, g, c, f]),
                                    c.loop && d.type === a.expression.type.operator.binary && i.push(d))
                                }),
                                a.forEach(i, function(a) {
                                    a.params && a.key && delete a.key
                                }),
                                d) {
                                    for (var j = []; g.length > 0; )
                                        j.unshift(g.pop());
                                    g.push(j)
                                }
                                return g.pop()
                            }
                            ,
                            a
                        }
                    }
                    , function(a, b) {
                        a.exports = function(a) {
                            "use strict";
                            a.expression.operator = {
                                leftToRight: "leftToRight",
                                rightToLeft: "rightToLeft"
                            };
                            var b = function(a, b) {
                                if (void 0 === b || null === b)
                                    return null;
                                if (void 0 !== b.indexOf)
                                    return a === b || "" !== a && b.indexOf(a) > -1;
                                var c;
                                for (c in b)
                                    if (b.hasOwnProperty(c) && b[c] === a)
                                        return !0;
                                return !1
                            };
                            return a.expression.operator.lookup = function(b, c) {
                                switch (b) {
                                case "..":
                                    c.precidence = 20,
                                    c.associativity = a.expression.operator.leftToRight;
                                    break;
                                case ",":
                                    c.precidence = 18,
                                    c.associativity = a.expression.operator.leftToRight;
                                    break;
                                case "?:":
                                case "?":
                                case ":":
                                    c.precidence = 16,
                                    c.associativity = a.expression.operator.rightToLeft;
                                    break;
                                case "or":
                                    c.precidence = 14,
                                    c.associativity = a.expression.operator.leftToRight;
                                    break;
                                case "and":
                                    c.precidence = 13,
                                    c.associativity = a.expression.operator.leftToRight;
                                    break;
                                case "==":
                                case "!=":
                                    c.precidence = 9,
                                    c.associativity = a.expression.operator.leftToRight;
                                    break;
                                case "<":
                                case "<=":
                                case ">":
                                case ">=":
                                case "not in":
                                case "in":
                                    c.precidence = 8,
                                    c.associativity = a.expression.operator.leftToRight;
                                    break;
                                case "~":
                                case "+":
                                case "-":
                                    c.precidence = 6,
                                    c.associativity = a.expression.operator.leftToRight;
                                    break;
                                case "//":
                                case "**":
                                case "*":
                                case "/":
                                case "%":
                                    c.precidence = 5,
                                    c.associativity = a.expression.operator.leftToRight;
                                    break;
                                case "not":
                                    c.precidence = 3,
                                    c.associativity = a.expression.operator.rightToLeft;
                                    break;
                                default:
                                    throw new a.Error("Failed to lookup operator: " + b + " is an unknown operator.")
                                }
                                return c.operator = b,
                                c
                            }
                            ,
                            a.expression.operator.parse = function(c, d) {
                                a.log.trace("Twig.expression.operator.parse: ", "Handling ", c);
                                var e, f, g;
                                switch ("?" === c && (g = d.pop()),
                                f = d.pop(),
                                "not" !== c && (e = d.pop()),
                                "in" !== c && "not in" !== c && (e && Array.isArray(e) && (e = e.length),
                                f && Array.isArray(f) && (f = f.length)),
                                c) {
                                case ":":
                                    break;
                                case "?:":
                                    a.lib.boolval(e) ? d.push(e) : d.push(f);
                                    break;
                                case "?":
                                    void 0 === e && (e = f,
                                    f = g,
                                    g = void 0),
                                    a.lib.boolval(e) ? d.push(f) : d.push(g);
                                    break;
                                case "+":
                                    f = parseFloat(f),
                                    e = parseFloat(e),
                                    d.push(e + f);
                                    break;
                                case "-":
                                    f = parseFloat(f),
                                    e = parseFloat(e),
                                    d.push(e - f);
                                    break;
                                case "*":
                                    f = parseFloat(f),
                                    e = parseFloat(e),
                                    d.push(e * f);
                                    break;
                                case "/":
                                    f = parseFloat(f),
                                    e = parseFloat(e),
                                    d.push(e / f);
                                    break;
                                case "//":
                                    f = parseFloat(f),
                                    e = parseFloat(e),
                                    d.push(Math.floor(e / f));
                                    break;
                                case "%":
                                    f = parseFloat(f),
                                    e = parseFloat(e),
                                    d.push(e % f);
                                    break;
                                case "~":
                                    d.push((null != e ? e.toString() : "") + (null != f ? f.toString() : ""));
                                    break;
                                case "not":
                                case "!":
                                    d.push(!a.lib.boolval(f));
                                    break;
                                case "<":
                                    d.push(e < f);
                                    break;
                                case "<=":
                                    d.push(e <= f);
                                    break;
                                case ">":
                                    d.push(e > f);
                                    break;
                                case ">=":
                                    d.push(e >= f);
                                    break;
                                case "===":
                                    d.push(e === f);
                                    break;
                                case "==":
                                    d.push(e == f);
                                    break;
                                case "!==":
                                    d.push(e !== f);
                                    break;
                                case "!=":
                                    d.push(e != f);
                                    break;
                                case "or":
                                    d.push(e || f);
                                    break;
                                case "and":
                                    d.push(e && f);
                                    break;
                                case "**":
                                    d.push(Math.pow(e, f));
                                    break;
                                case "not in":
                                    d.push(!b(e, f));
                                    break;
                                case "in":
                                    d.push(b(e, f));
                                    break;
                                case "..":
                                    d.push(a.functions.range(e, f));
                                    break;
                                default:
                                    throw new a.Error("Failed to parse operator: " + c + " is an unknown operator.")
                                }
                            }
                            ,
                            a
                        }
                    }
                    , function(a, b) {
                        a.exports = function(a) {
                            function b(a, b) {
                                var c = Object.prototype.toString.call(b).slice(8, -1);
                                return void 0 !== b && null !== b && c === a
                            }
                            return a.filters = {
                                upper: function(a) {
                                    return "string" != typeof a ? a : a.toUpperCase()
                                },
                                lower: function(a) {
                                    return "string" != typeof a ? a : a.toLowerCase()
                                },
                                capitalize: function(a) {
                                    return "string" != typeof a ? a : a.substr(0, 1).toUpperCase() + a.toLowerCase().substr(1)
                                },
                                title: function(a) {
                                    return "string" != typeof a ? a : a.toLowerCase().replace(/(^|\s)([a-z])/g, function(a, b, c) {
                                        return b + c.toUpperCase()
                                    })
                                },
                                length: function(b) {
                                    return a.lib.is("Array", b) || "string" == typeof b ? b.length : a.lib.is("Object", b) ? void 0 === b._keys ? Object.keys(b).length : b._keys.length : 0
                                },
                                reverse: function(a) {
                                    if (b("Array", a))
                                        return a.reverse();
                                    if (b("String", a))
                                        return a.split("").reverse().join("");
                                    if (b("Object", a)) {
                                        var c = a._keys || Object.keys(a).reverse();
                                        return a._keys = c,
                                        a
                                    }
                                },
                                sort: function(a) {
                                    if (b("Array", a))
                                        return a.sort();
                                    if (b("Object", a)) {
                                        delete a._keys;
                                        var c = Object.keys(a)
                                          , d = c.sort(function(b, c) {
                                            var d;
                                            return a[b] > a[c] == !(a[b] <= a[c]) ? a[b] > a[c] ? 1 : a[b] < a[c] ? -1 : 0 : isNaN(d = parseFloat(a[b])) || isNaN(b1 = parseFloat(a[c])) ? "string" == typeof a[b] ? a[b] > a[c].toString() ? 1 : a[b] < a[c].toString() ? -1 : 0 : "string" == typeof a[c] ? a[b].toString() > a[c] ? 1 : a[b].toString() < a[c] ? -1 : 0 : null : d > b1 ? 1 : d < b1 ? -1 : 0
                                        });
                                        return a._keys = d,
                                        a
                                    }
                                },
                                keys: function(b) {
                                    if (void 0 !== b && null !== b) {
                                        var c = b._keys || Object.keys(b)
                                          , d = [];
                                        return a.forEach(c, function(a) {
                                            "_keys" !== a && b.hasOwnProperty(a) && d.push(a)
                                        }),
                                        d
                                    }
                                },
                                url_encode: function(a) {
                                    if (void 0 !== a && null !== a) {
                                        var b = encodeURIComponent(a);
                                        return b = b.replace("'", "%27")
                                    }
                                },
                                join: function(c, d) {
                                    if (void 0 !== c && null !== c) {
                                        var e = ""
                                          , f = []
                                          , g = null;
                                        return d && d[0] && (e = d[0]),
                                        b("Array", c) ? f = c : (g = c._keys || Object.keys(c),
                                        a.forEach(g, function(a) {
                                            "_keys" !== a && c.hasOwnProperty(a) && f.push(c[a])
                                        })),
                                        f.join(e)
                                    }
                                },
                                default: function(b, c) {
                                    if (void 0 !== c && c.length > 1)
                                        throw new a.Error("default filter expects one argument");
                                    return void 0 === b || null === b || "" === b ? void 0 === c ? "" : c[0] : b
                                },
                                json_encode: function(c) {
                                    if (void 0 === c || null === c)
                                        return "null";
                                    if ("object" == typeof c && b("Array", c))
                                        return e = [],
                                        a.forEach(c, function(b) {
                                            e.push(a.filters.json_encode(b))
                                        }),
                                        "[" + e.join(",") + "]";
                                    if ("object" == typeof c) {
                                        var d = c._keys || Object.keys(c)
                                          , e = [];
                                        return a.forEach(d, function(b) {
                                            e.push(JSON.stringify(b) + ":" + a.filters.json_encode(c[b]))
                                        }),
                                        "{" + e.join(",") + "}"
                                    }
                                    return JSON.stringify(c)
                                },
                                merge: function(c, d) {
                                    var e = []
                                      , f = 0
                                      , g = [];
                                    if (b("Array", c) ? a.forEach(d, function(a) {
                                        b("Array", a) || (e = {})
                                    }) : e = {},
                                    b("Array", e) || (e._keys = []),
                                    b("Array", c) ? a.forEach(c, function(a) {
                                        e._keys && e._keys.push(f),
                                        e[f] = a,
                                        f++
                                    }) : (g = c._keys || Object.keys(c),
                                    a.forEach(g, function(a) {
                                        e[a] = c[a],
                                        e._keys.push(a);
                                        var b = parseInt(a, 10);
                                        !isNaN(b) && b >= f && (f = b + 1)
                                    })),
                                    a.forEach(d, function(c) {
                                        b("Array", c) ? a.forEach(c, function(a) {
                                            e._keys && e._keys.push(f),
                                            e[f] = a,
                                            f++
                                        }) : (g = c._keys || Object.keys(c),
                                        a.forEach(g, function(a) {
                                            e[a] || e._keys.push(a),
                                            e[a] = c[a];
                                            var b = parseInt(a, 10);
                                            !isNaN(b) && b >= f && (f = b + 1)
                                        }))
                                    }),
                                    0 === d.length)
                                        throw new a.Error("Filter merge expects at least one parameter");
                                    return e
                                },
                                date: function(b, c) {
                                    var d = a.functions.date(b)
                                      , e = c && c.length ? c[0] : "F j, Y H:i";
                                    return a.lib.date(e, d)
                                },
                                date_modify: function(b, c) {
                                    if (void 0 !== b && null !== b) {
                                        if (void 0 === c || 1 !== c.length)
                                            throw new a.Error("date_modify filter expects 1 argument");
                                        var d, e = c[0];
                                        return a.lib.is("Date", b) && (d = a.lib.strtotime(e, b.getTime() / 1e3)),
                                        a.lib.is("String", b) && (d = a.lib.strtotime(e, a.lib.strtotime(b))),
                                        a.lib.is("Number", b) && (d = a.lib.strtotime(e, b)),
                                        new Date(1e3 * d)
                                    }
                                },
                                replace: function(b, c) {
                                    if (void 0 !== b && null !== b) {
                                        var d, e = c[0];
                                        for (d in e)
                                            e.hasOwnProperty(d) && "_keys" !== d && (b = a.lib.replaceAll(b, d, e[d]));
                                        return b
                                    }
                                },
                                format: function(b, c) {
                                    if (void 0 !== b && null !== b)
                                        return a.lib.vsprintf(b, c)
                                },
                                striptags: function(b) {
                                    if (void 0 !== b && null !== b)
                                        return a.lib.strip_tags(b)
                                },
                                escape: function(b, c) {
                                    if (void 0 !== b && null !== b) {
                                        var d = "html";
                                        if (c && c.length && !0 !== c[0] && (d = c[0]),
                                        "html" == d) {
                                            var e = b.toString().replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;");
                                            return a.Markup(e, "html")
                                        }
                                        if ("js" == d) {
                                            for (var e = b.toString(), f = "", g = 0; g < e.length; g++)
                                                if (e[g].match(/^[a-zA-Z0-9,\._]$/))
                                                    f += e[g];
                                                else {
                                                    var h = e.charCodeAt(g);
                                                    f += h < 128 ? "\\x" + h.toString(16).toUpperCase() : a.lib.sprintf("\\u%04s", h.toString(16).toUpperCase())
                                                }
                                            return a.Markup(f, "js")
                                        }
                                        if ("css" == d) {
                                            for (var e = b.toString(), f = "", g = 0; g < e.length; g++)
                                                if (e[g].match(/^[a-zA-Z0-9]$/))
                                                    f += e[g];
                                                else {
                                                    var h = e.charCodeAt(g);
                                                    f += "\\" + h.toString(16).toUpperCase() + " "
                                                }
                                            return a.Markup(f, "css")
                                        }
                                        if ("url" == d) {
                                            var f = a.filters.url_encode(b);
                                            return a.Markup(f, "url")
                                        }
                                        if ("html_attr" == d) {
                                            for (var e = b.toString(), f = "", g = 0; g < e.length; g++)
                                                if (e[g].match(/^[a-zA-Z0-9,\.\-_]$/))
                                                    f += e[g];
                                                else if (e[g].match(/^[&<>"]$/))
                                                    f += e[g].replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;");
                                                else {
                                                    var h = e.charCodeAt(g);
                                                    f += h <= 31 && 9 != h && 10 != h && 13 != h ? "&#xFFFD;" : h < 128 ? a.lib.sprintf("&#x%02s;", h.toString(16).toUpperCase()) : a.lib.sprintf("&#x%04s;", h.toString(16).toUpperCase())
                                                }
                                            return a.Markup(f, "html_attr")
                                        }
                                        throw new a.Error("escape strategy unsupported")
                                    }
                                },
                                e: function(b, c) {
                                    return a.filters.escape(b, c)
                                },
                                nl2br: function(b) {
                                    if (void 0 !== b && null !== b) {
                                        var c = "<br />BACKSLASH_n_replace";
                                        return b = a.filters.escape(b).replace(/\r\n/g, c).replace(/\r/g, c).replace(/\n/g, c),
                                        b = a.lib.replaceAll(b, "BACKSLASH_n_replace", "\n"),
                                        a.Markup(b)
                                    }
                                },
                                number_format: function(a, b) {
                                    var c = a
                                      , d = b && b[0] ? b[0] : void 0
                                      , e = b && void 0 !== b[1] ? b[1] : "."
                                      , f = b && void 0 !== b[2] ? b[2] : ",";
                                    c = (c + "").replace(/[^0-9+\-Ee.]/g, "");
                                    var g = isFinite(+c) ? +c : 0
                                      , h = isFinite(+d) ? Math.abs(d) : 0
                                      , i = "";
                                    return i = (h ? function(a, b) {
                                        var c = Math.pow(10, b);
                                        return "" + Math.round(a * c) / c
                                    }(g, h) : "" + Math.round(g)).split("."),
                                    i[0].length > 3 && (i[0] = i[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, f)),
                                    (i[1] || "").length < h && (i[1] = i[1] || "",
                                    i[1] += new Array(h - i[1].length + 1).join("0")),
                                    i.join(e)
                                },
                                trim: function(b, c) {
                                    if (void 0 !== b && null !== b) {
                                        var d, e = a.filters.escape("" + b);
                                        d = c && c[0] ? "" + c[0] : " \n\r\t\f\v            ​\u2028\u2029　";
                                        for (var f = 0; f < e.length; f++)
                                            if (-1 === d.indexOf(e.charAt(f))) {
                                                e = e.substring(f);
                                                break
                                            }
                                        for (f = e.length - 1; f >= 0; f--)
                                            if (-1 === d.indexOf(e.charAt(f))) {
                                                e = e.substring(0, f + 1);
                                                break
                                            }
                                        return -1 === d.indexOf(e.charAt(0)) ? e : ""
                                    }
                                },
                                truncate: function(a, b) {
                                    var c = 30
                                      , d = !1
                                      , e = "...";
                                    if (a += "",
                                    b && (b[0] && (c = b[0]),
                                    b[1] && (d = b[1]),
                                    b[2] && (e = b[2])),
                                    a.length > c) {
                                        if (d && -1 === (c = a.indexOf(" ", c)))
                                            return a;
                                        a = a.substr(0, c) + e
                                    }
                                    return a
                                },
                                slice: function(b, c) {
                                    if (void 0 !== b && null !== b) {
                                        if (void 0 === c || c.length < 1)
                                            throw new a.Error("slice filter expects at least 1 argument");
                                        var d = c[0] || 0
                                          , e = c.length > 1 ? c[1] : b.length
                                          , f = d >= 0 ? d : Math.max(b.length + d, 0);
                                        if (a.lib.is("Array", b)) {
                                            for (var g = [], h = f; h < f + e && h < b.length; h++)
                                                g.push(b[h]);
                                            return g
                                        }
                                        if (a.lib.is("String", b))
                                            return b.substr(f, e);
                                        throw new a.Error("slice filter expects value to be an array or string")
                                    }
                                },
                                abs: function(a) {
                                    if (void 0 !== a && null !== a)
                                        return Math.abs(a)
                                },
                                first: function(a) {
                                    if (b("Array", a))
                                        return a[0];
                                    if (b("Object", a)) {
                                        if ("_keys"in a)
                                            return a[a._keys[0]]
                                    } else if ("string" == typeof a)
                                        return a.substr(0, 1)
                                },
                                split: function(b, c) {
                                    if (void 0 !== b && null !== b) {
                                        if (void 0 === c || c.length < 1 || c.length > 2)
                                            throw new a.Error("split filter expects 1 or 2 argument");
                                        if (a.lib.is("String", b)) {
                                            var d = c[0]
                                              , e = c[1]
                                              , f = b.split(d);
                                            if (void 0 === e)
                                                return f;
                                            if (e < 0)
                                                return b.split(d, f.length + e);
                                            var g = [];
                                            if ("" == d)
                                                for (; f.length > 0; ) {
                                                    for (var h = "", i = 0; i < e && f.length > 0; i++)
                                                        h += f.shift();
                                                    g.push(h)
                                                }
                                            else {
                                                for (var i = 0; i < e - 1 && f.length > 0; i++)
                                                    g.push(f.shift());
                                                f.length > 0 && g.push(f.join(d))
                                            }
                                            return g
                                        }
                                        throw new a.Error("split filter expects value to be a string")
                                    }
                                },
                                last: function(b) {
                                    if (a.lib.is("Object", b)) {
                                        var c;
                                        return c = void 0 === b._keys ? Object.keys(b) : b._keys,
                                        b[c[c.length - 1]]
                                    }
                                    return b[b.length - 1]
                                },
                                raw: function(b) {
                                    return a.Markup(b)
                                },
                                batch: function(b, c) {
                                    var d, e, f, g = c.shift(), h = c.shift();
                                    if (!a.lib.is("Array", b))
                                        throw new a.Error("batch filter expects items to be an array");
                                    if (!a.lib.is("Number", g))
                                        throw new a.Error("batch filter expects size to be a number");
                                    if (g = Math.ceil(g),
                                    d = a.lib.chunkArray(b, g),
                                    h && b.length % g != 0) {
                                        for (e = d.pop(),
                                        f = g - e.length; f--; )
                                            e.push(h);
                                        d.push(e)
                                    }
                                    return d
                                },
                                round: function(b, c) {
                                    c = c || [];
                                    var d = c.length > 0 ? c[0] : 0
                                      , e = c.length > 1 ? c[1] : "common";
                                    if (b = parseFloat(b),
                                    d && !a.lib.is("Number", d))
                                        throw new a.Error("round filter expects precision to be a number");
                                    if ("common" === e)
                                        return a.lib.round(b, d);
                                    if (!a.lib.is("Function", Math[e]))
                                        throw new a.Error("round filter expects method to be 'floor', 'ceil', or 'common'");
                                    return Math[e](b * Math.pow(10, d)) / Math.pow(10, d)
                                }
                            },
                            a.filter = function(b, c, d) {
                                if (!a.filters[b])
                                    throw "Unable to find filter " + b;
                                return a.filters[b].apply(this, [c, d])
                            }
                            ,
                            a.filter.extend = function(b, c) {
                                a.filters[b] = c
                            }
                            ,
                            a
                        }
                    }
                    , function(a, b) {
                        a.exports = function(b) {
                            return b.functions = {
                                range: function(a, b, c) {
                                    var d, e, f = [], g = c || 1, h = !1;
                                    if (isNaN(a) || isNaN(b) ? isNaN(a) && isNaN(b) ? (h = !0,
                                    d = a.charCodeAt(0),
                                    e = b.charCodeAt(0)) : (d = isNaN(a) ? 0 : a,
                                    e = isNaN(b) ? 0 : b) : (d = parseInt(a, 10),
                                    e = parseInt(b, 10)),
                                    d > e)
                                        for (; d >= e; )
                                            f.push(h ? String.fromCharCode(d) : d),
                                            d -= g;
                                    else
                                        for (; d <= e; )
                                            f.push(h ? String.fromCharCode(d) : d),
                                            d += g;
                                    return f
                                },
                                cycle: function(a, b) {
                                    return a[b % a.length]
                                },
                                dump: function() {
                                    var a = 0
                                      , c = ""
                                      , d = Array.prototype.slice.call(arguments)
                                      , e = function(a) {
                                        for (var b = ""; a > 0; )
                                            a--,
                                            b += "  ";
                                        return b
                                    }
                                      , f = function(b) {
                                        c += e(a),
                                        "object" == typeof b ? g(b) : "function" == typeof b ? c += "function()\n" : "string" == typeof b ? c += "string(" + b.length + ') "' + b + '"\n' : "number" == typeof b ? c += "number(" + b + ")\n" : "boolean" == typeof b && (c += "bool(" + b + ")\n")
                                    }
                                      , g = function(b) {
                                        var d;
                                        if (null === b)
                                            c += "NULL\n";
                                        else if (void 0 === b)
                                            c += "undefined\n";
                                        else if ("object" == typeof b) {
                                            c += e(a) + typeof b,
                                            a++,
                                            c += "(" + function(a) {
                                                var b, c = 0;
                                                for (b in a)
                                                    a.hasOwnProperty(b) && c++;
                                                return c
                                            }(b) + ") {\n";
                                            for (d in b)
                                                c += e(a) + "[" + d + "]=> \n",
                                                f(b[d]);
                                            a--,
                                            c += e(a) + "}\n"
                                        } else
                                            f(b)
                                    };
                                    return 0 == d.length && d.push(this.context),
                                    b.forEach(d, function(a) {
                                        g(a)
                                    }),
                                    c
                                },
                                date: function(a, c) {
                                    var d;
                                    if (void 0 === a || null === a || "" === a)
                                        d = new Date;
                                    else if (b.lib.is("Date", a))
                                        d = a;
                                    else if (b.lib.is("String", a))
                                        d = a.match(/^[0-9]+$/) ? new Date(1e3 * a) : new Date(1e3 * b.lib.strtotime(a));
                                    else {
                                        if (!b.lib.is("Number", a))
                                            throw new b.Error("Unable to parse date " + a);
                                        d = new Date(1e3 * a)
                                    }
                                    return d
                                },
                                block: function(a) {
                                    return this.originalBlockTokens[a] ? b.logic.parse.apply(this, [this.originalBlockTokens[a], this.context]).output : this.blocks[a]
                                },
                                parent: function() {
                                    return b.placeholders.parent
                                },
                                attribute: function(a, c, d) {
                                    return b.lib.is("Object", a) && a.hasOwnProperty(c) ? "function" == typeof a[c] ? a[c].apply(void 0, d) : a[c] : a[c] || void 0
                                },
                                max: function(a) {
                                    return b.lib.is("Object", a) ? (delete a._keys,
                                    b.lib.max(a)) : b.lib.max.apply(null, arguments)
                                },
                                min: function(a) {
                                    return b.lib.is("Object", a) ? (delete a._keys,
                                    b.lib.min(a)) : b.lib.min.apply(null, arguments)
                                },
                                template_from_string: function(a) {
                                    return void 0 === a && (a = ""),
                                    b.Templates.parsers.twig({
                                        options: this.options,
                                        data: a
                                    })
                                },
                                random: function(a) {
                                    function c(a) {
                                        var b = Math.floor(Math.random() * d)
                                          , c = [0, a]
                                          , e = Math.min.apply(null, c)
                                          , f = Math.max.apply(null, c);
                                        return e + Math.floor((f - e + 1) * b / d)
                                    }
                                    var d = 2147483648;
                                    if (b.lib.is("Number", a))
                                        return c(a);
                                    if (b.lib.is("String", a))
                                        return a.charAt(c(a.length - 1));
                                    if (b.lib.is("Array", a))
                                        return a[c(a.length - 1)];
                                    if (b.lib.is("Object", a)) {
                                        var e = Object.keys(a);
                                        return a[e[c(e.length - 1)]]
                                    }
                                    return c(d - 1)
                                },
                                source: function(c, e) {
                                    var f, g, h, i = !1;
                                    void 0 !== a && void 0 !== a.exports && "undefined" == typeof window ? (g = "fs",
                                    h = d + "/" + c) : (g = "ajax",
                                    h = c);
                                    var j = {
                                        id: c,
                                        path: h,
                                        method: g,
                                        parser: "source",
                                        async: !1,
                                        fetchTemplateSource: !0
                                    };
                                    void 0 === e && (e = !1);
                                    try {
                                        f = b.Templates.loadRemote(c, j),
                                        void 0 === f || null === f ? f = "" : i = !0
                                    } catch (a) {
                                        b.log.debug("Twig.functions.source: ", "Problem loading template  ", a)
                                    }
                                    return i || e ? f : 'Template "{name}" is not defined.'.replace("{name}", c)
                                }
                            },
                            b._function = function(a, c, d) {
                                if (!b.functions[a])
                                    throw "Unable to find function " + a;
                                return b.functions[a](c, d)
                            }
                            ,
                            b._function.extend = function(a, c) {
                                b.functions[a] = c
                            }
                            ,
                            b
                        }
                    }
                    , function(a, b, c) {
                        a.exports = function(a) {
                            return a.lib = {},
                            a.lib.sprintf = c(8),
                            a.lib.vsprintf = c(9),
                            a.lib.round = c(10),
                            a.lib.max = c(11),
                            a.lib.min = c(12),
                            a.lib.strip_tags = c(13),
                            a.lib.strtotime = c(14),
                            a.lib.date = c(15),
                            a.lib.boolval = c(16),
                            a.lib.is = function(a, b) {
                                var c = Object.prototype.toString.call(b).slice(8, -1);
                                return void 0 !== b && null !== b && c === a
                            }
                            ,
                            a.lib.copy = function(a) {
                                var b, c = {};
                                for (b in a)
                                    c[b] = a[b];
                                return c
                            }
                            ,
                            a.lib.extend = function(a, b) {
                                var c, d = Object.keys(b);
                                for (c = d.length; c--; )
                                    a[d[c]] = b[d[c]];
                                return a
                            }
                            ,
                            a.lib.replaceAll = function(a, b, c) {
                                return a.split(b).join(c)
                            }
                            ,
                            a.lib.chunkArray = function(b, c) {
                                var d = []
                                  , e = 0
                                  , f = b.length;
                                if (c < 1 || !a.lib.is("Array", b))
                                    return [];
                                for (; e < f; )
                                    d.push(b.slice(e, e += c));
                                return d
                            }
                            ,
                            a
                        }
                    }
                    , function(a, b) {
                        "use strict";
                        a.exports = function() {
                            var a = /%%|%(\d+\$)?([\-+'#0 ]*)(\*\d+\$|\*|\d+)?(?:\.(\*\d+\$|\*|\d+))?([scboxXuideEfFgG])/g
                              , b = arguments
                              , c = 0
                              , d = b[c++]
                              , e = function(a, b, c, d) {
                                c || (c = " ");
                                var e = a.length >= b ? "" : new Array(1 + b - a.length >>> 0).join(c);
                                return d ? a + e : e + a
                            }
                              , f = function(a, b, c, d, f, g) {
                                var h = d - a.length;
                                return h > 0 && (a = c || !f ? e(a, d, g, c) : [a.slice(0, b.length), e("", h, "0", !0), a.slice(b.length)].join("")),
                                a
                            }
                              , g = function(a, b, c, d, g, h, i) {
                                var j = a >>> 0;
                                return c = c && j && {
                                    2: "0b",
                                    8: "0",
                                    16: "0x"
                                }[b] || "",
                                a = c + e(j.toString(b), h || 0, "0", !1),
                                f(a, c, d, g, i)
                            }
                              , h = function(a, b, c, d, e, g) {
                                return null !== d && void 0 !== d && (a = a.slice(0, d)),
                                f(a, "", b, c, e, g)
                            }
                              , i = function(a, d, i, j, k, l) {
                                var m, n, o, p, q;
                                if ("%%" === a)
                                    return "%";
                                var r, s = !1, t = "", u = !1, v = !1, w = " ", x = i.length;
                                for (r = 0; r < x; r++)
                                    switch (i.charAt(r)) {
                                    case " ":
                                        t = " ";
                                        break;
                                    case "+":
                                        t = "+";
                                        break;
                                    case "-":
                                        s = !0;
                                        break;
                                    case "'":
                                        w = i.charAt(r + 1);
                                        break;
                                    case "0":
                                        u = !0,
                                        w = "0";
                                        break;
                                    case "#":
                                        v = !0
                                    }
                                if (j = j ? "*" === j ? +b[c++] : "*" === j.charAt(0) ? +b[j.slice(1, -1)] : +j : 0,
                                j < 0 && (j = -j,
                                s = !0),
                                !isFinite(j))
                                    throw new Error("sprintf: (minimum-)width must be finite");
                                switch (k = k ? "*" === k ? +b[c++] : "*" === k.charAt(0) ? +b[k.slice(1, -1)] : +k : "fFeE".indexOf(l) > -1 ? 6 : "d" === l ? 0 : void 0,
                                q = d ? b[d.slice(0, -1)] : b[c++],
                                l) {
                                case "s":
                                    return h(q + "", s, j, k, u, w);
                                case "c":
                                    return h(String.fromCharCode(+q), s, j, k, u);
                                case "b":
                                    return g(q, 2, v, s, j, k, u);
                                case "o":
                                    return g(q, 8, v, s, j, k, u);
                                case "x":
                                    return g(q, 16, v, s, j, k, u);
                                case "X":
                                    return g(q, 16, v, s, j, k, u).toUpperCase();
                                case "u":
                                    return g(q, 10, v, s, j, k, u);
                                case "i":
                                case "d":
                                    return m = +q || 0,
                                    m = Math.round(m - m % 1),
                                    n = m < 0 ? "-" : t,
                                    q = n + e(String(Math.abs(m)), k, "0", !1),
                                    f(q, n, s, j, u);
                                case "e":
                                case "E":
                                case "f":
                                case "F":
                                case "g":
                                case "G":
                                    return m = +q,
                                    n = m < 0 ? "-" : t,
                                    o = ["toExponential", "toFixed", "toPrecision"]["efg".indexOf(l.toLowerCase())],
                                    p = ["toString", "toUpperCase"]["eEfFgG".indexOf(l) % 2],
                                    q = n + Math.abs(m)[o](k),
                                    f(q, n, s, j, u)[p]();
                                default:
                                    return a
                                }
                            };
                            return d.replace(a, i)
                        }
                    }
                    , function(a, b, c) {
                        "use strict";
                        a.exports = function(a, b) {
                            return c(8).apply(this, [a].concat(b))
                        }
                    }
                    , function(a, b) {
                        "use strict";
                        a.exports = function(a, b, c) {
                            var d, e, f, g;
                            if (b |= 0,
                            d = Math.pow(10, b),
                            a *= d,
                            g = a > 0 | -(a < 0),
                            f = a % 1 == .5 * g,
                            e = Math.floor(a),
                            f)
                                switch (c) {
                                case "PHP_ROUND_HALF_DOWN":
                                    a = e + (g < 0);
                                    break;
                                case "PHP_ROUND_HALF_EVEN":
                                    a = e + e % 2 * g;
                                    break;
                                case "PHP_ROUND_HALF_ODD":
                                    a = e + !(e % 2);
                                    break;
                                default:
                                    a = e + (g > 0)
                                }
                            return (f ? a : Math.round(a)) / d
                        }
                    }
                    , function(a, b) {
                        "use strict";
                        var c = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(a) {
                            return typeof a
                        }
                        : function(a) {
                            return a && "function" == typeof Symbol && a.constructor === Symbol ? "symbol" : typeof a
                        }
                        ;
                        a.exports = function() {
                            var a, b, d = 0, e = 0, f = arguments, g = f.length, h = function(a) {
                                if ("[object Array]" === Object.prototype.toString.call(a))
                                    return a;
                                var b = [];
                                for (var c in a)
                                    a.hasOwnProperty(c) && b.push(a[c]);
                                return b
                            };
                            if (0 === g)
                                throw new Error("At least one value should be passed to max()");
                            if (1 === g) {
                                if ("object" !== c(f[0]))
                                    throw new Error("Wrong parameter count for max()");
                                if (a = h(f[0]),
                                0 === a.length)
                                    throw new Error("Array must contain at least one element for max()")
                            } else
                                a = f;
                            for (b = a[0],
                            d = 1,
                            e = a.length; d < e; ++d)
                                1 === function a(b, d) {
                                    var e = 0
                                      , f = 0
                                      , g = 0
                                      , i = 0
                                      , j = 0;
                                    if (b === d)
                                        return 0;
                                    if ("object" === (void 0 === b ? "undefined" : c(b))) {
                                        if ("object" === (void 0 === d ? "undefined" : c(d))) {
                                            if (b = h(b),
                                            d = h(d),
                                            j = b.length,
                                            (i = d.length) > j)
                                                return 1;
                                            if (i < j)
                                                return -1;
                                            for (e = 0,
                                            f = j; e < f; ++e) {
                                                if (1 === (g = a(b[e], d[e])))
                                                    return 1;
                                                if (-1 === g)
                                                    return -1
                                            }
                                            return 0
                                        }
                                        return -1
                                    }
                                    return "object" === (void 0 === d ? "undefined" : c(d)) ? 1 : isNaN(d) && !isNaN(b) ? 0 === b ? 0 : b < 0 ? 1 : -1 : isNaN(b) && !isNaN(d) ? 0 === d ? 0 : d > 0 ? 1 : -1 : d === b ? 0 : d > b ? 1 : -1
                                }(b, a[d]) && (b = a[d]);
                            return b
                        }
                    }
                    , function(a, b) {
                        "use strict";
                        var c = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(a) {
                            return typeof a
                        }
                        : function(a) {
                            return a && "function" == typeof Symbol && a.constructor === Symbol ? "symbol" : typeof a
                        }
                        ;
                        a.exports = function() {
                            var a, b, d = 0, e = 0, f = arguments, g = f.length, h = function(a) {
                                if ("[object Array]" === Object.prototype.toString.call(a))
                                    return a;
                                var b = [];
                                for (var c in a)
                                    a.hasOwnProperty(c) && b.push(a[c]);
                                return b
                            };
                            if (0 === g)
                                throw new Error("At least one value should be passed to min()");
                            if (1 === g) {
                                if ("object" !== c(f[0]))
                                    throw new Error("Wrong parameter count for min()");
                                if (a = h(f[0]),
                                0 === a.length)
                                    throw new Error("Array must contain at least one element for min()")
                            } else
                                a = f;
                            for (b = a[0],
                            d = 1,
                            e = a.length; d < e; ++d)
                                -1 === function a(b, d) {
                                    var e = 0
                                      , f = 0
                                      , g = 0
                                      , i = 0
                                      , j = 0;
                                    if (b === d)
                                        return 0;
                                    if ("object" === (void 0 === b ? "undefined" : c(b))) {
                                        if ("object" === (void 0 === d ? "undefined" : c(d))) {
                                            if (b = h(b),
                                            d = h(d),
                                            j = b.length,
                                            (i = d.length) > j)
                                                return 1;
                                            if (i < j)
                                                return -1;
                                            for (e = 0,
                                            f = j; e < f; ++e) {
                                                if (1 === (g = a(b[e], d[e])))
                                                    return 1;
                                                if (-1 === g)
                                                    return -1
                                            }
                                            return 0
                                        }
                                        return -1
                                    }
                                    return "object" === (void 0 === d ? "undefined" : c(d)) ? 1 : isNaN(d) && !isNaN(b) ? 0 === b ? 0 : b < 0 ? 1 : -1 : isNaN(b) && !isNaN(d) ? 0 === d ? 0 : d > 0 ? 1 : -1 : d === b ? 0 : d > b ? 1 : -1
                                }(b, a[d]) && (b = a[d]);
                            return b
                        }
                    }
                    , function(a, b) {
                        "use strict";
                        a.exports = function(a, b) {
                            b = (((b || "") + "").toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join("");
                            var c = /<\/?([a-z][a-z0-9]*)\b[^>]*>/gi
                              , d = /<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;
                            return a.replace(d, "").replace(c, function(a, c) {
                                return b.indexOf("<" + c.toLowerCase() + ">") > -1 ? a : ""
                            })
                        }
                    }
                    , function(a, b) {
                        "use strict";
                        a.exports = function(a, b) {
                            function c(a, b, c) {
                                var d, e = i[b];
                                void 0 !== e && (d = e - h.getDay(),
                                0 === d ? d = 7 * c : d > 0 && "last" === a ? d -= 7 : d < 0 && "next" === a && (d += 7),
                                h.setDate(h.getDate() + d))
                            }
                            var d, e, f, g, h, i, j, k, l, m, n;
                            if (!a)
                                return !1;
                            a = a.replace(/^\s+|\s+$/g, "").replace(/\s{2,}/g, " ").replace(/[\t\r\n]/g, "").toLowerCase();
                            var o = new RegExp(["^(\\d{1,4})", "([\\-\\.\\/:])", "(\\d{1,2})", "([\\-\\.\\/:])", "(\\d{1,4})", "(?:\\s(\\d{1,2}):(\\d{2})?:?(\\d{2})?)?", "(?:\\s([A-Z]+)?)?$"].join(""));
                            if ((e = a.match(o)) && e[2] === e[4])
                                if (e[1] > 1901)
                                    switch (e[2]) {
                                    case "-":
                                        return !(e[3] > 12 || e[5] > 31) && new Date(e[1],parseInt(e[3], 10) - 1,e[5],e[6] || 0,e[7] || 0,e[8] || 0,e[9] || 0) / 1e3;
                                    case ".":
                                        return !1;
                                    case "/":
                                        return !(e[3] > 12 || e[5] > 31) && new Date(e[1],parseInt(e[3], 10) - 1,e[5],e[6] || 0,e[7] || 0,e[8] || 0,e[9] || 0) / 1e3
                                    }
                                else if (e[5] > 1901)
                                    switch (e[2]) {
                                    case "-":
                                    case ".":
                                        return !(e[3] > 12 || e[1] > 31) && new Date(e[5],parseInt(e[3], 10) - 1,e[1],e[6] || 0,e[7] || 0,e[8] || 0,e[9] || 0) / 1e3;
                                    case "/":
                                        return !(e[1] > 12 || e[3] > 31) && new Date(e[5],parseInt(e[1], 10) - 1,e[3],e[6] || 0,e[7] || 0,e[8] || 0,e[9] || 0) / 1e3
                                    }
                                else
                                    switch (e[2]) {
                                    case "-":
                                        return !(e[3] > 12 || e[5] > 31 || e[1] < 70 && e[1] > 38) && (g = e[1] >= 0 && e[1] <= 38 ? +e[1] + 2e3 : e[1],
                                        new Date(g,parseInt(e[3], 10) - 1,e[5],e[6] || 0,e[7] || 0,e[8] || 0,e[9] || 0) / 1e3);
                                    case ".":
                                        return e[5] >= 70 ? !(e[3] > 12 || e[1] > 31) && new Date(e[5],parseInt(e[3], 10) - 1,e[1],e[6] || 0,e[7] || 0,e[8] || 0,e[9] || 0) / 1e3 : e[5] < 60 && !e[6] && (!(e[1] > 23 || e[3] > 59) && (f = new Date,
                                        new Date(f.getFullYear(),f.getMonth(),f.getDate(),e[1] || 0,e[3] || 0,e[5] || 0,e[9] || 0) / 1e3));
                                    case "/":
                                        return !(e[1] > 12 || e[3] > 31 || e[5] < 70 && e[5] > 38) && (g = e[5] >= 0 && e[5] <= 38 ? +e[5] + 2e3 : e[5],
                                        new Date(g,parseInt(e[1], 10) - 1,e[3],e[6] || 0,e[7] || 0,e[8] || 0,e[9] || 0) / 1e3);
                                    case ":":
                                        return !(e[1] > 23 || e[3] > 59 || e[5] > 59) && (f = new Date,
                                        new Date(f.getFullYear(),f.getMonth(),f.getDate(),e[1] || 0,e[3] || 0,e[5] || 0) / 1e3)
                                    }
                            if ("now" === a)
                                return null === b || isNaN(b) ? (new Date).getTime() / 1e3 | 0 : 0 | b;
                            if (!isNaN(d = Date.parse(a)))
                                return d / 1e3 | 0;
                            if (o = new RegExp(["^([0-9]{4}-[0-9]{2}-[0-9]{2})", "[ t]", "([0-9]{2}:[0-9]{2}:[0-9]{2}(\\.[0-9]+)?)", "([\\+-][0-9]{2}(:[0-9]{2})?|z)"].join("")),
                            (e = a.match(o)) && ("z" === e[4] ? e[4] = "Z" : e[4].match(/^([\+-][0-9]{2})$/) && (e[4] = e[4] + ":00"),
                            !isNaN(d = Date.parse(e[1] + "T" + e[2] + e[4]))))
                                return d / 1e3 | 0;
                            if (h = b ? new Date(1e3 * b) : new Date,
                            i = {
                                sun: 0,
                                mon: 1,
                                tue: 2,
                                wed: 3,
                                thu: 4,
                                fri: 5,
                                sat: 6
                            },
                            j = {
                                yea: "FullYear",
                                mon: "Month",
                                day: "Date",
                                hou: "Hours",
                                min: "Minutes",
                                sec: "Seconds"
                            },
                            l = "(years?|months?|weeks?|days?|hours?|minutes?|min|seconds?|sec|sunday|sun\\.?|monday|mon\\.?|tuesday|tue\\.?|wednesday|wed\\.?|thursday|thu\\.?|friday|fri\\.?|saturday|sat\\.?)",
                            m = "([+-]?\\d+\\s" + l + "|(last|next)\\s" + l + ")(\\sago)?",
                            !(e = a.match(new RegExp(m,"gi"))))
                                return !1;
                            for (n = 0,
                            k = e.length; n < k; n++)
                                if (!function(a) {
                                    var b = a.split(" ")
                                      , d = b[0]
                                      , e = b[1].substring(0, 3)
                                      , f = /\d+/.test(d)
                                      , g = "ago" === b[2]
                                      , i = ("last" === d ? -1 : 1) * (g ? -1 : 1);
                                    if (f && (i *= parseInt(d, 10)),
                                    j.hasOwnProperty(e) && !b[1].match(/^mon(day|\.)?$/i))
                                        return h["set" + j[e]](h["get" + j[e]]() + i);
                                    if ("wee" === e)
                                        return h.setDate(h.getDate() + 7 * i);
                                    if ("next" === d || "last" === d)
                                        c(d, e, i);
                                    else if (!f)
                                        return !1;
                                    return !0
                                }(e[n]))
                                    return !1;
                            return h.getTime() / 1e3
                        }
                    }
                    , function(a, b) {
                        "use strict";
                        a.exports = function(a, b) {
                            var c, d, e = ["Sun", "Mon", "Tues", "Wednes", "Thurs", "Fri", "Satur", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], f = /\\?(.?)/gi, g = function(a, b) {
                                return d[a] ? d[a]() : b
                            }, h = function(a, b) {
                                for (a = String(a); a.length < b; )
                                    a = "0" + a;
                                return a
                            };
                            d = {
                                d: function() {
                                    return h(d.j(), 2)
                                },
                                D: function() {
                                    return d.l().slice(0, 3)
                                },
                                j: function() {
                                    return c.getDate()
                                },
                                l: function() {
                                    return e[d.w()] + "day"
                                },
                                N: function() {
                                    return d.w() || 7
                                },
                                S: function() {
                                    var a = d.j()
                                      , b = a % 10;
                                    return b <= 3 && 1 === parseInt(a % 100 / 10, 10) && (b = 0),
                                    ["st", "nd", "rd"][b - 1] || "th"
                                },
                                w: function() {
                                    return c.getDay()
                                },
                                z: function() {
                                    var a = new Date(d.Y(),d.n() - 1,d.j())
                                      , b = new Date(d.Y(),0,1);
                                    return Math.round((a - b) / 864e5)
                                },
                                W: function() {
                                    var a = new Date(d.Y(),d.n() - 1,d.j() - d.N() + 3)
                                      , b = new Date(a.getFullYear(),0,4);
                                    return h(1 + Math.round((a - b) / 864e5 / 7), 2)
                                },
                                F: function() {
                                    return e[6 + d.n()]
                                },
                                m: function() {
                                    return h(d.n(), 2)
                                },
                                M: function() {
                                    return d.F().slice(0, 3)
                                },
                                n: function() {
                                    return c.getMonth() + 1
                                },
                                t: function() {
                                    return new Date(d.Y(),d.n(),0).getDate()
                                },
                                L: function() {
                                    var a = d.Y();
                                    return a % 4 == 0 & a % 100 != 0 | a % 400 == 0
                                },
                                o: function() {
                                    var a = d.n()
                                      , b = d.W();
                                    return d.Y() + (12 === a && b < 9 ? 1 : 1 === a && b > 9 ? -1 : 0)
                                },
                                Y: function() {
                                    return c.getFullYear()
                                },
                                y: function() {
                                    return d.Y().toString().slice(-2)
                                },
                                a: function() {
                                    return c.getHours() > 11 ? "pm" : "am"
                                },
                                A: function() {
                                    return d.a().toUpperCase()
                                },
                                B: function() {
                                    var a = 3600 * c.getUTCHours()
                                      , b = 60 * c.getUTCMinutes()
                                      , d = c.getUTCSeconds();
                                    return h(Math.floor((a + b + d + 3600) / 86.4) % 1e3, 3)
                                },
                                g: function() {
                                    return d.G() % 12 || 12
                                },
                                G: function() {
                                    return c.getHours()
                                },
                                h: function() {
                                    return h(d.g(), 2)
                                },
                                H: function() {
                                    return h(d.G(), 2)
                                },
                                i: function() {
                                    return h(c.getMinutes(), 2)
                                },
                                s: function() {
                                    return h(c.getSeconds(), 2)
                                },
                                u: function() {
                                    return h(1e3 * c.getMilliseconds(), 6)
                                },
                                e: function() {
                                    throw new Error("Not supported (see source code of date() for timezone on how to add support)")
                                },
                                I: function() {
                                    return new Date(d.Y(),0) - Date.UTC(d.Y(), 0) != new Date(d.Y(),6) - Date.UTC(d.Y(), 6) ? 1 : 0
                                },
                                O: function() {
                                    var a = c.getTimezoneOffset()
                                      , b = Math.abs(a);
                                    return (a > 0 ? "-" : "+") + h(100 * Math.floor(b / 60) + b % 60, 4)
                                },
                                P: function() {
                                    var a = d.O();
                                    return a.substr(0, 3) + ":" + a.substr(3, 2)
                                },
                                T: function() {
                                    return "UTC"
                                },
                                Z: function() {
                                    return 60 * -c.getTimezoneOffset()
                                },
                                c: function() {
                                    return "Y-m-d\\TH:i:sP".replace(f, g)
                                },
                                r: function() {
                                    return "D, d M Y H:i:s O".replace(f, g)
                                },
                                U: function() {
                                    return c / 1e3 | 0
                                }
                            };
                            return function(a, b) {
                                return c = void 0 === b ? new Date : b instanceof Date ? new Date(b) : new Date(1e3 * b),
                                a.replace(f, g)
                            }(a, b)
                        }
                    }
                    , function(a, b) {
                        "use strict";
                        a.exports = function(a) {
                            return !1 !== a && (0 !== a && 0 !== a && ("" !== a && "0" !== a && ((!Array.isArray(a) || 0 !== a.length) && (null !== a && void 0 !== a))))
                        }
                    }
                    , function(a, b) {
                        a.exports = function(a) {
                            "use strict";
                            a.Templates.registerLoader("ajax", function(b, c, d, e) {
                                var f, g, h = c.precompiled, i = this.parsers[c.parser] || this.parser.twig;
                                if ("undefined" == typeof XMLHttpRequest)
                                    throw new a.Error('Unsupported platform: Unable to do ajax requests because there is no "XMLHTTPRequest" implementation');
                                return g = new XMLHttpRequest,
                                g.onreadystatechange = function() {
                                    var j = null;
                                    4 === g.readyState && (200 === g.status || window.cordova && 0 == g.status ? (a.log.debug("Got template ", g.responseText),
                                    j = !0 === h ? JSON.parse(g.responseText) : g.responseText,
                                    c.url = b,
                                    c.data = j,
                                    f = i.call(this, c),
                                    "function" == typeof d && d(f)) : "function" == typeof e && e(g))
                                }
                                ,
                                g.open("GET", b, !!c.async),
                                g.send(),
                                !!c.async || f
                            })
                        }
                    }
                    , function(a, b, c) {
                        a.exports = function(a) {
                            "use strict";
                            var b, d;
                            try {
                                b = c(19),
                                d = c(20)
                            } catch (a) {}
                            a.Templates.registerLoader("fs", function(c, e, f, g) {
                                var h, i = null, j = e.precompiled, k = this.parsers[e.parser] || this.parser.twig;
                                if (!b || !d)
                                    throw new a.Error('Unsupported platform: Unable to load from file because there is no "fs" or "path" implementation');
                                var l = function(a, b) {
                                    if (a)
                                        return void ("function" == typeof g && g(a));
                                    !0 === j && (b = JSON.parse(b)),
                                    e.data = b,
                                    e.path = e.path || c,
                                    h = k.call(this, e),
                                    "function" == typeof f && f(h)
                                };
                                if (e.path = e.path || c,
                                e.async)
                                    return b.stat(e.path, function(c, d) {
                                        if (c || !d.isFile())
                                            return void ("function" == typeof g && g(new a.Error("Unable to find template file " + e.path)));
                                        b.readFile(e.path, "utf8", l)
                                    }),
                                    !0;
                                try {
                                    if (!b.statSync(e.path).isFile())
                                        throw new a.Error("Unable to find template file " + e.path)
                                } catch (b) {
                                    throw new a.Error("Unable to find template file " + e.path)
                                }
                                return i = b.readFileSync(e.path, "utf8"),
                                l(void 0, i),
                                h
                            })
                        }
                    }
                    , function(b, c) {
                        b.exports = a("fs")
                    }
                    , function(b, c) {
                        b.exports = a("path")
                    }
                    , function(a, b) {
                        a.exports = function(a) {
                            "use strict";
                            for (a.logic = {},
                            a.logic.type = {
                                if_: "Twig.logic.type.if",
                                endif: "Twig.logic.type.endif",
                                for_: "Twig.logic.type.for",
                                endfor: "Twig.logic.type.endfor",
                                else_: "Twig.logic.type.else",
                                elseif: "Twig.logic.type.elseif",
                                set: "Twig.logic.type.set",
                                setcapture: "Twig.logic.type.setcapture",
                                endset: "Twig.logic.type.endset",
                                filter: "Twig.logic.type.filter",
                                endfilter: "Twig.logic.type.endfilter",
                                shortblock: "Twig.logic.type.shortblock",
                                block: "Twig.logic.type.block",
                                endblock: "Twig.logic.type.endblock",
                                extends_: "Twig.logic.type.extends",
                                use: "Twig.logic.type.use",
                                include: "Twig.logic.type.include",
                                spaceless: "Twig.logic.type.spaceless",
                                endspaceless: "Twig.logic.type.endspaceless",
                                macro: "Twig.logic.type.macro",
                                endmacro: "Twig.logic.type.endmacro",
                                import_: "Twig.logic.type.import",
                                from: "Twig.logic.type.from",
                                embed: "Twig.logic.type.embed",
                                endembed: "Twig.logic.type.endembed"
                            },
                            a.logic.definitions = [{
                                type: a.logic.type.if_,
                                regex: /^if\s+([\s\S]+)$/,
                                next: [a.logic.type.else_, a.logic.type.elseif, a.logic.type.endif],
                                open: !0,
                                compile: function(b) {
                                    var c = b.match[1];
                                    return b.stack = a.expression.compile.apply(this, [{
                                        type: a.expression.type.expression,
                                        value: c
                                    }]).stack,
                                    delete b.match,
                                    b
                                },
                                parse: function(b, c, d) {
                                    var e = ""
                                      , f = a.expression.parse.apply(this, [b.stack, c]);
                                    return d = !0,
                                    a.lib.boolval(f) && (d = !1,
                                    e = a.parse.apply(this, [b.output, c])),
                                    {
                                        chain: d,
                                        output: e
                                    }
                                }
                            }, {
                                type: a.logic.type.elseif,
                                regex: /^elseif\s+([^\s].*)$/,
                                next: [a.logic.type.else_, a.logic.type.elseif, a.logic.type.endif],
                                open: !1,
                                compile: function(b) {
                                    var c = b.match[1];
                                    return b.stack = a.expression.compile.apply(this, [{
                                        type: a.expression.type.expression,
                                        value: c
                                    }]).stack,
                                    delete b.match,
                                    b
                                },
                                parse: function(b, c, d) {
                                    var e = ""
                                      , f = a.expression.parse.apply(this, [b.stack, c]);
                                    return d && a.lib.boolval(f) && (d = !1,
                                    e = a.parse.apply(this, [b.output, c])),
                                    {
                                        chain: d,
                                        output: e
                                    }
                                }
                            }, {
                                type: a.logic.type.else_,
                                regex: /^else$/,
                                next: [a.logic.type.endif, a.logic.type.endfor],
                                open: !1,
                                parse: function(b, c, d) {
                                    var e = "";
                                    return d && (e = a.parse.apply(this, [b.output, c])),
                                    {
                                        chain: d,
                                        output: e
                                    }
                                }
                            }, {
                                type: a.logic.type.endif,
                                regex: /^endif$/,
                                next: [],
                                open: !1
                            }, {
                                type: a.logic.type.for_,
                                regex: /^for\s+([a-zA-Z0-9_,\s]+)\s+in\s+([^\s].*?)(?:\s+if\s+([^\s].*))?$/,
                                next: [a.logic.type.else_, a.logic.type.endfor],
                                open: !0,
                                compile: function(b) {
                                    var c = b.match[1]
                                      , d = b.match[2]
                                      , e = b.match[3]
                                      , f = null;
                                    if (b.key_var = null,
                                    b.value_var = null,
                                    c.indexOf(",") >= 0) {
                                        if (f = c.split(","),
                                        2 !== f.length)
                                            throw new a.Error("Invalid expression in for loop: " + c);
                                        b.key_var = f[0].trim(),
                                        b.value_var = f[1].trim()
                                    } else
                                        b.value_var = c;
                                    return b.expression = a.expression.compile.apply(this, [{
                                        type: a.expression.type.expression,
                                        value: d
                                    }]).stack,
                                    e && (b.conditional = a.expression.compile.apply(this, [{
                                        type: a.expression.type.expression,
                                        value: e
                                    }]).stack),
                                    delete b.match,
                                    b
                                },
                                parse: function(b, c, d) {
                                    var e, f, g = a.expression.parse.apply(this, [b.expression, c]), h = [], i = 0, j = this, k = b.conditional, l = function(a, b) {
                                        var d = void 0 !== k;
                                        return {
                                            index: a + 1,
                                            index0: a,
                                            revindex: d ? void 0 : b - a,
                                            revindex0: d ? void 0 : b - a - 1,
                                            first: 0 === a,
                                            last: d ? void 0 : a === b - 1,
                                            length: d ? void 0 : b,
                                            parent: c
                                        }
                                    }, m = function(d, f) {
                                        var g = a.ChildContext(c);
                                        g[b.value_var] = f,
                                        b.key_var && (g[b.key_var] = d),
                                        g.loop = l(i, e),
                                        (void 0 === k || a.expression.parse.apply(j, [k, g])) && (h.push(a.parse.apply(j, [b.output, g])),
                                        i += 1),
                                        delete g.loop,
                                        delete g[b.value_var],
                                        delete g[b.key_var],
                                        a.merge(c, g, !0)
                                    };
                                    return a.lib.is("Array", g) ? (e = g.length,
                                    a.forEach(g, function(a) {
                                        m(i, a)
                                    })) : a.lib.is("Object", g) && (f = void 0 !== g._keys ? g._keys : Object.keys(g),
                                    e = f.length,
                                    a.forEach(f, function(a) {
                                        "_keys" !== a && m(a, g[a])
                                    })),
                                    d = 0 === h.length,
                                    {
                                        chain: d,
                                        output: a.output.apply(this, [h])
                                    }
                                }
                            }, {
                                type: a.logic.type.endfor,
                                regex: /^endfor$/,
                                next: [],
                                open: !1
                            }, {
                                type: a.logic.type.set,
                                regex: /^set\s+([a-zA-Z0-9_,\s]+)\s*=\s*([\s\S]+)$/,
                                next: [],
                                open: !0,
                                compile: function(b) {
                                    var c = b.match[1].trim()
                                      , d = b.match[2]
                                      , e = a.expression.compile.apply(this, [{
                                        type: a.expression.type.expression,
                                        value: d
                                    }]).stack;
                                    return b.key = c,
                                    b.expression = e,
                                    delete b.match,
                                    b
                                },
                                parse: function(b, c, d) {
                                    var e = a.expression.parse.apply(this, [b.expression, c])
                                      , f = b.key;
                                    return e === c && (e = a.lib.copy(e)),
                                    c[f] = e,
                                    {
                                        chain: d,
                                        context: c
                                    }
                                }
                            }, {
                                type: a.logic.type.setcapture,
                                regex: /^set\s+([a-zA-Z0-9_,\s]+)$/,
                                next: [a.logic.type.endset],
                                open: !0,
                                compile: function(a) {
                                    var b = a.match[1].trim();
                                    return a.key = b,
                                    delete a.match,
                                    a
                                },
                                parse: function(b, c, d) {
                                    var e = a.parse.apply(this, [b.output, c])
                                      , f = b.key;
                                    return this.context[f] = e,
                                    c[f] = e,
                                    {
                                        chain: d,
                                        context: c
                                    }
                                }
                            }, {
                                type: a.logic.type.endset,
                                regex: /^endset$/,
                                next: [],
                                open: !1
                            }, {
                                type: a.logic.type.filter,
                                regex: /^filter\s+(.+)$/,
                                next: [a.logic.type.endfilter],
                                open: !0,
                                compile: function(b) {
                                    var c = "|" + b.match[1].trim();
                                    return b.stack = a.expression.compile.apply(this, [{
                                        type: a.expression.type.expression,
                                        value: c
                                    }]).stack,
                                    delete b.match,
                                    b
                                },
                                parse: function(b, c, d) {
                                    var e = a.parse.apply(this, [b.output, c])
                                      , f = [{
                                        type: a.expression.type.string,
                                        value: e
                                    }].concat(b.stack);
                                    return {
                                        chain: d,
                                        output: a.expression.parse.apply(this, [f, c])
                                    }
                                }
                            }, {
                                type: a.logic.type.endfilter,
                                regex: /^endfilter$/,
                                next: [],
                                open: !1
                            }, {
                                type: a.logic.type.block,
                                regex: /^block\s+([a-zA-Z0-9_]+)$/,
                                next: [a.logic.type.endblock],
                                open: !0,
                                compile: function(a) {
                                    return a.block = a.match[1].trim(),
                                    delete a.match,
                                    a
                                },
                                parse: function(b, c, d) {
                                    var e, f, g = a.indexOf(this.importedBlocks, b.block) > -1, h = this.blocks[b.block] && a.indexOf(this.blocks[b.block], a.placeholders.parent) > -1;
                                    return (void 0 === this.blocks[b.block] || g || h || c.loop || b.overwrite) && (e = b.expression ? a.expression.parse.apply(this, [{
                                        type: a.expression.type.string,
                                        value: a.expression.parse.apply(this, [b.output, c])
                                    }, c]) : a.expression.parse.apply(this, [{
                                        type: a.expression.type.string,
                                        value: a.parse.apply(this, [b.output, c])
                                    }, c]),
                                    g && this.importedBlocks.splice(this.importedBlocks.indexOf(b.block), 1),
                                    this.blocks[b.block] = h ? a.Markup(this.blocks[b.block].replace(a.placeholders.parent, e)) : e,
                                    this.originalBlockTokens[b.block] = {
                                        type: b.type,
                                        block: b.block,
                                        output: b.output,
                                        overwrite: !0
                                    }),
                                    f = this.child.blocks[b.block] ? this.child.blocks[b.block] : this.blocks[b.block],
                                    {
                                        chain: d,
                                        output: f
                                    }
                                }
                            }, {
                                type: a.logic.type.shortblock,
                                regex: /^block\s+([a-zA-Z0-9_]+)\s+(.+)$/,
                                next: [],
                                open: !0,
                                compile: function(b) {
                                    return b.expression = b.match[2].trim(),
                                    b.output = a.expression.compile({
                                        type: a.expression.type.expression,
                                        value: b.expression
                                    }).stack,
                                    b.block = b.match[1].trim(),
                                    delete b.match,
                                    b
                                },
                                parse: function(b, c, d) {
                                    return a.logic.handler[a.logic.type.block].parse.apply(this, arguments)
                                }
                            }, {
                                type: a.logic.type.endblock,
                                regex: /^endblock(?:\s+([a-zA-Z0-9_]+))?$/,
                                next: [],
                                open: !1
                            }, {
                                type: a.logic.type.extends_,
                                regex: /^extends\s+(.+)$/,
                                next: [],
                                open: !0,
                                compile: function(b) {
                                    var c = b.match[1].trim();
                                    return delete b.match,
                                    b.stack = a.expression.compile.apply(this, [{
                                        type: a.expression.type.expression,
                                        value: c
                                    }]).stack,
                                    b
                                },
                                parse: function(b, c, d) {
                                    var e, f = a.ChildContext(c), g = a.expression.parse.apply(this, [b.stack, c]);
                                    return this.extend = g,
                                    e = g instanceof a.Template ? g : this.importFile(g),
                                    e.render(f),
                                    a.lib.extend(c, f),
                                    {
                                        chain: d,
                                        output: ""
                                    }
                                }
                            }, {
                                type: a.logic.type.use,
                                regex: /^use\s+(.+)$/,
                                next: [],
                                open: !0,
                                compile: function(b) {
                                    var c = b.match[1].trim();
                                    return delete b.match,
                                    b.stack = a.expression.compile.apply(this, [{
                                        type: a.expression.type.expression,
                                        value: c
                                    }]).stack,
                                    b
                                },
                                parse: function(b, c, d) {
                                    var e = a.expression.parse.apply(this, [b.stack, c]);
                                    return this.importBlocks(e),
                                    {
                                        chain: d,
                                        output: ""
                                    }
                                }
                            }, {
                                type: a.logic.type.include,
                                regex: /^include\s+(.+?)(?:\s|$)(ignore missing(?:\s|$))?(?:with\s+([\S\s]+?))?(?:\s|$)(only)?$/,
                                next: [],
                                open: !0,
                                compile: function(b) {
                                    var c = b.match
                                      , d = c[1].trim()
                                      , e = void 0 !== c[2]
                                      , f = c[3]
                                      , g = void 0 !== c[4] && c[4].length;
                                    return delete b.match,
                                    b.only = g,
                                    b.ignoreMissing = e,
                                    b.stack = a.expression.compile.apply(this, [{
                                        type: a.expression.type.expression,
                                        value: d
                                    }]).stack,
                                    void 0 !== f && (b.withStack = a.expression.compile.apply(this, [{
                                        type: a.expression.type.expression,
                                        value: f.trim()
                                    }]).stack),
                                    b
                                },
                                parse: function(b, c, d) {
                                    var e, f, g, h = {};
                                    if (b.only || (h = a.ChildContext(c)),
                                    void 0 !== b.withStack) {
                                        e = a.expression.parse.apply(this, [b.withStack, c]);
                                        for (f in e)
                                            e.hasOwnProperty(f) && (h[f] = e[f])
                                    }
                                    var i = a.expression.parse.apply(this, [b.stack, c]);
                                    if (i instanceof a.Template)
                                        g = i;
                                    else
                                        try {
                                            g = this.importFile(i)
                                        } catch (a) {
                                            if (b.ignoreMissing)
                                                return {
                                                    chain: d,
                                                    output: ""
                                                };
                                            throw a
                                        }
                                    return {
                                        chain: d,
                                        output: g.render(h)
                                    }
                                }
                            }, {
                                type: a.logic.type.spaceless,
                                regex: /^spaceless$/,
                                next: [a.logic.type.endspaceless],
                                open: !0,
                                parse: function(b, c, d) {
                                    var e = a.parse.apply(this, [b.output, c])
                                      , f = />\s+</g
                                      , g = e.replace(f, "><").trim();
                                    return g = a.Markup(g),
                                    {
                                        chain: d,
                                        output: g
                                    }
                                }
                            }, {
                                type: a.logic.type.endspaceless,
                                regex: /^endspaceless$/,
                                next: [],
                                open: !1
                            }, {
                                type: a.logic.type.macro,
                                regex: /^macro\s+([a-zA-Z0-9_]+)\s*\(\s*((?:[a-zA-Z0-9_]+(?:,\s*)?)*)\s*\)$/,
                                next: [a.logic.type.endmacro],
                                open: !0,
                                compile: function(b) {
                                    for (var c = b.match[1], d = b.match[2].split(/[\s,]+/), e = 0; e < d.length; e++)
                                        for (var f = 0; f < d.length; f++)
                                            if (d[e] === d[f] && e !== f)
                                                throw new a.Error("Duplicate arguments for parameter: " + d[e]);
                                    return b.macroName = c,
                                    b.parameters = d,
                                    delete b.match,
                                    b
                                },
                                parse: function(b, c, d) {
                                    var e = this;
                                    return this.macros[b.macroName] = function() {
                                        for (var c = {
                                            _self: e.macros
                                        }, d = 0; d < b.parameters.length; d++) {
                                            var f = b.parameters[d];
                                            void 0 !== arguments[d] ? c[f] = arguments[d] : c[f] = void 0
                                        }
                                        return a.parse.apply(e, [b.output, c])
                                    }
                                    ,
                                    {
                                        chain: d,
                                        output: ""
                                    }
                                }
                            }, {
                                type: a.logic.type.endmacro,
                                regex: /^endmacro$/,
                                next: [],
                                open: !1
                            }, {
                                type: a.logic.type.import_,
                                regex: /^import\s+(.+)\s+as\s+([a-zA-Z0-9_]+)$/,
                                next: [],
                                open: !0,
                                compile: function(b) {
                                    var c = b.match[1].trim()
                                      , d = b.match[2].trim();
                                    return delete b.match,
                                    b.expression = c,
                                    b.contextName = d,
                                    b.stack = a.expression.compile.apply(this, [{
                                        type: a.expression.type.expression,
                                        value: c
                                    }]).stack,
                                    b
                                },
                                parse: function(b, c, d) {
                                    if ("_self" !== b.expression) {
                                        var e = a.expression.parse.apply(this, [b.stack, c])
                                          , f = this.importFile(e || b.expression);
                                        c[b.contextName] = f.render({}, {
                                            output: "macros"
                                        })
                                    } else
                                        c[b.contextName] = this.macros;
                                    return {
                                        chain: d,
                                        output: ""
                                    }
                                }
                            }, {
                                type: a.logic.type.from,
                                regex: /^from\s+(.+)\s+import\s+([a-zA-Z0-9_, ]+)$/,
                                next: [],
                                open: !0,
                                compile: function(b) {
                                    for (var c = b.match[1].trim(), d = b.match[2].trim().split(/[ ,]+/), e = {}, f = 0; f < d.length; f++) {
                                        var g = d[f]
                                          , h = g.match(/^([a-zA-Z0-9_]+)\s+(.+)\s+as\s+([a-zA-Z0-9_]+)$/);
                                        h ? e[h[1].trim()] = h[2].trim() : g.match(/^([a-zA-Z0-9_]+)$/) && (e[g] = g)
                                    }
                                    return delete b.match,
                                    b.expression = c,
                                    b.macroNames = e,
                                    b.stack = a.expression.compile.apply(this, [{
                                        type: a.expression.type.expression,
                                        value: c
                                    }]).stack,
                                    b
                                },
                                parse: function(b, c, d) {
                                    var e;
                                    if ("_self" !== b.expression) {
                                        var f = a.expression.parse.apply(this, [b.stack, c]);
                                        e = this.importFile(f || b.expression).render({}, {
                                            output: "macros"
                                        })
                                    } else
                                        e = this.macros;
                                    for (var g in b.macroNames)
                                        e.hasOwnProperty(g) && (c[b.macroNames[g]] = e[g]);
                                    return {
                                        chain: d,
                                        output: ""
                                    }
                                }
                            }, {
                                type: a.logic.type.embed,
                                regex: /^embed\s+(.+?)(?:\s|$)(ignore missing(?:\s|$))?(?:with\s+([\S\s]+?))?(?:\s|$)(only)?$/,
                                next: [a.logic.type.endembed],
                                open: !0,
                                compile: function(b) {
                                    var c = b.match
                                      , d = c[1].trim()
                                      , e = void 0 !== c[2]
                                      , f = c[3]
                                      , g = void 0 !== c[4] && c[4].length;
                                    return delete b.match,
                                    b.only = g,
                                    b.ignoreMissing = e,
                                    b.stack = a.expression.compile.apply(this, [{
                                        type: a.expression.type.expression,
                                        value: d
                                    }]).stack,
                                    void 0 !== f && (b.withStack = a.expression.compile.apply(this, [{
                                        type: a.expression.type.expression,
                                        value: f.trim()
                                    }]).stack),
                                    b
                                },
                                parse: function(b, c, d) {
                                    var e, f, g, h = {};
                                    if (!b.only)
                                        for (f in c)
                                            c.hasOwnProperty(f) && (h[f] = c[f]);
                                    if (void 0 !== b.withStack) {
                                        e = a.expression.parse.apply(this, [b.withStack, c]);
                                        for (f in e)
                                            e.hasOwnProperty(f) && (h[f] = e[f])
                                    }
                                    var i = a.expression.parse.apply(this, [b.stack, h]);
                                    if (i instanceof a.Template)
                                        g = i;
                                    else
                                        try {
                                            g = this.importFile(i)
                                        } catch (a) {
                                            if (b.ignoreMissing)
                                                return {
                                                    chain: d,
                                                    output: ""
                                                };
                                            throw a
                                        }
                                    this.blocks = {};
                                    a.parse.apply(this, [b.output, h]);
                                    return {
                                        chain: d,
                                        output: g.render(h, {
                                            blocks: this.blocks
                                        })
                                    }
                                }
                            }, {
                                type: a.logic.type.endembed,
                                regex: /^endembed$/,
                                next: [],
                                open: !1
                            }],
                            a.logic.handler = {},
                            a.logic.extendType = function(b, c) {
                                c = c || "Twig.logic.type" + b,
                                a.logic.type[b] = c
                            }
                            ,
                            a.logic.extend = function(b) {
                                if (!b.type)
                                    throw new a.Error("Unable to extend logic definition. No type provided for " + b);
                                a.logic.extendType(b.type),
                                a.logic.handler[b.type] = b
                            }
                            ; a.logic.definitions.length > 0; )
                                a.logic.extend(a.logic.definitions.shift());
                            return a.logic.compile = function(b) {
                                var c = b.value.trim()
                                  , d = a.logic.tokenize.apply(this, [c])
                                  , e = a.logic.handler[d.type];
                                return e.compile && (d = e.compile.apply(this, [d]),
                                a.log.trace("Twig.logic.compile: ", "Compiled logic token to ", d)),
                                d
                            }
                            ,
                            a.logic.tokenize = function(b) {
                                var c = {}
                                  , d = null
                                  , e = null
                                  , f = null
                                  , g = null
                                  , h = null
                                  , i = null;
                                b = b.trim();
                                for (d in a.logic.handler)
                                    if (a.logic.handler.hasOwnProperty(d))
                                        for (e = a.logic.handler[d].type,
                                        f = a.logic.handler[d].regex,
                                        g = [],
                                        f instanceof Array ? g = f : g.push(f); g.length > 0; )
                                            if (h = g.shift(),
                                            null !== (i = h.exec(b.trim())))
                                                return c.type = e,
                                                c.match = i,
                                                a.log.trace("Twig.logic.tokenize: ", "Matched a ", e, " regular expression of ", i),
                                                c;
                                throw new a.Error("Unable to parse '" + b.trim() + "'")
                            }
                            ,
                            a.logic.parse = function(b, c, d) {
                                var e, f = "";
                                return c = c || {},
                                a.log.debug("Twig.logic.parse: ", "Parsing logic token ", b),
                                e = a.logic.handler[b.type],
                                e.parse && (f = e.parse.apply(this, [b, c, d])),
                                f
                            }
                            ,
                            a
                        }
                    }
                    , function(a, b) {
                        a.exports = function(a) {
                            "use strict";
                            a.Templates.registerParser("source", function(a) {
                                return a.data || ""
                            })
                        }
                    }
                    , function(a, b) {
                        a.exports = function(a) {
                            "use strict";
                            a.Templates.registerParser("twig", function(b) {
                                return new a.Template(b)
                            })
                        }
                    }
                    , function(a, b, c) {
                        a.exports = function(a) {
                            "use strict";
                            return a.path = {},
                            a.path.parsePath = function(b, c) {
                                var d = null
                                  , c = c || "";
                                if ("object" == typeof b && "object" == typeof b.options && (d = b.options.namespaces),
                                "object" == typeof d && c.indexOf("::") > 0 || c.indexOf("@") >= 0) {
                                    for (var e in d)
                                        d.hasOwnProperty(e) && (c = c.replace(e + "::", d[e]),
                                        c = c.replace("@" + e, d[e]));
                                    return c
                                }
                                return a.path.relativePath(b, c)
                            }
                            ,
                            a.path.relativePath = function(b, d) {
                                var e, f, g, h = "/", i = [], d = d || "";
                                if (b.url)
                                    e = void 0 !== b.base ? b.base + ("/" === b.base.charAt(b.base.length - 1) ? "" : "/") : b.url;
                                else if (b.path) {
                                    var j = c(20)
                                      , k = j.sep || h
                                      , l = new RegExp("^\\.{1,2}" + k.replace("\\", "\\\\"));
                                    d = d.replace(/\//g, k),
                                    void 0 !== b.base && null == d.match(l) ? (d = d.replace(b.base, ""),
                                    e = b.base + k) : e = j.normalize(b.path),
                                    e = e.replace(k + k, k),
                                    h = k
                                } else {
                                    if (!b.name && !b.id || !b.method || "fs" === b.method || "ajax" === b.method)
                                        throw new a.Error("Cannot extend an inline template.");
                                    e = b.base || b.name || b.id
                                }
                                for (f = e.split(h),
                                f.pop(),
                                f = f.concat(d.split(h)); f.length > 0; )
                                    "." == (g = f.shift()) || (".." == g && i.length > 0 && ".." != i[i.length - 1] ? i.pop() : i.push(g));
                                return i.join(h)
                            }
                            ,
                            a
                        }
                    }
                    , function(a, b) {
                        a.exports = function(a) {
                            "use strict";
                            return a.tests = {
                                empty: function(a) {
                                    if (null === a || void 0 === a)
                                        return !0;
                                    if ("number" == typeof a)
                                        return !1;
                                    if (a.length && a.length > 0)
                                        return !1;
                                    for (var b in a)
                                        if (a.hasOwnProperty(b))
                                            return !1;
                                    return !0
                                },
                                odd: function(a) {
                                    return a % 2 == 1
                                },
                                even: function(a) {
                                    return a % 2 == 0
                                },
                                divisibleby: function(a, b) {
                                    return a % b[0] == 0
                                },
                                defined: function(a) {
                                    return void 0 !== a
                                },
                                none: function(a) {
                                    return null === a
                                },
                                null: function(a) {
                                    return this.none(a)
                                },
                                "same as": function(a, b) {
                                    return a === b[0]
                                },
                                sameas: function(b, c) {
                                    return a.tests["same as"](b, c)
                                },
                                iterable: function(b) {
                                    return b && (a.lib.is("Array", b) || a.lib.is("Object", b))
                                }
                            },
                            a.test = function(b, c, d) {
                                if (!a.tests[b])
                                    throw "Test " + b + " is not defined.";
                                return a.tests[b](c, d)
                            }
                            ,
                            a.test.extend = function(b, c) {
                                a.tests[b] = c
                            }
                            ,
                            a
                        }
                    }
                    , function(a, b) {
                        a.exports = function(a) {
                            "use strict";
                            return a.exports = {
                                VERSION: a.VERSION
                            },
                            a.exports.twig = function(b) {
                                var c = b.id
                                  , d = {
                                    strict_variables: b.strict_variables || !1,
                                    autoescape: null != b.autoescape && b.autoescape || !1,
                                    allowInlineIncludes: b.allowInlineIncludes || !1,
                                    rethrow: b.rethrow || !1,
                                    namespaces: b.namespaces
                                };
                                if (a.cache && c && a.validateId(c),
                                void 0 !== b.debug && (a.debug = b.debug),
                                void 0 !== b.trace && (a.trace = b.trace),
                                void 0 !== b.data)
                                    return a.Templates.parsers.twig({
                                        data: b.data,
                                        path: b.hasOwnProperty("path") ? b.path : void 0,
                                        module: b.module,
                                        id: c,
                                        options: d
                                    });
                                if (void 0 !== b.ref) {
                                    if (void 0 !== b.id)
                                        throw new a.Error("Both ref and id cannot be set on a twig.js template.");
                                    return a.Templates.load(b.ref)
                                }
                                if (void 0 !== b.method) {
                                    if (!a.Templates.isRegisteredLoader(b.method))
                                        throw new a.Error('Loader for "' + b.method + '" is not defined.');
                                    return a.Templates.loadRemote(b.name || b.href || b.path || c || void 0, {
                                        id: c,
                                        method: b.method,
                                        parser: b.parser || "twig",
                                        base: b.base,
                                        module: b.module,
                                        precompiled: b.precompiled,
                                        async: b.async,
                                        options: d
                                    }, b.load, b.error)
                                }
                                return void 0 !== b.href ? a.Templates.loadRemote(b.href, {
                                    id: c,
                                    method: "ajax",
                                    parser: b.parser || "twig",
                                    base: b.base,
                                    module: b.module,
                                    precompiled: b.precompiled,
                                    async: b.async,
                                    options: d
                                }, b.load, b.error) : void 0 !== b.path ? a.Templates.loadRemote(b.path, {
                                    id: c,
                                    method: "fs",
                                    parser: b.parser || "twig",
                                    base: b.base,
                                    module: b.module,
                                    precompiled: b.precompiled,
                                    async: b.async,
                                    options: d
                                }, b.load, b.error) : void 0
                            }
                            ,
                            a.exports.extendFilter = function(b, c) {
                                a.filter.extend(b, c)
                            }
                            ,
                            a.exports.extendFunction = function(b, c) {
                                a._function.extend(b, c)
                            }
                            ,
                            a.exports.extendTest = function(b, c) {
                                a.test.extend(b, c)
                            }
                            ,
                            a.exports.extendTag = function(b) {
                                a.logic.extend(b)
                            }
                            ,
                            a.exports.extend = function(b) {
                                b(a)
                            }
                            ,
                            a.exports.compile = function(b, c) {
                                var d, e = c.filename, f = c.filename;
                                return d = new a.Template({
                                    data: b,
                                    path: f,
                                    id: e,
                                    options: c.settings["twig options"]
                                }),
                                function(a) {
                                    return d.render(a)
                                }
                            }
                            ,
                            a.exports.renderFile = function(b, c, d) {
                                "function" == typeof c && (d = c,
                                c = {}),
                                c = c || {};
                                var e = c.settings || {}
                                  , f = {
                                    path: b,
                                    base: e.views,
                                    load: function(a) {
                                        d(null, "" + a.render(c))
                                    }
                                }
                                  , g = e["twig options"];
                                if (g)
                                    for (var h in g)
                                        g.hasOwnProperty(h) && (f[h] = g[h]);
                                a.exports.twig(f)
                            }
                            ,
                            a.exports.__express = a.exports.renderFile,
                            a.exports.cache = function(b) {
                                a.cache = b
                            }
                            ,
                            a.exports.path = a.path,
                            a.exports.filters = a.filters,
                            a
                        }
                    }
                    ])
                })
            }
            ).call(this)
        }
        ).call(this, "/node_modules/twig")
    }
    , {
        fs: 1,
        path: 5
    }],
    12: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("core/loader/ManifestLoader")
          , h = d(g)
          , i = a("./AppRouter")
          , j = d(i)
          , k = a("core/modules/ModulesManager")
          , l = d(k)
          , m = a("es6-promise")
          , n = d(m)
          , o = a("vendors/Exist")
          , p = d(o)
          , q = a("vendors/Domtastic")
          , r = (d(q),
        a("utils/Device"))
          , s = d(r)
          , t = a("modules/partials/Header")
          , u = d(t)
          , v = a("modules/partials/Footer")
          , w = d(v)
          , x = a("modules/LoaderModule")
          , y = d(x)
          , z = a("modules/MainLoaderModule")
          , A = d(z)
          , B = a("vendors/signal/Signal")
          , C = (d(B),
        a("utils/Events"))
          , D = d(C)
          , E = a("game/Game")
          , F = d(E)
          , G = a("game/audio/ThreeAudioManager")
          , H = d(G)
          , I = a("game/stage/utils/TextureManager")
          , J = d(I);
        n.default.polyfill();
        var K = function() {
            function a() {
                var b = this;
                if (e(this, a),
                window.app = this,
                !this.webglAvailable())
                    return void (window.location.href = basePath + "old");
                this.onClick = this.onClick.bind(this),
                this.onRoutesMatched = this.onRoutesMatched.bind(this),
                this.$root = $("#root"),
                this.$overlay = $(".overlay")[0],
                this.pixelRatio = window.devicePixelRatio || 1,
                this.datas = {
                    pixelRatio: this.pixelRatio,
                    baseURL: baseURL,
                    basePath: basePath,
                    locale: locale,
                    assetsPath: assetsPath,
                    assetsBaseURL: assetsBaseURL,
                    l10n: l10nJSON,
                    modulesRoutes: modulesJSON,
                    manifest: manifestJSON,
                    library: libraryJSON,
                    svgs: svgsJSON,
                    apiURL: apiURL
                },
                H.default.initStream(),
                H.default.prefix = "assets.audio.",
                H.default.noPanFiles = ["assets.audio.music.intro", "assets.audio.music.main", "assets.audio.music.modul", "assets.audio.jackpot.door.open", "assets.audio.jackpot.door.close", "assets.audio.train.in", "assets.audio.train.out"],
                this.manifestLoader = new h.default(this.datas.basePath,this.datas,{
                    audioManager: H.default
                }),
                this.manifestLoader.complete.addOnce(this.init.bind(this));
                var c = new y.default;
                this.mainLoader = new A.default,
                this.mainLoader.destroy.addOnce(function() {
                    setTimeout(c.bind, 0),
                    b.mainLoader = null
                }),
                l.default.setModulesRoutesData(this.datas.modulesRoutes),
                this.router = new j.default(this.datas.locale,noLocaleInRoute),
                this.router.addRoutes(this.datas.modulesRoutes.modules),
                this.router.routeMatched.add(this.onRoutesMatched),
                this.cookiesSeen = !1,
                this.closeBtnRoute = "/",
                $(document).on(D.default.CLICK, "a[rel='internal']", this.onClick)
            }
            return f(a, [{
                key: "start",
                value: function() {
                    this.router.parse()
                }
            }, {
                key: "init",
                value: function() {
                    this.game = new F.default,
                    this.header = new u.default,
                    this.footer = new w.default
                }
            }, {
                key: "onClick",
                value: function(a) {
                    a.preventDefault(),
                    a.stopPropagation();
                    var b = $(a.target)
                      , c = b.attr("href");
                    (0,
                    p.default)(c) && !b.hasClass("disabled") && this.router.navigate(c)
                }
            }, {
                key: "onRoutesMatched",
                value: function(a) {
                    if (!this.router.lastRoute)
                        for (var b = 0; b < this.datas.manifest.length; b++) {
                            var c = this.datas.manifest[b];
                            if ("default" === c.id) {
                                var d = s.default.mobile ? "mobile" : "desktop";
                                J.default.useCompressedTexture ? (c.dependencies.push("textures-" + J.default.format),
                                c.dependencies.push("diffuses-" + J.default.format + "-" + d)) : (c.dependencies.push("textures-default"),
                                c.dependencies.push("diffuses-default-" + d)),
                                c.dependencies.push("geometries-" + d),
                                "android" === s.default.os || "linux" === s.default.os ? (this.boardId = "board-android",
                                c.dependencies.push("board-android")) : (this.boardId = "board",
                                c.dependencies.push("board"));
                                break
                            }
                        }
                    if (a) {
                        ["home", "game", "result"].indexOf(a[0].moduleId) > -1 && (L.lastModuleId = a[0].moduleId),
                        l.default.switch(a)
                    }
                }
            }, {
                key: "webglAvailable",
                value: function() {
                    try {
                        var a = document.createElement("canvas");
                        return !!window.WebGLRenderingContext && (a.getContext("webgl") || a.getContext("experimental-webgl"))
                    } catch (a) {
                        return !1
                    }
                }
            }]),
            a
        }()
          , L = new K;
        L.start()
    }
    , {
        "./AppRouter": 13,
        "core/loader/ManifestLoader": 15,
        "core/modules/ModulesManager": 19,
        "es6-promise": 2,
        "game/Game": 27,
        "game/audio/ThreeAudioManager": 32,
        "game/stage/utils/TextureManager": 117,
        "modules/LoaderModule": 125,
        "modules/MainLoaderModule": 126,
        "modules/partials/Footer": 130,
        "modules/partials/Header": 131,
        "utils/Device": 135,
        "utils/Events": 136,
        "vendors/Domtastic": 146,
        "vendors/Exist": 147,
        "vendors/signal/Signal": 149
    }],
    13: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function e(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function f(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var g = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , h = function a(b, c, d) {
            null === b && (b = Function.prototype);
            var e = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === e) {
                var f = Object.getPrototypeOf(b);
                return null === f ? void 0 : a(f, c, d)
            }
            if ("value"in e)
                return e.value;
            var g = e.get;
            if (void 0 !== g)
                return g.call(d)
        }
          , i = a("core/utils/Router")
          , j = function(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }(i)
          , k = function(a) {
            function b() {
                return d(this, b),
                e(this, (b.__proto__ || Object.getPrototypeOf(b)).apply(this, arguments))
            }
            return f(b, a),
            g(b, [{
                key: "navigate",
                value: function(a, c) {
                    null != c || appDebug || (c = {
                        silent: !0
                    }),
                    h(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "navigate", this).call(this, a, c)
                }
            }]),
            b
        }(j.default);
        c.default = k
    }
    , {
        "core/utils/Router": 23
    }],
    14: [function(a, b, c) {
        "use strict";
        function d(a) {
            return isNaN(a) ? "00" : m[(a - a % 16) / 16] + m[a % 16]
        }
        function e(a) {
            return a = a.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/),
            "0x" + d(a[1]) + d(a[2]) + d(a[3])
        }
        function f(a, b, c, d) {
            var f = document.createElement("div");
            f.style.color = a,
            TweenMax.to(f, c, {
                color: b,
                onUpdate: function() {
                    d(e(f.style.color))
                }
            })
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var g = function(a, b) {
            b.forEach(function(b) {
                return a[b] = a[b].bind(a)
            })
        }
          , h = function(a) {
            var b = document.createElement("div");
            b.innerHTML = a;
            var c = b.querySelectorAll("path");
            return 1 == c.length ? c[0] : c
        }
          , i = function(a, b) {
            var c = a.getTotalLength()
              , d = b * c
              , e = a.getPointAtLength(d)
              , f = d + 1 <= c ? d + 1 : d - 1
              , g = a.getPointAtLength(f)
              , h = g.x - e.x
              , i = g.y - e.y
              , j = Math.atan2(i, h);
            return f < d && (j += Math.PI),
            {
                angle: j,
                point: e
            }
        }
          , j = function(a) {
            return Array.prototype.slice.call(a, 0)
        }
          , k = function(a) {
            for (var b = 0; a && a.parentNode !== document.body; )
                b += a.offsetTop,
                a = a.parentNode;
            return b
        }
          , l = function(a) {
            return !(!a.querySelector(":hover") && a.parentElement.querySelector(":hover") !== a)
        }
          , m = new Array("0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f");
        c.scope = g,
        c.getPathsFromString = h,
        c.getDataAtLength = i,
        c.collectionToArray = j,
        c.getOffsetTop = k,
        c.isHover = l,
        c.rgbToHex = e,
        c.tweenColor = f
    }
    , {}],
    15: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(a) {
            return typeof a
        }
        : function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
          , g = function() {
            function a(a, b) {
                var c = []
                  , d = !0
                  , e = !1
                  , f = void 0;
                try {
                    for (var g, h = a[Symbol.iterator](); !(d = (g = h.next()).done) && (c.push(g.value),
                    !b || c.length !== b); d = !0)
                        ;
                } catch (a) {
                    e = !0,
                    f = a
                } finally {
                    try {
                        !d && h.return && h.return()
                    } finally {
                        if (e)
                            throw f
                    }
                }
                return c
            }
            return function(b, c) {
                if (Array.isArray(b))
                    return b;
                if (Symbol.iterator in Object(b))
                    return a(b, c);
                throw new TypeError("Invalid attempt to destructure non-iterable instance")
            }
        }()
          , h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = a("vendors/signal/Signal")
          , j = d(i)
          , k = a("utils/StringUtils")
          , l = d(k)
          , m = a("./Unpacker")
          , n = d(m)
          , o = a("vendors/Exist")
          , p = d(o)
          , q = a("core/utils/TemplateRenderer")
          , r = d(q)
          , s = a("utils/Cache")
          , t = d(s)
          , u = a("preload-js")
          , v = d(u)
          , w = function() {
            function a() {
                var b = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "/"
                  , c = arguments[1]
                  , d = arguments[2];
                e(this, a),
                this.onFileLoaded = this.onFileLoaded.bind(this),
                this.onProgress = this.onProgress.bind(this),
                this.onFilesLoaded = this.onFilesLoaded.bind(this),
                this.checkIfLoadComplete = this.checkIfLoadComplete.bind(this),
                this.basePath = b,
                this.datas = c,
                this.options = d,
                this.loader = null,
                this.separator = ".",
                this.nbFilesLoaded = 0,
                this.nbFilesCached = 0,
                this.nbFiles = 0,
                this.start = new j.default,
                this.progress = new j.default,
                this.complete = new j.default
            }
            return h(a, [{
                key: "reset",
                value: function() {
                    this.nbFilesLoaded = 0,
                    this.nbFilesCached = 0,
                    (0,
                    p.default)(this.loader) && (this.loader.removeAllEventListeners(),
                    this.loader.removeAll(),
                    this.loader = null)
                }
            }, {
                key: "load",
                value: function(a) {
                    var b = this
                      , c = a;
                    "string" == typeof a && (c = [a]),
                    c = this.getFilesToLoad(c),
                    this.reset(),
                    this.start.dispatch(),
                    this.nbFiles = c.length;
                    for (var d = [], e = 0; e < c.length; e++) {
                        var f = c[e];
                        if (f.id = r.default.render(f.id, this.datas),
                        t.default.get(f.id) && !(0,
                        p.default)(f.infos.data.nocache))
                            this.onFileLoaded({
                                item: {
                                    id: f.id
                                }
                            });
                        else {
                            var g = {
                                id: f.id,
                                src: f.src,
                                data: f.infos
                            };
                            (0,
                            p.default)(f.type) && (g.type = f.type),
                            d.push(g)
                        }
                    }
                    this.nbFilesCached === this.nbFiles ? this.onFilesLoaded() : (this.nbFilesToLoad = 0,
                    this.loader = new v.default.LoadQueue(!0),
                    this.loader.addEventListener("fileload", this.onFileLoaded),
                    this.loader.addEventListener("progress", this.onProgress),
                    d.map(function(a) {
                        return b.loader.loadFile(a)
                    }))
                }
            }, {
                key: "onProgress",
                value: function(a) {
                    this.progress.dispatch(a)
                }
            }, {
                key: "onFileLoaded",
                value: function(a) {
                    var b = this
                      , c = a.item
                      , d = c.id;
                    if (this.nbFilesCached++,
                    t.default.get(d))
                        this.nbFilesLoaded++,
                        this.checkIfLoadComplete();
                    else {
                        var e = {
                            item: a.result
                        };
                        (0,
                        p.default)(c.data) && (0,
                        p.default)(c.data.data) && (0,
                        p.default)(c.data.data.mapping) ? e.mapping = c.data.data.mapping : e.library_id = c.data.fileId,
                        c.data.data.nocache ? t.default.setTmp(d, a.result) : t.default.set(d, e);
                        var h = c.data.batchId
                          , i = c.data.fileId;
                        if (-1 !== i.indexOf("packConf") && t.default.get(h + this.separator + "packFile") || -1 !== i.indexOf("packFile") && t.default.get(h + this.separator + "packConf")) {
                            var j = function() {
                                var a = t.default.get(h + b.separator + "packConf");
                                t.default.empty(h + b.separator + "packConf");
                                var c = a.item
                                  , d = t.default.get(h + b.separator + "packFile").item;
                                t.default.empty(h + b.separator + "packFile");
                                for (var e = a.mapping, f = new n.default(d,c), i = 0, j = e.length, k = 0; k < e.length; k++) {
                                    var l = e[k];
                                    (0,
                                    p.default)(l.library_id) && (l.src = b.getFileSrcFromLibrary(l),
                                    l.id = l.library_id);
                                    var m = f.getType(l.src)
                                      , o = m.split(";", 1);
                                    m = g(o, 1)[0];
                                    var q = m.split("/", 1)
                                      , r = g(q, 1)
                                      , s = r[0]
                                      , u = h + b.separator + l.id
                                      , v = void 0;
                                    if ("application/json" == m)
                                        try {
                                            v = JSON.parse(f.getAsString(l.src))
                                        } catch (a) {
                                            return {
                                                v: void 0
                                            }
                                        }
                                    else
                                        l.src.match("m4a") ? v = f.getAsBytes(l.src) : l.src.match("gltf") ? v = f.getAsBytes(l.src) : "text" == s ? v = f.getAsString(l.src) : "image" == s ? (v = new Image,
                                        v._cacheId = u) : v = f.getAsBytes(l.src);
                                    if ("text/twig" == m && b.registerPartial(l.src, v),
                                    l.src.match("m4a") || t.default.set(h + b.separator + l.id, {
                                        item: v,
                                        library_id: l.id
                                    }),
                                    l.src.match("m4a") && b.options.audioManager) {
                                        var w = void 0;
                                        w = b.options.audioManager.hasAudioContext() ? v : app.datas.baseURL + app.datas.assetsPath + l.src,
                                        b.options.audioManager.queue.push({
                                            id: l.id,
                                            data: w
                                        })
                                    }
                                    "image" == s ? function() {
                                        var a = function a(c) {
                                            c.target.removeEventListener("load", a),
                                            c.target.removeEventListener("error", a),
                                            ++i == j && (b.nbFilesLoaded++,
                                            b.checkIfLoadComplete())
                                        };
                                        v.addEventListener("load", a),
                                        v.addEventListener("error", a),
                                        v.src = f.getAsURI(l.src)
                                    }() : ++i == j && (b.nbFilesLoaded++,
                                    b.checkIfLoadComplete())
                                }
                            }();
                            if ("object" === (void 0 === j ? "undefined" : f(j)))
                                return j.v
                        } else {
                            var k = c.src.match(/.*\.(twig)/i);
                            (0,
                            p.default)(k) && "twig" === k[1] && this.registerPartial(this.getFileSrcFromLibrary(c.data.data), e.item),
                            this.nbFilesLoaded++,
                            this.checkIfLoadComplete()
                        }
                    }
                }
            }, {
                key: "checkIfLoadComplete",
                value: function() {
                    this.nbFilesLoaded == this.nbFiles && this.onFilesLoaded()
                }
            }, {
                key: "onFilesLoaded",
                value: function() {
                    this.complete.dispatch(),
                    this.reset()
                }
            }, {
                key: "registerPartial",
                value: function(a, b) {
                    var c = a.replace("shared/html/partials", "@partials");
                    r.default.registerPartial(c, b)
                }
            }, {
                key: "getFilesToLoad",
                value: function(a) {
                    var b = []
                      , c = a;
                    "string" == typeof a && (c = [a]);
                    for (var d = 0, e = [0, 1], f = void 0, g = void 0, h = void 0, i = 0; i < e.length; i++)
                        for (var j = c, k = 0; k < this.datas.manifest.length; k++) {
                            f = this.datas.manifest[k];
                            for (var l = 0; l < j.length; l++)
                                if (g = j[l],
                                f.id === g && (0,
                                p.default)(f.dependencies))
                                    for (var m = 0; m < f.dependencies.length; m++) {
                                        var n = f.dependencies[m];
                                        -1 === c.indexOf(n) && c.push(n)
                                    }
                        }
                    for (var o = 0; o < this.datas.manifest.length; o++) {
                        f = this.datas.manifest[o];
                        for (var q = 0; q < c.length; q++)
                            if (g = c[q],
                            f.id === g) {
                                d++;
                                for (var s = 0; s < f.files.length; s++) {
                                    var t = f.files[s];
                                    if ((0,
                                    p.default)(t.library_id) && (t.id = t.library_id),
                                    (0,
                                    p.default)(t.sequence)) {
                                        this.nbFiles = parseInt(t.sequence, 10);
                                        var u = 0;
                                        (0,
                                        p.default)(t.offset) && (u = parseInt(t.offset, 10));
                                        for (var v = u; v < this.nbFiles.length; v++) {
                                            var w = v
                                              , x = r.default.render(t.id, {
                                                sequence: w
                                            });
                                            t.library_id = x,
                                            h = this.getFileSrc(t, this.datas),
                                            b.push({
                                                id: f.id + this.separator + x,
                                                src: h,
                                                infos: {
                                                    batchId: f.id,
                                                    fileId: x,
                                                    data: t
                                                }
                                            })
                                        }
                                    } else {
                                        h = this.getFileSrc(t, this.datas);
                                        var y = {
                                            id: f.id + this.separator + t.id,
                                            src: h,
                                            infos: {
                                                batchId: f.id,
                                                fileId: t.id,
                                                data: t
                                            }
                                        };
                                        -1 !== t.id.indexOf("packFile") && (y.type = "binary"),
                                        b.push(y)
                                    }
                                }
                            }
                    }
                    if (d !== c.length)
                        throw "Some batches were not found: " + c.toString();
                    return b
                }
            }, {
                key: "getFile",
                value: function(a, b) {
                    var c = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]
                      , d = a + this.separator + b
                      , e = t.default.get(d);
                    return e = e ? e.item : t.default.getTmp(d),
                    c && e && (e = $(e).clone()[0]),
                    e
                }
            }, {
                key: "getFileById",
                value: function(a) {
                    var b = t.default.getAll();
                    for (var c in b) {
                        var d = b[c];
                        if ((0,
                        p.default)(d.library_id) && d.library_id === a)
                            return d.item.src
                    }
                    return null
                }
            }, {
                key: "getPrefix",
                value: function() {
                    var a = this.datas.baseURL;
                    return -1 === a.indexOf("http://") && -1 === a.indexOf("https://") && (a = window.location.protocol + a),
                    a
                }
            }, {
                key: "getFilesByBatchId",
                value: function(a) {
                    var b = t.default.getAll()
                      , c = [];
                    for (var d in b) {
                        var e = b[d];
                        -1 !== (d + this.separator).indexOf(a + this.separator) && c.push({
                            id: d,
                            item: e
                        })
                    }
                    return c
                }
            }, {
                key: "getFileSrcFromLibrary",
                value: function(a) {
                    var b = a.library_id.split(".")
                      , c = this.datas.library[b[0]];
                    return b.shift(),
                    b = b.join("."),
                    c = c[b]
                }
            }, {
                key: "getFileSrc",
                value: function(a, b) {
                    var c = void 0;
                    c = (0,
                    p.default)(a.library_id) ? this.getFileSrcFromLibrary(a) : a.src,
                    (0,
                    p.default)(b) && (c = r.default.render(c, b));
                    var d = c.match(/.*\.(twig)/i);
                    if ((0,
                    p.default)(d) && "twig" == d[1] || -1 === c.indexOf("http://") && -1 === c.indexOf("https://") && (c = this.datas.assetsBaseURL + this.datas.assetsPath + c),
                    -1 === c.indexOf("http://") && -1 === c.indexOf("https://")) {
                        var e = this.getPrefix();
                        "/" !== e.substring(e.length - 1) && (e += "/"),
                        c = e + l.default.removeLeadingSlash(c)
                    }
                    return c
                }
            }]),
            a
        }();
        c.default = w
    }
    , {
        "./Unpacker": 16,
        "core/utils/TemplateRenderer": 24,
        "preload-js": 8,
        "utils/Cache": 133,
        "utils/StringUtils": 142,
        "vendors/Exist": 147,
        "vendors/signal/Signal": 149
    }],
    16: [function(a, c, d) {
        "use strict";
        !function(a) {
            var d = function() {
                function a(a) {
                    var c, d, e, f, g, h, i, j = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split(""), k = a.length, l = cb = b = bl = v = 0, m = "";
                    if ("string" == typeof a || a instanceof String)
                        for (; l < k; )
                            c = 255 & a.charCodeAt(l + 0),
                            d = 255 & a.charCodeAt(l + 1),
                            e = 255 & a.charCodeAt(l + 2),
                            f = c >> 2 & 63,
                            g = 63 & (c << 4 | d >> 4),
                            h = 63 & (d << 2 | e >> 6),
                            i = 63 & e,
                            m += j[f] + j[g] + j[h] + j[i],
                            l += 3;
                    else
                        for (; l < k; )
                            c = 255 & a[l + 0],
                            d = 255 & a[l + 1],
                            e = 255 & a[l + 2],
                            f = c >> 2 & 63,
                            g = 63 & (c << 4 | d >> 4),
                            h = 63 & (d << 2 | e >> 6),
                            i = 63 & e,
                            m += j[f] + j[g] + j[h] + j[i],
                            l += 3;
                    return l = k % 3,
                    k = m.length,
                    1 == l ? m = m.substr(0, k - 2) + "==" : 2 == l && (m = m.substr(0, k - 1) + "="),
                    m
                }
                function c(a, b) {
                    a && this._init(a, b)
                }
                var d, e = window.URL || window.webkitURL || window.mozURL || window.msURL;
                try {
                    d = Boolean(Blob)
                } catch (a) {
                    d = !1
                }
                return ArrayBuffer.prototype.slice || (ArrayBuffer.prototype.slice = function(a, b) {
                    if (void 0 === a && (a = 0),
                    void 0 === b && (b = this.byteLength),
                    a = Math.floor(a),
                    b = Math.floor(b),
                    a < 0 && (a += this.byteLength),
                    b < 0 && (b += this.byteLength),
                    a = Math.min(Math.max(0, a), this.byteLength),
                    (b = Math.min(Math.max(0, b), this.byteLength)) - a <= 0)
                        return new ArrayBuffer(0);
                    var c = new ArrayBuffer(b - a)
                      , d = new Uint8Array(c)
                      , e = new Uint8Array(this,a,b - a);
                    return d.set(e),
                    c
                }
                ),
                c.prototype._init = function(a, b) {
                    this.config = b,
                    this.pack = a
                }
                ,
                c.prototype.getType = function(a) {
                    return this._findFile(a).type || "text/plain"
                }
                ,
                c.prototype.getAsString = function(a) {
                    if (null == this.pack)
                        return "";
                    var b = this.getData(a);
                    if ("string" == typeof b || b instanceof String)
                        return b;
                    b = new Uint8Array(b);
                    for (var c = "", d = Math.ceil(b.byteLength / 65535), e = 0, f = 0; f < d; f++)
                        c += String.fromCharCode.apply(null, new Uint8Array(b.buffer.slice(e, e + 65535))),
                        e += 65535;
                    return c = decodeURIComponent(escape(c))
                }
                ,
                c.prototype.getAsURI = function(b) {
                    var c = this.getData(b)
                      , f = this.getType(b);
                    return d ? e.createObjectURL(new Blob([c],{
                        type: f
                    })) : "data:" + f + ";base64," + a(c)
                }
                ,
                c.prototype.getAsBytes = function(a) {
                    var b = this.getData(a);
                    if ("string" == typeof b || b instanceof String) {
                        if ("function" != typeof Uint8Array)
                            throw new Error("TypedArray are not supported");
                        return new Uint8Array(b.split("").map(function(a) {
                            return a.charCodeAt(0)
                        }))
                    }
                    return b
                }
                ,
                c.prototype.getData = function(a) {
                    var b = this._findFile(a);
                    return this._slice(b.begin, b.end)
                }
                ,
                c.prototype._slice = function(a, b) {
                    return null == this.pack ? "function" == typeof Uint8Array ? new Uint8Array([]) : "" : "function" == typeof this.pack.substr ? this.pack.substr(a, b - a) : this.pack.slice(a, b)
                }
                ,
                c.prototype._findFile = function(a) {
                    for (var b = this.config.length; b-- > 0; )
                        if (this.config[b][0] == a) {
                            var c = this.config[b]
                              , d = c[3];
                            return c[0].match(/dds/g) && (d = "application/octet-stream"),
                            {
                                name: c[0],
                                begin: c[1],
                                end: c[2],
                                type: d
                            }
                        }
                }
                ,
                c
            }();
            "function" == typeof define && define.amd ? define(function() {
                return d
            }) : void 0 !== c && c.exports ? c.exports = d : a.Unpacker = d
        }(void 0)
    }
    , {}],
    17: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = a("vendors/signal/Signal")
          , g = function(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }(f)
          , h = function() {
            function a(b, c) {
                d(this, a),
                this.id = b,
                this.params = c,
                this.onDestroy = new g.default,
                this.onShow = new g.default,
                this.onEnterComplete = new g.default,
                this.onExitComplete = new g.default,
                this.submodules = [],
                this.showStart = this.showStart.bind(this),
                this.showEnd = this.showEnd.bind(this),
                this.hideStart = this.hideStart.bind(this),
                this.hideEnd = this.hideEnd.bind(this),
                this.destroy = this.destroy.bind(this)
            }
            return e(a, [{
                key: "addSubmodule",
                value: function(a) {
                    a.onDestroy.addOnce(this.onSubmoduleDestroy, {
                        submodule: a,
                        submodules: this.submodules,
                        _this: this
                    }),
                    this.submodules.push({
                        id: a.id,
                        module: a
                    })
                }
            }, {
                key: "onSubmoduleDestroy",
                value: function() {
                    this.submodules.splice(this.submodules.indexOf(this.submodule), 1)
                }
            }, {
                key: "enter",
                value: function() {
                    for (var a = 0; a < this.submodules.length; a++) {
                        this.submodules[a].module.enter()
                    }
                    this.show()
                }
            }, {
                key: "show",
                value: function() {
                    this.showStart(),
                    this.showEnd()
                }
            }, {
                key: "showStart",
                value: function() {
                    this.showed = !0,
                    this.onShow.dispatch()
                }
            }, {
                key: "showEnd",
                value: function() {
                    this.onEnterComplete.dispatch()
                }
            }, {
                key: "exit",
                value: function() {
                    for (var a = 0; a < this.submodules.length; a++) {
                        this.submodules[a].module.exit()
                    }
                    this.hide()
                }
            }, {
                key: "hide",
                value: function() {
                    this.hideStart(),
                    this.hideEnd()
                }
            }, {
                key: "destroy",
                value: function() {
                    this.submodules = [],
                    this.onDestroy.dispatch(),
                    this.onExitComplete.dispatch()
                }
            }, {
                key: "hideStart",
                value: function() {
                    this.showed = !1
                }
            }, {
                key: "hideEnd",
                value: function() {
                    this.destroy()
                }
            }]),
            a
        }();
        c.default = h
    }
    , {
        "vendors/signal/Signal": 149
    }],
    18: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = a("vendors/signal/Signal")
          , g = function(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }(f)
          , h = function() {
            function a() {
                d(this, a)
            }
            return e(a, null, [{
                key: "loadModules",
                value: function(a) {
                    this.nextModules = a,
                    this.clean(),
                    this.checkIfReady(),
                    this.previousModules = this.nextModules
                }
            }, {
                key: "clean",
                value: function() {
                    if (this.loaded = 0,
                    app.manifestLoader.complete.remove(this.onLoadComplete),
                    this.previousModules && this.previousModules.length > 0)
                        return this.previousModules.map(function(a) {
                            return a.module.preloadReady.removeAll()
                        })
                }
            }, {
                key: "checkIfReady",
                value: function() {
                    var a = this;
                    this.nextModules.map(function(b) {
                        return b.module.preloadReady.addOnce(a.onReady),
                        b.module.preload()
                    })
                }
            }, {
                key: "onReady",
                value: function(a) {
                    for (var b = 0; b < this.nextModules.length; b++) {
                        var c = this.nextModules[b];
                        c.id === a && (c.ready = !0,
                        this.loaded++)
                    }
                    this.loaded === this.nextModules.length && this.load()
                }
            }, {
                key: "load",
                value: function() {
                    for (var a = [], b = 0; b < this.nextModules.length; b++) {
                        var c = this.nextModules[b];
                        a = a.concat(c.module.getBatches())
                    }
                    app.manifestLoader.complete.addOnce(this.onLoadComplete),
                    app.manifestLoader.load(a)
                }
            }, {
                key: "onLoadComplete",
                value: function() {
                    this.complete.dispatch()
                }
            }]),
            a
        }();
        c.default = h,
        h.onReady = h.onReady.bind(h),
        h.onLoadComplete = h.onLoadComplete.bind(h),
        h.complete = new g.default
    }
    , {
        "vendors/signal/Signal": 149
    }],
    19: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("./ModulesSwitcher")
          , h = d(g)
          , i = a("extend")
          , j = d(i)
          , k = a("vendors/Exist")
          , l = d(k)
          , m = function() {
            function a() {
                e(this, a)
            }
            return f(a, null, [{
                key: "setModulesRoutesData",
                value: function(a) {
                    this.modulesRoutesData = a
                }
            }, {
                key: "switch",
                value: function(a) {
                    var b = this.cloneModules(this.modulesRoutesData)
                      , c = []
                      , d = []
                      , e = this.getModuleByRoute(a[0].route, b, d);
                    d = d.reverse(),
                    d.push(e.id),
                    this.cleanTree(b, d),
                    this.getFlattenTree(b.modules, c),
                    h.default.switch(b, c, a[0], e)
                }
            }, {
                key: "cleanTree",
                value: function(a, b) {
                    if ((0,
                    l.default)(a.modules))
                        for (var c = a.modules.length; c--; ) {
                            var d = a.modules[c];
                            -1 === b.indexOf(d.id) && (0,
                            l.default)(d.routes) && a.modules.splice(c, 1),
                            this.cleanTree(d, b)
                        }
                }
            }, {
                key: "getFlattenTree",
                value: function(a, b) {
                    for (var c = a.length, d = 0; d < c; d++) {
                        var e = a[d];
                        b.push(e.id),
                        (0,
                        l.default)(e.modules) && e.modules.length > 0 && this.getFlattenTree(e.modules, b)
                    }
                }
            }, {
                key: "getModuleByRoute",
                value: function(a, b, c) {
                    for (var d = b.modules.length, e = 0; e < d; e++) {
                        var f = b.modules[e];
                        if ((0,
                        l.default)(f.routes) && f.routes.indexOf(a) > -1)
                            return f;
                        if ((0,
                        l.default)(f.modules)) {
                            var g = this.getModuleByRoute(a, f, c);
                            if ((0,
                            l.default)(g))
                                return c.push(f.id),
                                g
                        }
                    }
                }
            }, {
                key: "cloneModules",
                value: function(a) {
                    return a = (0,
                    j.default)(!0, {}, a)
                }
            }]),
            a
        }();
        c.default = m
    }
    , {
        "./ModulesSwitcher": 20,
        extend: 3,
        "vendors/Exist": 147
    }],
    20: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("./ModulesLoader")
          , h = d(g)
          , i = a("vendors/Exist")
          , j = d(i)
          , k = a("modules/index")
          , l = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(k)
          , m = a("core/utils/TransitionType")
          , n = d(m)
          , o = function() {
            function a() {
                e(this, a)
            }
            return f(a, null, [{
                key: "switch",
                value: function(a, b, c, d) {
                    null == this.modules && (this.modules = []),
                    this.flattenNextModules = b,
                    this.routeObject = c,
                    this.nextModule = d,
                    this.addNewModules(a.modules);
                    for (var e = [], f = 0; f < this.flattenNextModules.length; f++) {
                        var g = this.flattenNextModules[f];
                        e.push(this.getModuleById(g))
                    }
                    this.cleanSwitch(),
                    h.default.complete.addOnce(this.doSwitch),
                    h.default.loadModules(e)
                }
            }, {
                key: "cleanSwitch",
                value: function() {
                    h.default.complete.removeAll()
                }
            }, {
                key: "doSwitch",
                value: function() {
                    switch (this.cleanSubmodules(this.modules, this.flattenNextModules),
                    this.modulesToExit = this.resolveModulesToExit(this.modules, this.flattenNextModules),
                    this.modulesToEnter = this.resolveModulesToEnter(this.flattenNextModules),
                    this.transitionType = this.modulesToEnter[0].resolveTransitionType(),
                    this.transitionType) {
                    case n.default.ENTER_BEFORE_EXIT:
                        this.enterModules();
                        break;
                    case n.default.SIMULTANEOUS:
                        this.exitModules(),
                        this.enterModules();
                        break;
                    case n.default.EXIT_BEFORE_ENTER:
                    default:
                        this.exitModules()
                    }
                }
            }, {
                key: "enterModules",
                value: function() {
                    a.cascadeEnterSwitch(a.modulesToEnter)
                }
            }, {
                key: "exitModules",
                value: function() {
                    this.cascadeExitSwitch(this.modulesToExit)
                }
            }, {
                key: "cleanSubmodules",
                value: function(a, b, c) {
                    for (var d = 0; d < a.length; d++)
                        -1 == b.indexOf(a[d].id) && c && c.submodules.splice(c.submodules.indexOf(a[d]), 1),
                        (0,
                        j.default)(a[d]) && (0,
                        j.default)(a[d].module) && a[d].module.submodules.length > 0 && this.cleanSubmodules(a[d].module.submodules, b, a[d].module)
                }
            }, {
                key: "cascadeEnterSwitch",
                value: function(a) {
                    for (var b = 0; b < a.length; b++)
                        0 == b && this.transitionType == n.default.ENTER_BEFORE_EXIT && a[b].onEnterComplete.addOnce(this.exitModules),
                        a[b].enter()
                }
            }, {
                key: "resolveModulesToEnter",
                value: function() {
                    for (var a = [], b = 0; b < this.modules.length; b++) {
                        var c = this.getModuleById(this.modules[b].id);
                        a.push(c.module)
                    }
                    return a
                }
            }, {
                key: "getModuleById",
                value: function(a) {
                    for (var b = 0; b < this.modules.length; b++) {
                        var c = this.modules[b];
                        if (c.id === a)
                            return c
                    }
                }
            }, {
                key: "addNewModules",
                value: function(a) {
                    for (var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, c = 0; c < a.length; c++) {
                        var d = a[c]
                          , e = {
                            params: {}
                        };
                        this.nextModule.id === d.id && (e = this.routeObject);
                        var f = this.getModuleById(d.id)
                          , g = null;
                        (0,
                        j.default)(b) && (e.params.parent = b.id),
                        (null == f || (0,
                        j.default)(f) && e.params.id != f.module.params.id) && (g = new (l[this.defineClassName(d)])(d.id,e.params),
                        (0,
                        j.default)(b) && b.addSubmodule(g),
                        this.modules.push({
                            id: d.id,
                            module: g,
                            ready: !1
                        })),
                        null == g && (g = f.module),
                        (0,
                        j.default)(d.modules) && d.modules.length > 0 && this.addNewModules(d.modules, g)
                    }
                }
            }, {
                key: "defineClassName",
                value: function(a) {
                    var b = a.id
                      , c = b.toLowerCase().replace(/-(.)/g, function(a, b) {
                        return b.toUpperCase()
                    });
                    return c = c.charAt(0).toUpperCase() + c.slice(1),
                    c += "Module"
                }
            }, {
                key: "cascadeExitSwitch",
                value: function(a) {
                    0 == a.length && this.transitionType == n.default.EXIT_BEFORE_ENTER && this.enterModules();
                    for (var b = 0; b < a.length; b++)
                        0 == b && this.transitionType == n.default.EXIT_BEFORE_ENTER && a[b].onExitComplete.addOnce(this.enterModules),
                        a[b].exit()
                }
            }, {
                key: "resolveModulesToExit",
                value: function(a, b) {
                    for (var c = [], d = a.length; d--; ) {
                        var e = a[d];
                        (-1 === b.indexOf(e.id) || -1 !== b.indexOf(e.id) && e.id == this.nextModule.id && this.routeObject.params.id !== e.module.params.id) && (c.push(e.module),
                        a.splice(d, 1))
                    }
                    return c
                }
            }]),
            a
        }();
        c.default = o,
        o.doSwitch = o.doSwitch.bind(o)
    }
    , {
        "./ModulesLoader": 18,
        "core/utils/TransitionType": 25,
        "modules/index": 129,
        "vendors/Exist": 147
    }],
    21: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("./MiddlewareMethods")
          , h = d(g)
          , i = a("vendors/signal/Signal")
          , j = d(i)
          , k = function() {
            function a() {
                e(this, a)
            }
            return f(a, null, [{
                key: "callMethod",
                value: function(a) {
                    "function" == typeof h.default[a] ? h.default[a].call(this) : this.respondPositive()
                }
            }, {
                key: "respondPositive",
                value: function() {
                    this.response.dispatch(!0)
                }
            }, {
                key: "respondNegative",
                value: function() {
                    this.response.dispatch(!1)
                }
            }]),
            a
        }();
        c.default = k,
        k.response = new j.default
    }
    , {
        "./MiddlewareMethods": 22,
        "vendors/signal/Signal": 149
    }],
    22: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function e(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function f(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var g = a("./Middleware")
          , h = function(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }(g)
          , i = function(a) {
            function b() {
                return d(this, b),
                e(this, (b.__proto__ || Object.getPrototypeOf(b)).apply(this, arguments))
            }
            return f(b, a),
            b
        }(h.default);
        c.default = i
    }
    , {
        "./Middleware": 21
    }],
    23: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("vendors/signal/Signal")
          , h = d(g)
          , i = a("path-to-regexp")
          , j = d(i)
          , k = a("utils/StringUtils")
          , l = d(k)
          , m = a("./MiddlewareMethods")
          , n = d(m)
          , o = a("vendors/Exist")
          , p = d(o)
          , q = function() {
            function a(b, c) {
                e(this, a),
                this.onMiddlewareResponse = this.onMiddlewareResponse.bind(this),
                this.onPopState = this.onPopState.bind(this),
                this.dispatchNextRoute = this.dispatchNextRoute.bind(this),
                this.locale = b,
                this.noLocaleInRoute = c || !1,
                this.onSameRoute = new h.default,
                this.routeMatched = new h.default,
                this.middlewareRefused = new h.default,
                this.regexps = [],
                this.isPopState = !1,
                this.routesHistory = [],
                window.addEventListener("popstate", this.onPopState)
            }
            return f(a, [{
                key: "onPopState",
                value: function(a) {
                    (0,
                    p.default)(a) && (0,
                    p.default)(a.state) && (this.isPopState = !0,
                    this.navigate(a.state))
                }
            }, {
                key: "navigate",
                value: function(a, b) {
                    this.extra = b,
                    this.parse(a)
                }
            }, {
                key: "replaceState",
                value: function(a) {
                    if ((null == this.extra || (0,
                    p.default)(this.extra.silent) && !this.extra.silent) && window.history.pushState) {
                        if (null == this.lastRoute)
                            return;
                        this.lastRoute.cleanFull === a ? window.history.replaceState(a, null, a) : window.history.pushState(a, null, a)
                    }
                }
            }, {
                key: "parse",
                value: function(a) {
                    if (null == a) {
                        if (window.history.pushState) {
                            var b = window.location.pathname + window.location.search;
                            window.history.pushState(b, null, b)
                        }
                        a = this.removeBasePath(window.location.pathname),
                        a = this.removeLocale(a)
                    }
                    if (this.lastRoute = this.nextRoute,
                    this.tmpNextRoute = this.buildRouteObjectFromHash(a),
                    (0,
                    p.default)(this.lastRoute) && this.lastRoute.cleanFull === this.tmpNextRoute.cleanFull)
                        return void this.onSameRoute.dispatch();
                    for (var c = null, d = 0; d < this.regexps.length; d++) {
                        var e = this.regexps[d]
                          , f = e.regexp.exec(this.tmpNextRoute.clean);
                        if ((0,
                        p.default)(f)) {
                            for (var g = f.splice(1), h = {}, i = 0; i < g.length; i++) {
                                var j = g[i];
                                h[e.keys[i].name] = j
                            }
                            var k = e.routeObj;
                            c = {
                                moduleId: k.id,
                                route: k.routes[0],
                                params: h,
                                middleware: k.middleware
                            };
                            break
                        }
                    }
                    this.parseResponse(c)
                }
            }, {
                key: "parseResponse",
                value: function(a) {
                    (0,
                    p.default)(a) ? (0,
                    p.default)(a.middleware) ? (this.matchedRoute = a,
                    n.default.response.addOnce(this.onMiddlewareResponse),
                    n.default.callMethod(a.middleware)) : (this.doReplaceState(),
                    this.nextRoute = this.tmpNextRoute,
                    this.dispatchNextRoute([a])) : this.dispatchNextRoute(!1)
                }
            }, {
                key: "onMiddlewareResponse",
                value: function(a) {
                    if (this.nextRoute = this.tmpNextRoute,
                    !a)
                        return void this.middlewareRefused.dispatch();
                    var b = this.matchedRoute;
                    this.doReplaceState(),
                    this.dispatchNextRoute([b])
                }
            }, {
                key: "dispatchNextRoute",
                value: function(a) {
                    !1 !== a && this.routesHistory.push(a),
                    this.routeMatched.dispatch(a)
                }
            }, {
                key: "getPreviousRouteId",
                value: function() {
                    return !(this.routesHistory.length < 2) && this.routesHistory[this.routesHistory.length - 2].id
                }
            }, {
                key: "getNextRouteId",
                value: function() {
                    return this.routesHistory[this.routesHistory.length - 1].id
                }
            }, {
                key: "doReplaceState",
                value: function() {
                    this.isPopState || this.replaceState(this.tmpNextRoute.cleanFull),
                    this.isPopState = !1
                }
            }, {
                key: "removeBasePath",
                value: function(a) {
                    return 0 === a.indexOf(basePath) ? a.substr(basePath.length) : a
                }
            }, {
                key: "removeLocale",
                value: function(a) {
                    return 0 === a.indexOf(this.locale) ? a.substr(this.locale.length) : a
                }
            }, {
                key: "buildRouteObjectFromHash",
                value: function(a) {
                    var b = {};
                    if (b.raw = a,
                    a = l.default.removeLeadingSlash(a),
                    this.noLocaleInRoute)
                        a = "/" + a;
                    else {
                        var c = new RegExp("^" + this.locale + "([^\\w]|$)");
                        a = a.replace(c, ""),
                        a = l.default.removeLeadingSlash(a),
                        a = "/" + this.locale + "/" + a
                    }
                    return a = l.default.removeTrailingSlash(a),
                    a += "/",
                    b.clean = a,
                    a = l.default.removeLeadingSlash(a),
                    a = basePath + a,
                    b.cleanFull = a,
                    b
                }
            }, {
                key: "addRoutes",
                value: function(a) {
                    for (var b = 0; b < a.length; b++) {
                        var c = a[b];
                        if (c.routes)
                            for (var d = 0; d < c.routes.length; d++) {
                                var e = c.routes[d]
                                  , f = [];
                                this.noLocaleInRoute || (e = "/" + this.locale + e),
                                this.regexps.push({
                                    regexp: (0,
                                    j.default)(e, f),
                                    keys: f,
                                    middleware: c.middleware,
                                    routeObj: c
                                })
                            }
                        (0,
                        p.default)(c.modules) && this.addRoutes(c.modules)
                    }
                }
            }]),
            a
        }();
        c.default = q
    }
    , {
        "./MiddlewareMethods": 22,
        "path-to-regexp": 6,
        "utils/StringUtils": 142,
        "vendors/Exist": 147,
        "vendors/signal/Signal": 149
    }],
    24: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("twig")
          , h = d(g)
          , i = a("vendors/Exist")
          , j = d(i)
          , k = function() {
            function a() {
                e(this, a)
            }
            return f(a, null, [{
                key: "render",
                value: function(a, b) {
                    return h.default.twig({
                        data: a,
                        allowInlineIncludes: !0
                    }).render(b)
                }
            }, {
                key: "append",
                value: function(a, b, c) {
                    var d = $(this.render(b, c));
                    return this.add(a, d),
                    d
                }
            }, {
                key: "prepend",
                value: function(a, b, c) {
                    var d = $(this.render(b, c));
                    return this.add(a, d, !0),
                    d
                }
            }, {
                key: "add",
                value: function(a, b) {
                    arguments.length > 2 && void 0 !== arguments[2] && arguments[2] ? a.prepend(b) : a.append(b)
                }
            }, {
                key: "registerPartial",
                value: function(a, b) {
                    return h.default.twig({
                        id: a,
                        data: b
                    })
                }
            }]),
            a
        }();
        c.default = k,
        h.default.twig({
            id: "@partials/global/modules.twig",
            data: ""
        }),
        h.default.extendFunction("resolveImage", function(a) {
            var b = app.datas.assetsBaseURL + app.datas.assetsPath
              , c = app.manifestLoader.getFileById("img." + a);
            return (0,
            j.default)(c) ? c : b + app.datas.library.img[a]
        })
    }
    , {
        twig: 11,
        "vendors/Exist": 147
    }],
    25: [function(a, b, c) {
        "use strict";
        Object.defineProperty(c, "__esModule", {
            value: !0
        }),
        c.default = {
            EXIT_BEFORE_ENTER: 0,
            SIMULTANEOUS: 1,
            ENTER_BEFORE_EXIT: 2
        }
    }
    , {}],
    26: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = a("utils/Render")
          , g = function(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }(f)
          , h = function() {
            function a() {
                var b = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 30;
                d(this, a),
                this.addToRAF = this.addToRAF.bind(this),
                this.removeFromRAF = this.removeFromRAF.bind(this),
                this.gotoAndPlay = this.gotoAndPlay.bind(this),
                this.gotoAndStop = this.gotoAndStop.bind(this),
                this.validateFrame = this.validateFrame.bind(this),
                this.addFrameScript = this.addFrameScript.bind(this),
                this.removeFrameScript = this.removeFrameScript.bind(this),
                this.play = this.play.bind(this),
                this.stop = this.stop.bind(this),
                this.startRendering = this.startRendering.bind(this),
                this.stopRendering = this.stopRendering.bind(this),
                this.render = this.render.bind(this),
                this.tick = this.tick.bind(this),
                this.fps = b,
                this.name = null,
                this.isPlaying = !1,
                this.isRendering = !1,
                this.framesScripts = [],
                this.reverse = !1,
                this.yoyo = !1,
                this.loop = !0,
                this.currentFrame = 0,
                this.loopFrame = 0,
                this.totalFrames = 0,
                this.addedToRAF = !1
            }
            return e(a, [{
                key: "addToRAF",
                value: function() {
                    this.addedToRAF || (g.default.add(this.tick, this.fps),
                    this.addedToRAF = !0)
                }
            }, {
                key: "removeFromRAF",
                value: function() {
                    g.default.remove(this.tick),
                    this.addedToRAF = !1
                }
            }, {
                key: "gotoAndPlay",
                value: function(a) {
                    this.currentFrame = this.validateFrame(a),
                    this.play()
                }
            }, {
                key: "gotoAndStop",
                value: function(a) {
                    this.currentFrame = this.validateFrame(a),
                    this.render(),
                    this.stop()
                }
            }, {
                key: "validateFrame",
                value: function(a) {
                    return a < 0 ? a = 0 : a > this.totalFrames - 1 && (a = this.totalFrames - 1),
                    a
                }
            }, {
                key: "addFrameScript",
                value: function(a, b) {
                    if (a = this.validateFrame(a),
                    null == b)
                        return void this.removeFrameScript(a);
                    for (var c = this.framesScripts.length, d = 0; d < c; d++) {
                        var e = this.framesScripts[d];
                        if (e.frame === a)
                            return void (e.callback = b)
                    }
                    this.framesScripts.push({
                        frame: a,
                        callback: b
                    })
                }
            }, {
                key: "removeFrameScript",
                value: function(a) {
                    a = this.validateFrame(a);
                    for (var b = this.framesScripts.length, c = 0; c < b; c++) {
                        var d = this.framesScripts[c];
                        if (d.frame === a) {
                            this.framesScripts.splice(this.framesScripts.indexOf(d), 1);
                            break
                        }
                    }
                }
            }, {
                key: "play",
                value: function() {
                    this.render(),
                    this.isPlaying = !0,
                    this.startRendering()
                }
            }, {
                key: "stop",
                value: function() {
                    this.isPlaying = !1,
                    this.stopRendering()
                }
            }, {
                key: "startRendering",
                value: function() {
                    this.isRendering = !0
                }
            }, {
                key: "stopRendering",
                value: function() {
                    this.isRendering = !1
                }
            }, {
                key: "render",
                value: function() {
                    for (var a = this.framesScripts.length, b = 0; b < a; b++) {
                        var c = this.framesScripts[b];
                        if (c.frame === this.currentFrame) {
                            c.callback();
                            break
                        }
                    }
                }
            }, {
                key: "tick",
                value: function() {
                    this.isPlaying && (this.reverse ? this.currentFrame - 1 < 0 ? this.loop && (this.yoyo ? (this.currentFrame++,
                    this.reverse = !1) : this.currentFrame = this.totalFrames - 1) : this.currentFrame-- : this.currentFrame + 1 > this.totalFrames - 1 ? this.loop && (this.yoyo ? (this.currentFrame--,
                    this.reverse = !0) : this.currentFrame = this.loopFrame) : this.currentFrame++,
                    this.isRendering && this.render())
                }
            }]),
            a
        }();
        c.default = h
    }
    , {
        "utils/Render": 140
    }],
    27: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("three")
          , h = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(g)
          , i = a("vendors/three/loaders/GLTFLoader")
          , j = (d(i),
        a("utils/Device"))
          , k = d(j)
          , l = a("game/stage/Stage")
          , m = d(l)
          , n = a("game/stage/items/DotMatrixDisplay")
          , o = d(n)
          , p = a("game/physics/Simulation")
          , q = d(p)
          , r = a("game/physics/Heightmaps")
          , s = d(r)
          , t = a("game/GameInputProxy")
          , u = d(t)
          , v = a("game/GameStats")
          , w = d(v)
          , x = a("game/physics/factories/ItemsFactory")
          , y = d(x)
          , z = a("game/missions/Missions")
          , A = d(z)
          , B = a("game/GameEvent")
          , C = d(B)
          , D = a("./GameModel")
          , E = d(D)
          , F = a("game/stage/utils/Config")
          , G = d(F)
          , H = a("utils/Render")
          , I = d(H)
          , J = a("utils/Viewport")
          , K = d(J)
          , L = a("utils/Cache")
          , M = (d(L),
        a("game/audio/ThreeAudioManager"))
          , N = d(M)
          , O = a("game/stage/utils/TextureManager")
          , P = d(O)
          , Q = function() {
            function a(b) {
                e(this, a),
                app.game = this,
                this.assets = {},
                this.ballNb = 1,
                this.initialized = !1,
                this.started = !1,
                C.default.GAMEOVER.add(this.over.bind(this)),
                this.onScoreUpdated = this.onScoreUpdated.bind(this),
                this.onCreditsUpdated = this.onCreditsUpdated.bind(this),
                this.onPlungerReleased = this.onPlungerReleased.bind(this),
                this.reset = this.reset.bind(this),
                this._onDown = this._onDown.bind(this),
                this.update = this.update.bind(this),
                this.resize = this.resize.bind(this),
                this.bind = this.bind.bind(this),
                this.unbind = this.unbind.bind(this),
                this.stats = new w.default,
                this.config = new G.default
            }
            return f(a, [{
                key: "onLoad",
                value: function(a) {
                    var b = this
                      , c = k.default.mobile ? "mobile" : "desktop"
                      , d = app.manifestLoader.getFilesByBatchId("default")
                      , e = P.default.useCompressedTexture ? "textures-" + P.default.format : "textures-default"
                      , f = P.default.useCompressedTexture ? "diffuses-" + P.default.format : "diffuses-default";
                    f += "-" + c;
                    var g = app.manifestLoader.getFilesByBatchId(e)
                      , i = app.manifestLoader.getFilesByBatchId(f);
                    g = g.concat(i);
                    for (var j = k.default.mobile ? "geometries-mobile" : "geometries-desktop", l = app.manifestLoader.getFilesByBatchId(j), m = d.concat(l).concat(i), n = 0; n < m.length; n++) {
                        var o = m[n].id
                          , p = m[n].item;
                        o.match(/(packConf|packFile)/g) || (this.assets[p.library_id.replace(/assets.|2d.|3d./g, "")] = p.item)
                    }
                    var q = "gltf.world";
                    k.default.mobile && (q += ".mobile");
                    var r = new h.GLTFLoader;
                    r.parse(this.assets[q], function(c) {
                        P.default.register(g, function() {
                            N.default.onReady.add(function() {
                                b.init(c, a)
                            }),
                            N.default.init(),
                            m = null,
                            d = null,
                            g = null,
                            l = null,
                            r = null
                        })
                    })
                }
            }, {
                key: "init",
                value: function(a, b) {
                    var c = this;
                    this.initialized || (this.initialized = !0,
                    this.dictionary = {},
                    this.flippers = [],
                    this.bumpers = [],
                    this.balls = [],
                    this.ballEmitters = [],
                    this.slingshots = [],
                    this.kickbacks = [],
                    this.sensors = [],
                    this.points = [],
                    this.targetGroups = [],
                    this.targets = [],
                    this.ramps = [],
                    this.doors = [],
                    this.platforms = [],
                    this.nails = [],
                    this.gatesIn = [],
                    this.gatesOut = [],
                    this.stage = new m.default(this.game,this.dictionary,a),
                    this.simulation = new q.default(E.default),
                    this.heightmaps = new s.default(this.simulation,this.stage),
                    this.board = new o.default(E.default),
                    this.board.init(),
                    this.itemsFactory = new y.default(this,this.dictionary),
                    this.itemsFactory.ready.addOnce(this._onFactoryReady.bind(this)),
                    this.itemsFactory.ready.addOnce(function() {
                        c.heightmaps.init(function() {
                            c.update(),
                            c.resize(),
                            c.bind(),
                            c.started && (c.started = !1,
                            c.start()),
                            c.itemsFactory = null,
                            c.assets = null,
                            b()
                        })
                    }),
                    this.itemsFactory.parse(this.assets.world),
                    this.os = k.default.os)
                }
            }, {
                key: "start",
                value: function() {
                    var a = this;
                    if (!this.initialized || this.started)
                        return void (this.started = !0);
                    this.started = !0,
                    this.reset(),
                    N.default.enable(),
                    this.board.show();
                    var b = this.stage.camera.position
                      , c = this.stage.cameraControls
                      , d = c.target;
                    c.mode = "animate",
                    this.plunger && (this.plunger._released = !0,
                    this.plunger._ready = !1,
                    this.plunger.enable = !1,
                    this.plunger.delta = 0),
                    this.tween && (this.tween.kill(),
                    TweenLite.killTweensOf(b),
                    TweenLite.killTweensOf(d));
                    var e = new TimelineLite;
                    e.set(b, {
                        x: 0,
                        y: .25,
                        z: -.15
                    }),
                    e.set(d, {
                        x: 0,
                        y: .1,
                        z: -.68
                    }),
                    e.add(function() {
                        a.groundAnimations.deco.startAll(0)
                    }, 0),
                    e.pause();
                    e.to(b, 5, {
                        x: 0,
                        y: .2,
                        z: .6,
                        ease: Power2.easeInOut
                    }, 0),
                    e.to(d, 5, {
                        x: 0,
                        y: -.3,
                        z: -.3,
                        ease: Power3.easeInOut
                    }, 0),
                    e.add(function() {
                        a.plunger.reset(!1)
                    }, 4),
                    e.add(function() {
                        a.groundAnimations.deco.stopAll()
                    }, 4.75),
                    this.tween = TweenLite.to(e, 6, {
                        progress: 1,
                        delay: .5,
                        ease: Power1.easeOut
                    }),
                    N.default.stopMusic(),
                    N.default.intro.play(0),
                    (new TimelineLite).add(function() {
                        N.default.startMusic()
                    }, 7),
                    C.default.INTRO.dispatch(),
                    this.onScoreUpdated(),
                    this.onCreditsUpdated()
                }
            }, {
                key: "stop",
                value: function() {
                    var a = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                    this.started && (this.paused = !1,
                    this.started = !1,
                    N.default.disable(),
                    a || (this.board.hide(),
                    app.stage.cameraControls.progress = 0,
                    app.stage.cameraControls.angle = 0,
                    app.stage.cameraControls.mode = "traveling",
                    app.router.navigate("/result")))
                }
            }, {
                key: "reset",
                value: function() {
                    this.stats.reset()
                }
            }, {
                key: "over",
                value: function() {
                    var a = this;
                    N.default.fadeMusic(),
                    app.stage.cameraControls.set("lostBall", {
                        ease: Power4.easeOut,
                        duration: 1,
                        onComplete: function() {
                            a.stage.cameraControls.set("frameAll", {
                                ease: Power4.easeInOut,
                                duration: 6,
                                onComplete: function() {
                                    a.stop()
                                }
                            })
                        }
                    })
                }
            }, {
                key: "pause",
                value: function() {
                    this.paused = !0,
                    this.stats.pauseSession()
                }
            }, {
                key: "resume",
                value: function() {
                    this.paused = !1,
                    this.stats.resumeSession()
                }
            }, {
                key: "bind",
                value: function() {
                    u.default.bind(),
                    u.default.onDown.add(this._onDown),
                    I.default.add(this.update),
                    K.default.resized.add(this.resize),
                    addEventListener("touchmove", this.preventDefault),
                    this.stats.onScoreUpdated.add(this.onScoreUpdated),
                    this.stats.onCreditsUpdated.add(this.onCreditsUpdated)
                }
            }, {
                key: "unbind",
                value: function() {
                    u.default.unbind(),
                    u.default.onDown.remove(this._onDown),
                    I.default.remove(this.update),
                    K.default.resized.remove(this.resize),
                    removeEventListener("touchmove", this.preventDefault),
                    this.stats.onScoreUpdated.remove(this.onScoreUpdated),
                    this.stats.onCreditsUpdated.remove(this.onCreditsUpdated)
                }
            }, {
                key: "_onDown",
                value: function() {
                    (u.default.isDown("left") || u.default.isDown("right")) && this.stats.addShot()
                }
            }, {
                key: "onScoreUpdated",
                value: function() {
                    this.board.score = this.stats.score
                }
            }, {
                key: "onCreditsUpdated",
                value: function() {
                    this.board.credits = this.stats.credits
                }
            }, {
                key: "get",
                value: function(a) {
                    var b = [];
                    for (var c in this.dictionary)
                        this.dictionary.hasOwnProperty(c) && c == a && b.push(this.dictionary[c]);
                    return b.length > 1 ? b : b[0]
                }
            }, {
                key: "update",
                value: function() {
                    if (this.paused)
                        return void (u.default.touches.preventDefault = !1);
                    u.default.touches.preventDefault = this.started && K.default.isFullscreen(),
                    this.simulation.update(),
                    E.default.renderer["3d"] && this.stage.update(),
                    this.plunger.update(),
                    this.flippers.forEach(function(a) {
                        a.update()
                    }),
                    this.doors.forEach(function(a) {
                        a.update()
                    }),
                    this.kickbacks.forEach(function(a) {
                        a.update()
                    }),
                    this.platforms.forEach(function(a) {
                        a.update()
                    }),
                    this.ramps.forEach(function(a) {
                        a.update()
                    }),
                    this.balls.forEach(function(a) {
                        a.update()
                    })
                }
            }, {
                key: "resize",
                value: function() {
                    this.simulation.resize(),
                    this.stage.resize(),
                    this.board.resize()
                }
            }, {
                key: "ballNbUpdate",
                value: function() {
                    for (var a = 0, b = 0, c = this.balls.length; b < c; b++)
                        this.balls[b].enabled && a++;
                    2 === this.ballNb && 1 === a && (this.doors[0].opened = !0,
                    this.doors[1].opened = !0),
                    this.ballNb = a
                }
            }, {
                key: "_onFocusChanged",
                value: function() {
                    K.default.blurred ? this.pause() : this.resume()
                }
            }, {
                key: "_onFactoryReady",
                value: function() {
                    this.plunger.released.add(this.onPlungerReleased),
                    this.missions = new A.default(this),
                    this.stage.ground.onItemsFactoryReady(),
                    this.stage.set(),
                    this.simulation.materials = null,
                    this.simulation.contactMaterials = null
                }
            }, {
                key: "onPlungerReleased",
                value: function() {
                    this.stats.startSession()
                }
            }]),
            a
        }();
        c.default = Q
    }
    , {
        "./GameModel": 30,
        "game/GameEvent": 28,
        "game/GameInputProxy": 29,
        "game/GameStats": 31,
        "game/audio/ThreeAudioManager": 32,
        "game/missions/Missions": 66,
        "game/physics/Heightmaps": 73,
        "game/physics/Simulation": 74,
        "game/physics/factories/ItemsFactory": 75,
        "game/stage/Stage": 93,
        "game/stage/items/DotMatrixDisplay": 95,
        "game/stage/utils/Config": 113,
        "game/stage/utils/TextureManager": 117,
        three: 10,
        "utils/Cache": 133,
        "utils/Device": 135,
        "utils/Render": 140,
        "utils/Viewport": 144,
        "vendors/three/loaders/GLTFLoader": 154
    }],
    28: [function(a, b, c) {
        "use strict";
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        for (var d = a("vendors/signal/Signal"), e = function(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }(d), f = ["PLUNGER_RELEASED", "BONUS", "GAMEOVER", "INTRO", "JACKPOT_ACTIVE", "JACKPOT_END", "JACKPOT_OPEN", "JACKPOT_SUCCESS", "JACKPOT_WIN", "JACKPOT_INCREASING", "LOST", "MISSION_START", "MISSION_SUCCESS", "MULTIBALL_ACTIVE", "MULTIBALL_BONUS", "MULTIBALL_ENTRY", "MULTIBALL_OPEN", "SAVER", "WIZARD_OPEN", "WIZARD_ACTIVE", "WIZARD_MULT", "TARGET_HIT", "TARGET_COMPLETE", "SLOTS_LIT", "SLOTS_SHIFT", "SLOTS_COMPLETE", "RAMP_COMPLETE", "SENSOR_HIT", "POINTS_HIT", "BUMPER_HIT"], g = {}, h = f.length, i = 0; i < h; i++) {
            g[f[i]] = new e.default
        }
        c.default = g
    }
    , {
        "vendors/signal/Signal": 149
    }],
    29: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("game/inputs/Keyboard")
          , h = d(g)
          , i = a("game/inputs/Mouse")
          , j = d(i)
          , k = a("game/inputs/Touches")
          , l = d(k)
          , m = a("vendors/signal/Signal")
          , n = d(m)
          , o = function() {
            function a() {
                e(this, a),
                this.isDown = this.isDown.bind(this),
                this.keyboard = new h.default,
                this.touches = new l.default,
                this.mouse = new j.default,
                this.onDown = new n.default,
                this.keyboard.onKeyDown.add(this.onDown.dispatch),
                this.touches.onDown.add(this.onDown.dispatch)
            }
            return f(a, [{
                key: "bind",
                value: function() {
                    this.keyboard.bind(),
                    this.touches.bind(),
                    this.mouse.bind()
                }
            }, {
                key: "unbind",
                value: function() {
                    this.keyboard.unbind(),
                    this.touches.unbind(),
                    this.mouse.unbind()
                }
            }, {
                key: "isDown",
                value: function(a) {
                    switch (a) {
                    case "left":
                    case "right":
                        return this.keyboard.isDown(a) || this.touches.areaIsTouch(a);
                    case "down":
                        return this.keyboard.isDown(a) || this.touches.isTouch || this.mouse.isDown;
                    default:
                        return this.keyboard.isDown(a)
                    }
                }
            }]),
            a
        }();
        c.default = new o
    }
    , {
        "game/inputs/Keyboard": 59,
        "game/inputs/Mouse": 60,
        "game/inputs/Touches": 61,
        "vendors/signal/Signal": 149
    }],
    30: [function(a, b, c) {
        "use strict";
        Object.defineProperty(c, "__esModule", {
            value: !0
        }),
        c.default = {
            renderer: {
                "2d": !0,
                opacity: .5,
                "opacity-step": .01,
                "opacity-min": 0,
                "opacity-max": 1,
                "3d": !0,
                heightmaps: !1,
                dual: !0
            },
            physics: {
                gravity: -4,
                "gravity-step": .01,
                "gravity-min": -30,
                "gravity-max": 0,
                iterations: 10,
                tolerence: .01,
                debugPolygons: !1,
                debugTriangles: !1,
                showRamps: !0
            },
            doors: {
                C0: !0,
                C1: !0,
                C2: !1,
                "A0.C7": !1,
                "A1.C5": !1,
                "A3.C6": !1
            },
            dotMatrixDisplay: {
                width: 321,
                height: 77,
                globalAlpha: 1,
                mobileRatio: .5
            }
        }
    }
    , {}],
    31: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = a("vendors/signal/Signal")
          , g = function(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }(f)
          , h = function() {
            function a() {
                d(this, a),
                this.onScoreUpdated = new g.default,
                this.onCreditsUpdated = new g.default,
                this.reset()
            }
            return e(a, [{
                key: "reset",
                value: function() {
                    this.nbMissions = 0,
                    this.nbShots = 0,
                    this.nbHits = 0,
                    this.multiballs = 0,
                    this.precision = 0,
                    this.tmpSessionDuration = 0,
                    this.sessionDuration = 0,
                    this.totalSession = 0,
                    this.score = 0,
                    this.credits = 3,
                    this.startedAt = (new Date).getTime()
                }
            }, {
                key: "addPoints",
                value: function(a) {
                    this.score += a,
                    this.onScoreUpdated.dispatch()
                }
            }, {
                key: "decCredits",
                value: function() {
                    this.credits--,
                    this.onCreditsUpdated.dispatch()
                }
            }, {
                key: "startSession",
                value: function() {
                    this.tmpSessionDuration = 0,
                    this.startedAt = (new Date).getTime()
                }
            }, {
                key: "pauseSession",
                value: function() {
                    this.tmpSessionDuration += (new Date).getTime() - this.startedAt
                }
            }, {
                key: "resumeSession",
                value: function() {
                    this.startedAt = (new Date).getTime()
                }
            }, {
                key: "stopSession",
                value: function() {
                    this.pauseSession(),
                    this.tmpSessionDuration > this.sessionDuration && (this.sessionDuration = this.tmpSessionDuration),
                    this.totalSession += this.tmpSessionDuration,
                    this.tmpSessionDuration = 0,
                    this.startedAt = (new Date).getTime()
                }
            }, {
                key: "addMultiball",
                value: function() {
                    this.multiballs++
                }
            }, {
                key: "addMission",
                value: function() {
                    this.nbMissions = Math.min(this.nbMissions + 1, 5)
                }
            }, {
                key: "addShot",
                value: function() {
                    this.nbShots++,
                    this.updatePrecision()
                }
            }, {
                key: "addHit",
                value: function() {
                    this.nbHits++,
                    this.updatePrecision()
                }
            }, {
                key: "updatePrecision",
                value: function() {
                    0 == this.nbShots && (this.precision = 0),
                    this.precision = Math.min(this.nbHits / this.nbShots, 1)
                }
            }]),
            a
        }();
        c.default = h,
        h.DEFAULT_CREDITS = 3
    }
    , {
        "vendors/signal/Signal": 149
    }],
    32: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function e(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function f(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var g = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , h = a("three")
          , i = (function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            b.default = a
        }(h),
        a("utils/AudioManager"))
          , j = function(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }(i)
          , k = function(a) {
            function b() {
                return d(this, b),
                e(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this))
            }
            return f(b, a),
            g(b, [{
                key: "setPanner",
                value: function(a, b) {
                    !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2]
                }
            }, {
                key: "setPoolPanner",
                value: function(a, b) {
                    !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2]
                }
            }, {
                key: "calculateGlobalPan",
                value: function(a, b) {}
            }]),
            b
        }(j.default);
        c.default = new k
    }
    , {
        three: 10,
        "utils/AudioManager": 132
    }],
    33: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = function a(b, c, d) {
            null === b && (b = Function.prototype);
            var e = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === e) {
                var f = Object.getPrototypeOf(b);
                return null === f ? void 0 : a(f, c, d)
            }
            if ("value"in e)
                return e.value;
            var g = e.get;
            if (void 0 !== g)
                return g.call(d)
        }
          , j = a("display/MovieClip")
          , k = d(j)
          , l = a("game/dotmatrix/GamePriorities")
          , m = d(l)
          , n = a("utils/Device")
          , o = d(n)
          , p = a("utils/Cache")
          , q = d(p)
          , r = function(a) {
            function b() {
                var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                e(this, b);
                var c = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, 12));
                return c.display = app.game.board,
                c.texture = c.display.dotMatrixTexture,
                c.canvas = c.texture.canvas,
                c.context = c.texture.context,
                c.loop = !1,
                c.id = a,
                c.priority = m.default.DEFAULT,
                c.os = o.default.os,
                c._initTimeline(),
                c._forceDrawScore = c._forceDrawScore.bind(c),
                c.bind = c.bind.bind(c),
                c.unbind = c.unbind.bind(c),
                c._dealloc = c._dealloc.bind(c),
                c
            }
            return g(b, a),
            h(b, [{
                key: "_getAssetsLabels",
                value: function() {
                    return ["default"]
                }
            }, {
                key: "_initTimeline",
                value: function() {
                    this.frames = [],
                    this.assets = {},
                    this._registerSequences()
                }
            }, {
                key: "_registerSequences",
                value: function() {
                    var a = 0;
                    this.assetsLabels = this._getAssetsLabels();
                    for (var b = 0; b < this.assetsLabels.length; b++) {
                        var c = this.assetsLabels[b];
                        a = this.addSequence(c, a)
                    }
                    this._dealloc()
                }
            }, {
                key: "bind",
                value: function() {}
            }, {
                key: "unbind",
                value: function() {}
            }, {
                key: "_dealloc",
                value: function() {
                    for (var a = this._getBatchId(), b = 0; b < this.assetsLabels.length; b++) {
                        var c = this.assetsLabels[b]
                          , d = this.assets[c];
                        "default" == c ? c = "" : c += ".";
                        for (var e = d.globalFrameEnd - d.globalFrameStart, f = 0; f < e; f++)
                            q.default.empty(a + ".assets.2d.board." + this.id + "." + c + f)
                    }
                }
            }, {
                key: "addSequence",
                value: function(a, b) {
                    var c = this._getBatchId()
                      , d = app.manifestLoader.getFilesByBatchId(c)
                      , e = {
                        nbFrames: 0,
                        globalFrameStart: 0,
                        globalFrameEnd: 0
                    };
                    e.globalFrameStart = b;
                    for (var f = 0, g = 0; g < d.length; g++) {
                        var h = d[g]
                          , i = this._getFileIdPrefix(a);
                        if (0 == h.id.indexOf(i)) {
                            var j = parseInt(h.id.replace(i, ""), 10);
                            f = Math.max(f, j),
                            this.frames[e.globalFrameStart + j] = h.item.item
                        }
                    }
                    return e.nbFrames = f + 1,
                    e.globalFrameEnd = b + e.nbFrames,
                    b = e.globalFrameEnd,
                    this.totalFrames = b,
                    this.addFrameScript(e.globalFrameEnd - 1, this._onSequenceLastFrame.bind(this)),
                    this.assets[a] = e,
                    b
                }
            }, {
                key: "_onSequenceLastFrame",
                value: function() {
                    "active" == this.currentSequence && void 0 !== this.activeLoopFrameStart ? this.gotoAndPlay(this.activeLoopFrameStart) : (this.stop(),
                    setTimeout(this._forceDrawScore, 0))
                }
            }, {
                key: "_forceDrawScore",
                value: function() {
                    app.game.board.setPriority(m.default.SCORE),
                    this._drawScore()
                }
            }, {
                key: "_drawScore",
                value: function() {
                    app.game.board.drawScore()
                }
            }, {
                key: "_getBatchId",
                value: function() {
                    return app.boardId
                }
            }, {
                key: "_getFileIdPrefix",
                value: function(a) {
                    var b = this._getBatchId() + ".assets.2d.board." + this.id + ".";
                    return "default" != a && (b += a + "."),
                    b
                }
            }, {
                key: "render",
                value: function() {
                    return app.game.board.canDraw(this.priority) ? (i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "render", this).call(this),
                    this.currentFrame > -1 && (this.context.save(),
                    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height),
                    this.context.drawImage(this.frames[this.currentFrame], 0, 0),
                    this.context.globalCompositeOperation = "destination-in",
                    this.context.drawImage(this.texture.grid, 0, 0),
                    this.context.restore()),
                    !0) : (this.stop(),
                    !1)
                }
            }, {
                key: "playSequence",
                value: function() {
                    var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "default";
                    app.game.board.canDraw(this.priority) && (app.game.board.setPriority(this.priority),
                    this.currentSequence = a,
                    this.assets[a],
                    this.gotoAndPlay(this.assets[a].globalFrameStart))
                }
            }, {
                key: "play",
                value: function() {
                    this.addToRAF(),
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "play", this).call(this)
                }
            }, {
                key: "stop",
                value: function() {
                    this.removeFromRAF(),
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "stop", this).call(this)
                }
            }]),
            b
        }(k.default);
        c.default = r
    }
    , {
        "display/MovieClip": 26,
        "game/dotmatrix/GamePriorities": 35,
        "utils/Cache": 133,
        "utils/Device": 135
    }],
    34: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = a("game/dotmatrix/AMatrixMC")
          , j = d(i)
          , k = a("game/GameEvent")
          , l = d(k)
          , m = function(a) {
            function b() {
                return e(this, b),
                f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, "bonus"))
            }
            return g(b, a),
            h(b, [{
                key: "bind",
                value: function() {
                    "android" !== this.os && "linux" !== this.os && l.default.BONUS.add(this.playSequence, this)
                }
            }, {
                key: "unbind",
                value: function() {
                    "android" !== this.os && "linux" !== this.os && l.default.BONUS.remove(this.playSequence, this)
                }
            }, {
                key: "_getAssetsLabels",
                value: function() {
                    return "android" === this.os || "linux" === this.os ? [] : ["default"]
                }
            }]),
            b
        }(j.default);
        c.default = m
    }
    , {
        "game/GameEvent": 28,
        "game/dotmatrix/AMatrixMC": 33
    }],
    35: [function(a, b, c) {
        "use strict";
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        for (var d = ["SCORE", "DEFAULT", "MISSION", "MULTIBALL", "JACKPOT", "WIZARD", "LOST", "SAVER", "GAMEOVER"], e = {}, f = 0; f < d.length; f++)
            e[d[f]] = f;
        c.default = e
    }
    , {}],
    36: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = function a(b, c, d) {
            null === b && (b = Function.prototype);
            var e = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === e) {
                var f = Object.getPrototypeOf(b);
                return null === f ? void 0 : a(f, c, d)
            }
            if ("value"in e)
                return e.value;
            var g = e.get;
            if (void 0 !== g)
                return g.call(d)
        }
          , j = a("game/dotmatrix/AMatrixMC")
          , k = d(j)
          , l = a("game/GameEvent")
          , m = d(l)
          , n = a("game/dotmatrix/GamePriorities")
          , o = d(n)
          , p = function(a) {
            function b() {
                e(this, b);
                var a = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, "gameover"));
                return a.priority = o.default.GAMEOVER,
                a
            }
            return g(b, a),
            h(b, [{
                key: "bind",
                value: function() {
                    "android" !== this.os && "linux" !== this.os && m.default.GAMEOVER.add(this.playSequence, this)
                }
            }, {
                key: "unbind",
                value: function() {
                    "android" !== this.os && "linux" !== this.os && m.default.GAMEOVER.remove(this.playSequence, this)
                }
            }, {
                key: "_forceDrawScore",
                value: function() {
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "_forceDrawScore", this).call(this)
                }
            }, {
                key: "_getAssetsLabels",
                value: function() {
                    return "android" === this.os || "linux" === this.os ? [] : ["default"]
                }
            }]),
            b
        }(k.default);
        c.default = p
    }
    , {
        "game/GameEvent": 28,
        "game/dotmatrix/AMatrixMC": 33,
        "game/dotmatrix/GamePriorities": 35
    }],
    37: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = a("game/dotmatrix/AMatrixMC")
          , j = d(i)
          , k = a("game/GameEvent")
          , l = d(k)
          , m = function(a) {
            function b() {
                return e(this, b),
                f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, "intro"))
            }
            return g(b, a),
            h(b, [{
                key: "bind",
                value: function() {
                    "android" !== this.os && "linux" !== this.os && l.default.INTRO.add(this.playSequence, this)
                }
            }, {
                key: "unbind",
                value: function() {
                    "android" !== this.os && "linux" !== this.os && l.default.INTRO.remove(this.playSequence, this)
                }
            }, {
                key: "_getAssetsLabels",
                value: function() {
                    return "android" === this.os || "linux" === this.os ? [] : ["default"]
                }
            }]),
            b
        }(j.default);
        c.default = m
    }
    , {
        "game/GameEvent": 28,
        "game/dotmatrix/AMatrixMC": 33
    }],
    38: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = function a(b, c, d) {
            null === b && (b = Function.prototype);
            var e = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === e) {
                var f = Object.getPrototypeOf(b);
                return null === f ? void 0 : a(f, c, d)
            }
            if ("value"in e)
                return e.value;
            var g = e.get;
            if (void 0 !== g)
                return g.call(d)
        }
          , j = a("game/dotmatrix/AMatrixMC")
          , k = d(j)
          , l = a("game/GameEvent")
          , m = d(l)
          , n = a("game/dotmatrix/GamePriorities")
          , o = d(n)
          , p = function(a) {
            function b(a) {
                e(this, b);
                var c = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, "jackpot"));
                return c._reward = 0,
                c._width = a,
                c.activeLoopFrameStart = 7,
                c.priority = o.default.JACKPOT,
                c
            }
            return g(b, a),
            h(b, [{
                key: "_getAssetsLabels",
                value: function() {
                    return ["active", "end", "open", "success", "multiplier.five", "win"]
                }
            }, {
                key: "_getFileIdPrefix",
                value: function(a) {
                    var b = this.id + ".";
                    a.indexOf("multiplier") > -1 && (b = "");
                    var c = this._getBatchId() + ".assets.2d.board." + b;
                    return "default" != a && (c += a + "."),
                    c
                }
            }, {
                key: "bind",
                value: function() {
                    m.default.JACKPOT_ACTIVE.add(this._playSequenceActive, this),
                    m.default.JACKPOT_END.add(this._playSequenceEnd, this),
                    m.default.JACKPOT_OPEN.add(this._playSequenceOpen, this),
                    m.default.JACKPOT_SUCCESS.add(this._playSequenceSuccess, this),
                    m.default.JACKPOT_WIN.add(this._playSequenceWin, this),
                    m.default.JACKPOT_INCREASING.add(this._increasing, this)
                }
            }, {
                key: "unbind",
                value: function() {
                    m.default.JACKPOT_ACTIVE.remove(this._playSequenceActive, this),
                    m.default.JACKPOT_END.remove(this._playSequenceEnd, this),
                    m.default.JACKPOT_OPEN.remove(this._playSequenceOpen, this),
                    m.default.JACKPOT_SUCCESS.remove(this._playSequenceSuccess, this),
                    m.default.JACKPOT_WIN.remove(this._playSequenceWin, this),
                    m.default.JACKPOT_INCREASING.remove(this._increasing, this)
                }
            }, {
                key: "_playSequenceActive",
                value: function() {
                    this.playSequence("active")
                }
            }, {
                key: "_playSequenceEnd",
                value: function() {
                    var a = this;
                    this.stop(),
                    (new TimelineLite).add(function() {
                        a._forceDrawScore()
                    }, 1)
                }
            }, {
                key: "_playSequenceOpen",
                value: function() {
                    this.playSequence("open")
                }
            }, {
                key: "_playSequenceWin",
                value: function() {
                    this.playSequence("win")
                }
            }, {
                key: "_playSequenceSuccess",
                value: function() {
                    var a = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                    this.mult = a,
                    this.playSequence("success")
                }
            }, {
                key: "_increasing",
                value: function(a) {
                    this._reward = a
                }
            }, {
                key: "render",
                value: function() {
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "render", this).call(this) && "active" == this.currentSequence && this.currentFrame > 7 && (this.context.save(),
                    this.context.font = "bold 44px Gotham",
                    this.context.textAlign = "center",
                    this.context.fillStyle = "#FFFFFF",
                    this.context.fillText(this._reward, this._width >> 1, 54),
                    this.context.globalCompositeOperation = "destination-in",
                    this.context.drawImage(this.texture.grid, 0, 0),
                    this.context.restore())
                }
            }, {
                key: "_onSequenceLastFrame",
                value: function() {
                    var a = this;
                    if ("success" === this.currentSequence && this.mult) {
                        this.playSequence("multiplier.five")
                    } else if ("active" === this.currentSequence)
                        this.gotoAndPlay(8);
                    else {
                        this.stop();
                        var b = new TimelineLite;
                        b.add(function() {
                            a._forceDrawScore()
                        }, 2)
                    }
                }
            }]),
            b
        }(k.default);
        c.default = p
    }
    , {
        "game/GameEvent": 28,
        "game/dotmatrix/AMatrixMC": 33,
        "game/dotmatrix/GamePriorities": 35
    }],
    39: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = a("game/dotmatrix/AMatrixMC")
          , j = d(i)
          , k = a("game/GameEvent")
          , l = d(k)
          , m = a("game/dotmatrix/GamePriorities")
          , n = d(m)
          , o = function(a) {
            function b() {
                e(this, b);
                var a = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, "lost"));
                return a.priority = n.default.LOST,
                a
            }
            return g(b, a),
            h(b, [{
                key: "bind",
                value: function() {
                    l.default.LOST.add(this.playSequence, this)
                }
            }, {
                key: "unbind",
                value: function() {
                    l.default.LOST.remove(this.playSequence, this)
                }
            }]),
            b
        }(j.default);
        c.default = o
    }
    , {
        "game/GameEvent": 28,
        "game/dotmatrix/AMatrixMC": 33,
        "game/dotmatrix/GamePriorities": 35
    }],
    40: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = a("game/dotmatrix/AMatrixMC")
          , j = d(i)
          , k = a("game/GameEvent")
          , l = d(k)
          , m = a("game/dotmatrix/GamePriorities")
          , n = d(m)
          , o = function(a) {
            function b() {
                e(this, b);
                var a = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, "missions"));
                return a.priority = n.default.MISSION,
                a
            }
            return g(b, a),
            h(b, [{
                key: "_getAssetsLabels",
                value: function() {
                    return ["bordeaux", "marseille", "paris", "rennes", "strasbourg", "success"]
                }
            }, {
                key: "bind",
                value: function() {
                    l.default.MISSION_START.add(this._playSequenceMissionStart, this),
                    l.default.MISSION_SUCCESS.add(this._playSequenceMissionEnd, this)
                }
            }, {
                key: "unbind",
                value: function() {
                    l.default.MISSION_START.remove(this._playSequenceMissionStart, this),
                    l.default.MISSION_SUCCESS.remove(this._playSequenceMissionEnd, this)
                }
            }, {
                key: "_playSequenceMissionStart",
                value: function(a) {
                    this.playSequence(a)
                }
            }, {
                key: "_playSequenceMissionEnd",
                value: function(a) {
                    this.playSequence("success")
                }
            }, {
                key: "_onSequenceLastFrame",
                value: function() {
                    var a = this;
                    this.stop(),
                    (new TimelineLite).add(function() {
                        a._forceDrawScore()
                    }, 2)
                }
            }]),
            b
        }(j.default);
        c.default = o
    }
    , {
        "game/GameEvent": 28,
        "game/dotmatrix/AMatrixMC": 33,
        "game/dotmatrix/GamePriorities": 35
    }],
    41: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = a("game/dotmatrix/AMatrixMC")
          , j = d(i)
          , k = a("game/GameEvent")
          , l = d(k)
          , m = a("game/dotmatrix/GamePriorities")
          , n = d(m)
          , o = function(a) {
            function b() {
                e(this, b);
                var a = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, "multiball"));
                return a.priority = n.default.MULTIBALL,
                a
            }
            return g(b, a),
            h(b, [{
                key: "bind",
                value: function() {
                    "android" !== this.os && "linux" !== this.os && (l.default.MULTIBALL_ACTIVE.add(this._playSequenceActive, this),
                    l.default.MULTIBALL_BONUS.add(this._playSequenceBonus, this),
                    l.default.MULTIBALL_ENTRY.add(this._playSequenceEntry, this),
                    l.default.MULTIBALL_OPEN.add(this._playSequenceOpen, this))
                }
            }, {
                key: "unbind",
                value: function() {
                    "android" !== this.os && "linux" !== this.os && (l.default.MULTIBALL_ACTIVE.remove(this._playSequenceActive, this),
                    l.default.MULTIBALL_BONUS.remove(this._playSequenceBonus, this),
                    l.default.MULTIBALL_ENTRY.remove(this._playSequenceEntry, this),
                    l.default.MULTIBALL_OPEN.remove(this._playSequenceOpen, this))
                }
            }, {
                key: "_playSequenceActive",
                value: function() {
                    this.playSequence("active")
                }
            }, {
                key: "_playSequenceBonus",
                value: function() {
                    this.playSequence("bonus")
                }
            }, {
                key: "_playSequenceEntry",
                value: function() {
                    this.playSequence("entry")
                }
            }, {
                key: "_playSequenceOpen",
                value: function() {
                    this.playSequence("open")
                }
            }, {
                key: "_onSequenceLastFrame",
                value: function() {
                    var a = this;
                    if ("active" == this.currentSequence && void 0 !== this.activeLoopFrameStart)
                        this.gotoAndPlay(this.activeLoopFrameStart);
                    else {
                        this.stop();
                        (new TimelineLite).add(function() {
                            a._forceDrawScore()
                        }, 2)
                    }
                }
            }, {
                key: "_getAssetsLabels",
                value: function() {
                    return "android" === this.os || "linux" === this.os ? ["active", "bonus", "open"] : ["active", "bonus", "entry", "open"]
                }
            }]),
            b
        }(j.default);
        c.default = o
    }
    , {
        "game/GameEvent": 28,
        "game/dotmatrix/AMatrixMC": 33,
        "game/dotmatrix/GamePriorities": 35
    }],
    42: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = a("game/dotmatrix/AMatrixMC")
          , j = d(i)
          , k = a("game/GameEvent")
          , l = d(k)
          , m = a("game/dotmatrix/GamePriorities")
          , n = d(m)
          , o = function(a) {
            function b() {
                e(this, b);
                var a = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, "saver"));
                return a.priority = n.default.SAVER,
                a
            }
            return g(b, a),
            h(b, [{
                key: "bind",
                value: function() {
                    "android" !== this.os && "linux" !== this.os && l.default.SAVER.add(this.playSequence, this)
                }
            }, {
                key: "unbind",
                value: function() {
                    "android" !== this.os && "linux" !== this.os && l.default.SAVER.remove(this.playSequence, this)
                }
            }, {
                key: "_getAssetsLabels",
                value: function() {
                    return "android" === this.os || "linux" === this.os ? [] : ["default"]
                }
            }]),
            b
        }(j.default);
        c.default = o
    }
    , {
        "game/GameEvent": 28,
        "game/dotmatrix/AMatrixMC": 33,
        "game/dotmatrix/GamePriorities": 35
    }],
    43: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = a("game/dotmatrix/AMatrixMC")
          , j = d(i)
          , k = a("game/GameEvent")
          , l = d(k)
          , m = a("game/dotmatrix/GamePriorities")
          , n = d(m)
          , o = function(a) {
            function b() {
                e(this, b);
                var a = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, "wizard"));
                return a.priority = n.default.WIZARD,
                a
            }
            return g(b, a),
            h(b, [{
                key: "_getFileIdPrefix",
                value: function(a) {
                    var b = this.id + ".";
                    a.indexOf("multiplier") > -1 && (b = "");
                    var c = this._getBatchId() + ".assets.2d.board." + b;
                    return "default" != a && (c += a + "."),
                    c
                }
            }, {
                key: "bind",
                value: function() {
                    "android" !== this.os && "linux" !== this.os && (l.default.WIZARD_ACTIVE.add(this._playSequenceActive, this),
                    l.default.WIZARD_OPEN.add(this._playSequenceOpen, this),
                    l.default.WIZARD_MULT.add(this._playSequenceMult, this))
                }
            }, {
                key: "unbind",
                value: function() {
                    "android" !== this.os && "linux" !== this.os && (l.default.WIZARD_ACTIVE.remove(this._playSequenceActive, this),
                    l.default.WIZARD_OPEN.remove(this._playSequenceOpen, this),
                    l.default.WIZARD_MULT.remove(this._playSequenceMult, this))
                }
            }, {
                key: "_playSequenceActive",
                value: function() {
                    this.playSequence("active")
                }
            }, {
                key: "_playSequenceOpen",
                value: function() {
                    this.playSequence("open")
                }
            }, {
                key: "_playSequenceMult",
                value: function(a) {
                    var b = "multiplier.";
                    switch (a) {
                    case 5:
                        b += "five";
                        break;
                    case 10:
                        b += "ten"
                    }
                    this.playSequence(b)
                }
            }, {
                key: "_onSequenceLastFrame",
                value: function() {
                    var a = this;
                    if ("active" == this.currentSequence && void 0 !== this.activeLoopFrameStart)
                        this.gotoAndPlay(this.activeLoopFrameStart);
                    else {
                        this.stop();
                        (new TimelineLite).add(function() {
                            a._forceDrawScore()
                        }, 2)
                    }
                }
            }, {
                key: "_getAssetsLabels",
                value: function() {
                    return "android" === this.os || "linux" === this.os ? [] : ["active", "open", "multiplier.five", "multiplier.ten"]
                }
            }]),
            b
        }(j.default);
        c.default = o
    }
    , {
        "game/GameEvent": 28,
        "game/dotmatrix/AMatrixMC": 33,
        "game/dotmatrix/GamePriorities": 35
    }],
    44: [function(a, b, c) {
        b.exports = "#define GLSLIFY 1\nuniform sampler2D tDiffuse;\nuniform sampler2D tAdd;\nvarying vec2 vUv;\n\nvoid main() {\n    vec4 color = texture2D( tDiffuse, vUv );\n    vec4 add = texture2D( tAdd, vUv );\n\n    gl_FragColor = color + add;\n}\n"
    }
    , {}],
    45: [function(a, b, c) {
        b.exports = "#define GLSLIFY 1\nvarying vec2 vUv;\nvarying vec3 vNormal;\nvarying vec3 vEye;\n// varying vec3 vViewPosition;\n\nuniform sampler2D tDiffuse;\nuniform sampler2D tDiffuse2;\nuniform sampler2D tNormal;\nuniform sampler2D tMatCap;\nuniform sampler2D tMask;\nuniform float elapsedTime;\nuniform vec2 normalScale;\nuniform float useNormal;\nuniform float visible;\nuniform float useRim;\nuniform float rimPower;\nuniform float useDiffuse2;\nuniform float flipY;\nuniform float useAlpha;\n\nvoid main() {\n\n\tvec3 normal = vNormal;\n\tvec3 reflectedVector = reflect( vEye, normal );\n\n\tfloat m = 2. * sqrt(\n\t\tpow( reflectedVector.x, 2. ) +\n\t\tpow( reflectedVector.y, 2. ) +\n\t\tpow( reflectedVector.z + 1., 2. )\n\t);\n\n\tvec2 vN = reflectedVector.xy / m + .5;\n\tvN.y = vN.y * flipY + ( 1. - vN.y ) * ( 1. - flipY );\n\n\tvec4 diffuse = texture2D( tDiffuse, vUv );\n\tvec3 matCap = texture2D( tMatCap, vN ).rgb;\n\n\tif ( useRim > 0. ) {\n\n\t\tfloat f = rimPower * abs( dot( vNormal, normalize( vEye ) ) );\n\t\tf = useRim * ( 1. - smoothstep( 0.0, 1., f ) );\n\t\tmatCap += vec3( f );\n\n\t}\n\n\tvec3 mask = ( 1. - visible ) * texture2D( tMask, vUv  ).rgb;\n\tvec3 color = ( diffuse.rgb + matCap );\n\tcolor *= texture2D( tDiffuse2, vUv ).rgb;\n\n\tgl_FragColor = vec4( color  * visible + mask, diffuse.a + useAlpha );\n}\n"
    }
    , {}],
    46: [function(a, b, c) {
        b.exports = "#define GLSLIFY 1\nvarying vec2 vUv;\nvarying vec3 vNormal;\nvarying vec3 vEye;\n// varying vec3 vViewPosition;\n\nuniform float flipY;\n\nvoid main() {\n\n\tvUv = uv;\n\tvUv.y = vUv.y * ( 1. - flipY ) + ( 1. - vUv.y ) * flipY;\n\n\tvec3 objectNormal = vec3( normal );\n\tvec3 transformedNormal = normalMatrix * objectNormal;\n\tvNormal = normalize( transformedNormal );\n\n\tvec3 transformed = vec3( position );\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n\n\tgl_Position = projectionMatrix * mvPosition;\n\t// vViewPosition = -mvPosition.xyz;\n\n\tvEye = normalize( vec3( modelViewMatrix * vec4( position, 1. ) ) );\n\n}\n"
    }
    , {}],
    47: [function(a, b, c) {
        b.exports = "#define GLSLIFY 1\n#include <common>\n#include <packing>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n\nvarying vec2 vUv;\nvarying vec3 vNormal;\nvarying vec3 vEye;\n\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tMatCap;\nuniform sampler2D tMask;\nuniform float elapsedTime;\nuniform vec2 normalScale;\nuniform float useNormal;\nuniform float visible;\nuniform float useRim;\nuniform float rimPower;\nuniform float flipY;\nuniform float shadowDarkness;\nuniform vec3 shadowColor;\nuniform float useAlpha;\n\nfloat overlay(float base, float blend) {\n\treturn base < .5 ? ( 2. * base * blend ) : ( 1. - 2. * ( 1. - base ) * ( 1. - blend ) );\n}\n\nvec3 overlay(vec3 base, vec3 blend) {\n\treturn vec3( overlay( base.r, blend.r ), overlay( base.g , blend.g ), overlay( base.b, blend.b ) );\n}\n\nvec3 overlay(vec3 base, vec3 blend, float opacity) {\n\treturn ( overlay( base, blend ) * opacity + base * ( 1. - opacity ) );\n}\n\nvoid main() {\n\n\tvec3 normal = vNormal;\n\tvec3 reflectedVector = reflect( vEye, normal );\n\n\tfloat m = 2. * sqrt(\n\t\tpow( reflectedVector.x, 2. ) +\n\t\tpow( reflectedVector.y, 2. ) +\n\t\tpow( reflectedVector.z + 1., 2. )\n\t);\n\n\tvec2 vN = reflectedVector.xy / m + .5;\n\tvN.y = vN.y * flipY + ( 1. - vN.y ) * ( 1. - flipY );\n\n\tvec4 diffuse = texture2D( tDiffuse, vUv );\n\tvec3 matCap = texture2D( tMatCap, vN ).rgb;\n\n\tfloat f = rimPower * abs( dot( vNormal, normalize( vEye ) ) );\n\tf = useRim * ( 1. - smoothstep( 0.0, 1., f ) );\n\tmatCap += vec3( f );\n\n\tvec3 mask = ( 1. - visible ) * texture2D( tMask, vUv  ).rgb;\n\tvec3 color = ( diffuse.rgb + matCap );\n\n\tgl_FragColor = vec4( color * visible + mask, diffuse.a + useAlpha );\n\n\tvec4 diffuseColor = vec4( 1. );\n\tfloat shadowMask = getShadowMask();\n\tfloat shadow = ( ( 1. - shadowDarkness ) + shadowMask * shadowDarkness );\n\n\tgl_FragColor.rgb *= overlay( vec3( shadow ), shadowColor );\n\t// gl_FragColor *= visible;\n\n}\n"
    }
    , {}],
    48: [function(a, b, c) {
        b.exports = "#define GLSLIFY 1\n#include <common>\n#include <bsdfs>\n#include <shadowmap_pars_vertex>\n\nvarying vec2 vUv;\nvarying vec3 vNormal;\nvarying vec3 vEye;\n\nuniform float flipY;\n\nvoid main() {\n\n\tvUv = uv;\n\tvUv.y = vUv.y * ( 1. - flipY ) + ( 1. - vUv.y ) * flipY;\n\n\tvec3 objectNormal = vec3( normal );\n\tvec3 transformedNormal = normalMatrix * objectNormal;\n\tvNormal = normalize( transformedNormal );\n\n\tvec3 transformed = vec3( position );\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1. );\n\tgl_Position = projectionMatrix * mvPosition;\n\n\tvec4 worldPosition = modelMatrix * vec4( transformed, 1. );\n\n\tvEye = normalize( vec3( modelViewMatrix * vec4( position, 1. ) ) );\n\n\t#include <shadowmap_vertex>\n}\n"
    }
    , {}],
    49: [function(a, b, c) {
        b.exports = "#define GLSLIFY 1\nuniform sampler2D tDiffuse;\nuniform vec2 resolution;\nuniform float blur;\n\nvarying vec2 vUv;\n\nvoid main() {\n\n    vec2 uv = vUv;\n\n    vec4 sum = vec4( .0 );\n    float v = blur / resolution.y;\n    float h = blur / resolution.x;\n\n    sum += texture2D( tDiffuse, vec2( uv.x, uv.y - 4.0 * v ) ) * .051;\n    sum += texture2D( tDiffuse, vec2( uv.x, uv.y - 3.0 * v ) ) * .0918;\n    sum += texture2D( tDiffuse, vec2( uv.x, uv.y - 2.0 * v ) ) * .12245;\n    sum += texture2D( tDiffuse, vec2( uv.x, uv.y - 1.0 * v ) ) * .1531;\n    sum += texture2D( tDiffuse, vec2( uv.x, uv.y ) ) * .1633;\n    sum += texture2D( tDiffuse, vec2( uv.x, uv.y + 1.0 * v ) ) * .1531;\n    sum += texture2D( tDiffuse, vec2( uv.x, uv.y + 2.0 * v ) ) * .12245;\n    sum += texture2D( tDiffuse, vec2( uv.x, uv.y + 3.0 * v ) ) * .0918;\n    sum += texture2D( tDiffuse, vec2( uv.x, uv.y + 4.0 * v ) ) * .051;\n\n    sum += texture2D( tDiffuse, vec2( uv.x - 4.0 * h, uv.y ) ) * .051;\n    sum += texture2D( tDiffuse, vec2( uv.x - 3.0 * h, uv.y ) ) * .0918;\n    sum += texture2D( tDiffuse, vec2( uv.x - 2.0 * h, uv.y ) ) * .12245;\n    sum += texture2D( tDiffuse, vec2( uv.x - 1.0 * h, uv.y ) ) * .1531;\n    sum += texture2D( tDiffuse, vec2( uv.x, uv.y ) ) * .1633;\n    sum += texture2D( tDiffuse, vec2( uv.x + 1.0 * h, uv.y ) ) * .1531;\n    sum += texture2D( tDiffuse, vec2( uv.x + 2.0 * h, uv.y ) ) * .12245;\n    sum += texture2D( tDiffuse, vec2( uv.x + 3.0 * h, uv.y ) ) * .0918;\n    sum += texture2D( tDiffuse, vec2( uv.x + 4.0 * h, uv.y ) ) * .051;\n\n    gl_FragColor = sum * .5;\n}\n"
    }
    , {}],
    50: [function(a, b, c) {
        b.exports = "#define GLSLIFY 1\n#include <common>\n#include <packing>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n\nuniform sampler2D tDiffuse;\nuniform sampler2D tMatCap;\nuniform float flipY;\nuniform float visible;\nuniform float shadowDarkness;\nuniform vec3 shadowColor;\n\nvarying vec2 vUv;\nvarying vec3 vEye;\nvarying vec3 vNormal;\nvarying vec4 vWorldPosition;\n\nuniform sampler2D tReflectionMap;\nvarying vec4 vReflectionMapCoordinates;\n\nfloat overlay(float base, float blend) {\n\treturn base < .5 ? ( 2. * base * blend ) : ( 1. - 2. * ( 1. - base ) * ( 1. - blend ) );\n}\n\nvec3 overlay(vec3 base, vec3 blend) {\n\treturn vec3( overlay( base.r, blend.r ), overlay( base.g , blend.g ), overlay( base.b, blend.b ) );\n}\n\nvec3 overlay(vec3 base, vec3 blend, float opacity) {\n\treturn ( overlay( base, blend ) * opacity + base * ( 1. - opacity ) );\n}\n\nvoid main() {\n\n    vec2 uv = vUv;\n    vec3 reflectedVector = reflect( vEye, vNormal );\n\n    float m = 2. * sqrt(\n        reflectedVector.x * reflectedVector.x +\n        reflectedVector.y * reflectedVector.y +\n        (reflectedVector.z + 1.) * (reflectedVector.z + 1.)\n    );\n\n    vec2 vN = reflectedVector.xy / m + .5;\n\tvN.y = vN.y * ( 1. - flipY ) + ( 1. - vN.y ) * flipY;\n\n    vec3 base = texture2D( tMatCap, vN ).rgb;\n\tvec4 color = texture2D( tDiffuse, uv );\n\n    vec4 reflection = texture2DProj( tReflectionMap, vReflectionMapCoordinates );\n\n    vec4 diffuseColor = vec4( 1. );\n    vec4 diffuse = vec4( base.r * 1.5 * color.rgb, 1. );\n\n    float shadowMask = getShadowMask();\n    float shadow = ( ( 1. - shadowDarkness ) + shadowMask * shadowDarkness );\n    color = mix( diffuse, reflection, .1 );\n\n    if ( vWorldPosition.y > .01 && vWorldPosition.z > .25  ) color = diffuse;\n    else color = mix( diffuse, reflection, .1 );\n\n    color.rgb *=  overlay( vec3( shadow ), shadowColor );\n\n    gl_FragColor = color;\n    gl_FragColor *= visible;\n}\n"
    }
    , {}],
    51: [function(a, b, c) {
        b.exports = "#define GLSLIFY 1\n#include <common>\n#include <bsdfs>\n#include <shadowmap_pars_vertex>\n\nvarying vec2 vUv;\nvarying vec3 vEye;\nvarying vec3 vNormal;\n\nuniform mat4 reflectionMapMatrix;\nvarying vec4 vReflectionMapCoordinates;\nvarying vec4 vWorldPosition;\nuniform float flipY;\n\nvoid main() {\n\n    vUv = uv;\n\tvUv.y = vUv.y * ( 1. - flipY ) + ( 1. - vUv.y ) * flipY;\n\n    vEye = normalize( vec3( modelViewMatrix * vec4( position, 1. ) ) );\n    vNormal = normalize( normalMatrix * normal );\n\n    vec3 transformed = vec3( position );\n    vec4 mvPosition = modelViewMatrix * vec4( transformed, 1. );\n    gl_Position = projectionMatrix * mvPosition;\n\n    vec4 worldPosition = modelMatrix * vec4( transformed, 1. );\n    vWorldPosition = worldPosition;\n\n    vReflectionMapCoordinates = reflectionMapMatrix * worldPosition;\n\n    #include <shadowmap_vertex>\n}\n"
    }
    , {}],
    52: [function(a, b, c) {
        b.exports = "#define GLSLIFY 1\n#include <common>\n#include <packing>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n\nuniform sampler2D tOn;\nuniform sampler2D tOff;\nuniform sampler2D tMatCap;\nuniform float flipY;\nuniform float visible;\nuniform sampler2D tReflectionMap;\nuniform float shadowDarkness;\n\nvarying vec2 vUv;\nvarying vec3 vEye;\nvarying vec3 vNormal;\n// varying float vState;\nvarying float vProgress;\n// varying vec2 vStateCoords;\n\nvarying vec4 vReflectionMapCoordinates;\n\nvoid main() {\n\n    vec2 uv = vUv;\n\n    vec3 reflectedVector = reflect( vEye, vNormal );\n\n    float m = 2. * sqrt(\n        reflectedVector.x * reflectedVector.x +\n        reflectedVector.y * reflectedVector.y +\n        (reflectedVector.z + 1.) * (reflectedVector.z + 1.)\n    );\n\n    vec2 vN = reflectedVector.xy / m + .5;\n\tvN.y = vN.y * ( 1. - flipY ) + ( 1. - vN.y ) * flipY;\n\n    vec3 base = texture2D( tMatCap, vN ).rgb;\n    vec4 color = mix(texture2D( tOff, uv ), texture2D( tOn, uv ), vProgress);\n\n    vec4 reflection = texture2DProj( tReflectionMap, vReflectionMapCoordinates );\n\n    color.rgb = mix( base.r * 1.5 * color.rgb, reflection.rgb, .1 );\n    gl_FragColor = color;\n\n    vec4 diffuseColor = vec4( 1. );\n    float shadow = ( ( 1. - shadowDarkness ) + getShadowMask() * shadowDarkness );\n    gl_FragColor.rgb *= shadow;\n    gl_FragColor *= visible;\n}\n"
    }
    , {}],
    53: [function(a, b, c) {
        b.exports = "#define GLSLIFY 1\n#include <common>\n#include <bsdfs>\n#include <shadowmap_pars_vertex>\n\nattribute float id;\nattribute float width;\nattribute float height;\n\nuniform sampler2D tStates;\nuniform float elapsedTime;\nuniform float flipY;\nuniform vec2 resolution;\nuniform float itemsNb;\nuniform mat4 reflectionMapMatrix;\nvarying vec4 vReflectionMapCoordinates;\n\nvarying vec2 vUv;\nvarying vec3 vEye;\nvarying vec3 vNormal;\n// varying float vState;\nvarying float vProgress;\n// varying vec2 vStateCoords;\n\nfloat when_gt( float x, float y ) {\n    return max( sign( x - y ), .0 );\n}\n\nvoid main() {\n\n    vUv = uv;\n\tvUv.y = vUv.y * ( 1. - flipY ) + ( 1. - vUv.y ) * flipY;\n\n    vec2 stateCoordinates = vec2( mod(id, resolution.x) / resolution.x , id / resolution.x / resolution.y );\n    vec4 tex = texture2D( tStates, stateCoordinates );\n\n    // vStateCoords = stateCoordinates;\n    // vState = tex.r;\n    vProgress = tex.a;\n\n    vEye = normalize( vec3( modelViewMatrix * vec4( position, 1. ) ) );\n    vNormal = normalize( normalMatrix * normal );\n\n    vec3 transformed = vec3( position );\n    vec4 mvPosition = modelViewMatrix * vec4( transformed, 1. );\n    gl_Position = projectionMatrix * mvPosition;\n\n    vec4 worldPosition = modelMatrix * vec4( transformed, 1. );\n\n    vReflectionMapCoordinates = reflectionMapMatrix * worldPosition;\n\n    #include <shadowmap_vertex>\n}\n"
    }
    , {}],
    54: [function(a, b, c) {
        b.exports = "#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main() {\n\n    vUv = uv;\n    gl_Position = vec4( position, 1.0 );\n\n}\n"
    }
    , {}],
    55: [function(a, b, c) {
        b.exports = '#define GLSLIFY 1\n//\n// GLSL textureless classic 3D noise "cnoise",\n// with an RSL-style periodic variant "pnoise".\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n// Version: 2011-10-11\n//\n// Many thanks to Ian McEwan of Ashima Arts for the\n// ideas for permutation and gradient selection.\n//\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n// Distributed under the MIT license. See LICENSE file.\n// https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x)\n{\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec3 fade(vec3 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\n// Classic Perlin noise\nfloat cnoise(vec3 P)\n{\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod289(Pi0);\n  Pi1 = mod289(Pi1);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n  return 2.2 * n_xyz;\n}\n\nuniform sampler2D texture;\n// varying vec2 vUv;\nvarying vec4 vWorldPosition;\n\nuniform float elapsedTime;\nuniform float scale;\nuniform vec3 lightColor;\nuniform vec3 darkColor;\nuniform float visible;\n\nvoid main() {\n    float value = cnoise( vWorldPosition.xyz * scale + elapsedTime * .01 );\n    vec3 diffuse = mix( darkColor, lightColor, value );\n\n    gl_FragColor = vec4( diffuse, 1. );\n    gl_FragColor *= visible;\n}\n'
    }
    , {}],
    56: [function(a, b, c) {
        b.exports = "#define GLSLIFY 1\n// varying vec2 vUv;\nvarying vec4 vWorldPosition;\n\nvoid main() {\n\n    // vUv = uv;\n    vWorldPosition = modelMatrix * vec4( position, 1.0 );\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n}\n"
    }
    , {}],
    57: [function(a, b, c) {
        b.exports = "#define GLSLIFY 1\nuniform vec3 lightColor;\nuniform vec3 spotPosition;\nuniform float attenuation;\nuniform float anglePower;\nuniform float visible;\n\nvarying vec3 vNormal;\nvarying vec3 vWorldPosition;\n\nvoid main(){\n\n\tfloat intensity\t= distance( vWorldPosition, spotPosition ) / attenuation;\n\tintensity = 1. - clamp( intensity, 0., 1. );\n\n\tvec3 normal = vec3( vNormal.x, vNormal.y, abs( vNormal.z ) );\n\tfloat angleIntensity = pow( dot( normal, vec3( 0., 0., 1. ) ), anglePower );\n\tintensity = intensity * angleIntensity;\n\n\tgl_FragColor = vec4( lightColor, intensity );\n\tgl_FragColor *= visible;\n}\n"
    }
    , {}],
    58: [function(a, b, c) {
        b.exports = "#define GLSLIFY 1\nvarying vec3 vNormal;\nvarying vec3 vWorldPosition;\n\nvoid main(){\n\n\tvNormal = normalize( normalMatrix * normal );\n\n\tvec4 worldPosition = modelMatrix * vec4( position, 1. );\n\tvWorldPosition = worldPosition.xyz;\n\n\tgl_Position\t= projectionMatrix * modelViewMatrix * vec4( position, 1. );\n}\n"
    }
    , {}],
    59: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("vendors/signal/Signal")
          , h = d(g)
          , i = a("utils/Viewport")
          , j = d(i)
          , k = function() {
            function a() {
                e(this, a),
                this._keyUp = this._keyUp.bind(this),
                this._keyDown = this._keyDown.bind(this),
                this._onFocusChange = this._onFocusChange.bind(this),
                this.onKeyDown = new h.default,
                this.onKeyUp = new h.default,
                this.keys = {
                    left: [37, 65, 66, 67, 68, 69, 70, 71, 81, 83, 82, 84, 86, 87, 88, 90],
                    up: 38,
                    right: [39, 89, 85, 73, 79, 80, 72, 74, 75, 76, 77, 78, 188, 186, 187],
                    down: [40, 32, 13],
                    pageup: 33,
                    pagedown: 34
                },
                this.pressed = {}
            }
            return f(a, [{
                key: "isDown",
                value: function(a) {
                    var b = !1
                      , c = this.keys[a];
                    Array.isArray(c) || (c = [c]);
                    for (var d = 0; d < c.length; d++)
                        this.pressed[c[d]] && (b = !0);
                    return b
                }
            }, {
                key: "_keyDown",
                value: function(a) {
                    var b = this.pressed[a.keyCode];
                    this.pressed[a.keyCode] = !0,
                    b || this.onKeyDown.dispatch(a.keyCode)
                }
            }, {
                key: "_keyUp",
                value: function(a) {
                    this.onKeyUp.dispatch(a.keyCode),
                    delete this.pressed[a.keyCode]
                }
            }, {
                key: "_onFocusChange",
                value: function() {
                    j.default.blurred || (this.pressed = {})
                }
            }, {
                key: "bind",
                value: function() {
                    addEventListener("keyup", this._keyUp),
                    addEventListener("keydown", this._keyDown),
                    j.default.focusChanged.add(this._onFocusChange)
                }
            }, {
                key: "unbind",
                value: function() {
                    removeEventListener("keyup", this._keyUp),
                    removeEventListener("keydown", this._keyDown),
                    j.default.onFocus.remove(this._onFocusChange)
                }
            }]),
            a
        }();
        c.default = k
    }
    , {
        "utils/Viewport": 144,
        "vendors/signal/Signal": 149
    }],
    60: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = a("three")
          , g = a("vendors/signal/Signal")
          , h = function(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }(g)
          , i = function() {
            function a() {
                d(this, a),
                this.bind = this.bind.bind(this),
                this.unbind = this.unbind.bind(this),
                this._down = this._down.bind(this),
                this._move = this._move.bind(this),
                this._up = this._up.bind(this),
                this._rest = this._rest.bind(this),
                this.client = new f.Vector2,
                this.start = new f.Vector2,
                this.delta = new f.Vector2,
                this.resting = !0,
                this.onDown = new h.default,
                this.onMove = new h.default,
                this.onUp = new h.default
            }
            return e(a, [{
                key: "getDelta",
                value: function() {
                    return this.delta.x = this.start.x - this.client.x,
                    this.delta.y = this.start.y - this.client.y,
                    this.delta
                }
            }, {
                key: "normalize",
                value: function(a) {
                    var b = a.clone();
                    return b.x = f.Math.mapLinear(b.x, 0, Viewport.width, -1, 1),
                    b.y = f.Math.mapLinear(b.y, 0, Viewport.height, 1, -1),
                    b
                }
            }, {
                key: "reset",
                value: function() {
                    this.isDown = !1,
                    this.resting = !0,
                    this.client = new f.Vector2,
                    this.start = new f.Vector2,
                    this.delta = new f.Vector2
                }
            }, {
                key: "_down",
                value: function(a) {
                    this.isDown = !0,
                    this.start.x = a.clientX,
                    this.start.y = a.clientY,
                    this.delta.x = 0,
                    this.delta.y = 0,
                    this.onDown.dispatch()
                }
            }, {
                key: "_move",
                value: function(a) {
                    this.client.x = a.clientX,
                    this.client.y = a.clientY,
                    this.resting = !1,
                    clearTimeout(this.timeout),
                    this.timeout = setTimeout(this.onRest, 10),
                    this.onMove.dispatch()
                }
            }, {
                key: "_up",
                value: function(a) {
                    this.isDown = !1,
                    this.reset(),
                    this.onUp.dispatch()
                }
            }, {
                key: "_rest",
                value: function() {
                    this.resting = !0,
                    this.onRest.dispatch()
                }
            }, {
                key: "bind",
                value: function() {
                    addEventListener("mousedown", this._down, !1),
                    addEventListener("mousemove", this._move, !1),
                    addEventListener("mouseup", this._up, !1),
                    this.reset()
                }
            }, {
                key: "unbind",
                value: function() {
                    removeEventListener("mousedown", this._down, !1),
                    removeEventListener("mousemove", this._move, !1),
                    removeEventListener("mouseup", this._up, !1)
                }
            }]),
            a
        }();
        c.default = i
    }
    , {
        three: 10,
        "vendors/signal/Signal": 149
    }],
    61: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("three")
          , h = a("vendors/signal/Signal")
          , i = d(h)
          , j = a("utils/Viewport")
          , k = d(j)
          , l = function() {
            function a() {
                e(this, a),
                this._start = this._start.bind(this),
                this._move = this._move.bind(this),
                this._end = this._end.bind(this),
                this._update = this._update.bind(this),
                this.onTouchStart = new i.default,
                this.onTouchMove = new i.default,
                this.onTouchEnd = new i.default,
                this.onDown = new i.default,
                this.areas = {
                    left: {
                        max: {
                            x: 0
                        }
                    },
                    right: {
                        min: {
                            x: 0
                        }
                    }
                },
                this.touched = {}
            }
            return f(a, [{
                key: "getDelta",
                value: function() {
                    return this.delta.x = this.started && this.moving ? this.start.x - this.client.x : 0,
                    this.delta.y = this.started && this.moving ? this.start.y - this.client.y : 0,
                    this.delta
                }
            }, {
                key: "areaIsTouch",
                value: function(a) {
                    return this.touched[a]
                }
            }, {
                key: "normalize",
                value: function(a) {
                    var b = a.clone();
                    return b.x = g.Math.mapLinear(b.x, 0, k.default.width, -1, 1),
                    b.y = g.Math.mapLinear(b.y, 0, k.default.height, 1, -1),
                    b
                }
            }, {
                key: "reset",
                value: function() {
                    this.started = !1,
                    this.client = new g.Vector2,
                    this.start = new g.Vector2,
                    this.delta = new g.Vector2
                }
            }, {
                key: "_start",
                value: function(a) {
                    this.preventDefault && this._preventDefault(a);
                    var b = a.touches[0];
                    this.started = !0,
                    this.start.x = b.clientX,
                    this.start.y = b.clientY,
                    this.delta.x = 0,
                    this.delta.y = 0,
                    this._update(a)
                }
            }, {
                key: "_move",
                value: function(a) {
                    this.preventDefault && this._preventDefault(a);
                    var b = a.touches[0];
                    this.moving = !0,
                    this.client.x = b.clientX,
                    this.client.y = b.clientY,
                    this._update(a)
                }
            }, {
                key: "_end",
                value: function(a) {
                    this.preventDefault && this._preventDefault(a),
                    this.moving = !1,
                    this.started = !1,
                    this.reset(),
                    this._update(a)
                }
            }, {
                key: "_update",
                value: function(a) {
                    this.isTouch = !!a.touches.length;
                    var b = [];
                    for (var c in this.touched)
                        b[c] = this.touched[c],
                        this.touched[c] = !1;
                    for (var d = 0; d < a.touches.length; d++) {
                        var e = a.touches[d];
                        for (var f in this.areas) {
                            var h = this.areas[f]
                              , i = new g.Vector2(e.clientX,e.clientY);
                            (0 === d || 1 === d && !this.touched[f]) && (this.touched[f] = this._contains(i, h),
                            !b[f] && this.touched[f] && this.onDown.dispatch())
                        }
                    }
                }
            }, {
                key: "_contains",
                value: function(a, b) {
                    return b.min = b.min || {},
                    b.max = b.max || {},
                    b.min.x = void 0 == b.min.x ? -1 : b.min.x,
                    b.min.y = void 0 == b.min.y ? -1 : b.min.y,
                    b.max.x = void 0 == b.max.x ? 1 : b.max.x,
                    b.max.y = void 0 == b.max.y ? 1 : b.max.y,
                    a = this.normalize(a),
                    a.x > b.min.x && a.x < b.max.x && a.y > b.min.y && a.y < b.max.y
                }
            }, {
                key: "_preventDefault",
                value: function(a) {
                    a.stopPropagation(),
                    a.preventDefault(),
                    a.returnValue = !1
                }
            }, {
                key: "bind",
                value: function() {
                    addEventListener("touchstart", this._start),
                    addEventListener("touchmove", this._move),
                    addEventListener("touchend", this._end),
                    this.reset()
                }
            }, {
                key: "unbind",
                value: function() {
                    removeEventListener("touchstart", this._start),
                    removeEventListener("touchmove", this._move),
                    removeEventListener("touchend", this._end)
                }
            }]),
            a
        }();
        c.default = l
    }
    , {
        three: 10,
        "utils/Viewport": 144,
        "vendors/signal/Signal": 149
    }],
    62: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("vendors/signal/Signal")
          , h = d(g)
          , i = a("game/audio/ThreeAudioManager")
          , j = d(i)
          , k = function() {
            function a(b) {
                e(this, a),
                this.game = b,
                this.reward = 1e5,
                this.status = a.IDLE,
                this.id = this.constructor.name.toLowerCase(),
                this.completed = new h.default,
                this.failed = new h.default,
                this.init(),
                this._goalsCounter = 0,
                this._goalsNb = 0
            }
            return f(a, [{
                key: "init",
                value: function() {}
            }, {
                key: "start",
                value: function() {
                    this.status = a.STARTED
                }
            }, {
                key: "complete",
                value: function() {
                    this.status = a.COMPLETED,
                    this.completed.dispatch(this)
                }
            }, {
                key: "fail",
                value: function() {
                    this.status = a.FAILED,
                    this.failed.dispatch(this)
                }
            }, {
                key: "goalUpdate",
                value: function() {
                    this._goalsCounter++,
                    j.default.play("mission.goal")
                }
            }, {
                key: "reset",
                value: function() {
                    var b = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
                    this.status !== a.COMPLETED && (this.status = a.IDLE),
                    b && (this.status = a.IDLE),
                    this._goalsCounter = 0
                }
            }, {
                key: "checkGoals",
                value: function() {
                    this._goalsCounter >= this._goalsNb && this.complete()
                }
            }]),
            a
        }();
        c.default = k,
        k.IDLE = "missionidle",
        k.STARTED = "missionstarted",
        k.COMPLETED = "missioncompleted",
        k.FAILED = "missionfailed"
    }
    , {
        "game/audio/ThreeAudioManager": 32,
        "vendors/signal/Signal": 149
    }],
    63: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function e(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function f(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var g = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , h = function a(b, c, d) {
            null === b && (b = Function.prototype);
            var e = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === e) {
                var f = Object.getPrototypeOf(b);
                return null === f ? void 0 : a(f, c, d)
            }
            if ("value"in e)
                return e.value;
            var g = e.get;
            if (void 0 !== g)
                return g.call(d)
        }
          , i = a("./AMission")
          , j = function(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }(i)
          , k = function(a) {
            function b(a) {
                d(this, b);
                var c = e(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a));
                return c.id = "bordeaux",
                c
            }
            return f(b, a),
            g(b, [{
                key: "init",
                value: function() {
                    this._groupedSensors = [this.game.sensors[20], this.game.sensors[21], this.game.sensors[22], this.game.sensors[23]],
                    this._onSensorCollided = this._onSensorCollided.bind(this)
                }
            }, {
                key: "start",
                value: function() {
                    var a = this;
                    h(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "start", this).call(this),
                    app.game.groundAnimations.ramp0.initMission(),
                    app.game.groundAnimations.ramp1.initMission(),
                    app.game.groundAnimations.ramp2.initMission(),
                    app.game.groundAnimations.ramp3.initMission(),
                    this._groupedSensors.forEach(function(b) {
                        b.collided.add(a._onSensorCollided)
                    })
                }
            }, {
                key: "reset",
                value: function(a) {
                    var c = this;
                    h(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "reset", this).call(this, a),
                    app.game.groundAnimations.ramp0.missionClear(),
                    app.game.groundAnimations.ramp1.missionClear(),
                    app.game.groundAnimations.ramp2.missionClear(),
                    app.game.groundAnimations.ramp3.missionClear(),
                    this._groupedSensors.forEach(function(a) {
                        a.active = !1,
                        a.collided.remove(c._onSensorCollided)
                    })
                }
            }, {
                key: "_onSensorCollided",
                value: function(a) {
                    var b = this;
                    a.sensor.active = !0;
                    var c = !0;
                    switch (this._groupedSensors.forEach(function(a) {
                        a.active || (c = !1)
                    }),
                    a.id) {
                    case 20:
                        app.game.groundAnimations.ramp0.missionClear(),
                        this.goalUpdate();
                        break;
                    case 21:
                        app.game.groundAnimations.ramp1.missionClear(),
                        this.goalUpdate();
                        break;
                    case 22:
                        app.game.groundAnimations.ramp2.missionClear(),
                        this.goalUpdate();
                        break;
                    case 23:
                        app.game.groundAnimations.ramp3.missionClear(),
                        this.goalUpdate()
                    }
                    this.game.sensors[a.id].collided.remove(this._onSensorCollided),
                    c && (this._groupedSensors.forEach(function(a) {
                        a.collided.remove(b._onSensorCollided)
                    }),
                    this.complete())
                }
            }]),
            b
        }(j.default);
        c.default = k
    }
    , {
        "./AMission": 62
    }],
    64: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = function a(b, c, d) {
            null === b && (b = Function.prototype);
            var e = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === e) {
                var f = Object.getPrototypeOf(b);
                return null === f ? void 0 : a(f, c, d)
            }
            if ("value"in e)
                return e.value;
            var g = e.get;
            if (void 0 !== g)
                return g.call(d)
        }
          , j = a("./AMission")
          , k = d(j)
          , l = a("./MissionsModel")
          , m = a("game/GameEvent")
          , n = d(m)
          , o = a("vendors/signal/Signal")
          , p = d(o)
          , q = a("game/audio/ThreeAudioManager")
          , r = d(q)
          , s = function(a) {
            function b(a) {
                e(this, b);
                var c = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a));
                return c.id = "jackpot",
                c
            }
            return g(b, a),
            h(b, [{
                key: "init",
                value: function() {
                    this._onTargetActivated = this._onTargetActivated.bind(this),
                    this._onGroupCompleted = this._onGroupCompleted.bind(this),
                    this._onSensorOutCollided = this._onSensorOutCollided.bind(this),
                    this._onGateCollided = this._onGateCollided.bind(this),
                    this._targetGroup = this.game.targetGroups[1],
                    this._targetGroup.targetActivated.add(this._onTargetActivated.bind(this)),
                    this._targetGroup.completed.add(this._onGroupCompleted.bind(this)),
                    this._door = this.game.doors[2],
                    this.rampDoor = this.game.ramps[0].doors[0],
                    this.game.sensors[14].collided.add(this._onSensorOutCollided.bind(this)),
                    this.game.gatesIn[8].entered.add(this._onGateCollided.bind(this)),
                    this.sessionScore = 0,
                    this.reward = 0,
                    this.scored = new p.default,
                    this.exit = new p.default
                }
            }, {
                key: "start",
                value: function() {
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "start", this).call(this),
                    this._targetGroup.enabled = !0,
                    r.default.play("jackpot.in", 1.5),
                    r.default.toggleModul(.5, !0)
                }
            }, {
                key: "open",
                value: function() {
                    this.rampDoor.opened = !0,
                    this.sessionScore = 0,
                    r.default.play("jackpot.open"),
                    app.game.groundAnimations.ramp0.doorOpenAnimation()
                }
            }, {
                key: "reset",
                value: function() {
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "reset", this).call(this),
                    this.rampDoor.opened = !1,
                    this._door.opened = !1,
                    this._targetGroup.reset(),
                    app.game.groundAnimations.deco.gJackpot4.stop()
                }
            }, {
                key: "resetReward",
                value: function() {
                    this.reward = 0,
                    n.default.JACKPOT_INCREASING.dispatch(this.reward)
                }
            }, {
                key: "_onTargetActivated",
                value: function(a) {
                    var b = l.model.jackpot.target.score * (this._targetGroup.iteration + 1);
                    this.reward += b,
                    this.sessionScore += b,
                    n.default.JACKPOT_INCREASING.dispatch(this.reward)
                }
            }, {
                key: "_onGroupCompleted",
                value: function() {
                    this._targetGroup.iteration >= this._targetGroup.maxIterations && (this._door.opened = !0,
                    r.default.play("jackpot.door.open", 1.5),
                    r.default.play("mission.success", .75),
                    app.game.groundAnimations.deco.gJackpot4.start())
                }
            }, {
                key: "_onSensorOutCollided",
                value: function(a) {
                    this.status = k.default.IDLE,
                    this.rampDoor.opened = !1,
                    this._targetGroup.reset(),
                    this._targetGroup.iteration = 0,
                    this.exit.dispatch(),
                    r.default.play("jackpot.fail"),
                    app.game.groundAnimations.deco.gJackpot4.stop(),
                    setTimeout(function() {
                        app.game.groundAnimations.targetGroups[1].reset(),
                        app.game.groundAnimations.targetGroups[1].missionClear()
                    }, 500),
                    app.game.targetGroups[4].reset(!1),
                    app.game.groundAnimations.targetGroups[4].reset(),
                    app.game.groundAnimations.targetGroups[4].missionClear()
                }
            }, {
                key: "_onGateCollided",
                value: function(a) {
                    this.status = k.default.IDLE,
                    this._door.opened = !1;
                    var b = !0;
                    app.game.missions._basicMissions.forEach(function(a) {
                        a.status != k.default.COMPLETED && (b = !1)
                    }),
                    this.reward += l.model.jackpot.gateBonus.score,
                    b ? (app.game.stats.addPoints(this.reward),
                    this.reward = 0,
                    app.game.missions._basicMissions.forEach(function(a) {
                        a.reset()
                    }),
                    app.game.groundAnimations.missionsReset(),
                    r.default.play("mission.success"),
                    r.default.play("jackpot.win"),
                    n.default.JACKPOT_WIN.dispatch()) : (n.default.JACKPOT_INCREASING.dispatch(this.reward),
                    r.default.play("mission.goal"),
                    n.default.JACKPOT_SUCCESS.dispatch(!0)),
                    this.rampDoor.opened = !1,
                    app.game.targetGroups[4].reset(!1),
                    app.game.groundAnimations.targetGroups[4].reset(),
                    app.game.groundAnimations.targetGroups[4].missionClear(),
                    this._targetGroup.reset(),
                    this._targetGroup.iteration = 0,
                    this.sessionScore = 0,
                    this.scored.dispatch(this.reward)
                }
            }]),
            b
        }(k.default);
        c.default = s
    }
    , {
        "./AMission": 62,
        "./MissionsModel": 67,
        "game/GameEvent": 28,
        "game/audio/ThreeAudioManager": 32,
        "vendors/signal/Signal": 149
    }],
    65: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = function a(b, c, d) {
            null === b && (b = Function.prototype);
            var e = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === e) {
                var f = Object.getPrototypeOf(b);
                return null === f ? void 0 : a(f, c, d)
            }
            if ("value"in e)
                return e.value;
            var g = e.get;
            if (void 0 !== g)
                return g.call(d)
        }
          , j = a("./AMission")
          , k = d(j)
          , l = a("game/physics/items/SensorsGroup")
          , m = (d(l),
        function(a) {
            function b(a) {
                e(this, b);
                var c = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a));
                return c.id = "marseille",
                c._goalsCounter = 0,
                c._goalsNb = 3,
                c
            }
            return g(b, a),
            h(b, [{
                key: "init",
                value: function() {
                    this._sensor = this.game.sensors[13],
                    this._onSensorCollided = this._onSensorCollided.bind(this),
                    this._rampSensor = this.game.sensors[21],
                    this._onRampSensorCollided = this._onRampSensorCollided.bind(this),
                    this._targetGroup = this.game.targetGroups[0],
                    this._onTargetGroupCompleted = this._onTargetGroupCompleted.bind(this),
                    this._onTargetActivated = this._onTargetActivated.bind(this)
                }
            }, {
                key: "start",
                value: function() {
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "start", this).call(this),
                    this._targetGroup.reset(!1),
                    this._targetGroup.resetIteration(),
                    app.game.groundAnimations.ramp1.initMission(),
                    app.game.groundAnimations.targetGroups[0].initMission(),
                    app.game.groundAnimations.sensors.initMission(4),
                    app.game.groundAnimations.deco.gRollUpArrows.start(),
                    this._sensor.collided.addOnce(this._onSensorCollided),
                    this._rampSensor.collided.addOnce(this._onRampSensorCollided),
                    this._targetGroup.targetActivated.add(this._onTargetActivated),
                    this._targetGroup.completed.addOnce(this._onTargetGroupCompleted)
                }
            }, {
                key: "reset",
                value: function(a) {
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "reset", this).call(this, a),
                    this._targetGroup.reset(!1),
                    app.game.groundAnimations.ramp1.missionClear(),
                    app.game.groundAnimations.targetGroups[0].reset(),
                    app.game.groundAnimations.targetGroups[0].missionClear(),
                    app.game.groundAnimations.sensors.missionClear(4),
                    app.game.groundAnimations.deco.gRollUpArrows.stop(),
                    this._sensor.collided.remove(this._onSensorCollided),
                    this._rampSensor.collided.remove(this._onRampSensorCollided),
                    this._targetGroup.targetActivated.remove(this._onTargetActivated),
                    this._targetGroup.completed.remove(this._onTargetGroupCompleted)
                }
            }, {
                key: "_onSensorCollided",
                value: function(a) {
                    app.game.groundAnimations.sensors.missionClear(4),
                    app.game.groundAnimations.deco.gRollUpArrows.stop(),
                    this.goalUpdate(),
                    this.checkGoals()
                }
            }, {
                key: "_onRampSensorCollided",
                value: function(a) {
                    app.game.groundAnimations.ramp1.missionClear(),
                    this.goalUpdate(),
                    this.checkGoals()
                }
            }, {
                key: "_onTargetActivated",
                value: function(a) {
                    app.game.groundAnimations.targetGroups[0].arrowOff(a.id)
                }
            }, {
                key: "_onTargetGroupCompleted",
                value: function() {
                    this.goalUpdate(),
                    this.checkGoals()
                }
            }]),
            b
        }(k.default));
        c.default = m
    }
    , {
        "./AMission": 62,
        "game/physics/items/SensorsGroup": 89
    }],
    66: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("vendors/signal/Signal")
          , h = d(g)
          , i = a("game/physics/items/Ball")
          , j = (d(i),
        a("game/physics/items/SensorsGroup"))
          , k = d(j)
          , l = a("./AMission")
          , m = d(l)
          , n = a("./MissionsModel")
          , o = a("./Paris")
          , p = d(o)
          , q = a("./Bordeaux")
          , r = d(q)
          , s = a("./Marseille")
          , t = d(s)
          , u = a("./Strasbourg")
          , v = d(u)
          , w = a("./Rennes")
          , x = d(w)
          , y = a("./Jackpot")
          , z = d(y)
          , A = a("./MultiBall")
          , B = d(A)
          , C = a("./Wizard")
          , D = d(C)
          , E = a("game/GameEvent")
          , F = d(E)
          , G = a("game/GameModel")
          , H = d(G)
          , I = a("game/audio/ThreeAudioManager")
          , J = d(I)
          , K = function() {
            function a(b) {
                e(this, a),
                this.game = b,
                this._onReleasedPlunger = this._onReleasedPlunger.bind(this),
                this._onStartBasicMission = this._onStartBasicMission.bind(this),
                this._onLostBall = this._onLostBall.bind(this),
                this._onCollideSensor = this._onCollideSensor.bind(this),
                this._onWizardEntered = this._onWizardEntered.bind(this),
                this._onMultiBallEnter = this._onMultiBallEnter.bind(this),
                this._onRampCompleted = this._onRampCompleted.bind(this),
                this._onJackpotEntered = this._onJackpotEntered.bind(this),
                this._onRolloversGroupCompleted = this._onRolloversGroupCompleted.bind(this),
                this._onRolloversGroupCollided = this._onRolloversGroupCollided.bind(this),
                this._onCollidedBumper = this._onCollidedBumper.bind(this),
                this._onCollidedSlingshot = this._onCollidedSlingshot.bind(this),
                this._onTargetCollided = this._onTargetCollided.bind(this),
                this._onActivatedTarget = this._onActivatedTarget.bind(this),
                this._onTargetGroupCompleted = this._onTargetGroupCompleted.bind(this),
                this._onWizardTargetGroupCompleted = this._onWizardTargetGroupCompleted.bind(this),
                this._onMultiballTargetGroupCompleted = this._onMultiballTargetGroupCompleted.bind(this),
                this._onJackpotTargetGroupCompleted = this._onJackpotTargetGroupCompleted.bind(this),
                this._onCollideLeftKickbackSensor = this._onCollideLeftKickbackSensor.bind(this),
                this._onCollideRightKickbackSensor = this._onCollideRightKickbackSensor.bind(this),
                this._onCompletedBasicMission = this._onCompletedBasicMission.bind(this),
                this._onJackpotMissionExit = this._onJackpotMissionExit.bind(this),
                this._onJackpotMissionCompleted = this._onJackpotMissionCompleted.bind(this),
                this._onJackpotMissionScored = this._onJackpotMissionScored.bind(this),
                this._onMultiBallMissionCompleted = this._onMultiBallMissionCompleted.bind(this),
                this._onMultiBallMissionFailed = this._onMultiBallMissionFailed.bind(this),
                this._onWizardMissionCompleted = this._onWizardMissionCompleted.bind(this),
                this._onWizardMissionScored = this._onWizardMissionScored.bind(this),
                this._onKickBackLaunched = this._onKickBackLaunched.bind(this),
                this.init(),
                this.reset()
            }
            return f(a, [{
                key: "init",
                value: function() {
                    var a = this;
                    this.statusUpdated = new h.default,
                    this.onMissionStarted = new h.default,
                    this.onMissionCompleted = new h.default,
                    this._awaitedMissions = {},
                    this.game.plunger.released.add(this._onReleasedPlunger),
                    this.game.sensors[22].collided.add(this._onStartBasicMission),
                    this.game.sensors[1].collided.add(this._onLostBall),
                    this.game.sensors[11].collided.add(this._onCollideSensor),
                    this.game.sensors[12].collided.add(this._onCollideSensor),
                    this.game.sensors[15].collided.add(this._onCollideSensor),
                    this.game.sensors[13].collided.add(this._onCollideSensor),
                    this.game.sensors[23].collided.add(this._onWizardEntered),
                    this.game.sensors[24].collided.add(this._onMultiBallEnter),
                    this.game.ramps.forEach(function(b) {
                        b.completed.add(a._onRampCompleted)
                    }),
                    this.game.ramps[0].left.add(this._onJackpotEntered),
                    this._rolloversGroup = new k.default(this.game,[this.game.sensors[2], this.game.sensors[3], this.game.sensors[4], this.game.sensors[5]],!0),
                    this._rolloversGroup.completed.add(this._onRolloversGroupCompleted),
                    this._rolloversGroup.collided.add(this._onRolloversGroupCollided),
                    this.game.bumpers.forEach(function(b) {
                        b.collided.add(a._onCollidedBumper)
                    }),
                    this.game.slingshots.forEach(function(b) {
                        b.collided.add(a._onCollidedSlingshot)
                    }),
                    this.game.targets[0].collided.add(this._onTargetCollided),
                    this.game.targets[1].collided.add(this._onTargetCollided),
                    this.game.targetGroups.forEach(function(b, c) {
                        b.targets.forEach(function(c) {
                            1 !== b.id && c.activated.add(a._onActivatedTarget)
                        })
                    }),
                    this.game.targetGroups[1].completed.add(this._onTargetGroupCompleted),
                    this.game.targetGroups[0].completed.add(this._onTargetGroupCompleted),
                    this.game.targetGroups[0].enabled = !0,
                    this.game.targetGroups[5].completed.add(this._onTargetGroupCompleted),
                    this.game.targetGroups[5].enabled = !0,
                    this.game.targetGroups[2].completed.add(this._onWizardTargetGroupCompleted),
                    this.game.targetGroups[2].enabled = !0,
                    this.game.targetGroups[3].completed.add(this._onMultiballTargetGroupCompleted),
                    this.game.targetGroups[3].enabled = !0,
                    this.game.targetGroups[4].completed.add(this._onJackpotTargetGroupCompleted),
                    this.game.targetGroups[4].enabled = !0,
                    this.game.kickbacks.forEach(function(b) {
                        b.launched.add(a._onKickBackLaunched)
                    }),
                    this.game.sensors[11].collided.add(this._onCollideLeftKickbackSensor),
                    this.game.sensors[12].collided.add(this._onCollideLeftKickbackSensor),
                    this.game.sensors[15].collided.add(this._onCollideRightKickbackSensor),
                    this._basicMissions = [new p.default(this.game,this._rolloversGroup), new r.default(this.game), new t.default(this.game), new v.default(this.game), new x.default(this.game)],
                    this._basicMissions.forEach(function(b) {
                        b.completed.add(a._onCompletedBasicMission)
                    }),
                    this._jackpotMission = new z.default(this.game),
                    this._jackpotMission.exit.add(this._onJackpotMissionExit),
                    this._jackpotMission.completed.add(this._onJackpotMissionCompleted),
                    this._jackpotMission.scored.add(this._onJackpotMissionScored),
                    this._multiBallMission = new B.default(this.game),
                    this._multiBallMission.completed.add(this._onMultiBallMissionCompleted),
                    this._multiBallMission.failed.add(this._onMultiBallMissionFailed),
                    this._wizardMission = new D.default(this.game),
                    this._wizardMission.completed.add(this._onWizardMissionCompleted),
                    this._wizardMission.scored.add(this._onWizardMissionScored)
                }
            }, {
                key: "reset",
                value: function() {
                    this._jackpotMission.resetReward(),
                    this._extraBall = !1,
                    this.running = !1,
                    this._currentMission = null,
                    this._awaitedMissions = {},
                    this._onMultiballDoorsState = {},
                    app.stage.ground.reset(),
                    this._rollOverMultiplier = 1,
                    this._bumperMultiplier = 1,
                    this._slingshotMultiplier = 1,
                    this._startTime = null,
                    this.game.targetGroups.forEach(function(a) {
                        a.targets.forEach(function(a) {
                            a.active = !1
                        })
                    }),
                    this.game.board.reset(),
                    this._rolloversGroup.reset();
                    for (var a = 0, b = this.game.targetGroups.length; a < b; a++)
                        this.game.targetGroups[a].onLost();
                    for (var c in H.default.doors) {
                        var d = H.default.doors[c]
                          , e = c.split(".");
                        if (e[1]) {
                            var f = 0 | e[0].replace("A", "");
                            e[1].replace("C", "");
                            this.game.ramps[f].doors[0].opened = d
                        } else {
                            var g = 0 | e[0].replace("C", "");
                            this.game.doors[g].opened = d
                        }
                    }
                    this.game.slingshots.forEach(function(a) {
                        a.isCollided = !1
                    }),
                    this.game.bumpers.forEach(function(a) {
                        a.isCollided = !1
                    }),
                    this.game.ramps.forEach(function(a) {
                        a.reset()
                    }),
                    this._basicMissions.forEach(function(a) {
                        a.status !== m.default.IDLE && a.reset()
                    }),
                    this.game.balls.forEach(function(a, b) {
                        a.enabled = !1
                    }),
                    this.multiballCanDispatch = !0
                }
            }, {
                key: "destroy",
                value: function() {
                    this.game = null
                }
            }, {
                key: "_addPlatformMission",
                value: function(a, b) {
                    1 === this.game.ballNb ? b() : this._awaitedMissions[a] = b
                }
            }, {
                key: "_lastBall",
                value: function() {
                    void 0 !== this._onMultiballDoorsState.jackpot && (this._jackpotMission.rampDoor.opened = this._onMultiballDoorsState.jackpot),
                    void 0 !== this._onMultiballDoorsState.wizard && (this._wizardMission.rampDoor.opened = this._onMultiballDoorsState.wizard);
                    for (var a in this._awaitedMissions)
                        this._awaitedMissions[a]();
                    for (var b = !0, c = 0, d = this.game.targetGroups[3].targets.length; c < d; c++)
                        !1 === this.game.targetGroups[3].targets[c].active && (b = !1);
                    this._multiBallMission.reset(b),
                    this._awaitedMissions = {},
                    this._onMultiballDoorsState = {}
                }
            }, {
                key: "_lost",
                value: function() {
                    this._rollOverMultiplier = 1,
                    this._bumperMultiplier = 1,
                    this._slingshotMultiplier = 1,
                    this._awaitedMissions = {},
                    this._onMultiballDoorsState = {},
                    this.game.board.reset();
                    for (var a = 0, b = this.game.targetGroups.length; a < b; a++)
                        1 !== this.game.targetGroups[a].id && this.game.targetGroups[a].onLost();
                    for (var c = 0, d = this.game.ramps.length; c < d; c++)
                        this.game.ramps[c].reset();
                    var e = (Date.now() - this._startTime) / 1e3;
                    if (this._rolloversGroup.reset(),
                    this._basicMissions.forEach(function(a) {
                        a.reset(!1)
                    }),
                    this._jackpotMission.reset(),
                    this._multiBallMission.reset(),
                    this._wizardMission.reset(),
                    this._currentMission = null,
                    e < 10 && !this._extraBall && 3 === app.game.stats.credits) {
                        this._extraBall = !0;
                        var f = this.game.balls[0];
                        app.stage.cameraControls.set("lostBall", {
                            ease: Power4.easeOut,
                            duration: 1
                        }),
                        (new TimelineLite).add(function() {
                            f.reset(-7),
                            app.stage.cameraControls.mode = "follow",
                            J.default.play("train.launch")
                        }, 2),
                        F.default.SAVER.dispatch(),
                        J.default.play("lost.ball"),
                        J.default.play("balls.out")
                    } else
                        this.running = !1,
                        this.game.stats.addPoints(n.model.ball.lost.score),
                        this.game.stats.decCredits(),
                        0 == this.game.stats.credits ? (this.reset(),
                        F.default.GAMEOVER.dispatch(),
                        this._currentMission = null,
                        J.default.play("lost.over", .6),
                        J.default.play("balls.out"),
                        this.game.stats.stopSession(),
                        this.game.groundAnimations.deco.startAll(.5)) : (F.default.LOST.dispatch(),
                        J.default.play("lost.ball"),
                        J.default.play("balls.out"),
                        this.game.stats.stopSession(),
                        this.game.groundAnimations.deco.startAll(0))
                }
            }, {
                key: "_dispatchMissionStarted",
                value: function(a) {
                    this.onMissionStarted.dispatch(a)
                }
            }, {
                key: "_onReleasedPlunger",
                value: function(a) {
                    this.running || (this.running = !0,
                    this.game.balls[0].reset(a / 3),
                    this._startTime = Date.now()),
                    F.default.PLUNGER_RELEASED.dispatch()
                }
            }, {
                key: "_onStartBasicMission",
                value: function(a, b, c) {
                    if (!this._currentMission || c) {
                        var d = void 0;
                        if (void 0 !== b)
                            d = this._basicMissions[b];
                        else {
                            var e = this._basicMissions.filter(function(a) {
                                return a.status == m.default.IDLE
                            });
                            if (0 == e.length)
                                return void J.default.play("mission.sun", .7);
                            d = e[Math.random() * e.length | 0]
                        }
                        this._currentMission = d,
                        c && this._currentMission.reset(),
                        this._currentMission.start(),
                        this._dispatchMissionStarted(d.id),
                        F.default.MISSION_START.dispatch(d.id),
                        J.default.play("mission.start"),
                        J.default.play("mission.sun", .7)
                    } else
                        J.default.play("mission.sun", .7)
                }
            }, {
                key: "_onCompletedBasicMission",
                value: function(a) {
                    this._currentMission = null,
                    this.game.stats.addPoints(a.reward),
                    F.default.MISSION_SUCCESS.dispatch(a.id),
                    this.game.stats.addMission(),
                    J.default.play("mission.success"),
                    J.default.play("mission.win")
                }
            }, {
                key: "_onJackpotEntered",
                value: function(a) {
                    2 == a && "missionidle" == this._jackpotMission.status && (this._jackpotMission.start(),
                    F.default.JACKPOT_ACTIVE.dispatch(),
                    J.default.toggleModul(.5, !0),
                    this.game.stats.addPoints(n.model.jackpot.enterBonus.score))
                }
            }, {
                key: "_onJackpotTargetGroupCompleted",
                value: function() {
                    var a = this;
                    this._jackpotMission.status == m.default.IDLE && this._addPlatformMission("jackpot", function() {
                        a._jackpotMission.open(),
                        F.default.JACKPOT_OPEN.dispatch(),
                        J.default.play("jackpot.open", .6)
                    })
                }
            }, {
                key: "_onJackpotMissionScored",
                value: function(a) {}
            }, {
                key: "_onJackpotMissionExit",
                value: function() {
                    J.default.toggleModul(1, !1),
                    F.default.JACKPOT_END.dispatch(),
                    this._jackpotMission.reset()
                }
            }, {
                key: "_onJackpotMissionCompleted",
                value: function() {
                    this.game.stats.addPoints(this._jackpotMission.reward),
                    this._jackpotMission.reset()
                }
            }, {
                key: "_onMultiballTargetGroupCompleted",
                value: function() {
                    this._onStartMultiball()
                }
            }, {
                key: "_onMultiBallEnter",
                value: function() {
                    var a = this;
                    this.multiballCanDispatch && (this.multiballCanDispatch = !1,
                    F.default.MULTIBALL_ENTRY.dispatch(),
                    this._multiBallMission.activate(),
                    J.default.toggleModul(.5, !0),
                    clearTimeout(this.multiballThrottle),
                    this.multiballThrottle = setTimeout(function() {
                        a.multiballCanDispatch = !0
                    }, 650))
                }
            }, {
                key: "_onStartMultiball",
                value: function(a) {
                    var b = this;
                    a && this._multiBallMission.reset(),
                    this._multiBallMission.status == m.default.IDLE && this._addPlatformMission("multiball", function() {
                        b._multiBallMission.start(),
                        F.default.MULTIBALL_OPEN.dispatch()
                    })
                }
            }, {
                key: "_onMultiBallMissionFailed",
                value: function() {
                    F.default.MULTIBALL_BONUS.dispatch(),
                    J.default.play("frites.fail", .8)
                }
            }, {
                key: "_onMultiBallMissionCompleted",
                value: function() {
                    this.game.stats.addPoints(this._multiBallMission.reward);
                    var a = 0;
                    this.game.balls.forEach(function(b, c) {
                        var d = 6.5 + Math.random();
                        b.enabled || setTimeout(b.reset.bind(b, -d), 700 * a++ + 500)
                    }),
                    F.default.MULTIBALL_ACTIVE.dispatch(),
                    this.game.stats.addMultiball(),
                    this._onMultiballDoorsState = {
                        jackpot: this._jackpotMission.rampDoor.opened,
                        multiball: this._multiBallMission.rampDoor.opened,
                        wizard: this._wizardMission.rampDoor.opened
                    },
                    this._jackpotMission.rampDoor.opened = !1,
                    this._multiBallMission.rampDoor.opened = !1,
                    this._wizardMission.rampDoor.opened = !1,
                    J.default.play("mission.success")
                }
            }, {
                key: "_onWizardEntered",
                value: function(a) {
                    if (23 == a.id && app.game.ramps[3].doors[0]._opened) {
                        F.default.WIZARD_ACTIVE.dispatch(),
                        J.default.toggleModul(1, !0);
                        (new TimelineLite).add(function() {
                            J.default.play("phare.mouettes")
                        }, 1),
                        this.game.groundAnimations.deco.gWizzard1.start()
                    }
                }
            }, {
                key: "_onWizardMissionScored",
                value: function(a) {
                    this.game.stats.addPoints(n.model.wizard.collided.score)
                }
            }, {
                key: "_onWizardTargetGroupCompleted",
                value: function() {
                    var a = this;
                    this._wizardMission.status == m.default.IDLE && this._addPlatformMission("wizard", function() {
                        F.default.WIZARD_OPEN.dispatch(),
                        a._wizardMission.start()
                    })
                }
            }, {
                key: "_onWizardMissionCompleted",
                value: function() {
                    var a = this;
                    this.game.stats.addPoints(this._wizardMission.reward),
                    F.default.WIZARD_MULT.dispatch(this._wizardMission.mult),
                    (new TimelineLite).add(function() {
                        a._wizardMission.reset(),
                        a.game.groundAnimations.deco.gWizzard1.stop()
                    }, 1.5)
                }
            }, {
                key: "_onKickBackLaunched",
                value: function(a) {
                    1 == a.id ? this.game.doors[0].opened = !1 : 2 == a.id && (this.game.doors[1].opened = !1),
                    this.game.stats.addPoints(5e3)
                }
            }, {
                key: "_onCollideLeftKickbackSensor",
                value: function(a) {
                    for (var b = 0, c = 0, d = this.game.balls.length; c < d; c++)
                        this.game.balls[c].enabled && b++;
                    1 === b && (this.game.doors[0].opened = !0)
                }
            }, {
                key: "_onCollideRightKickbackSensor",
                value: function(a) {
                    for (var b = 0, c = 0, d = this.game.balls.length; c < d; c++)
                        this.game.balls[c].enabled && b++;
                    1 === b && (this.game.doors[1].opened = !0)
                }
            }, {
                key: "_onRampCompleted",
                value: function(a) {
                    var b = n.model.ramp.completed.score * a;
                    this.game.stats.addPoints(b),
                    3 == a && (J.default.play("mission.bonus", .5),
                    F.default.BONUS.dispatch(),
                    this.game.stats.addPoints(n.model.ramp.groupCompleted.score))
                }
            }, {
                key: "_onCollideCloseSensor",
                value: function(a) {
                    this.game.doors[3].opened = !1
                }
            }, {
                key: "_onCollideOpenSensor",
                value: function(a) {
                    this.game.doors[3].opened = !0
                }
            }, {
                key: "_onLostBall",
                value: function(a) {
                    a.ball.enabled = !1;
                    var b = !0;
                    this.game.balls.forEach(function(a) {
                        (a.enabled || a.locked) && (b = !1)
                    }),
                    this.game.doors[0].opened = !0,
                    this.game.doors[1].opened = !0,
                    1 === this.game.ballNb && this._lastBall(),
                    b && this._lost()
                }
            }, {
                key: "_onCollidedBumper",
                value: function(a) {
                    for (var b = !0, c = 0, d = this.game.bumpers.length; c < d; c++)
                        this.game.bumpers[c].isCollided || (b = !1);
                    if (b) {
                        for (var e = 0, f = this.game.bumpers.length; e < f; e++)
                            this.game.bumpers[e].isCollided = !1;
                        this._bumperMultiplier++
                    }
                    this.game.stats.addPoints(n.model.bumper.collided.score * this._bumperMultiplier)
                }
            }, {
                key: "_onCollidedSlingshot",
                value: function(a) {
                    for (var b = !0, c = 0, d = this.game.slingshots.length; c < d; c++)
                        this.game.slingshots[c].isCollided || (b = !1);
                    if (b) {
                        for (var e = 0, f = this.game.slingshots.length; e < f; e++)
                            this.game.slingshots[e].isCollided = !1;
                        this._slingshotMultiplier++
                    }
                    this.game.stats.addPoints(n.model.slingshot.collided.score * this._slingshotMultiplier)
                }
            }, {
                key: "_onTargetCollided",
                value: function() {
                    this.game.stats.addHit(),
                    this.game.stats.addPoints(n.model.target.collided.score)
                }
            }, {
                key: "_onActivatedTarget",
                value: function() {
                    this.game.stats.addPoints(n.model.target.collided.score)
                }
            }, {
                key: "_onTargetGroupCompleted",
                value: function(a) {
                    var b = n.model.targetgroup.completed.score * a.iteration;
                    this.game.stats.addPoints(b),
                    F.default.BONUS.dispatch()
                }
            }, {
                key: "_onCollideSensor",
                value: function() {
                    this.game.stats.addPoints(n.model.sensor.collided.score)
                }
            }, {
                key: "_onRolloversGroupCollided",
                value: function(a) {
                    this.game.stats.addPoints(n.model.sensorgroup.collided.score * this._rollOverMultiplier)
                }
            }, {
                key: "_onRolloversGroupCompleted",
                value: function() {
                    var a = n.model.sensorgroup.collided.score * this._rollOverMultiplier * this._rolloversGroup.sensors.length;
                    this.game.stats.addPoints(a),
                    F.default.BONUS.dispatch(),
                    this._rollOverMultiplier++
                }
            }, {
                key: "score",
                set: function(a) {
                    this._score = a,
                    this.game.board.score = a
                },
                get: function() {
                    throw new Error("NO MORE SCORE")
                }
            }, {
                key: "lives",
                set: function(a) {
                    throw this._lives = a,
                    new Error("NO MORE LIVES")
                },
                get: function() {
                    throw new Error("NO MORE LIVES")
                }
            }]),
            a
        }();
        c.default = K
    }
    , {
        "./AMission": 62,
        "./Bordeaux": 63,
        "./Jackpot": 64,
        "./Marseille": 65,
        "./MissionsModel": 67,
        "./MultiBall": 68,
        "./Paris": 69,
        "./Rennes": 70,
        "./Strasbourg": 71,
        "./Wizard": 72,
        "game/GameEvent": 28,
        "game/GameModel": 30,
        "game/audio/ThreeAudioManager": 32,
        "game/physics/items/Ball": 77,
        "game/physics/items/SensorsGroup": 89,
        "vendors/signal/Signal": 149
    }],
    67: [function(a, b, c) {
        "use strict";
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        c.model = {
            game: {
                started: {
                    message: "Press start"
                },
                lost: {
                    message: ["Game over", "Try again"]
                }
            },
            ball: {
                lost: {
                    message: "Ball lost",
                    score: 5e3
                },
                extra: {
                    message: ["Ball lost", "Extra ball"]
                }
            },
            sensor: {
                collided: {
                    score: 500
                }
            },
            sensorgroup: {
                completed: {
                    message: "Bonus x {mult}"
                },
                collided: {
                    score: 1e3
                }
            },
            bumper: {
                collided: {
                    score: 300
                }
            },
            hole: {
                collided: {
                    score: 2e4
                }
            },
            target: {
                collided: {
                    score: 800
                }
            },
            slingshot: {
                collided: {
                    score: 1e3
                }
            },
            targetgroup: {
                completed: {
                    message: "Bonus : {points}",
                    score: 1e4
                }
            },
            ramp: {
                completed: {
                    message: "Bonus x {mult}",
                    score: 5e3
                },
                groupCompleted: {
                    score: 1e4
                }
            },
            paris: {
                started: {
                    message: "Mission Paris commencée"
                },
                completed: {
                    message: ["Mission Paris réussie", "+ 100000"],
                    score: 1e5
                }
            },
            bordeaux: {
                started: {
                    message: "Mission Bordeaux commencée"
                },
                completed: {
                    message: ["Mission Bordeaux réussie", "+ 100000"],
                    score: 1e5
                }
            },
            marseille: {
                started: {
                    message: "Mission Marseille commencée"
                },
                completed: {
                    message: ["Mission Marseille réussie", "+ 100000"],
                    score: 1e5
                }
            },
            strasbourg: {
                started: {
                    message: "Mission Strasbourg commencée"
                },
                completed: {
                    message: ["Mission Strasbourg réussie", "+ 100000"],
                    score: 1e5
                }
            },
            rennes: {
                started: {
                    message: "Mission Rennes commencée"
                },
                completed: {
                    message: ["Mission Rennes réussie", "+ 100000"],
                    score: 1e5
                }
            },
            multiball: {
                unlocked: {
                    message: "Multi-ball débloqué"
                },
                failed: {
                    message: "Raté"
                },
                completed: {
                    message: "Multi-ball",
                    score: 1e5
                }
            },
            wizard: {
                unlocked: {
                    message: "Bonus mode débloqué"
                },
                entered: {
                    message: "Bonus mode"
                },
                collided: {
                    score: 500
                },
                nail1: {
                    score: 2e3
                },
                nail2: {
                    score: 2e3
                },
                nail3: {
                    score: 2e3
                },
                nail4: {
                    score: 2e3
                },
                nail5: {
                    score: 2e3
                },
                nail6: {
                    score: 2e3
                },
                nail7: {
                    score: 2e3
                },
                nail8: {
                    score: 2e3
                },
                nail9: {
                    score: 2e3
                },
                gate4: {
                    mult: 5
                },
                gate5: {
                    mult: 10
                },
                gate6: {
                    mult: 5
                },
                completed: {
                    message: "{mult} x {points}"
                }
            },
            jackpot: {
                unlocked: {
                    message: "Jackpot accessible"
                },
                entered: {
                    message: "Vise pour jackpot"
                },
                scored: {
                    message: "{points}"
                },
                completed: {
                    message: "Jackpot + {points}",
                    score: 1e5
                },
                target: {
                    score: 1e4
                },
                enterBonus: {
                    score: 1e5
                },
                gateBonus: {
                    score: 1e6
                }
            }
        }
    }
    , {}],
    68: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = function a(b, c, d) {
            null === b && (b = Function.prototype);
            var e = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === e) {
                var f = Object.getPrototypeOf(b);
                return null === f ? void 0 : a(f, c, d)
            }
            if ("value"in e)
                return e.value;
            var g = e.get;
            if (void 0 !== g)
                return g.call(d)
        }
          , j = a("./AMission")
          , k = d(j)
          , l = a("./MissionsModel")
          , m = a("game/audio/ThreeAudioManager")
          , n = d(m)
          , o = function(a) {
            function b(a) {
                e(this, b);
                var c = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a));
                return c.id = "multiball",
                c
            }
            return g(b, a),
            h(b, [{
                key: "init",
                value: function() {
                    this._kickbackDoors = [this.game.doors[0], this.game.doors[1]],
                    this._gates = [this.game.gatesIn[1], this.game.gatesIn[2], this.game.gatesIn[3]],
                    this.reward = l.model.multiball.completed.score,
                    this.rampDoor = this.game.ramps[1].doors[0],
                    this._onGateEntered = this._onGateEntered.bind(this)
                }
            }, {
                key: "start",
                value: function() {
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "start", this).call(this),
                    this.rampDoor.opened = !0,
                    app.game.groundAnimations.ramp1.doorOpenAnimation();
                    var a = Math.random() * this._gates.length | 0;
                    this._activeGate = this._gates[a],
                    app.game.groundAnimations.level1.RNG = a
                }
            }, {
                key: "activate",
                value: function() {
                    var a = this;
                    this.game.platforms.forEach(function(a) {
                        a.enabled = !0
                    }),
                    this._gates.forEach(function(b) {
                        b.entered.add(a._onGateEntered)
                    }),
                    n.default.play("mission.multiball", .5)
                }
            }, {
                key: "reset",
                value: function() {
                    var a = this
                      , c = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "reset", this).call(this),
                    this.rampDoor.opened = c,
                    c || (app.game.targetGroups[3].reset(!1),
                    app.game.groundAnimations.targetGroups[3].reset(),
                    app.game.groundAnimations.targetGroups[3].missionClear()),
                    this.game.platforms.forEach(function(a) {
                        a.enabled = !1
                    }),
                    this._gates.forEach(function(b) {
                        b.active = !1,
                        b.entered.remove(a._onGateEntered)
                    })
                }
            }, {
                key: "_onGateEntered",
                value: function(a) {
                    if (a == this._activeGate) {
                        this.complete(),
                        app.stage.cameraControls.mode = "multiball";
                        for (var b = 0, c = this._kickbackDoors.length; b < c; b++)
                            this._kickbackDoors[b].opened = !1,
                            this._kickbackDoors[b].update()
                    } else
                        this.fail();
                    this.reset()
                }
            }]),
            b
        }(k.default);
        c.default = o
    }
    , {
        "./AMission": 62,
        "./MissionsModel": 67,
        "game/audio/ThreeAudioManager": 32
    }],
    69: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = function a(b, c, d) {
            null === b && (b = Function.prototype);
            var e = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === e) {
                var f = Object.getPrototypeOf(b);
                return null === f ? void 0 : a(f, c, d)
            }
            if ("value"in e)
                return e.value;
            var g = e.get;
            if (void 0 !== g)
                return g.call(d)
        }
          , j = a("./AMission")
          , k = d(j)
          , l = a("game/physics/items/SensorsGroup")
          , m = (d(l),
        function(a) {
            function b(a, c) {
                e(this, b);
                var d = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a));
                return d.id = "paris",
                d._rolloversGroup = c,
                d._goalsCounter = 0,
                d._goalsNb = 4,
                d
            }
            return g(b, a),
            h(b, [{
                key: "init",
                value: function() {
                    this._rampSensor = this.game.sensors[22],
                    this._onRampTaken = this._onRampTaken.bind(this),
                    this._onRolloversGroupCompleted = this._onRolloversGroupCompleted.bind(this),
                    this._onTargetCollided = this._onTargetCollided.bind(this),
                    this._targets = [this.game.targets[0], this.game.targets[1]]
                }
            }, {
                key: "start",
                value: function(a) {
                    var c = this;
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "start", this).call(this, a),
                    app.game.groundAnimations.deco.gSlotsArrows1.start(),
                    app.game.groundAnimations.ramp2.initMission(),
                    app.game.groundAnimations.targets.initMission("T0"),
                    app.game.groundAnimations.targets.initMission("T1"),
                    this._rolloversGroup.completed.addOnce(this._onRolloversGroupCompleted),
                    this._rampSensor.collided.addOnce(this._onRampTaken),
                    this._targets.forEach(function(a) {
                        a.active = !1,
                        a.collided.addOnce(c._onTargetCollided)
                    })
                }
            }, {
                key: "reset",
                value: function(a) {
                    var c = this;
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "reset", this).call(this, a),
                    this._collided = 0,
                    app.game.groundAnimations.slots.reset(),
                    app.game.groundAnimations.deco.gSlotsArrows1.stop(),
                    app.game.groundAnimations.ramp2.missionClear(),
                    app.game.groundAnimations.targets.missionClear("T0"),
                    app.game.groundAnimations.targets.missionClear("T1"),
                    this._rampSensor.collided.remove(this._onRampTaken),
                    this._rolloversGroup.reset(!1),
                    this._rolloversGroup.completed.remove(this._onRolloversGroupCompleted),
                    this._targets.forEach(function(a) {
                        a.collided.remove(c._onTargetCollided)
                    })
                }
            }, {
                key: "_onRampTaken",
                value: function(a) {
                    this.goalUpdate(),
                    this.checkGoals(),
                    app.game.groundAnimations.ramp2.missionClear()
                }
            }, {
                key: "_onRolloversGroupCompleted",
                value: function() {
                    this.goalUpdate(),
                    this.checkGoals(),
                    app.game.groundAnimations.deco.gSlotsArrows1.stop()
                }
            }, {
                key: "_onTargetCollided",
                value: function(a) {
                    app.game.groundAnimations.targets.missionClear("T" + a.id),
                    this.goalUpdate(),
                    this.checkGoals()
                }
            }]),
            b
        }(k.default));
        c.default = m
    }
    , {
        "./AMission": 62,
        "game/physics/items/SensorsGroup": 89
    }],
    70: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = function a(b, c, d) {
            null === b && (b = Function.prototype);
            var e = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === e) {
                var f = Object.getPrototypeOf(b);
                return null === f ? void 0 : a(f, c, d)
            }
            if ("value"in e)
                return e.value;
            var g = e.get;
            if (void 0 !== g)
                return g.call(d)
        }
          , j = a("./AMission")
          , k = d(j)
          , l = a("game/physics/items/SensorsGroup")
          , m = (d(l),
        function(a) {
            function b(a) {
                e(this, b);
                var c = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a));
                return c.id = "rennes",
                c._goalsCounter = 0,
                c._goalsNb = 2,
                c
            }
            return g(b, a),
            h(b, [{
                key: "init",
                value: function() {
                    this._rampSensor = this.game.sensors[23],
                    this._onRampSensorCollided = this._onRampSensorCollided.bind(this),
                    this._targetGroup = this.game.targetGroups[5],
                    this._onCompletedTargetGroup = this._onCompletedTargetGroup.bind(this),
                    this._onTargetActivated = this._onTargetActivated.bind(this)
                }
            }, {
                key: "start",
                value: function() {
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "start", this).call(this),
                    this._targetGroup.reset(!1),
                    this._targetGroup.resetIteration(),
                    app.game.groundAnimations.ramp3.initMission(),
                    app.game.groundAnimations.targetGroups[5].initMission(),
                    this._rampSensor.collided.addOnce(this._onRampSensorCollided),
                    this._targetGroup.completed.addOnce(this._onCompletedTargetGroup),
                    this._targetGroup.targetActivated.add(this._onTargetActivated)
                }
            }, {
                key: "reset",
                value: function(a) {
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "reset", this).call(this, a),
                    app.game.groundAnimations.ramp3.missionClear(),
                    app.game.groundAnimations.targetGroups[5].reset(),
                    app.game.groundAnimations.targetGroups[5].missionClear(),
                    this._rampSensor.collided.remove(this._onRampSensorCollided),
                    this._targetGroup.completed.remove(this._onCompletedTargetGroup),
                    this._targetGroup.targetActivated.remove(this._onTargetActivated)
                }
            }, {
                key: "_onRampSensorCollided",
                value: function(a) {
                    this.game.doors[0].opened = !0,
                    this.game.doors[1].opened = !0,
                    app.game.groundAnimations.ramp3.missionClear(),
                    this.goalUpdate(),
                    this.checkGoals()
                }
            }, {
                key: "_onTargetActivated",
                value: function(a) {
                    app.game.groundAnimations.targetGroups[5].arrowOff(a.id)
                }
            }, {
                key: "_onCompletedTargetGroup",
                value: function() {
                    this.goalUpdate(),
                    this.checkGoals()
                }
            }]),
            b
        }(k.default));
        c.default = m
    }
    , {
        "./AMission": 62,
        "game/physics/items/SensorsGroup": 89
    }],
    71: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function e(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function f(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var g = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , h = function a(b, c, d) {
            null === b && (b = Function.prototype);
            var e = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === e) {
                var f = Object.getPrototypeOf(b);
                return null === f ? void 0 : a(f, c, d)
            }
            if ("value"in e)
                return e.value;
            var g = e.get;
            if (void 0 !== g)
                return g.call(d)
        }
          , i = a("./AMission")
          , j = function(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }(i)
          , k = function(a) {
            function b(a) {
                d(this, b);
                var c = e(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a));
                return c.id = "strasbourg",
                c._goalsCounter = 0,
                c._goalsNb = 2,
                c
            }
            return f(b, a),
            g(b, [{
                key: "init",
                value: function() {
                    this._targetGroup1 = this.game.targetGroups[0],
                    this._onCompletedTargetGroup1 = this._onCompletedTargetGroup1.bind(this),
                    this._targetGroup2 = this.game.targetGroups[2],
                    this._onCompletedTargetGroup2 = this._onCompletedTargetGroup2.bind(this),
                    this._onTargetActivated1 = this._onTargetActivated1.bind(this),
                    this._onTargetActivated2 = this._onTargetActivated2.bind(this)
                }
            }, {
                key: "start",
                value: function() {
                    h(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "start", this).call(this),
                    this._targetGroup1.reset(!1),
                    this._targetGroup2.reset(!1),
                    this._targetGroup1.resetIteration(),
                    this._targetGroup2.resetIteration(),
                    app.game.groundAnimations.targetGroups[0].initMission(),
                    app.game.groundAnimations.targetGroups[2].initMission(),
                    this._targetGroup1.enabled = !0,
                    this._targetGroup1.completed.addOnce(this._onCompletedTargetGroup1),
                    this._targetGroup1.targetActivated.add(this._onTargetActivated1),
                    this._targetGroup2.enabled = !0,
                    this._targetGroup2.completed.addOnce(this._onCompletedTargetGroup2),
                    this._targetGroup2.targetActivated.add(this._onTargetActivated2)
                }
            }, {
                key: "reset",
                value: function(a) {
                    h(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "reset", this).call(this, a),
                    app.game.groundAnimations.targetGroups[0].reset(!1),
                    app.game.groundAnimations.targetGroups[2].reset(!1),
                    app.game.groundAnimations.targetGroups[0].missionClear(),
                    app.game.groundAnimations.targetGroups[2].missionClear(),
                    this._targetGroup1.completed.remove(this._onCompletedTargetGroup1),
                    this._targetGroup1.targetActivated.remove(this._onTargetActivated1),
                    this._targetGroup2.completed.remove(this._onCompletedTargetGroup2),
                    this._targetGroup2.targetActivated.remove(this._onTargetActivated2)
                }
            }, {
                key: "_onCompletedTargetGroup1",
                value: function() {
                    this.goalUpdate(),
                    this.checkGoals()
                }
            }, {
                key: "_onCompletedTargetGroup2",
                value: function() {
                    this.goalUpdate(),
                    this.checkGoals()
                }
            }, {
                key: "_onTargetActivated1",
                value: function(a) {
                    app.game.groundAnimations.targetGroups[0].arrowOff(a.id)
                }
            }, {
                key: "_onTargetActivated2",
                value: function(a) {
                    var b = 0 === parseInt(a.id, 10) ? 1 : 0;
                    app.game.groundAnimations.targetGroups[2].arrowOff(b)
                }
            }]),
            b
        }(j.default);
        c.default = k
    }
    , {
        "./AMission": 62
    }],
    72: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = function a(b, c, d) {
            null === b && (b = Function.prototype);
            var e = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === e) {
                var f = Object.getPrototypeOf(b);
                return null === f ? void 0 : a(f, c, d)
            }
            if ("value"in e)
                return e.value;
            var g = e.get;
            if (void 0 !== g)
                return g.call(d)
        }
          , j = a("./AMission")
          , k = d(j)
          , l = a("vendors/signal/Signal")
          , m = d(l)
          , n = a("./MissionsModel")
          , o = a("game/GameEvent")
          , p = d(o)
          , q = function(a) {
            function b(a, c) {
                e(this, b);
                var d = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a));
                return d.id = "wizard",
                d
            }
            return g(b, a),
            h(b, [{
                key: "init",
                value: function() {
                    this._gates = [this.game.gatesIn[4], this.game.gatesIn[5], this.game.gatesIn[6]],
                    this.scored = new m.default,
                    this.rampDoor = this.game.ramps[3].doors[0],
                    this._onGateEntered = this._onGateEntered.bind(this),
                    this._onSensorCollided = this._onSensorCollided.bind(this),
                    this.totalSensors = 12,
                    this.sensors = [],
                    this.sensorScores = [100, 100, 200, 200, 400, 800, 400, 800, 800, 600, 800, 600],
                    this.activatedSensors = []
                }
            }, {
                key: "start",
                value: function() {
                    var a = this;
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "start", this).call(this),
                    this.dictionary = this.game.stage.ground.dictionary;
                    for (var c = 0; c < this.totalSensors; c++) {
                        var d = this.dictionary["P2.N" + c];
                        this.sensors.push(d)
                    }
                    this.start = this.start.bind(this),
                    this.bonus = 0,
                    this.mult = 0,
                    this.rampDoor.opened = !0,
                    app.game.groundAnimations.ramp3.doorOpenAnimation(),
                    this._gates.forEach(function(b) {
                        b.entered.add(a._onGateEntered)
                    }),
                    p.default.POINTS_HIT.add(this._onSensorCollided)
                }
            }, {
                key: "reset",
                value: function() {
                    var a = this;
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "reset", this).call(this),
                    this.bonus = 0,
                    this.mult = 0,
                    this.activatedSensors = [],
                    this.rampDoor.opened = !1,
                    app.game.targetGroups[2].reset(!1),
                    app.game.groundAnimations.level2.reset(),
                    app.game.groundAnimations.targetGroups[2].reset(),
                    app.game.groundAnimations.targetGroups[2].missionClear(),
                    p.default.POINTS_HIT.remove(this._onSensorCollided),
                    this._gates.forEach(function(b) {
                        b.entered.remove(a._onGateEntered)
                    })
                }
            }, {
                key: "_onSensorCollided",
                value: function(a) {
                    this.activatedSensors.indexOf(a) < 0 && (this.activatedSensors.push(a),
                    this.bonus += this.sensorScores[a],
                    this.scored.dispatch(this.bonus))
                }
            }, {
                key: "_onGateEntered",
                value: function(a) {
                    this.mult = n.model.wizard["gate" + a.id].mult,
                    this.reward = 2e5 + this.bonus * this.mult,
                    p.default.POINTS_HIT.remove(this._onSensorCollided, this),
                    this.complete()
                }
            }]),
            b
        }(k.default);
        c.default = q
    }
    , {
        "./AMission": 62,
        "./MissionsModel": 67,
        "game/GameEvent": 28,
        "vendors/signal/Signal": 149
    }],
    73: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = a("three")
          , g = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(f)
          , h = a("utils/Cache")
          , i = function(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }(h)
          , j = new g.Vector3(16777216,65536,256)
          , k = new g.Vector4(255 / 256 / j.x,255 / 256 / j.y,255 / 256 / j.z,.99609375)
          , l = function() {
            function a(b, c) {
                d(this, a),
                this.simulation = b,
                this.stage = c,
                this.data = [],
                this.images = [],
                this.width = 2e3,
                this.height = 2e3,
                this.strength = 1e4,
                this.near = .8,
                this.far = 2,
                this.canvas = document.createElement("canvas"),
                this.context = this.canvas.getContext("2d"),
                this.canvas.width = this.width,
                this.canvas.height = this.height,
                this.canvas.style.width = this.width + "px",
                this.canvas.style.height = this.height + "px";
                for (var e = 0; e < 3; e++)
                    this.images[e] = app.game.assets["heightmaps." + e]
            }
            return e(a, [{
                key: "init",
                value: function(a) {
                    var b = this;
                    this.images.forEach(function(c, d) {
                        setTimeout(function() {
                            b.data[d] = b._getData(c),
                            b.stage.dictionary["H" + d].mesh.visible = !1,
                            2 === d && (b._dealloc(),
                            a())
                        }, 250 * d)
                    })
                }
            }, {
                key: "_dealloc",
                value: function() {
                    this.context = null,
                    this.canvas = null;
                    for (var a = 0; a < 3; a++)
                        app.game.assets["heightmaps." + a] = null,
                        this.images[a] = null,
                        i.default.empty("default.assets.3d.heightmaps." + a)
                }
            }, {
                key: "_getData",
                value: function(a) {
                    return this.context.clearRect(0, 0, this.width, this.height),
                    this.context.drawImage(a, 0, 0, this.width, this.height),
                    this.context.getImageData(0, 0, this.width, this.height).data
                }
            }, {
                key: "_unpackRGBAToDepth",
                value: function(a) {
                    return a.clone().dot(k)
                }
            }, {
                key: "_getPoint",
                value: function(a, b, c) {
                    var d = this.data[a]
                      , e = 4 * (b + c * this.width)
                      , f = new g.Vector4(d[e],d[e + 1],d[e + 2],d[e + 3])
                      , h = this._unpackRGBAToDepth(f.divideScalar(256));
                    return g.Math.mapLinear(h, 0, 1, this.far, this.near) - this.near - 1
                }
            }, {
                key: "getHeight",
                value: function(a) {
                    var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0
                      , c = Math.floor(a[0] / this.simulation.scale)
                      , d = Math.floor(a[1] / this.simulation.scale);
                    c = g.Math.mapLinear(c, -1e3, 1e3, 0, 2e3),
                    d = g.Math.mapLinear(d, -1e3, 1e3, 2e3, 0);
                    var e = this._getPoint(b, c, d);
                    return {
                        height: e >= 0 ? e : 0
                    }
                }
            }]),
            a
        }();
        c.default = l
    }
    , {
        three: 10,
        "utils/Cache": 133
    }],
    74: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("vendors/p2/p2")
          , h = d(g)
          , i = a("utils/Render")
          , j = d(i)
          , k = function() {
            function a(b) {
                e(this, a),
                this.model = b,
                this.timeStep = 1 / (60 * app.game.config.timeStep),
                this.maxSubSteps = 8
            }
            return f(a, [{
                key: "init",
                value: function(a) {
                    this.boundingBox = a,
                    this.bodies = [],
                    this.pairs = [],
                    this.contactMaterials = [],
                    this.scale = .005,
                    this.width = this.boundingBox.getAttribute("width") * this.scale,
                    this.height = this.boundingBox.getAttribute("height") * this.scale,
                    this.world = new h.default.World,
                    this.world.islandSplit = !0,
                    this.world.sleepMode = h.default.World.ISLAND_SLEEPING,
                    this.world.gravity = [0, this.model.physics.gravity],
                    this.world.setGlobalStiffness(1e18),
                    this.world.defaultContactMaterial.stiffness = 1e18,
                    this.world.defaultContactMaterial.restitution = 0,
                    this.world.solver.iterations = this.model.physics.iterations,
                    this.world.solver.tolerence = this.model.physics.tolerence,
                    this.world.on("beginContact", this._onBeginContact.bind(this)),
                    this.world.on("endContact", this._onEndContact.bind(this)),
                    this.materials = {
                        ball: new h.default.Material,
                        bumper: new h.default.Material,
                        target: new h.default.Material,
                        flipper: new h.default.Material,
                        slingshot: new h.default.Material,
                        static: new h.default.Material,
                        nail: new h.default.Material,
                        ramp: new h.default.Material
                    },
                    this.contactMaterials.push(new h.default.ContactMaterial(this.materials.ball,this.materials.target,{
                        restitution: .3,
                        friction: 0
                    })),
                    this.contactMaterials.push(new h.default.ContactMaterial(this.materials.ball,this.materials.bumper,{
                        restitution: 0,
                        friction: 0
                    })),
                    this.contactMaterials.push(new h.default.ContactMaterial(this.materials.ball,this.materials.flipper,{
                        restitution: .4,
                        friction: 0,
                        frictionStiffness: 1e30
                    })),
                    this.contactMaterials.push(new h.default.ContactMaterial(this.materials.ball,this.materials.slingshot,{
                        restitution: 0,
                        friction: 0
                    })),
                    this.contactMaterials.push(new h.default.ContactMaterial(this.materials.ball,this.materials.static,{
                        restitution: .1,
                        friction: .1
                    })),
                    this.contactMaterials.push(new h.default.ContactMaterial(this.materials.ball,this.materials.nail,{
                        restitution: .7,
                        friction: 0
                    })),
                    this.contactMaterials.push(new h.default.ContactMaterial(this.materials.ball,this.materials.ramp,{
                        restitution: .15,
                        friction: .01
                    })),
                    this.collisionGroups = {
                        default: 1,
                        balls: Math.pow(2, 1),
                        ramps: [Math.pow(2, 2), Math.pow(2, 3)]
                    };
                    for (var b = 0; b < this.contactMaterials.length; b++)
                        this.world.addContactMaterial(this.contactMaterials[b])
                }
            }, {
                key: "add",
                value: function(a) {
                    this.world.addBody(a)
                }
            }, {
                key: "remove",
                value: function(a) {
                    var b = this.bodies.indexOf(a);
                    b && this.bodies.splice(b, 1),
                    this.world.removeBody(a)
                }
            }, {
                key: "addContactListener",
                value: function(a, b, c, d) {
                    this.pairs.push({
                        bodyA: a,
                        bodyB: b,
                        callback: c,
                        once: d
                    })
                }
            }, {
                key: "removeContactListener",
                value: function(a, b) {
                    var c = this;
                    this.pairs.forEach(function(d) {
                        d.bodyA == a && d.bodyB == b && c.pairs.splice(c.pairs.indexOf(d), 1)
                    })
                }
            }, {
                key: "_onBeginContact",
                value: function(a) {
                    this._checkContact(a, "in")
                }
            }, {
                key: "_onEndContact",
                value: function(a) {
                    this._checkContact(a, "out")
                }
            }, {
                key: "_checkContact",
                value: function(a, b) {
                    for (var c = 0, d = this.pairs.length; c < d; c++) {
                        var e = this.pairs[c];
                        if (e.bodyB || a.bodyA != e.bodyA && a.bodyB != e.bodyA || e.callback(b),
                        e && (a.bodyA == e.bodyA && a.bodyB == e.bodyB || a.bodyA == e.bodyB && a.bodyB == e.bodyA) && (e.callback(b),
                        e.once)) {
                            var f = this.pairs.indexOf(e);
                            f && this.pairs.splice(f, 1)
                        }
                    }
                }
            }, {
                key: "update",
                value: function() {
                    j.default.deltaTime > .2 && (j.default.deltaTime = .2),
                    this.world.step(this.timeStep, j.default.deltaTime, this.maxSubSteps)
                }
            }, {
                key: "resize",
                value: function() {}
            }]),
            a
        }();
        c.default = k
    }
    , {
        "utils/Render": 140,
        "vendors/p2/p2": 148
    }],
    75: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("three")
          , h = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(g)
          , i = a("vendors/p2/p2")
          , j = d(i)
          , k = a("vendors/signal/Signal")
          , l = d(k)
          , m = a("utils/MathUtils")
          , n = d(m)
          , o = a("game/physics/items/Ball")
          , p = d(o)
          , q = a("game/physics/items/Flipper")
          , r = d(q)
          , s = a("game/physics/items/Bumper")
          , t = d(s)
          , u = a("game/physics/items/Nail")
          , v = d(u)
          , w = a("game/physics/items/Plunger")
          , x = d(w)
          , y = a("game/physics/items/Slingshot")
          , z = d(y)
          , A = a("game/physics/items/Kickback")
          , B = d(A)
          , C = a("game/physics/items/Sensor")
          , D = d(C)
          , E = a("game/physics/items/TargetGroup")
          , F = d(E)
          , G = a("game/physics/items/Target")
          , H = d(G)
          , I = a("game/physics/items/Ramp")
          , J = d(I)
          , K = a("game/physics/items/Door")
          , L = d(K)
          , M = a("game/physics/items/Platform")
          , N = d(M)
          , O = a("game/physics/items/Gate")
          , P = d(O)
          , Q = a("utils/FunctionUtils")
          , R = (d(Q),
        function() {
            function a(b, c) {
                e(this, a),
                this.game = b,
                this.dictionary = c,
                this.simulation = b.simulation,
                this.stage = b.stage,
                this.ready = new l.default
            }
            return f(a, [{
                key: "destroy",
                value: function() {
                    this.game = null,
                    this.simulation = null,
                    this.stage = null,
                    this.ready.removeAll()
                }
            }, {
                key: "parse",
                value: function(a) {
                    var b = new DOMParser;
                    this.svg = b.parseFromString(a, "image/svg+xml").lastChild,
                    this.boundingBox = this.svg.querySelector("#box"),
                    this.elements = this.svg.querySelectorAll("polygon, circle, rect, path"),
                    this.shapes = this.svg.querySelectorAll("polygon, circle, rect");
                    for (var c = 0, d = this.elements.length; c < d; c++)
                        this.elements[c].id = this.elements[c].id.split("_")[0];
                    this._onParsed();
                    for (var e = 0, f = this.shapes.length; e < f; e++)
                        this.build(this.shapes[e]);
                    this.game.plunger = new x.default(this.game,{
                        mesh: this.dictionary.L.mesh
                    });
                    for (var g = 0; g < 3; ++g)
                        this.game.balls.push(new p.default(this.game));
                    this.ready.dispatch()
                }
            }, {
                key: "build",
                value: function(a) {
                    var b = a.tagName.toLowerCase()
                      , c = a.id
                      , d = a.id.substr(0, 1)
                      , e = void 0
                      , f = void 0;
                    switch (b) {
                    case "circle":
                        e = new j.default.Body({
                            position: [a.getAttribute("cx") * this.simulation.scale - .5 * this.simulation.width, -(a.getAttribute("cy") * this.simulation.scale - .5 * this.simulation.height)]
                        });
                        var g = new j.default.Circle({
                            radius: a.getAttribute("r") * this.simulation.scale,
                            collisionGroup: this.simulation.collisionGroups.default,
                            collisionMask: this.simulation.collisionGroups.balls
                        });
                        e.addShape(g);
                        break;
                    case "rect":
                        if ("box" != c) {
                            f = a.transform.baseVal.length ? a.transform.baseVal.getItem(0).matrix : n.default.identity;
                            var h = n.default.getRotation(f)
                              , i = +a.getAttribute("width")
                              , k = +a.getAttribute("height")
                              , l = n.default.transformPoint(+a.getAttribute("x") + i / 2, +a.getAttribute("y") + k / 2, f)
                              , m = [l[0] * this.simulation.scale - .5 * this.simulation.width, -(l[1] * this.simulation.scale - .5 * this.simulation.height)];
                            e = new j.default.Body({
                                position: m,
                                angle: h,
                                mass: ["A0.C7", "A1.C5", "A3.C6"].indexOf(c) >= 0 || ["C", "P"].indexOf(d) >= 0 ? 1 : 0
                            });
                            var o = new j.default.Box({
                                width: i * this.simulation.scale,
                                height: k * this.simulation.scale,
                                collisionGroup: this.simulation.collisionGroups.default,
                                collisionMask: this.simulation.collisionGroups.balls
                            });
                            e.addShape(o)
                        }
                        break;
                    case "polygon":
                        for (var p = [], q = void 0, r = 4 * this.simulation.scale, s = a.points.length || a.points.numberOfItems, t = 0, u = s; t < u; ++t) {
                            var v = a.points[t] || a.points.getItem(t)
                              , w = [v.x * this.simulation.scale - .5 * this.simulation.width, -(v.y * this.simulation.scale - .5 * this.simulation.height)];
                            if (q) {
                                var x = q[0] - w[0]
                                  , y = q[1] - w[1];
                                if (Math.sqrt(x * x + y * y) < r)
                                    continue
                            }
                            (t < u - 1 || p[0][0] != w[0] || p[0][1] != w[1]) && p.push(w),
                            q = w
                        }
                        e = new j.default.Body({
                            mass: 0
                        }),
                        e.fromPolygon(p, {
                            skipSimpleCheck: !0
                        });
                        for (var z = 0, A = e.shapes.length; z < A; z++)
                            e.shapes[z].material = this.simulation.materials.static,
                            e.shapes[z].collisionGroup = this.simulation.collisionGroups.default,
                            e.shapes[z].collisionMask = this.simulation.collisionGroups.balls
                    }
                    e && (this.dictionary[c] ? this.dictionary[c].body = e : this.dictionary[c] = {
                        body: e
                    },
                    this._onItemBuild({
                        id: c,
                        type: d,
                        body: e,
                        matrix: f,
                        mesh: this.dictionary[c] ? this.dictionary[c].mesh : null
                    }))
                }
            }, {
                key: "_onItemBuild",
                value: function(a) {
                    var b = void 0;
                    switch (a.body && this.simulation.add(a.body),
                    a.type) {
                    case "B":
                        this.game.bumpers.push(new t.default(this.game,a));
                        break;
                    case "F":
                        a.index = parseInt(a.id.match(/\d+/)[0]),
                        a.side = a.id.substr(-1, 1),
                        this.game.flippers.push(new r.default(this.game,a));
                        break;
                    case "C":
                        switch (a.index = parseInt(a.id.match(/\d+/)[0]),
                        a.index) {
                        case 0:
                            a.min = h.Math.degToRad(-45),
                            a.max = h.Math.degToRad(0),
                            a.direction = 1;
                            break;
                        case 1:
                            a.min = h.Math.degToRad(0),
                            a.max = h.Math.degToRad(45),
                            a.direction = -1;
                            break;
                        case 4:
                            a.min = h.Math.degToRad(0),
                            a.max = h.Math.degToRad(90),
                            a.direction = 1,
                            a.anchorPosition = "top";
                            break;
                        case 5:
                            a.min = h.Math.degToRad(0),
                            a.max = h.Math.degToRad(90),
                            a.direction = 1
                        }
                        this.game.doors[a.index] = new L.default(this.game,a);
                        break;
                    case "U":
                        var c = a.id;
                        a.id = c.substr(1, 1),
                        a.type = c.substr(-1);
                        var d = new P.default(this.game,a);
                        "I" == a.type ? this.game.gatesIn[d.id] = d : this.game.gatesOut[d.id] = d;
                        break;
                    case "P":
                        this.game.platforms.push(new N.default(this.game,a));
                        break;
                    case "N":
                        a.index = parseInt(a.id.substr(1, 1)),
                        this.game.nails[a.index] = new v.default(this.game,a);
                        break;
                    case "G":
                        b = parseInt(a.id.substr(1, 1)),
                        this.game.targetGroups[b] || (this.game.targetGroups[b] = new F.default(this.game,a,b));
                        var e = a.id.substr(-1);
                        a.originalId = a.id,
                        a.id = "ABCD".indexOf(e),
                        this.game.targetGroups[b].add(new H.default(this.game,a));
                        break;
                    case "T":
                        a.id = parseInt(a.id.substr(1, 1));
                        var f = new H.default(this.game,a);
                        this.game.targets[f.id] = f;
                        break;
                    case "S":
                        a.side = a.id.substr(1, 1),
                        this.game.slingshots.push(new z.default(this.game,a));
                        break;
                    case "E":
                        var g = new D.default(this.game,a);
                        this.game.points[g.id] = g;
                        break;
                    case "M":
                        var i = new D.default(this.game,a);
                        this.game.sensors[i.id] = i;
                        break;
                    case "K":
                        this.game.kickbacks.push(new B.default(this.game,a));
                        break;
                    case "A":
                        b = a.id.substr(1, 1);
                        var j = 1 == b || 2 == b ? 1 : 0;
                        a.collisionGroup = this.simulation.collisionGroups.ramps[j],
                        this.game.ramps[b] || (a.index = b,
                        this.game.ramps[b] = new J.default(this.game,a));
                        var k = this.game.ramps[b]
                          , l = a.id.split(".")[1];
                        k.add(a.body, a.mesh, l, a.matrix);
                        break;
                    default:
                        a.body.contactResponse = !1
                    }
                }
            }, {
                key: "_onParsed",
                value: function() {
                    this.simulation.init(this.boundingBox),
                    app.game.ratio = this.simulation.width / this.stage.width * 4
                }
            }]),
            a
        }());
        c.default = R
    }
    , {
        "game/physics/items/Ball": 77,
        "game/physics/items/Bumper": 78,
        "game/physics/items/Door": 80,
        "game/physics/items/Flipper": 81,
        "game/physics/items/Gate": 82,
        "game/physics/items/Kickback": 83,
        "game/physics/items/Nail": 84,
        "game/physics/items/Platform": 85,
        "game/physics/items/Plunger": 86,
        "game/physics/items/Ramp": 87,
        "game/physics/items/Sensor": 88,
        "game/physics/items/Slingshot": 90,
        "game/physics/items/Target": 91,
        "game/physics/items/TargetGroup": 92,
        three: 10,
        "utils/FunctionUtils": 137,
        "utils/MathUtils": 138,
        "vendors/p2/p2": 148,
        "vendors/signal/Signal": 149
    }],
    76: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = a("vendors/p2/p2")
          , g = function(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }(f)
          , h = function() {
            function a(b, c) {
                d(this, a),
                this.game = b,
                this.simulation = b.simulation,
                this.stage = b.stage,
                this.parameters = c || {},
                this.id = this.parameters.id,
                this.index = this.parameters.index,
                this.tls = [],
                this._initSignals && this._initSignals()
            }
            return e(a, [{
                key: "destroy",
                value: function() {
                    this.simulation = null,
                    this.stage = null;
                    for (var a = 0, b = this.tls.length; a < b; a++)
                        this.tls[a].kill()
                }
            }, {
                key: "update",
                value: function() {}
            }, {
                key: "enabled",
                set: function(a) {
                    this._enabled = a,
                    this.body.type !== g.default.Body.STATIC && (this.body.allowSleep = !a,
                    a ? this.body.wakeUp() : this.body.sleep())
                },
                get: function() {
                    return this._enabled
                }
            }]),
            a
        }();
        c.default = h
    }
    , {
        "vendors/p2/p2": 148
    }],
    77: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = function a(b, c, d) {
            null === b && (b = Function.prototype);
            var e = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === e) {
                var f = Object.getPrototypeOf(b);
                return null === f ? void 0 : a(f, c, d)
            }
            if ("value"in e)
                return e.value;
            var g = e.get;
            if (void 0 !== g)
                return g.call(d)
        }
          , j = a("./AItem")
          , k = d(j)
          , l = a("vendors/p2/p2")
          , m = d(l)
          , n = a("three")
          , o = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(n)
          , p = a("game/GameModel")
          , q = (d(p),
        a("game/audio/ThreeAudioManager"))
          , r = (d(q),
        function(a) {
            function b(a, c) {
                e(this, b);
                var d = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, c));
                d.shape = new m.default.Circle({
                    radius: 12 * d.simulation.scale
                }),
                d.shape.material = d.simulation.materials.ball,
                d.shape.collisionGroup = d.simulation.collisionGroups.balls,
                d.shape.collisionMask = d.simulation.collisionGroups.balls | d.simulation.collisionGroups.default,
                d.body = new m.default.Body({
                    mass: 1.8,
                    restitution: 0,
                    allowSleep: !1
                }),
                d.position = [1.15, .85],
                d.enabled = !1,
                d.velocity = new o.Vector3,
                d.angularVelocity = new o.Vector3,
                d.parameters.velocity && (d.body.velocity = d.parameters.velocity,
                d.body.angularVelocity = d.parameters.angularVelocity ? d.parameters.angularVelocity : 0),
                d.body.addShape(d.shape),
                d.body.sleepTimeLimit = 2,
                d._registerContacts(),
                d.radius = 12 * d.simulation.scale * app.game.ratio,
                d.geometry = new o.SphereBufferGeometry(d.radius,32,32),
                d.material = app.stage.materials.ball,
                d.mesh = new o.Mesh(d.geometry,d.material),
                d.mesh.castShadow = !0,
                d.stage.scene.add(d.mesh),
                d.prevPosition = new o.Vector3,
                d.prevPosition.copy(d.mesh.position),
                d.light = new o.DirectionalLight,
                d.stage.scene.add(d.light),
                d.light.castShadow = !0,
                d.light.shadow.camera.near = .01,
                d.light.shadow.camera.far = .1,
                d.light.shadow.mapSize.width = 32,
                d.light.shadow.mapSize.height = 32;
                return d.light.shadow.camera.top = .02,
                d.light.shadow.camera.right = .02,
                d.light.shadow.camera.bottom = -.02,
                d.light.shadow.camera.left = -.02,
                d.light.target = d.mesh,
                d.lightOffset = new o.Vector3(.01,.05,0),
                d
            }
            return g(b, a),
            h(b, [{
                key: "resetVelocity",
                value: function() {
                    var a = this
                      , b = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                    if (this.body.sleep(),
                    this.body.angularVelocity = 0,
                    this.body.angularForce = 0,
                    this.body.velocity = [0, 0],
                    this.body.force = [0, 0],
                    0 == b)
                        this.body.wakeUp();
                    else {
                        (new TimelineLite).add(function() {
                            a.body.wakeUp()
                        }, b)
                    }
                }
            }, {
                key: "_registerContacts",
                value: function() {
                    var a = this;
                    this.simulation.addContactListener(this.body, null, this._onCollide.bind(this)),
                    this.game.kickbacks.forEach(function(b) {
                        a.simulation.addContactListener(a.body, b.body, b.collide.bind(b))
                    }),
                    this.game.targetGroups.forEach(function(b) {
                        b.targets.forEach(function(b) {
                            a.simulation.addContactListener(a.body, b.body, function(c) {
                                b.collide(a, b, c)
                            })
                        })
                    }),
                    this.game.targets.forEach(function(b) {
                        a.simulation.addContactListener(a.body, b.body, function(c) {
                            b.collide(a, b, c)
                        })
                    });
                    for (var b = 0; b < this.game.ramps.length; b++)
                        !function(b) {
                            for (var c = a.game.ramps[b], d = 0; d < c.sensors.length; d++)
                                !function(b) {
                                    var d = c.sensors[b];
                                    a.simulation.addContactListener(a.body, d.body, function(b) {
                                        c.collide(a, d, b)
                                    })
                                }(d)
                        }(b);
                    this.game.sensors.forEach(function(b) {
                        a.simulation.addContactListener(a.body, b.body, b.collide.bind(b, a))
                    }),
                    this.game.points.forEach(function(b) {
                        a.simulation.addContactListener(a.body, b.body, b.collide.bind(b, a))
                    }),
                    this.game.gatesIn.forEach(function(b) {
                        a.simulation.addContactListener(a.body, b.body, b.collide.bind(b, a))
                    }),
                    this.game.gatesOut.forEach(function(b) {
                        a.simulation.addContactListener(a.body, b.body, b.collide.bind(b, a))
                    }),
                    this.game.slingshots.forEach(function(b) {
                        a.simulation.addContactListener(a.body, b.bodies[1], function(c) {
                            "in" === c && b.collide(a)
                        })
                    }),
                    this.game.bumpers.forEach(function(b) {
                        a.simulation.addContactListener(a.body, b.body, b.collide.bind(b, a))
                    }),
                    this.game.nails.forEach(function(b) {
                        a.simulation.addContactListener(a.body, b.body, b.collide.bind(b, a))
                    })
                }
            }, {
                key: "destroy",
                value: function() {
                    var a = this
                      , b = void 0;
                    for (this.game.kickbacks.forEach(function(b) {
                        a.simulation.removeContactListener(a.body, b.body)
                    }),
                    this.game.targetGroups.forEach(function(c) {
                        for (b = 0; b < c.targets.length; b++)
                            a.simulation.removeContactListener(a.body, c.targets[b].body)
                    }),
                    this.game.targets.forEach(function(b) {
                        a.simulation.removeContactListener(a.body, b.body)
                    }),
                    b = 0; b < this.game.ramps.length; b++)
                        for (var c = this.game.ramps[b], d = 0; d < c.sensors.length; d++)
                            this.simulation.removeContactListener(this.body, c.sensors[d].body);
                    this.game.sensors.forEach(function(b) {
                        a.simulation.removeContactListener(a.body, b.body)
                    }),
                    this.game.points.forEach(function(b) {
                        a.simulation.removeContactListener(a.body, b.body)
                    }),
                    this.game.gatesIn.forEach(function(b) {
                        a.simulation.removeContactListener(a.body, b.body)
                    }),
                    this.game.gatesOut.forEach(function(b) {
                        a.simulation.removeContactListener(a.body, b.body)
                    }),
                    this.game.slingshots.forEach(function(b) {
                        a.simulation.removeContactListener(a.body, b.bodies[1])
                    }),
                    this.game.bumpers.forEach(function(b) {
                        a.simulation.removeContactListener(a.body, b.body)
                    }),
                    this.game.nails.forEach(function(b) {
                        a.simulation.removeContactListener(a.body, b.body)
                    }),
                    this.simulation.remove(this.body)
                }
            }, {
                key: "_onCollide",
                value: function(a) {}
            }, {
                key: "update",
                value: function() {
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "update", this).call(this);
                    var a = app.game.config.maxVelocity;
                    if (m.default.vec2.length(this.body.velocity) > a) {
                        var c = Math.atan2(this.body.velocity[1], this.body.velocity[0])
                          , d = Math.cos(c) * a
                          , e = Math.sin(c) * a;
                        this.body.velocity[0] = d,
                        this.body.velocity[1] = e
                    }
                    this.mesh.position.set(this.body.position[0], 0, -this.body.position[1]).multiplyScalar(app.game.ratio),
                    this.mesh.position.y = this.radius,
                    this.velocity.set(this.body.velocity[0], 0, this.body.velocity[1]).multiplyScalar(app.game.ratio);
                    var f = this.mesh.position
                      , g = f.clone().sub(this.prevPosition);
                    this.prevPosition.copy(f);
                    var h = new o.Vector3(f.x,f.y,f.z)
                      , j = (new o.Matrix4).makeTranslation(h.x, h.y, h.z);
                    j.multiply((new o.Matrix4).makeRotationZ(-g.x * (45 * Math.PI))),
                    j.multiply((new o.Matrix4).makeRotationX(g.z * (45 * Math.PI))),
                    j.multiply((new o.Matrix4).makeTranslation(-h.x, -h.y, -h.z)),
                    j.multiply(this.mesh.matrix),
                    this.mesh.matrix.copy(j),
                    this.mesh.rotation.setFromRotationMatrix(this.mesh.matrix, this.mesh.rotation.order);
                    var k = this.simulation.collisionGroups
                      , l = 0;
                    this.shape.collisionMask === (k.ramps[0] | k.balls) && (l = 1),
                    this.shape.collisionMask === (k.ramps[1] | k.balls) && (l = 2),
                    this.mesh.visible = this.enabled;
                    var n = app.game.heightmaps.getHeight(this.body.position, l);
                    this.mesh.position.y += n.height;
                    this.shape.collisionGroup,
                    this.simulation.collisionGroups.default;
                    this.light.position.copy(this.mesh.position),
                    this.light.position.add(this.lightOffset)
                }
            }, {
                key: "disable",
                value: function() {
                    this.enabled = !1
                }
            }, {
                key: "enable",
                value: function() {
                    this.enabled = !0,
                    this.update()
                }
            }, {
                key: "reset",
                value: function() {
                    var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                    this.shape.collisionMask = this.simulation.collisionGroups.default | this.simulation.collisionGroups.balls,
                    this.body.position = this.position.slice(0),
                    this.body.velocity = [0, -a],
                    this.body.angularVelocity = 0,
                    this.enable()
                }
            }, {
                key: "enabled",
                set: function(a) {
                    this._enabled = a,
                    a ? this.simulation.add(this.body) : this.simulation.remove(this.body),
                    this.game.ballNbUpdate()
                },
                get: function() {
                    return this._enabled
                }
            }]),
            b
        }(k.default));
        c.default = r
    }
    , {
        "./AItem": 76,
        "game/GameModel": 30,
        "game/audio/ThreeAudioManager": 32,
        three: 10,
        "vendors/p2/p2": 148
    }],
    78: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = function a(b, c, d) {
            null === b && (b = Function.prototype);
            var e = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === e) {
                var f = Object.getPrototypeOf(b);
                return null === f ? void 0 : a(f, c, d)
            }
            if ("value"in e)
                return e.value;
            var g = e.get;
            if (void 0 !== g)
                return g.call(d)
        }
          , j = a("./AItem")
          , k = d(j)
          , l = a("vendors/p2/p2")
          , m = d(l)
          , n = a("vendors/signal/Signal")
          , o = d(n)
          , p = a("three")
          , q = (function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            b.default = a
        }(p),
        a("game/audio/ThreeAudioManager"))
          , r = d(q)
          , s = a("game/GameEvent")
          , t = d(s)
          , u = function(a) {
            function b(a, c) {
                e(this, b);
                var d = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a));
                return d.parameters = c,
                d.body = c.body,
                d.mesh = c.mesh,
                d.shape = d.body.shapes[0],
                d.shape.material = d.simulation.materials.bumper,
                d.strength = 5,
                d.timelines = {},
                d.timelines.loop = new TimelineMax({
                    paused: !0,
                    yoyo: !0,
                    repeat: -1,
                    delay: .1 * parseInt(c.id.replace(/^\D+/g, ""))
                }),
                d.timelines.loop.to(d.mesh.scale, .2, {
                    y: 1.1
                }),
                d.timelines.loop.play(),
                d.timelines.collide = new TimelineMax({
                    paused: !0,
                    onStart: function() {
                        d.timelines.loop.pause()
                    },
                    onComplete: function() {
                        d.timelines.loop.play(0)
                    }
                }),
                d.timelines.collide.add(TweenLite.to(d.mesh.scale, .1, {
                    x: 1.5,
                    y: 1.5,
                    z: 1.5,
                    ease: Expo.easeInOut
                }, 0)),
                d.timelines.collide.add(TweenLite.to(d.mesh.scale, .1, {
                    x: 1,
                    y: 1,
                    z: 1,
                    ease: Expo.easeOut
                })),
                d.isCollided = !1,
                d.collide = d.collide.bind(d),
                d
            }
            return g(b, a),
            h(b, [{
                key: "destroy",
                value: function() {
                    clearTimeout(this.enterLoopTimeout),
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "destroy", this).call(this)
                }
            }, {
                key: "_initSignals",
                value: function() {
                    this.collided = new o.default
                }
            }, {
                key: "collide",
                value: function(a, b) {
                    if ("out" != b) {
                        var c = [0, 0];
                        m.default.vec2.subtract(c, a.body.position, this.body.position),
                        m.default.vec2.normalize(c, c),
                        m.default.vec2.scale(c, c, this.strength);
                        var d = Math.floor(3 * Math.random())
                          , e = .4 * Math.random() + .6
                          , f = 1.2 * Math.random() - .6;
                        r.default.play("bumpers." + d, e, f),
                        a.body.velocity = [0, 0],
                        a.body.applyImpulse(c),
                        this.timelines.collide.play(0),
                        this.isCollided = !0,
                        this.collided.dispatch(this.parameters),
                        t.default.BUMPER_HIT.dispatch(this.parameters.id)
                    }
                }
            }]),
            b
        }(k.default);
        c.default = u
    }
    , {
        "./AItem": 76,
        "game/GameEvent": 28,
        "game/audio/ThreeAudioManager": 32,
        three: 10,
        "vendors/p2/p2": 148,
        "vendors/signal/Signal": 149
    }],
    79: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("utils/FunctionUtils")
          , h = d(g)
          , i = a("game/audio/ThreeAudioManager")
          , j = d(i)
          , k = function() {
            function a() {
                e(this, a),
                this.libraryAnimation = [],
                this.libraryAnimationPlay = [],
                this.libraryAnimationRotate = [],
                this.libraryAnimationBump = [],
                this.libraryAnimationSqueeze = [],
                this.floatMesh = app.game.dictionary._Bouee.mesh,
                this.Animationfloat = {},
                this.makeBounce(app.game.dictionary._Rainbow_Med_01.mesh, 3, 3),
                this.makeBounce(app.game.dictionary._Nuage_Med_003.mesh, 2.6, 3),
                this.makeBounce(app.game.dictionary._Nuage_Med_004.mesh, 2.6, 3),
                this.makeBounce(app.game.dictionary._Nuage_Med_01.mesh, 4, 4),
                this.makeBounce(app.game.dictionary._Nuage_Med_002.mesh, 2.5, 3),
                this.makeOnce(app.game.dictionary._Sapin0A.mesh, 1.5, 1),
                this.makeOnce(app.game.dictionary._Sapin0B.mesh, 1.5, 1),
                this.makeOnce(app.game.dictionary._Sapin0C.mesh, 1.5, 1),
                this.makeOnceRotate(app.game.dictionary._Soleil.mesh, 3),
                this.makeOnceBump(app.game.dictionary._SlingshotElastiqueLeft.mesh, .1),
                this.makeOnceBump(app.game.dictionary._SlingshotElastiqueRight.mesh, .1),
                this.makeOnceSqueeze(app.game.dictionary.T0.mesh, 1),
                this.makeOnceSqueeze(app.game.dictionary.T1.mesh, 1),
                this.canFloat = !0
            }
            return f(a, [{
                key: "makeOnce",
                value: function(a) {
                    var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 10
                      , c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 2
                      , d = new TimelineMax({
                        paused: !0
                    });
                    d.from(a.scale, c, {
                        z: b,
                        ease: Elastic.easeOut
                    }),
                    this.setOriginalPos(a),
                    this.libraryAnimationPlay.push(d)
                }
            }, {
                key: "makeOnceRotate",
                value: function(a) {
                    var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2
                      , c = new TimelineMax({
                        paused: !0
                    });
                    c.from(a.rotation, b, {
                        x: h.default.toRadians(-360),
                        ease: Elastic.easeOut.config(1, .5)
                    }),
                    this.setOriginalPos(a),
                    this.libraryAnimationRotate.push(c)
                }
            }, {
                key: "makeOnceSqueeze",
                value: function(a) {
                    var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2
                      , c = new TimelineMax({
                        paused: !0,
                        yoyo: !0
                    });
                    c.from(a.scale, b, {
                        x: 1.5,
                        y: .6,
                        ease: Elastic.easeOut.config(1, .5)
                    });
                    var d = new TimelineMax({
                        paused: !0
                    });
                    d.to(a.rotation, b / 15, {
                        y: h.default.toRadians(-10),
                        ease: Power3.easeOut
                    }),
                    d.to(a.rotation, b / 15, {
                        y: h.default.toRadians(5),
                        ease: Power1.easeOut
                    }),
                    d.to(a.rotation, b / 15, {
                        y: 0,
                        ease: Power1.easeOut
                    }),
                    this.setOriginalPos(a);
                    var e = [c, d];
                    this.libraryAnimationSqueeze.push(e)
                }
            }, {
                key: "makeOnceBump",
                value: function(a) {
                    var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2
                      , c = new TimelineMax({
                        yoyo: !0,
                        repeat: 1,
                        paused: !0
                    });
                    c.add(TweenLite.to(a.scale, b, {
                        x: 1,
                        ease: Power2.easeOut
                    }));
                    var d = new TimelineMax({
                        yoyo: !0,
                        repeat: 1,
                        paused: !0
                    });
                    d.add(TweenLite.to(a.position, b, {
                        x: 0,
                        y: 0,
                        ease: Power2.easeOut
                    }));
                    var e = new TimelineMax({
                        yoyo: !0,
                        repeat: 1,
                        paused: !0
                    });
                    e.add(TweenLite.to(a.rotation, b, {
                        z: 0,
                        ease: Power2.easeOut
                    })),
                    this.setOriginalPos(a);
                    var f = [c, d, e];
                    this.libraryAnimationBump.push(f)
                }
            }, {
                key: "makeBounce",
                value: function(a) {
                    var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 10
                      , c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 2
                      , d = (!(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3],
                    new TimelineMax({
                        repeat: -1,
                        yoyo: !0
                    }));
                    d.to(a.position, c, {
                        z: b,
                        ease: Power1.easeInOut
                    }),
                    this.setOriginalPos(a),
                    this.libraryAnimation.push(d)
                }
            }, {
                key: "launch",
                value: function(a) {
                    this.libraryAnimationPlay[a] && this.libraryAnimationPlay[a].restart()
                }
            }, {
                key: "rotate",
                value: function() {
                    this.libraryAnimationRotate[0] && this.libraryAnimationRotate[0].restart()
                }
            }, {
                key: "bump",
                value: function(a) {
                    for (var b = this.libraryAnimationBump[a], c = 0; c < b.length; c++)
                        b[c].restart()
                }
            }, {
                key: "float",
                value: function() {
                    var a = this;
                    if (this.canFloat) {
                        this.canFloat = !1;
                        var b = this.floatMesh
                          , c = Math.round(15 * Math.random()) + 10;
                        this.Animationfloat.tl1 = new TimelineMax({}),
                        this.Animationfloat.tl1.fromTo(b.position, 2, {
                            z: .8
                        }, {
                            z: 0,
                            ease: Elastic.easeOut.config(1.75, .3)
                        }),
                        this.Animationfloat.tl2 = new TimelineMax({}),
                        this.Animationfloat.tl2.to(b.rotation, .4, {
                            y: h.default.toRadians(-c),
                            ease: Power3.easeOut
                        }),
                        this.Animationfloat.tl2.to(b.rotation, .4, {
                            y: h.default.toRadians(c / 2),
                            ease: Power1.easeOut
                        }),
                        this.Animationfloat.tl2.to(b.rotation, .4, {
                            y: 0,
                            ease: Power1.easeOut
                        }),
                        j.default.play("jackpot.plouf"),
                        clearTimeout(this.floatThrottle),
                        this.floatThrottle = setTimeout(function() {
                            a.canFloat = !0
                        }, 500)
                    }
                }
            }, {
                key: "squeeze",
                value: function(a) {
                    for (var b = this.libraryAnimationSqueeze[a], c = 0; c < b.length; c++)
                        b[c].restart()
                }
            }, {
                key: "destroy",
                value: function() {
                    for (var a = 0; a < this.libraryAnimation.length; a++)
                        this.libraryAnimation[a].kill()
                }
            }, {
                key: "setOriginalPos",
                value: function(a) {
                    a.position.set(0, 0, 0),
                    a.rotation.set(0, 0, 0),
                    a.scale.set(1, 1, 1)
                }
            }, {
                key: "update",
                value: function() {}
            }]),
            a
        }();
        c.default = k
    }
    , {
        "game/audio/ThreeAudioManager": 32,
        "utils/FunctionUtils": 137
    }],
    80: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = a("./AItem")
          , j = d(i)
          , k = a("three")
          , l = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(k)
          , m = a("vendors/p2/p2")
          , n = d(m)
          , o = a("game/audio/ThreeAudioManager")
          , p = d(o)
          , q = function(a) {
            function b(a, c) {
                e(this, b);
                var d = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, c));
                d.opened = !0,
                d.rotOffset = l.Math.degToRad(c.rotOffset) || 0,
                d.body = c.body,
                d.body.allowSleep = !1,
                d.body.contactResponse = !1,
                d.mesh = c.mesh,
                d.anchorPosition = c.anchorPosition || "bottom",
                d.min = void 0 != d.parameters.min ? d.parameters.min : l.Math.degToRad(0),
                d.max = void 0 != d.parameters.max ? d.parameters.max : l.Math.degToRad(90),
                d.direction = d.parameters.direction || -1,
                d.motorSpeed = 30,
                d.position = d.body.position,
                d.aabb = d.body.getAABB();
                var g = d.aabb.lowerBound
                  , h = d.aabb.upperBound;
                d.width = h[0] - g[0],
                d.height = h[1] - g[1];
                var i = "top" == d.anchorPosition ? -d.height / 2 : d.height / 2;
                d.body.shapes[0].position[1] += i;
                d.width;
                return d.anchor = new n.default.Body({
                    mass: 0,
                    position: [d.position[0], d.position[1] - i]
                }),
                d.simulation.add(d.body),
                d.revoluteConstraint = new n.default.RevoluteConstraint(d.body,d.anchor,{
                    localPivotA: [0, 0],
                    localPivotB: [0, 0],
                    collideConnected: !1
                }),
                d.revoluteConstraint.enableMotor(),
                d.revoluteConstraint.setLimits(d.min, d.max),
                d.simulation.world.addConstraint(d.revoluteConstraint),
                d.simulation.add(d.anchor),
                d
            }
            return g(b, a),
            h(b, [{
                key: "initDoorAnim",
                value: function() {
                    this.doorAnim = new TimelineLite,
                    this.doorAnim.pause(),
                    this.doorAnim.to(this.mesh.position, 1, {
                        y: 4,
                        ease: Power4.easeInOut
                    }),
                    this.doorAnim.to(this.mesh.position, 1, {
                        z: 1,
                        ease: Power4.easeInOut
                    }, .1)
                }
            }, {
                key: "closeJackPotDoor",
                value: function() {
                    TweenLite.to(this.doorAnim, 1, {
                        progress: 0,
                        ease: Power0.easeOut
                    })
                }
            }, {
                key: "update",
                value: function() {
                    var a = this.motorSpeed * this.direction;
                    this.opened && (a *= -1),
                    this.revoluteConstraint.setMotorSpeed(a);
                    var b = 0 !== this.rotOffset ? 1.37 * this.body.angle : this.body.angle;
                    this.mesh && "C2" !== this.id && (this.mesh.rotation.z = b + this.rotOffset)
                }
            }, {
                key: "opened",
                set: function(a) {
                    if (this._opened = a,
                    a)
                        this.mesh && "C2" === this.id && (this.doorAnim || this.initDoorAnim(),
                        TweenLite.to(this.doorAnim, 1, {
                            progress: 1,
                            ease: Power0.easeOut
                        }));
                    else if (this.mesh && "C2" === this.id) {
                        this.doorAnim || this.initDoorAnim(),
                        TweenLite.to(this.doorAnim, .3, {
                            progress: 0,
                            ease: Power0.easeOut
                        });
                        var b = new TimelineLite;
                        b.add(function() {
                            p.default.play("jackpot.door.close", .7)
                        }, .15)
                    }
                },
                get: function() {
                    return this._opened
                }
            }]),
            b
        }(j.default);
        c.default = q
    }
    , {
        "./AItem": 76,
        "game/audio/ThreeAudioManager": 32,
        three: 10,
        "vendors/p2/p2": 148
    }],
    81: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = a("./AItem")
          , j = d(i)
          , k = a("three")
          , l = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(k)
          , m = a("vendors/p2/p2")
          , n = d(m)
          , o = a("game/audio/ThreeAudioManager")
          , p = d(o)
          , q = a("game/GameInputProxy")
          , r = d(q)
          , s = function(a) {
            function b(a, c) {
                e(this, b);
                var d = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, c));
                switch (d.body = c.body,
                d.side = c.side,
                d.mesh = c.mesh,
                d.direction = "L" == d.side ? 1 : -1,
                d.motorSpeed = 23,
                d.position = d.body.position,
                c.index) {
                case 1:
                    d.min = l.Math.degToRad(-40),
                    d.max = l.Math.degToRad(30);
                    break;
                case 2:
                    d.min = l.Math.degToRad(-30),
                    d.max = l.Math.degToRad(40),
                    d.motorSpeed = 25;
                    break;
                case 3:
                    d.min = l.Math.degToRad(-15),
                    d.max = l.Math.degToRad(52),
                    d.motorSpeed = 18;
                    break;
                case 4:
                    d.min = l.Math.degToRad(-42),
                    d.max = l.Math.degToRad(37),
                    d.motorSpeed = 18;
                    break;
                case 5:
                    d.min = l.Math.degToRad(-20),
                    d.max = l.Math.degToRad(30),
                    d.motorSpeed = 13;
                    break;
                case 6:
                    d.min = l.Math.degToRad(-30),
                    d.max = l.Math.degToRad(20),
                    d.motorSpeed = 13
                }
                d.aabb = d.body.getAABB();
                var g = d.aabb.lowerBound
                  , h = d.aabb.upperBound;
                d.width = h[0] - g[0],
                d.height = h[1] - g[1],
                d.body.removeShape(d.body.shapes[0]),
                d.simulation.remove(d.body),
                d.body = new n.default.Body({
                    mass: 1,
                    allowSleep: !1
                }),
                d.shape = new n.default.Capsule({
                    length: d.width - d.height,
                    radius: .5 * d.height,
                    collisionGroup: d.simulation.collisionGroups.default,
                    collisionMask: d.simulation.collisionGroups.balls
                });
                var i = .5 * d.height;
                d.anchor = new n.default.Body({
                    mass: 0,
                    position: [d.position[0] - (.5 * d.width - i) * d.direction, d.position[1]]
                }),
                d.body.addShape(d.shape, [(.5 * d.width - i) * d.direction, 0]),
                d.simulation.add(d.body),
                d.revoluteConstraint = new n.default.RevoluteConstraint(d.body,d.anchor,{
                    localPivotA: [0, 0],
                    localPivotB: [0, 0],
                    collideConnected: !1
                }),
                d.revoluteConstraint.enableMotor(),
                d.revoluteConstraint.setLimits(d.min, d.max),
                d.simulation.world.addConstraint(d.revoluteConstraint),
                d.simulation.add(d.anchor);
                for (var j = 0; j < d.body.shapes.length; j++)
                    d.body.shapes[j].material = d.simulation.materials.flipper;
                return d
            }
            return g(b, a),
            h(b, [{
                key: "update",
                value: function() {
                    var a = void 0;
                    if (a = "L" == this.side && r.default.isDown("left") || "R" == this.side && r.default.isDown("right") ? this.motorSpeed * this.direction : -this.motorSpeed * this.direction,
                    this._speed != a) {
                        this.revoluteConstraint.setMotorSpeed(a),
                        this._speed = a;
                        var b = Math.sign(a * this.direction) > 0 ? 0 : 1;
                        if (!this.init)
                            return void (this.init = !0);
                        var c = 0
                          , d = .4 * Math.random() + .5;
                        "L" == this.side && (c = -.4 - .2 * Math.random()),
                        "R" == this.side && (c = .4 + .2 * Math.random()),
                        "F1L" == this.id ? p.default.play("flippers." + b, d, c) : "F2R" == this.id && p.default.play("flippers." + b, d, c)
                    }
                    this.mesh && (this.mesh.rotation.z = this.body.angle)
                }
            }]),
            b
        }(j.default);
        c.default = s
    }
    , {
        "./AItem": 76,
        "game/GameInputProxy": 29,
        "game/audio/ThreeAudioManager": 32,
        three: 10,
        "vendors/p2/p2": 148
    }],
    82: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = a("./AItem")
          , j = d(i)
          , k = a("vendors/signal/Signal")
          , l = d(k)
          , m = a("game/audio/ThreeAudioManager")
          , n = d(m)
          , o = a("game/missions/MissionsModel")
          , p = function(a) {
            function b(a, c) {
                e(this, b);
                var d = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a));
                if (d.type = c.type,
                d.id = c.id,
                d.body = c.body,
                d.game = a,
                "I" == d.type)
                    switch (d.body.shapes[0].sensor = !0,
                    d.id) {
                    case 1:
                        d.outId = 7;
                        break;
                    default:
                        d.outId = 7
                    }
                else
                    d.position = d.body.position;
                return d
            }
            return g(b, a),
            h(b, [{
                key: "_initSignals",
                value: function() {
                    this.entered = new l.default
                }
            }, {
                key: "collide",
                value: function(a, b) {
                    var c = this;
                    if (7 != this.id || "in" != b || this.disabled) {
                        if (7 != this.id && "in" == b) {
                            var d = this.game.gatesOut[this.outId];
                            if (this.game.gatesOut[7].disabled = !0,
                            this.entered.dispatch(this),
                            a.disable(),
                            8 != this.id) {
                                var e = "multiball" == app.stage.cameraControls.mode ? "multiball" : "gate";
                                switch (app.stage.cameraControls.set(e, {
                                    onComplete: function() {
                                        a.body.position = d.position.slice(),
                                        a.resetVelocity(0),
                                        a.enable(),
                                        app.stage.cameraControls.mode = "follow",
                                        n.default.play("balls.out"),
                                        (new TimelineLite).add(function() {
                                            c.game.gatesOut[7].disabled = !1
                                        }, .5)
                                    }
                                }),
                                n.default.toggleModul(2, !1),
                                this.id) {
                                case "1":
                                case "2":
                                case "3":
                                    n.default.play("jackpot.whoosh");
                                    break;
                                default:
                                    n.default.play("frites.out")
                                }
                            } else {
                                var f = new TimelineLite;
                                f.add(function() {
                                    app.stage.cameraControls.set("gate", {
                                        onComplete: function() {
                                            a.body.position = d.position.slice(),
                                            a.resetVelocity(0),
                                            a.enable(),
                                            app.stage.cameraControls.mode = "follow",
                                            n.default.play("balls.out"),
                                            (new TimelineLite).add(function() {
                                                c.game.gatesOut[7].disabled = !1
                                            }, .5),
                                            app.game.groundAnimations.deco.gJackpot4.stop()
                                        }
                                    }),
                                    n.default.toggleModul(2, !1),
                                    n.default.play("jackpot.whoosh")
                                }, 1)
                            }
                        }
                    } else {
                        this.disabled = !0;
                        var g = this.game.gatesOut[7];
                        if (this.entered.dispatch(this),
                        a.disable(),
                        a.locked = !0,
                        a.resetVelocity(0),
                        a.body.position = g.position.slice(),
                        n.default.play("balls.hole"),
                        this.game.stats.addPoints(o.model.hole.collided.score),
                        "multiball" == app.stage.cameraControls.mode) {
                            (new TimelineLite).add(function() {
                                a.body.position = g.position.slice(),
                                a.resetVelocity(0),
                                a.enable(),
                                a.locked = !1,
                                n.default.play("balls.out"),
                                (new TimelineLite).add(function() {
                                    c.disabled = !1
                                }, .5)
                            }, 1.5)
                        } else
                            app.stage.cameraControls.set("gate", {
                                onComplete: function() {
                                    a.body.position = g.position.slice(),
                                    a.resetVelocity(0),
                                    a.enable(),
                                    a.locked = !1,
                                    app.stage.cameraControls.mode = "follow",
                                    n.default.play("balls.out"),
                                    (new TimelineLite).add(function() {
                                        c.disabled = !1
                                    }, .5)
                                }
                            })
                    }
                }
            }]),
            b
        }(j.default);
        c.default = p
    }
    , {
        "./AItem": 76,
        "game/audio/ThreeAudioManager": 32,
        "game/missions/MissionsModel": 67,
        "vendors/signal/Signal": 149
    }],
    83: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = a("./AItem")
          , j = d(i)
          , k = a("vendors/p2/p2")
          , l = d(k)
          , m = a("vendors/signal/Signal")
          , n = d(m)
          , o = a("game/audio/ThreeAudioManager")
          , p = d(o)
          , q = function(a) {
            function b(a, c) {
                e(this, b);
                var d = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, c));
                return d.id = parseInt(c.id.replace("K", "")),
                d.anchor = c.body,
                d.strength = .9,
                d.height = .5,
                d.restLength = .85 * d.height,
                d.mesh = c.mesh,
                d.body = new l.default.Body({
                    mass: 1,
                    fixedX: !0,
                    fixedRotation: !0,
                    position: [d.anchor.position[0], d.anchor.position[1] + d.restLength]
                }),
                d.body.addShape(new l.default.Box({
                    width: .17,
                    height: d.height,
                    collisionMask: d.simulation.collisionGroups.balls
                })),
                d.simulation.add(d.body),
                d.linearSpring = new l.default.LinearSpring(d.body,d.anchor,{
                    stiffness: 1e3,
                    damping: 30,
                    restLength: d.restLength
                }),
                d.simulation.world.addSpring(d.linearSpring),
                d
            }
            return g(b, a),
            h(b, [{
                key: "_initSignals",
                value: function() {
                    this.launched = new n.default
                }
            }, {
                key: "collide",
                value: function() {
                    var a = this;
                    if (!this.active) {
                        TweenMax.to(this.mesh.scale, .5, {
                            z: .6
                        }),
                        setTimeout(function() {
                            a.linearSpring.restLength = a.strength,
                            TweenMax.to(a.mesh.scale, .15, {
                                z: 1,
                                ease: Expo.easeOut
                            }),
                            setTimeout(function() {
                                a.active = !1,
                                a.linearSpring.restLength = a.restLength,
                                setTimeout(function() {
                                    a.launched.dispatch(a)
                                }, 250)
                            }, 200)
                        }, 500);
                        var b = 1 == this.id ? -.5 : .5
                          , c = Math.floor(1 * Math.random());
                        p.default.play("kickbacks." + c, 1, b),
                        this.active = !0
                    }
                }
            }, {
                key: "active",
                get: function() {
                    return this._active || !1
                },
                set: function(a) {
                    this._active = a
                }
            }]),
            b
        }(j.default);
        c.default = q
    }
    , {
        "./AItem": 76,
        "game/audio/ThreeAudioManager": 32,
        "vendors/p2/p2": 148,
        "vendors/signal/Signal": 149
    }],
    84: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = a("three")
          , j = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(i)
          , k = a("./AItem")
          , l = d(k)
          , m = a("vendors/p2/p2")
          , n = d(m)
          , o = a("vendors/signal/Signal")
          , p = d(o)
          , q = a("game/audio/ThreeAudioManager")
          , r = d(q)
          , s = function(a) {
            function b(a, c) {
                e(this, b);
                var d = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, c));
                return d.body = c.body,
                d.mesh = c.mesh,
                d.shape = d.body.shapes[0],
                d.shape.material = d.simulation.materials.nail,
                d
            }
            return g(b, a),
            h(b, [{
                key: "_initSignals",
                value: function() {
                    this.collided = new p.default
                }
            }, {
                key: "collide",
                value: function(a) {
                    this.collided.dispatch(this);
                    var b = .5 * n.default.vec2.length(a.body.velocity);
                    b > .75 && (b = .75);
                    var c = this.shape.body.position[0];
                    c = j.Math.mapLinear(c, 1.79, 2.58, -.5, .5),
                    b > .2 && r.default.play("phare.poteau", b, c)
                }
            }]),
            b
        }(l.default);
        c.default = s
    }
    , {
        "./AItem": 76,
        "game/audio/ThreeAudioManager": 32,
        three: 10,
        "vendors/p2/p2": 148,
        "vendors/signal/Signal": 149
    }],
    85: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = a("./AItem")
          , j = d(i)
          , k = a("three")
          , l = (function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            b.default = a
        }(k),
        a("vendors/p2/p2"))
          , m = d(l)
          , n = a("utils/Render")
          , o = d(n)
          , p = a("game/GameInputProxy")
          , q = d(p)
          , r = a("game/audio/ThreeAudioManager")
          , s = d(r)
          , t = function(a) {
            function b(a, c) {
                e(this, b);
                var d = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, c));
                d.id = c.id,
                d.body = c.body,
                d.side = c.side,
                d.mesh = c.mesh,
                d.direction = "L" == d.side ? 1 : -1,
                d.motorSpeed = 2,
                d.position = d.body.position,
                d.mesh.position.x = d.body.position[0] * a.ratio,
                d.mesh.position.y = d.body.position[1] * a.ratio;
                var g = Math.PI / 5;
                d.min = -g,
                d.max = g,
                d.aabb = d.body.getAABB();
                var h = d.aabb.lowerBound
                  , i = d.aabb.upperBound;
                d.width = i[0] - h[0],
                d.height = i[1] - h[1];
                d.height;
                return d.anchor = new m.default.Body({
                    mass: 0,
                    position: [d.position[0], d.position[1]]
                }),
                d.simulation.add(d.body),
                d.revoluteConstraint = new m.default.RevoluteConstraint(d.body,d.anchor,{
                    localPivotA: [0, 0],
                    localPivotB: [0, 0],
                    collideConnected: !1
                }),
                d.revoluteConstraint.enableMotor(),
                d.revoluteConstraint.setLimits(0, 0),
                d.simulation.world.addConstraint(d.revoluteConstraint),
                d.simulation.add(d.anchor),
                d.enabled = !1,
                d.mesh.position.x = 0,
                d.mesh.position.y = 0,
                d.mesh.parent.position.x = d.anchor.position[0] * a.ratio,
                d.mesh.parent.position.y = d.anchor.position[1] * a.ratio - .003,
                d.mesh.parent.position.z += .007,
                d.soundLeft = s.default.getSoundObject("frites.left"),
                d.soundLeft.loop = !0,
                d.keyLeftPressed = !1,
                d.soundRight = s.default.getSoundObject("frites.right"),
                d.soundRight.loop = !0,
                d.keyRightPressed = !1,
                d
            }
            return g(b, a),
            h(b, [{
                key: "update",
                value: function() {
                    var a = 0;
                    if (this.enabled) {
                        this.body.sleepState == m.default.Body.SLEEPING && this.body.wakeUp();
                        var b = Math.PI / 3;
                        a = Math.sin(4 * o.default.elapsedTime) * b,
                        this.revoluteConstraint.setLimits(this.min, this.max),
                        q.default.isDown("left") ? (a += this.motorSpeed,
                        "P5L" === this.id && (this.keyLeftPressed || (this.keyLeftPressed = !0,
                        s.default.play(this.soundLeft, .7, -10)))) : q.default.isDown("right") ? (a -= this.motorSpeed,
                        "P5L" === this.id && (this.keyRightPressed || (this.keyRightPressed = !0,
                        s.default.play(this.soundRight, .7, .2)))) : "P5L" === this.id && (this.keyLeftPressed && (this.keyLeftPressed = !1,
                        this.soundLeft.stop()),
                        this.keyRightPressed && (this.keyRightPressed = !1,
                        this.soundRight.stop()))
                    } else
                        this.revoluteConstraint.setLimits(0, 0),
                        "P5L" === this.id && "P5L" === this.id && (this.keyLeftPressed && (this.keyLeftPressed = !1,
                        this.soundLeft.stop()),
                        this.keyRightPressed && (this.keyRightPressed = !1,
                        this.soundRight.stop()));
                    this._speed != a && (this.revoluteConstraint.setMotorSpeed(a),
                    this._speed = a),
                    this.mesh && (this.mesh.rotation.z = this.body.angle)
                }
            }]),
            b
        }(j.default);
        c.default = t
    }
    , {
        "./AItem": 76,
        "game/GameInputProxy": 29,
        "game/audio/ThreeAudioManager": 32,
        three: 10,
        "utils/Render": 140,
        "vendors/p2/p2": 148
    }],
    86: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = a("./AItem")
          , j = d(i)
          , k = a("three")
          , l = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(k)
          , m = a("vendors/p2/p2")
          , n = (d(m),
        a("vendors/signal/Signal"))
          , o = d(n)
          , p = a("game/GameEvent")
          , q = d(p)
          , r = a("game/audio/ThreeAudioManager")
          , s = d(r)
          , t = a("game/GameInputProxy")
          , u = d(t)
          , v = function(a) {
            function b(a, c) {
                e(this, b);
                var d = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a));
                return d.reset = d.reset.bind(d),
                d.mesh = c.mesh,
                d.position = d.mesh.parent.position.clone(),
                d.mesh.position.y = -50,
                d.mesh.visible = !1,
                d._released = !0,
                d._ready = !1,
                d.enable = !1,
                d.delta = 0,
                d.min = 10,
                d.max = 25,
                d.camera = app.stage.camera,
                d.cameraControls = app.stage.cameraControls,
                q.default.LOST.add(d.reset),
                d.playJeton = !1,
                d
            }
            return g(b, a),
            h(b, [{
                key: "_initSignals",
                value: function() {
                    this.released = new o.default
                }
            }, {
                key: "_onRelease",
                value: function() {
                    var a = this;
                    if (!this._released)
                        if (this._released = !0,
                        this.delta > -this.min)
                            TweenLite.to(this.mesh.position, .5, {
                                y: this.position.y,
                                ease: Expo.easeOut
                            }),
                            this.delta = 0;
                        else {
                            var b = app.game.balls[0]
                              , c = this.cameraControls.target;
                            this.enable = !1,
                            this.cameraControls.mode = "plunger",
                            TweenLite.from(this.cameraControls.offsets.follow, 1.5, {
                                x: this.camera.position.x - c.x,
                                y: this.camera.position.y - c.y,
                                ease: Power3.easeIn
                            }),
                            TweenLite.to(c, 1.5, {
                                x: this.camera.position.x,
                                y: b.radius,
                                z: -b.position[1] * app.game.ratio,
                                ease: Power3.easeIn
                            }),
                            TweenLite.to(this.mesh.position, 1.5, {
                                y: 120,
                                ease: Power3.easeIn,
                                onUpdate: function() {
                                    a.mesh.position.y > 40 && (a.mesh.position.y = -50,
                                    a.mesh.visible = !1)
                                },
                                onStart: function() {
                                    s.default.play("train.start")
                                },
                                onComplete: function() {
                                    a.released.dispatch(1.5 * a.delta),
                                    a.delta = 0,
                                    s.default.fadeOut("train.start", 1.5),
                                    s.default.play("train.boom")
                                }
                            })
                        }
                }
            }, {
                key: "reset",
                value: function() {
                    var a = this
                      , b = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
                    if (this.playJeton = !1,
                    b) {
                        this.cameraControls.set("lostBall", {
                            ease: Power4.easeOut,
                            duration: 1
                        });
                        (new TimelineLite).add(function() {
                            a.cameraControls.set("plunger", {
                                ease: Power4.easeInOut,
                                duration: 2
                            })
                        }, 1.2)
                    } else
                        this.cameraControls.set("plunger", {
                            ease: Power4.easeInOut,
                            duration: 2,
                            delay: 1
                        });
                    (new TimelineLite).add(function() {
                        s.default.play("train.out")
                    }, 1.5),
                    (new TimelineLite).add(function() {
                        app.game.groundAnimations.deco.stopAll()
                    }, 2),
                    TweenLite.to(this.mesh.position, 2, {
                        y: this.position.y,
                        ease: Power3.easeOut,
                        delay: 2,
                        onStart: function() {
                            a.mesh.visible = !0
                        },
                        onComplete: function() {
                            a.enable = !0,
                            a.delta = 0,
                            u.default.mouse.reset(),
                            u.default.touches.reset()
                        }
                    })
                }
            }, {
                key: "update",
                value: function() {
                    if (this.enable)
                        if (u.default.isDown("down")) {
                            var a = 0;
                            u.default.keyboard.isDown("down") ? a = this.delta - 1 : u.default.mouse.isDown ? a = .1 * u.default.mouse.getDelta().y * .25 : u.default.touches.started && (a = .5 * u.default.touches.getDelta().y),
                            this._released = !1;
                            var b = Math.abs(this.delta) / this.max;
                            b = l.Math.clamp(b, 0, 1);
                            var c = Circ.easeOut.getRatio(b)
                              , d = 1 - c;
                            this.delta += (a - this.delta) * d,
                            this.delta > 0 && (this.delta = 0),
                            this.mesh.position.y = this.position.y + this.delta;
                            var e = .15 - .1 * b
                              , f = .145 + .03 * b;
                            this.cameraControls.disable || "animate" != this.cameraControls.mode || (this.camera.position.y += (e - this.camera.position.y) * (1 - d),
                            this.camera.position.x += (f - this.camera.position.x) * (1 - d)),
                            this.playJeton || (this.playJeton = !0,
                            s.default.play("train.jeton", .9))
                        } else
                            this._onRelease()
                }
            }]),
            b
        }(j.default);
        c.default = v
    }
    , {
        "./AItem": 76,
        "game/GameEvent": 28,
        "game/GameInputProxy": 29,
        "game/audio/ThreeAudioManager": 32,
        three: 10,
        "vendors/p2/p2": 148,
        "vendors/signal/Signal": 149
    }],
    87: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = a("three")
          , j = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(i)
          , k = a("vendors/p2/p2")
          , l = d(k)
          , m = a("vendors/signal/Signal")
          , n = d(m)
          , o = a("./AItem")
          , p = d(o)
          , q = a("./Door")
          , r = d(q)
          , s = a("./Sensor")
          , t = d(s)
          , u = a("game/audio/ThreeAudioManager")
          , v = d(u)
          , w = a("game/GameEvent")
          , x = d(w)
          , y = function(a) {
            function b(a, c) {
                e(this, b);
                var d = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a));
                return d.bodies = [],
                d.sensors = [],
                d.doors = [],
                d.collisionGroup = c.collisionGroup,
                d.index = parseInt(c.index),
                d.iteration = 0,
                d.completed = new n.default,
                d.left = new n.default,
                d.parameters = c,
                d._onRampTaken = d._onRampTaken.bind(d),
                d
            }
            return g(b, a),
            h(b, [{
                key: "add",
                value: function(a, b, c, d) {
                    var e = c.match(/(Q|M--in|M--out|M--speed|M|C)/g).shift()
                      , f = c.match(/\d+/)[0]
                      , g = void 0;
                    switch (e) {
                    case "Q":
                        this._addToCollisionGroup(a),
                        this.bodies.push(a);
                        break;
                    case "C":
                        var h = {
                            body: a,
                            mesh: b
                        };
                        this._addToCollisionGroup(a),
                        7 == f ? (h.min = j.Math.degToRad(-104),
                        h.max = j.Math.degToRad(-78),
                        h.direction = -1) : 5 == f ? (h.min = j.Math.degToRad(20),
                        h.max = j.Math.degToRad(60),
                        h.rotOffset = 40,
                        h.direction = 1) : 6 == f && (h.min = j.Math.degToRad(-35),
                        h.max = j.Math.degToRad(4),
                        h.rotOffset = 10,
                        h.direction = -1),
                        this.doors.push(new r.default(this.game,h));
                        break;
                    case "M":
                        g = new t.default(this.game,{
                            body: a,
                            id: f,
                            collisionGroup: this.collisionGroup | this.simulation.collisionGroups.default,
                            collisionMask: this.simulation.collisionGroups.balls
                        }),
                        this.game.sensors[g.id] = g,
                        [20, 21, 22, 23].indexOf(parseInt(g.id, 10)) >= 0 && g.collided.add(this._onRampTaken);
                        break;
                    case "M--in":
                    case "M--out":
                    case "M--speed":
                        var i = a.shapes[0];
                        if (i.sensor = !0,
                        i.collisionGroup = this.collisionGroup | this.simulation.collisionGroups.default,
                        i.collisionMask = this.simulation.collisionGroups.balls,
                        g = {
                            body: a,
                            type: e,
                            id: f
                        },
                        "M--speed" == e) {
                            var k = Math.atan2(d.b, d.a);
                            g.impulse = [0, 0],
                            g.strength = 7.5,
                            g.threshold = 7.5,
                            l.default.vec2.rotate(g.impulse, [0, 1], k),
                            g.impulse = l.default.vec2.scale([0, 0], g.impulse, g.strength)
                        } else
                            "M--out" == e && (1 == this.index && 1 == f || 3 == this.index && 1 == f) && (g.stopBall = !0);
                        g.isEntrance = 0 == this.index && 2 == g.id || 1 == this.index && 1 == g.id || 3 == this.index && 1 == g.id,
                        g.isRampEnd = 0 == this.index && 1 == parseInt(g.id) || [1, 2, 3].indexOf(this.index) > -1 && 2 == parseInt(g.id),
                        this.sensors.push(g)
                    }
                }
            }, {
                key: "update",
                value: function() {
                    for (var a = 0, b = this.doors.length; a < b; ++a)
                        this.doors[a].update()
                }
            }, {
                key: "reset",
                value: function() {
                    this.iteration = 0
                }
            }, {
                key: "collide",
                value: function(a, b, c) {
                    var d = this;
                    if ("M--speed" == b.type && "in" == c)
                        l.default.vec2.length(a.body.velocity) > b.threshold && a.body.applyImpulse(b.impulse);
                    else {
                        var e = void 0;
                        if ("M--in" == b.type ? this._hittingSensorIn = "in" == c : "out" == c && this.left.dispatch(b.id),
                        "M--in" == b.type && "in" == c) {
                            if (a.velocity.z > 0) {
                                var f = .8 * a.velocity.z
                                  , g = f < .9 ? f + .05 : 1;
                                v.default.play("balls.ramp", g)
                            }
                        } else
                            "M--out" == b.type && "out" == c && a.velocity.z < 0 && v.default.fadeOut("balls.ramp", .1);
                        if ("M--in" == b.type && "in" == c)
                            e = this.collisionGroup | this.simulation.collisionGroups.balls;
                        else if ("M--out" == b.type && "in" == c || "M--out" == b.type && "out" == c && !this._hittingSensorIn) {
                            var h = this.simulation.collisionGroups.default | this.simulation.collisionGroups.balls;
                            if (b.isRampEnd) {
                                if (a.shape.collisionMask != h && !this.tweenBall) {
                                    var i = app.game.heightmaps.getHeight(a.body.position, 0);
                                    this.tweenBall = new TweenLite(a.mesh.position,.2,{
                                        y: i.height + a.radius,
                                        ease: Power3.easeIn,
                                        delay: .3,
                                        onStart: function() {
                                            0 === d.index && app.stage.decorAnimation.float()
                                        },
                                        onComplete: function() {
                                            a.shape.collisionMask = h,
                                            d.tweenBall = null
                                        }
                                    }),
                                    v.default.play("balls.down", .5),
                                    v.default.fadeOut("balls.ramp", .2)
                                }
                            } else
                                e = h;
                            b.isEntrance && "out" == c && app.game.stage.cameraControls.set("ramp" + this.index)
                        }
                        b.stopBall && "in" == c && 0 != (a.shape.collisionMask & this.collisionGroup) && a.resetVelocity(.5),
                        e && (a.shape.collisionMask = e)
                    }
                }
            }, {
                key: "_addToCollisionGroup",
                value: function(a) {
                    for (var b = 0; b < a.shapes.length; b++) {
                        var c = a.shapes[b];
                        c.collisionGroup = this.collisionGroup,
                        c.collisionMask = this.simulation.collisionGroups.balls,
                        c.material = this.simulation.materials.ramp
                    }
                }
            }, {
                key: "_onRampTaken",
                value: function() {
                    2 === this.index && app.stage.decorAnimation.rotate(),
                    x.default.RAMP_COMPLETE.dispatch(this.index, this.iteration),
                    this.iteration++,
                    this.completed.dispatch(this.iteration),
                    this.iteration >= 3 && (this.iteration = 0)
                }
            }]),
            b
        }(p.default);
        c.default = y
    }
    , {
        "./AItem": 76,
        "./Door": 80,
        "./Sensor": 88,
        "game/GameEvent": 28,
        "game/audio/ThreeAudioManager": 32,
        three: 10,
        "vendors/p2/p2": 148,
        "vendors/signal/Signal": 149
    }],
    88: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = a("./AItem")
          , j = d(i)
          , k = a("vendors/p2/p2")
          , l = (d(k),
        a("vendors/signal/Signal"))
          , m = d(l)
          , n = a("game/GameEvent")
          , o = d(n)
          , p = a("game/audio/ThreeAudioManager")
          , q = d(p)
          , r = function(a) {
            function b(a, c) {
                e(this, b);
                var d = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a));
                return c.id.match(/M/g) ? d.id = parseInt(c.id.replace("M", "")) : c.id.match(/E/g) ? (d.id = c.id.replace("E", ""),
                d.isPoints = !0) : d.id = parseInt(c.id),
                d.body = c.body,
                d.body.shapes[0].sensor = !0,
                c.collisionGroup && (d.body.shapes[0].collisionGroup = c.collisionGroup),
                c.collisionMask && (d.body.shapes[0].collisionMask = c.collisionMask),
                d.collided = new m.default,
                d
            }
            return g(b, a),
            h(b, [{
                key: "collide",
                value: function(a, b) {
                    "in" == b && (this.collided.dispatch({
                        ball: a,
                        id: this.id,
                        sensor: this
                    }),
                    this.isPoints ? o.default.POINTS_HIT.dispatch(this.id) : o.default.SENSOR_HIT.dispatch(this.id),
                    9 == this.id && q.default.play("balls.rollover", .7, -.5),
                    10 == this.id && q.default.play("balls.rollover", .7, .5))
                }
            }]),
            b
        }(j.default);
        c.default = r
    }
    , {
        "./AItem": 76,
        "game/GameEvent": 28,
        "game/audio/ThreeAudioManager": 32,
        "vendors/p2/p2": 148,
        "vendors/signal/Signal": 149
    }],
    89: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("vendors/signal/Signal")
          , h = d(g)
          , i = a("utils/MathUtils")
          , j = d(i)
          , k = a("game/GameEvent")
          , l = d(k)
          , m = a("game/GameInputProxy")
          , n = d(m)
          , o = a("game/audio/ThreeAudioManager")
          , p = d(o)
          , q = function() {
            function a(b, c, d) {
                var f = this;
                e(this, a),
                this.completed = new h.default,
                this.collided = new h.default,
                this._onSensorCollided = this._onSensorCollided.bind(this),
                this._onDown = this._onDown.bind(this),
                this.sensors = c,
                this.sensors.forEach(function(a) {
                    a.collided.add(f._onSensorCollided)
                }),
                this.game = b,
                this.shift = d,
                d && n.default.onDown.add(this._onDown)
            }
            return f(a, [{
                key: "destroy",
                value: function() {
                    var a = this;
                    this.sensors.forEach(function(b) {
                        b.active = !1,
                        b.collided.remove(a._onSensorCollided)
                    })
                }
            }, {
                key: "reset",
                value: function() {
                    this.sensors.forEach(function(a) {
                        a.active = !1
                    })
                }
            }, {
                key: "_onDown",
                value: function(a) {
                    n.default.isDown("left") ? this._shift(-1) : n.default.isDown("right") && this._shift(1)
                }
            }, {
                key: "_shift",
                value: function(a) {
                    var b = this
                      , c = [];
                    this.sensors.forEach(function(d, e) {
                        c[e] = b.sensors[j.default.mod(e - a, b.sensors.length)].active
                    }),
                    this.sensors.forEach(function(a, b) {
                        a.active = c[b]
                    }),
                    l.default.SLOTS_SHIFT.dispatch(this.sensors)
                }
            }, {
                key: "_onSensorCollided",
                value: function(a) {
                    var b = this;
                    this.collided.dispatch(a),
                    a.sensor.active = !0;
                    var c = !0;
                    if (this.sensors.forEach(function(a) {
                        a.active || (c = !1)
                    }),
                    this.shift) {
                        l.default.SLOTS_LIT.dispatch(this.sensors);
                        var d = .3 * Math.random() + .4
                          , e = Math.random() - .5;
                        p.default.play("balls.rollover", d, e)
                    }
                    c && (this.shift ? this.reset() : this.sensors.forEach(function(a) {
                        a.collided.remove(b._onSensorCollided)
                    }),
                    this.completed.dispatch(),
                    p.default.play("target.success"))
                }
            }]),
            a
        }();
        c.default = q
    }
    , {
        "game/GameEvent": 28,
        "game/GameInputProxy": 29,
        "game/audio/ThreeAudioManager": 32,
        "utils/MathUtils": 138,
        "vendors/signal/Signal": 149
    }],
    90: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = a("./AItem")
          , j = d(i)
          , k = a("vendors/p2/p2")
          , l = d(k)
          , m = a("vendors/signal/Signal")
          , n = d(m)
          , o = a("three")
          , p = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(o)
          , q = a("utils/FunctionUtils")
          , r = d(q)
          , s = a("game/audio/ThreeAudioManager")
          , t = d(s)
          , u = function(a) {
            function b(a, c) {
                e(this, b);
                var d = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a));
                c = c || {},
                d.parameters = c,
                d.bodies = [c.body],
                d.side = c.side,
                d.angle = 20,
                d.strength = 6,
                d.direction = "L" == d.side ? 1 : -1,
                d.isCollided = !1;
                var g = "_SlingshotElastique";
                g += d.direction > 0 ? "Left" : "Right",
                d.mesh = app.game.dictionary[g].mesh,
                d.impulse = [Math.cos(19.5 + .5 * Math.PI * -d.direction), Math.sin(19.5 + .5 * Math.PI)],
                d.impulse = l.default.vec2.scale([0, 0], d.impulse, d.strength);
                var h = new l.default.Box({
                    width: .125,
                    height: .5,
                    collisionMask: d.simulation.collisionGroups.balls
                });
                h.material = d.simulation.materials.slingshot;
                var i = new l.default.Body({
                    position: d.bodies[0].position
                });
                i.addShape(h, [.05 * d.direction, .02], p.Math.degToRad(d.angle) * d.direction),
                d.mesh.scale.x = .2,
                d.mesh.rotation.z += r.default.toRadians(15 * d.direction),
                d.bodies.push(i),
                d.simulation.add(i),
                d.collide = d.collide.bind(d);
                for (var j = 0; j < 2; j++)
                    t.default.setPanner("slingshots." + j, d.mesh);
                return d
            }
            return g(b, a),
            h(b, [{
                key: "_initSignals",
                value: function() {
                    this.collided = new n.default
                }
            }, {
                key: "collide",
                value: function(a) {
                    var b = .5;
                    "L" === this.side ? (b = -b,
                    app.stage.decorAnimation.bump(0)) : app.stage.decorAnimation.bump(1),
                    a.body.velocity = [0, 0],
                    a.body.applyImpulse(this.impulse),
                    this.isCollided = !0,
                    this.collided.dispatch(this.parameters);
                    var c = Math.floor(2 * Math.random());
                    t.default.play("slingshots." + c, 1, b)
                }
            }]),
            b
        }(j.default);
        c.default = u
    }
    , {
        "./AItem": 76,
        "game/audio/ThreeAudioManager": 32,
        three: 10,
        "utils/FunctionUtils": 137,
        "vendors/p2/p2": 148,
        "vendors/signal/Signal": 149
    }],
    91: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = a("./AItem")
          , j = d(i)
          , k = a("vendors/p2/p2")
          , l = (d(k),
        a("vendors/signal/Signal"))
          , m = d(l)
          , n = a("game/GameEvent")
          , o = d(n)
          , p = a("game/audio/ThreeAudioManager")
          , q = d(p)
          , r = function(a) {
            function b(a, c) {
                e(this, b);
                var d = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, c));
                return d.originalId = c.originalId,
                d.body = c.body,
                d.mesh = c.mesh,
                d.shape = d.body.shapes[0],
                d.shape.material = d.simulation.materials.target,
                d.enabled = !1,
                d.timeline = new TimelineMax({
                    paused: !0
                }),
                d.timeline.to(d.mesh.position, .15, {
                    z: c.originalId && c.originalId.match(/G1/g) ? -3 : -1.5,
                    ease: Expo.easeOut
                }),
                d
            }
            return g(b, a),
            h(b, [{
                key: "_initSignals",
                value: function() {
                    this.activated = new m.default,
                    this.collided = new m.default
                }
            }, {
                key: "collide",
                value: function(a, b, c) {
                    if ("T" === b.parameters.type && (app.stage.decorAnimation.squeeze(this.id),
                    o.default.TARGET_HIT.dispatch(null, "T" + b.id),
                    "in" == c)) {
                        var d = .2 * Math.random() + .8
                          , e = .5 * Math.random() - .1;
                        q.default.play("target.normal", d, e)
                    }
                    "in" == c && (this.collided.dispatch(this),
                    !this._active && this.enabled && (this.active = !0,
                    this.activated.dispatch(this)))
                }
            }, {
                key: "active",
                get: function() {
                    return this._active || !1
                },
                set: function(a) {
                    this._active = a,
                    this.timeline[a ? "play" : "reverse"]()
                }
            }]),
            b
        }(j.default);
        c.default = r
    }
    , {
        "./AItem": 76,
        "game/GameEvent": 28,
        "game/audio/ThreeAudioManager": 32,
        "vendors/p2/p2": 148,
        "vendors/signal/Signal": 149
    }],
    92: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = a("./AItem")
          , j = d(i)
          , k = a("vendors/p2/p2")
          , l = (d(k),
        a("vendors/signal/Signal"))
          , m = d(l)
          , n = a("game/GameEvent")
          , o = d(n)
          , p = a("game/audio/ThreeAudioManager")
          , q = d(p)
          , r = function(a) {
            function b(a, c, d) {
                e(this, b);
                var g = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, c));
                return g._initSignals(),
                g.id = parseInt(c.id[1], 10),
                g.targets = [],
                c.targets && c.targets.forEach(function(a) {
                    g.add(a)
                }),
                g.idGroup = d,
                g._enabled = !1,
                g.iteration = 0,
                1 === g.id ? g.maxIterations = 3 : 2 === g.id || 3 === g.id || 4 === g.id ? g.maxIterations = 1 : g.maxIterations = 3,
                g._onTargetCollided = g._onTargetCollided.bind(g),
                g._onTargetActivated = g._onTargetActivated.bind(g),
                g
            }
            return g(b, a),
            h(b, [{
                key: "_initSignals",
                value: function() {
                    this.targetActivated = new m.default,
                    this.targetCollided = new m.default,
                    this.completed = new m.default
                }
            }, {
                key: "add",
                value: function(a) {
                    a.collided.add(this._onTargetCollided),
                    a.activated.add(this._onTargetActivated),
                    this.targets.push(a)
                }
            }, {
                key: "reset",
                value: function() {
                    var a = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
                    this.targets.forEach(function(a) {
                        a.active = !1,
                        a.alpha = 0
                    }),
                    this.enabled = !a
                }
            }, {
                key: "resetIteration",
                value: function() {
                    this.iteration = 0
                }
            }, {
                key: "_onTargetCollided",
                value: function(a) {
                    if (0 === this.idGroup) {
                        app.stage.decorAnimation.launch(a.id);
                        var b = .5 * Math.random() - .15;
                        q.default.play("target.sapin", .6, b)
                    }
                    switch (this.game.stats.addHit(),
                    this.idGroup) {
                    case 1:
                        var c = -.4 * a.id + .6;
                        if (a.active)
                            q.default.play("target.off", .8, c);
                        else {
                            for (this.hitSound = Math.round(3 * Math.random()); this.lastHitSound == this.hitSound; )
                                this.hitSound = Math.round(3 * Math.random());
                            this.lastHitSound = this.hitSound,
                            q.default.play("jackpot.target.hit." + this.hitSound, 1, c)
                        }
                        break;
                    default:
                        var d = .2 * Math.random() + .8;
                        c = Math.random() - .5,
                        a.active ? q.default.play("target.off", .8 * d, c) : q.default.play("target.lock", d, c)
                    }
                    this.targetCollided.dispatch(a)
                }
            }, {
                key: "_onTargetActivated",
                value: function(a) {
                    var b = this;
                    this.targetActivated.dispatch(a),
                    o.default.TARGET_HIT.dispatch(this.idGroup, a.id);
                    var c = !0;
                    if (this.targets.forEach(function(a) {
                        a.active || (c = !1)
                    }),
                    c) {
                        if (this.iteration++,
                        this.completed.dispatch(this),
                        0 == this.idGroup || 5 == this.idGroup) {
                            (new TimelineLite).add(function() {
                                b.iteration >= b.maxIterations && (b.iteration = 0),
                                b.reset(!1)
                            }, 1),
                            q.default.play("target.success")
                        } else if (1 == this.idGroup && this.iteration <= this.maxIterations && (q.default.play("jackpot.target.success"),
                        this.iteration < this.maxIterations)) {
                            var d = new TimelineLite;
                            d.add(function() {
                                b.reset(!1)
                            }, 1)
                        }
                        o.default.TARGET_COMPLETE.dispatch(this.idGroup, this.iteration)
                    }
                }
            }, {
                key: "onLost",
                value: function() {
                    this.iteration = 0,
                    this.targets.forEach(function(a) {
                        a.active = !1,
                        a.alpha = 0
                    }),
                    this.enabled = !0
                }
            }, {
                key: "enabled",
                set: function(a) {
                    this._enabled = a,
                    this.targets.forEach(function(b) {
                        b.enabled = a
                    })
                },
                get: function() {
                    return this._enabled
                }
            }]),
            b
        }(j.default);
        c.default = r
    }
    , {
        "./AItem": 76,
        "game/GameEvent": 28,
        "game/audio/ThreeAudioManager": 32,
        "vendors/p2/p2": 148,
        "vendors/signal/Signal": 149
    }],
    93: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("three")
          , h = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(g)
          , i = a("vendors/three/OrbitControls")
          , j = (d(i),
        a("game/GameModel"))
          , k = (d(j),
        a("./utils/CameraControls"))
          , l = d(k)
          , m = a("./utils/PostProcessing")
          , n = d(m)
          , o = a("utils/Device")
          , p = d(o)
          , q = a("utils/Viewport")
          , r = d(q)
          , s = a("game/stage/utils/TextureManager")
          , t = d(s)
          , u = a("utils/Cache")
          , v = d(u)
          , w = a("game/stage/items/Skydome")
          , x = d(w)
          , y = a("game/stage/items/Ground")
          , z = d(y)
          , A = a("game/stage/items/VolumetricSpotLight")
          , B = d(A)
          , C = a("game/physics/items/DecorAnimation")
          , D = d(C)
          , E = a("game/glsl/default_vert.glsl")
          , F = d(E)
          , G = a("game/glsl/default_frag.glsl")
          , H = d(G)
          , I = a("game/glsl/ball_vert.glsl")
          , J = d(I)
          , K = a("game/glsl/ball_frag.glsl")
          , L = d(K)
          , M = function() {
            function a(b, c, d) {
                e(this, a),
                app.stage = this,
                this.dictionary = c,
                this.materials = {
                    needMasking: []
                },
                this.layers = {
                    default: 0,
                    occlusion: 1
                };
                var f = !p.default.phone && "browser-safari" === p.default.browserStr;
                this.renderer = new h.WebGLRenderer({
                    antialias: app.game.config.antialias,
                    alpha: f
                }),
                this.renderer.setClearColor(0, 1),
                this.renderer.shadowMap.enabled = !0,
                this.domElement = this.renderer.domElement,
                document.body.appendChild(this.domElement),
                this.center = new h.Vector3,
                this.scene = new h.Scene,
                this.scene.position.x = .00825;
                for (var g = 0; g < d.scenes[0].children.length; g++)
                    this.scene.add(d.scenes[0].children[g]);
                d = null,
                this.camera = new h.PerspectiveCamera(45,null,.001,10),
                this.camera.position.set(0, .25, .7);
                var i = new h.Object3D;
                i.position.x = -this.scene.position.x,
                i.add(this.camera),
                this.scene.add(i),
                this.materials.default = new h.ShaderMaterial({
                    uniforms: Object.assign({}, h.UniformsLib.lights, {
                        tDiffuse: {
                            value: null
                        },
                        tNormal: {
                            value: null
                        },
                        tMatCap: {
                            value: null
                        },
                        tMask: {
                            value: null
                        },
                        elapsedTime: {
                            value: null
                        },
                        normalScale: {
                            value: new h.Vector2(1,1)
                        },
                        useNormal: {
                            value: 0
                        },
                        visible: {
                            value: 1
                        },
                        useRim: {
                            value: 0
                        },
                        useDiffuse2: {
                            value: 0
                        },
                        rimPower: {
                            value: 1
                        },
                        flipY: {
                            value: !t.default.useCompressedTexture
                        },
                        shadowDarkness: {
                            value: .2
                        },
                        shadowColor: {
                            value: new h.Color(3753097)
                        },
                        useAlpha: {
                            value: f
                        }
                    }),
                    vertexShader: F.default,
                    fragmentShader: H.default,
                    shading: h.SmoothShading,
                    lights: !0
                }),
                this.materials.ball = new h.ShaderMaterial({
                    uniforms: {
                        tDiffuse: {
                            value: null
                        },
                        tDiffuse2: {
                            value: null
                        },
                        tNormal: {
                            value: null
                        },
                        tMatCap: {
                            value: null
                        },
                        tMask: {
                            value: null
                        },
                        elapsedTime: {
                            value: null
                        },
                        normalScale: {
                            value: new h.Vector2(1,1)
                        },
                        useNormal: {
                            value: 0
                        },
                        visible: {
                            value: 1
                        },
                        useRim: {
                            value: 0
                        },
                        useDiffuse2: {
                            value: 0
                        },
                        rimPower: {
                            value: 1
                        },
                        flipY: {
                            value: !t.default.useCompressedTexture
                        },
                        useAlpha: {
                            value: f
                        }
                    },
                    vertexShader: J.default,
                    fragmentShader: L.default,
                    shading: h.SmoothShading
                }),
                this.materials.ball.uniforms.tMatCap.value = t.default.get("matcaps.2"),
                this.materials.ball.uniforms.tDiffuse2.value = t.default.get("diffuses.6"),
                this.materials.ball.uniforms.useDiffuse2.value = 1,
                this.materials.needMasking.push(this.materials.ball),
                this.traverse(this.scene),
                this.getBoundingBox(),
                this.postProcessing = new n.default(this),
                this.cameraControls = new l.default(this,"traveling"),
                this.skydome = new x.default,
                this.ground = new z.default,
                this.decorAnimation = new D.default,
                this.volumetricspotlight = new B.default
            }
            return f(a, [{
                key: "getBoundingBox",
                value: function() {
                    this.gabarit = this.dictionary.BB.mesh,
                    this.gabarit.visible = !1,
                    this.gabarit.geometry.computeBoundingBox(),
                    this.boundingBox = this.gabarit.geometry.boundingBox,
                    this.width = this.boundingBox.max.x - this.boundingBox.min.x,
                    this.depth = this.boundingBox.max.y - this.boundingBox.min.y
                }
            }, {
                key: "traverse",
                value: function(a) {
                    for (var b = 0; b < a.children.length; b++) {
                        var c = a.children[b]
                          , d = a.name;
                        c.children.length && this.traverse(c),
                        c instanceof h.Mesh && (c.castShadow = !1,
                        c.receiveShadow = !0,
                        this.dictionary[d] = {
                            mesh: c
                        },
                        c.material = this.materials.default)
                    }
                }
            }, {
                key: "set",
                value: function() {
                    for (var a = void 0, b = p.default.mobile ? 1 : 4, c = 0; c < b; c++) {
                        var d = "D" + c;
                        p.default.mobile && (d += "M"),
                        a = app.game.get(d).mesh,
                        a.material = this.materials.default.clone(),
                        a.material.uniforms.tDiffuse.value = t.default.get("diffuses." + c),
                        c || (a.material.uniforms.tMask.value = t.default.get("mask.0")),
                        this.materials.needMasking.push(a.material)
                    }
                    a = app.game.get("A0").mesh,
                    a.material = this.materials.default.clone(),
                    a.material.uniforms.tDiffuse.value = t.default.get("diffuses.4"),
                    a.material.uniforms.tMatCap.value = t.default.get("matcaps.3"),
                    a.material.uniforms.rimPower.value = 1.5,
                    a.material.uniforms.useRim.value = .2,
                    this.materials.needMasking.push(a.material),
                    a = app.game.get("A1").mesh,
                    a.material = this.materials.default.clone(),
                    a.material.uniforms.tMatCap.value = t.default.get("matcaps.0"),
                    a.material.uniforms.rimPower.value = 1.5,
                    a.material.uniforms.useRim.value = .1,
                    this.materials.needMasking.push(a.material),
                    a = app.game.get("A2").mesh,
                    a.material = this.materials.default.clone(),
                    a.material.uniforms.tMatCap.value = t.default.get("matcaps.1"),
                    a.material.uniforms.rimPower.value = 1.5,
                    a.material.uniforms.useRim.value = .1,
                    this.materials.needMasking.push(a.material),
                    a = app.game.get("A3").mesh,
                    a.material = this.materials.default.clone(),
                    a.material.uniforms.tMatCap.value = t.default.get("matcaps.1"),
                    a.material.uniforms.rimPower.value = 1.5,
                    a.material.uniforms.useRim.value = .1,
                    this.materials.needMasking.push(a.material),
                    a = app.game.get("_Barriere").mesh,
                    a.material = this.materials.default.clone(),
                    a.material.uniforms.tDiffuse.value = t.default.get("diffuses.5"),
                    a.material.transparent = !0,
                    a.material.side = h.DoubleSide,
                    a.material.uniforms.useAlpha.value = 0,
                    this.materials.needMasking.push(a.material);
                    var e = this.materials.default.clone();
                    e.uniforms.tDiffuse.value = t.default.get("diffuses.4"),
                    this.materials.needMasking.push(e);
                    for (var f in app.game.dictionary)
                        if (app.game.dictionary.hasOwnProperty(f)) {
                            var g = app.game.dictionary[f];
                            g.mesh && g.mesh.material === this.materials.default && (g.mesh.material = e)
                        }
                    for (var i in v.default.items)
                        v.default.items.hasOwnProperty(i) && i.match(/textures|diffuses|geometries/g) && v.default.empty(i);
                    a = null,
                    e = null,
                    v.default.empty("board.packFile"),
                    v.default.empty("default.packFile")
                }
            }, {
                key: "update",
                value: function() {
                    if (!this.cameraControls.mode.match(/animate|traveling/g)) {
                        for (var a = void 0, b = 0, c = 0; c < app.game.balls.length; c++)
                            (app.game.balls[c].enabled || app.game.balls[c].locked) && (a = app.game.balls[c],
                            b++);
                        if (!this.cameraControls.disable && b) {
                            this.cameraControls.mode = b > 1 ? "multiball" : "follow";
                            var d = app.game.simulation;
                            this.cameraControls.target = a.mesh.position.clone(),
                            this.cameraControls.clamp = a.shape.collisionMask == (d.collisionGroups.default | d.collisionGroups.balls)
                        }
                    }
                    for (var e; e < this.materials.needMasking.length; e++) {
                        var f = this.materials.needMasking[e];
                        f.uniforms.shadowDarkness && (f.uniforms.shadowDarkness.value = app.game.config.shadowMap ? .2 : 0)
                    }
                    this.renderer.shadowMap.enabled = app.game.config.shadowMap,
                    this.cameraControls.update(),
                    this.skydome.update(),
                    this.ground.update(),
                    this.volumetricspotlight.update(),
                    app.game.config.postProcessing ? this.postProcessing.update() : this.renderer.render(this.scene, this.camera)
                }
            }, {
                key: "resize",
                value: function() {
                    app.game.config.postProcessing && this.postProcessing.resize(),
                    this.ground.resize();
                    var a = r.default.width
                      , b = r.default.height;
                    p.default.mobile && "ios" === p.default.os && (b = r.default.orientation ? screen.width : screen.height),
                    this.renderer.setSize(a, b),
                    this.camera.aspect = a / b,
                    this.camera.updateProjectionMatrix()
                }
            }]),
            a
        }();
        c.default = M
    }
    , {
        "./utils/CameraControls": 112,
        "./utils/PostProcessing": 115,
        "game/GameModel": 30,
        "game/glsl/ball_frag.glsl": 45,
        "game/glsl/ball_vert.glsl": 46,
        "game/glsl/default_frag.glsl": 47,
        "game/glsl/default_vert.glsl": 48,
        "game/physics/items/DecorAnimation": 79,
        "game/stage/items/Ground": 97,
        "game/stage/items/Skydome": 99,
        "game/stage/items/VolumetricSpotLight": 100,
        "game/stage/utils/TextureManager": 117,
        three: 10,
        "utils/Cache": 133,
        "utils/Device": 135,
        "utils/Viewport": 144,
        "vendors/three/OrbitControls": 152
    }],
    94: [function(a, b, c) {
        "use strict";
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("three")
          , e = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(d);
        c.default = [{
            target: new e.Vector3(.225,.05,-.35),
            radius: .38,
            rotation: {
                start: 2,
                end: 1.75
            },
            height: {
                start: -.02,
                end: .1
            }
        }, {
            target: new e.Vector3(-.225,.035,-.615),
            radius: .535,
            rotation: {
                start: 1.25,
                end: 1
            },
            height: {
                start: .275,
                end: .245
            }
        }, {
            target: new e.Vector3(-.072,.008,-.29),
            radius: .68,
            rotation: {
                start: .3,
                end: .65
            },
            height: {
                start: .1,
                end: .24
            }
        }, {
            target: new e.Vector3(-.15,.05,.18),
            radius: -.3,
            rotation: {
                start: -.75,
                end: -.5
            },
            height: {
                start: .24,
                end: .1
            }
        }]
    }
    , {
        three: 10
    }],
    95: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("three")
          , h = (function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            b.default = a
        }(g),
        a("utils/webGL/ProjectionUtils"))
          , i = (d(h),
        a("game/stage/items/DotMatrixTexture"))
          , j = d(i)
          , k = a("game/GameModel")
          , l = d(k)
          , m = a("game/dotmatrix/GamePriorities")
          , n = d(m)
          , o = a("utils/Device")
          , p = d(o)
          , q = function() {
            function a() {
                var b = this;
                e(this, a),
                this.ratio = 1,
                p.default.phone && (this.ratio = l.default.dotMatrixDisplay.mobileRatio),
                this.width = l.default.dotMatrixDisplay.width,
                this.height = l.default.dotMatrixDisplay.height,
                this._currentPriority = 0,
                this._score = 0,
                this._credits = 0,
                this.dotMatrixTexture = new j.default(this.width,this.height),
                setTimeout(function() {
                    b.drawScore()
                }, 500),
                this.canvas = this.dotMatrixTexture.canvas,
                document.body.appendChild(this.canvas),
                this.resize()
            }
            return f(a, [{
                key: "_formatDigits",
                value: function(a) {
                    a = parseInt(a, 10);
                    var b = a + "";
                    return a < 10 ? "0" + a : b.replace(/\B(?=(\d{3})+(?!\d))/g, ".")
                }
            }, {
                key: "init",
                value: function() {
                    this.dotMatrixTexture.init()
                }
            }, {
                key: "drawScore",
                value: function() {
                    var a = n.default.SCORE;
                    if (this.canDraw(a)) {
                        this.setPriority(a);
                        var b = this._formatDigits(this._score)
                          , c = this._formatDigits(this._credits)
                          , d = this._formatDigits(3 - this._credits + 1);
                        this.dotMatrixTexture.drawScore({
                            score: b,
                            ball: d,
                            credits: c
                        })
                    }
                }
            }, {
                key: "reset",
                value: function() {
                    this.drawScore()
                }
            }, {
                key: "resize",
                value: function() {
                    var a = this.width * this.ratio;
                    this.canvas.style.width = a + "px",
                    this.canvas.style.height = this.height * this.ratio + "px",
                    this.canvas.style.left = (window.innerWidth - a >> 1) + "px"
                }
            }, {
                key: "canDraw",
                value: function(a) {
                    return a >= this._currentPriority
                }
            }, {
                key: "setPriority",
                value: function(a) {
                    this._currentPriority = a
                }
            }, {
                key: "show",
                value: function() {
                    this.dotMatrixTexture.show()
                }
            }, {
                key: "hide",
                value: function() {
                    this.dotMatrixTexture.hide()
                }
            }, {
                key: "score",
                set: function(a) {
                    this._score = a,
                    this.drawScore()
                }
            }, {
                key: "credits",
                set: function(a) {
                    this._credits = a,
                    this.drawScore()
                }
            }]),
            a
        }();
        c.default = q
    }
    , {
        "game/GameModel": 30,
        "game/dotmatrix/GamePriorities": 35,
        "game/stage/items/DotMatrixTexture": 96,
        three: 10,
        "utils/Device": 135,
        "utils/webGL/ProjectionUtils": 145
    }],
    96: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("vendors/signal/Signal")
          , h = (d(g),
        a("game/dotmatrix/BonusMC"))
          , i = d(h)
          , j = a("game/dotmatrix/GameoverMC")
          , k = d(j)
          , l = a("game/dotmatrix/IntroMC")
          , m = d(l)
          , n = a("game/dotmatrix/JackpotMC")
          , o = d(n)
          , p = a("game/dotmatrix/LostMC")
          , q = d(p)
          , r = a("game/dotmatrix/MissionMC")
          , s = d(r)
          , t = a("game/dotmatrix/MultiBallMC")
          , u = d(t)
          , v = a("game/dotmatrix/SaverMC")
          , w = d(v)
          , x = a("game/dotmatrix/WizardMC")
          , y = d(x)
          , z = a("game/GameModel")
          , A = d(z)
          , B = a("utils/Device")
          , C = d(B)
          , D = a("utils/Cache")
          , E = d(D)
          , F = function() {
            function a(b, c) {
                e(this, a),
                this.canvas = document.createElement("canvas"),
                this.context = this.canvas.getContext("2d"),
                this.width = this.canvas.width = b,
                this.height = this.canvas.height = c,
                this.infosAlpha = A.default.dotMatrixDisplay.globalAlpha
            }
            return f(a, [{
                key: "init",
                value: function() {
                    var a = this;
                    "android" === C.default.os || "linux" === C.default.os ? this.grid = app.manifestLoader.getFile("board-android", "assets.2d.board.grid") : this.grid = app.manifestLoader.getFile("board", "assets.2d.board.grid"),
                    this._registerMCs(),
                    this.canvas.classList.add("game__panel"),
                    this.canvas.classList.add("game__panel--hide"),
                    setTimeout(function() {
                        a.canvas.classList.add("game__panel--animated")
                    }),
                    this._dealloc()
                }
            }, {
                key: "_dealloc",
                value: function() {
                    E.default.empty("board.assets.2d.board.grid")
                }
            }, {
                key: "show",
                value: function() {
                    this.canvas.classList.remove("game__panel--hide"),
                    this.bind()
                }
            }, {
                key: "hide",
                value: function() {
                    this.canvas.classList.add("game__panel--hide"),
                    this.unbind()
                }
            }, {
                key: "_registerMCs",
                value: function() {
                    this._mcs = [new i.default, new k.default, new m.default, new o.default(this.width), new q.default, new s.default, new u.default, new w.default, new y.default]
                }
            }, {
                key: "bind",
                value: function() {
                    for (var a = this._mcs.length - 1; a >= 0; a--) {
                        this._mcs[a].bind()
                    }
                }
            }, {
                key: "unbind",
                value: function() {
                    for (var a = this._mcs.length - 1; a >= 0; a--) {
                        var b = this._mcs[a];
                        b.stop(),
                        b.unbind()
                    }
                }
            }, {
                key: "drawScore",
                value: function(a) {
                    var b = a.score
                      , c = a.ball
                      , d = a.credits;
                    this.context.save(),
                    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height),
                    this.context.fillStyle = "#000000",
                    this.context.fillRect(0, 0, this.width, this.height),
                    this.context.font = "bold 44px Gotham",
                    this.context.textAlign = "center",
                    this.context.fillStyle = "#FFFFFF",
                    this.context.fillText(b, this.canvas.width >> 1, 44),
                    this.context.globalAlpha = this.infosAlpha,
                    this.context.font = "bold 15px Gotham",
                    this.context.textAlign = "left",
                    this.context.fillText("BALL " + c, 5, this.canvas.height - 5),
                    this.context.font = "bold 15px Gotham",
                    this.context.textAlign = "right",
                    this.context.fillText("CREDITS " + d, this.canvas.width - 5, this.canvas.height - 5),
                    this.context.globalCompositeOperation = "destination-in",
                    this.context.drawImage(this.grid, 0, 0),
                    this.context.restore()
                }
            }]),
            a
        }();
        c.default = F
    }
    , {
        "game/GameModel": 30,
        "game/dotmatrix/BonusMC": 34,
        "game/dotmatrix/GameoverMC": 36,
        "game/dotmatrix/IntroMC": 37,
        "game/dotmatrix/JackpotMC": 38,
        "game/dotmatrix/LostMC": 39,
        "game/dotmatrix/MissionMC": 40,
        "game/dotmatrix/MultiBallMC": 41,
        "game/dotmatrix/SaverMC": 42,
        "game/dotmatrix/WizardMC": 43,
        "utils/Cache": 133,
        "utils/Device": 135,
        "vendors/signal/Signal": 149
    }],
    97: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("three")
          , h = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(g)
          , i = a("game/stage/utils/Reflection")
          , j = d(i)
          , k = a("game/stage/items/GroundAnimations")
          , l = d(k)
          , m = a("game/stage/utils/TextureManager")
          , n = d(m)
          , o = a("utils/FunctionUtils")
          , p = d(o)
          , q = a("game/glsl/ground_vert.glsl")
          , r = d(q)
          , s = a("game/glsl/ground_frag.glsl")
          , t = d(s)
          , u = a("game/glsl/lights_vert.glsl")
          , v = d(u)
          , w = a("game/glsl/lights_frag.glsl")
          , x = d(w)
          , y = function() {
            function a() {
                e(this, a),
                this.update = this.update.bind(this),
                this.materials = {},
                this.width = 2048,
                this.height = 2048,
                this.defaultTexture = n.default.get("ground.ground_bg"),
                this.defaultTexture.magFilter = this.defaultTexture.minFilter = h.LinearFilter,
                this.onTexture = n.default.get("ground.ground_on"),
                this.onTexture.magFilter = this.onTexture.minFilter = h.LinearFilter,
                this.offTexture = n.default.get("ground.ground_off"),
                this.offTexture.magFilter = this.offTexture.minFilter = h.LinearFilter;
                var b = app.game.assets.ground
                  , c = new DOMParser;
                this.mask = c.parseFromString(b, "image/svg+xml").documentElement,
                this.mask.childNodesSanitize = p.default.removeTextNodes(this.mask),
                this.items = [],
                this.dictionary = {},
                this.geometries = [],
                this.geometry = new h.BufferGeometry,
                this.size = 16,
                this.count = this.size * this.size,
                this.data = new Uint8Array(4 * this.count),
                this.dataTexture = new h.DataTexture(this.data,this.size,this.size,h.RGBAFormat),
                this.dataTexture.wrapS = h.RepeatWrapping,
                this.dataTexture.wrapT = h.RepeatWrapping,
                this.dataTexture.needsUpdate = !0,
                this.createMaterials(),
                this.meshes = [],
                this.meshesBbox = [];
                for (var d = 0; d < 5; d++) {
                    var f = "E" + d
                      , g = app.game.dictionary[f].mesh;
                    g.material = this.materials.mesh,
                    g.geometry.computeBoundingBox(),
                    this.meshes[f] = g;
                    var i = g.geometry.boundingBox
                      , k = .01 * (i.max.x - i.min.x)
                      , l = .01 * (i.max.y - i.min.y)
                      , m = {
                        min: g.localToWorld(g.geometry.boundingBox.min.multiplyScalar(.01)),
                        max: g.localToWorld(g.geometry.boundingBox.max.multiplyScalar(.01)),
                        width: k,
                        height: l
                    };
                    m.min.x += g.parent.position.x,
                    m.max.x += g.parent.position.x,
                    m.min.y += g.parent.position.y,
                    m.max.y += g.parent.position.y,
                    m.center = {
                        x: m.max.x - k / 2,
                        y: m.max.y - l / 2
                    },
                    this.meshesBbox[f] = m
                }
                this.traverseSVG(this.mask),
                this.merge(),
                this.lights = new h.Mesh(this.geometry,this.materials.lights),
                this.lights.receiveShadow = !0,
                app.stage.scene.add(this.lights),
                this.reflection = new j.default(app.stage.renderer,app.stage.camera),
                this.reflection.material = this.materials.mesh,
                app.stage.scene.add(this.reflection),
                this.then = performance.now(),
                this.interval = 1e3 / 30,
                this.bind()
            }
            return f(a, [{
                key: "bind",
                value: function() {
                    this.onItemsFactoryReady = this.onItemsFactoryReady.bind(this)
                }
            }, {
                key: "createMaterials",
                value: function() {
                    var a = n.default.get("matcaps.1");
                    this.materials.lights = new h.ShaderMaterial({
                        uniforms: Object.assign({}, h.UniformsLib.lights, {
                            tOn: {
                                value: this.onTexture
                            },
                            tOff: {
                                value: this.offTexture
                            },
                            tStates: {
                                value: this.dataTexture
                            },
                            tMatCap: {
                                value: a
                            },
                            tReflectionMap: {
                                value: null
                            },
                            reflectionMapMatrix: {
                                value: new h.Matrix4
                            },
                            resolution: {
                                value: new h.Vector2(this.size,this.size)
                            },
                            itemsNb: {
                                value: 0
                            },
                            visible: {
                                value: 1
                            },
                            flipY: {
                                value: !n.default.useCompressedTexture
                            }
                        }),
                        vertexShader: v.default,
                        fragmentShader: x.default,
                        transparent: !0,
                        lights: !0
                    }),
                    this.materials.mesh = new h.ShaderMaterial({
                        uniforms: Object.assign({}, h.UniformsLib.lights, {
                            tDiffuse: {
                                value: this.defaultTexture
                            },
                            tMask: {
                                value: this.texture
                            },
                            tMatCap: {
                                value: a
                            },
                            tReflectionMap: {
                                value: null
                            },
                            reflectionMapMatrix: {
                                value: new h.Matrix4
                            },
                            reflectivity: {
                                value: .75
                            },
                            visible: {
                                value: 1
                            },
                            flipY: {
                                value: !n.default.useCompressedTexture
                            },
                            shadowDarkness: {
                                value: .2
                            },
                            shadowColor: {
                                value: new h.Color(3753097)
                            }
                        }),
                        vertexShader: r.default,
                        fragmentShader: t.default,
                        lights: !0
                    }),
                    app.stage.materials.needMasking.push(this.materials.lights),
                    app.stage.materials.needMasking.push(this.materials.mesh)
                }
            }, {
                key: "debugFBO",
                value: function() {
                    var a = new h.Mesh(new h.PlaneBufferGeometry(.1,.1),new h.MeshBasicMaterial({
                        map: this.dataTexture,
                        color: 16777215
                    }));
                    a.position.set(0, .05, 0),
                    a.rotation.x = .5 * -Math.PI,
                    app.stage.scene.add(a)
                }
            }, {
                key: "threeBBOXHelper",
                value: function() {
                    var a = void 0;
                    a = new h.Mesh(new h.PlaneGeometry(width,height),new h.MeshBasicMaterial({
                        color: 16711680,
                        opacity: .5,
                        transparent: !0,
                        wireframe: !1
                    })),
                    a.position.x = bbox.min.x + width / 2,
                    a.position.y = bbox.max.z + .2,
                    a.position.z = -bbox.max.y + height / 2,
                    a.rotation.x = .5 * -Math.PI,
                    app.stage.scene.add(a)
                }
            }, {
                key: "traverseSVG",
                value: function(a) {
                    this.uvs = [];
                    for (var b = a.querySelectorAll("#E0, #E1"), c = a.querySelector("#E2"), d = a.querySelector("#E3"), e = 0, f = b.length; e < f; e++)
                        this.traverseGroup(b[e], b[e], null, 1, {
                            x: 0,
                            y: 0
                        });
                    this.traverseGroup(d, d, null, 1.32, {
                        x: 0,
                        y: 0
                    }),
                    this.traverseGroup(c, c, null, 1.056, {
                        x: -.1,
                        y: -10
                    }),
                    this.materials.lights.uniforms.itemsNb.value = this.items.length
                }
            }, {
                key: "traverseGroup",
                value: function(a, b) {
                    var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null
                      , d = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 1
                      , e = arguments[4]
                      , f = c;
                    if (!c) {
                        var g = b.querySelector("#" + a.id + "BBOX");
                        this.meshesBbox[a.id];
                        f = this.getSVGBoundingbox(g, d)
                    }
                    for (var i = 0; i < b.childNodes.length; i++) {
                        var j = b.childNodes[i];
                        if (j.childNodes.length || j.id.match(/BBOX/g))
                            this.traverseGroup(a, j, f, d, e);
                        else
                            switch (j.tagName) {
                            case "rect":
                                var k = this.getSVGBoundingbox(j, 1)
                                  , l = k.width
                                  , m = k.height
                                  , n = k.x
                                  , o = k.y
                                  , p = new h.Object3D
                                  , q = this.meshesBbox[a.id];
                                p.position.set(n + l / 2, q.max.z + .001, o + m / 2),
                                p.rotation.x = .5 * -Math.PI;
                                var r = j.getAttribute("transform");
                                if (r) {
                                    r = r.replace("matrix(", ""),
                                    r = r.replace(")", "");
                                    var s = r.split(" ")
                                      , t = {
                                        a: parseFloat(s[0], 10),
                                        b: parseFloat(s[1], 10),
                                        c: parseFloat(s[2], 10),
                                        d: parseFloat(s[3], 10),
                                        e: parseFloat(s[4], 10),
                                        f: parseFloat(s[5], 10)
                                    };
                                    p.rotation.z = Math.atan(-t.b / t.a)
                                }
                                p.updateMatrix();
                                var u = new h.PlaneGeometry(l,m)
                                  , v = new h.PlaneGeometry(l,m);
                                u.applyMatrix(p.matrix),
                                u = (new h.BufferGeometry).fromGeometry(u),
                                v = (new h.BufferGeometry).fromGeometry(v),
                                v.attributes.uv.array = new Float32Array(12);
                                for (var w = v.attributes.position.array.length / 3, x = 0; x < w; x++) {
                                    var y = u.attributes.position.array;
                                    v.attributes.uv.array[2 * x] = y[3 * x],
                                    v.attributes.uv.array[2 * x + 1] = y[3 * x + 2]
                                }
                                p.position.set((n + l / 2) / d - f.center.x + q.center.x, q.min.z + .001, (o + m / 2) / d - f.center.y - q.center.y),
                                p.scale.divideScalar(d),
                                p.updateMatrix(),
                                v.applyMatrix(p.matrix),
                                this.geometries.push(v);
                                var z = {
                                    id: j.id,
                                    active: !1,
                                    alpha: 0
                                };
                                this.items.push(z),
                                this.dictionary[j.id] = z
                            }
                    }
                }
            }, {
                key: "merge",
                value: function() {
                    for (var a = this.geometries.length, b = this.geometries[0], c = b.attributes, d = c.position, e = c.normal, f = c.uv, g = new Float32Array(a * d.itemSize * d.count), i = new Float32Array(a * e.itemSize * e.count), j = new Float32Array(a * f.itemSize * f.count), k = new Float32Array(a * d.count), l = 0; l < a; l++) {
                        for (var m = this.geometries[l], n = 0; n < d.itemSize * d.count; n++)
                            g[l * d.itemSize * d.count + n] = m.attributes.position.array[n];
                        for (var o = 0; o < e.itemSize * e.count; o++)
                            i[l * e.itemSize * e.count + o] = m.attributes.normal.array[o];
                        for (var p = 0; p < f.itemSize * f.count; p++)
                            j[l * f.itemSize * f.count + p] = m.attributes.uv.array[p];
                        for (var q = 0; q < d.count; q++)
                            k[l * d.count + q] = l
                    }
                    this.geometry.addAttribute("position", new h.BufferAttribute(g,3)),
                    this.geometry.addAttribute("normal", new h.BufferAttribute(i,3)),
                    this.geometry.addAttribute("uv", new h.BufferAttribute(j,2)),
                    this.geometry.addAttribute("id", new h.BufferAttribute(k,1)),
                    a = null,
                    b = null,
                    c = null,
                    d = null,
                    e = null,
                    f = null,
                    g = null,
                    i = null,
                    j = null,
                    k = null
                }
            }, {
                key: "update",
                value: function() {
                    var a = (new Date).getTime()
                      , b = a - this.then;
                    if (b > this.interval) {
                        for (var c = 0, d = this.items.length; c < d; c++) {
                            var e = this.items[c];
                            this.dataTexture.image.data[4 * c] = e.active ? 255 : 0,
                            this.dataTexture.image.data[4 * c + 3] = 255 * e.alpha,
                            this.dataTexture.needsUpdate = !0
                        }
                        app.game.config.reflection ? (this.materials.mesh.uniforms.tReflectionMap.value = this.materials.lights.uniforms.tReflectionMap.value = this.reflection.render(),
                        this.materials.mesh.uniforms.reflectionMapMatrix.value = this.materials.lights.uniforms.reflectionMapMatrix.value = this.reflection.mapMatrix) : (this.materials.mesh.uniforms.tReflectionMap.value = null,
                        this.materials.lights.uniforms.tReflectionMap.value = null),
                        this.materials.mesh.uniforms.shadowDarkness.value = app.game.config.shadowMap ? .2 : 0,
                        this.then = a - b % this.interval
                    }
                }
            }, {
                key: "getSVGBoundingbox",
                value: function(a, b) {
                    var c = {
                        width: a.getAttribute("width") / this.width / b,
                        height: a.getAttribute("height") / this.height / b,
                        x: a.getAttribute("x") / this.width / b,
                        y: a.getAttribute("y") / this.height / b
                    };
                    return c.center = {
                        x: c.x + c.width / 2,
                        y: c.y + c.height / 2
                    },
                    c
                }
            }, {
                key: "reset",
                value: function() {
                    for (var a = 0, b = this.items.length; a < b; a++)
                        this.items[a].active = !1,
                        this.items[a].alpha = 0
                }
            }, {
                key: "resize",
                value: function() {
                    this.reflection.resize()
                }
            }, {
                key: "onItemsFactoryReady",
                value: function() {
                    this.groundAnimations = new l.default(this.dictionary),
                    app.game.groundAnimations = this.groundAnimations
                }
            }]),
            a
        }();
        c.default = y
    }
    , {
        "game/glsl/ground_frag.glsl": 50,
        "game/glsl/ground_vert.glsl": 51,
        "game/glsl/lights_frag.glsl": 52,
        "game/glsl/lights_vert.glsl": 53,
        "game/stage/items/GroundAnimations": 98,
        "game/stage/utils/Reflection": 116,
        "game/stage/utils/TextureManager": 117,
        three: 10,
        "utils/FunctionUtils": 137
    }],
    98: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("game/stage/items/ground/Logo")
          , h = d(g)
          , i = a("game/stage/items/ground/Deco")
          , j = d(i)
          , k = a("game/stage/items/ground/Ramps")
          , l = d(k)
          , m = a("game/stage/items/ground/Rollovers")
          , n = d(m)
          , o = a("game/stage/items/ground/Sensors")
          , p = d(o)
          , q = a("game/stage/items/ground/Targets")
          , r = d(q)
          , s = a("game/stage/items/ground/TargetGroup")
          , t = d(s)
          , u = a("game/stage/items/ground/Bumpers")
          , v = d(u)
          , w = a("game/stage/items/ground/Plateau1")
          , x = d(w)
          , y = a("game/stage/items/ground/Plateau2")
          , z = d(y)
          , A = a("game/GameEvent")
          , B = d(A)
          , C = function() {
            function a(b) {
                e(this, a),
                B.default.SENSOR_HIT.add(this.onSensorHit, this),
                B.default.TARGET_HIT.add(this.onTargetHit, this),
                B.default.TARGET_COMPLETE.add(this.onTargetComplete, this),
                B.default.MISSION_SUCCESS.add(this.onMissionComplete, this),
                B.default.LOST.add(this.onBallLost, this),
                this.game = app.game,
                this.targetGroups = [];
                for (var c = 0, d = this.game.targetGroups.length; c < d; c++)
                    this.targetGroups[c] = new t.default(b,this.game.targetGroups[c]);
                this.targets = new r.default(b,["T0", "T1"]),
                this.ramp0 = new l.default(b,this.game.ramps[0],"A0",["G4A", "G4B"]),
                this.ramp1 = new l.default(b,this.game.ramps[1],"A1",["G3A", "G3B"]),
                this.ramp2 = new l.default(b,this.game.ramps[2],"A2"),
                this.ramp3 = new l.default(b,this.game.ramps[3],"A3",["G2A", "G2B"]),
                this.slots = new n.default(b,["SLOTS.A0", "SLOTS.A1", "SLOTS.A2", "SLOTS.A3"],["SLOTS.L0", "SLOTS.L1", "SLOTS.L2", "SLOTS.L3"]),
                B.default.SLOTS_LIT.add(this.slots.lightOn, this.slots),
                B.default.SLOTS_SHIFT.add(this.slots.lightOn, this.slots),
                B.default.SLOTS_COMPLETE.add(this.slots.complete, this.slots),
                this.rollovers13 = new n.default(b,["C3.L0", "C3.L1", "C3.L2"],["S4.A"]),
                this.sensors = new p.default(b,["S1", "S2", "S3", "S4"]),
                this.bumpers = new v.default([b.B1, b.B2, b.B3]),
                B.default.BUMPER_HIT.add(this.bumpers.onHit, this.bumpers),
                this.logo = new h.default(b),
                this.level1 = new x.default(b),
                B.default.MULTIBALL_OPEN.add(this.level1.open, this.level1),
                B.default.MULTIBALL_ENTRY.add(this.level1.shuffle, this.level1),
                this.level2 = new z.default(b),
                B.default.WIZARD_OPEN.add(this.level2.open, this.level2),
                B.default.POINTS_HIT.add(this.level2.onSensorHit, this.level2),
                this.deco = new j.default(b),
                this.bind()
            }
            return f(a, [{
                key: "bind",
                value: function() {
                    this.onTargetHit = this.onTargetHit.bind(this)
                }
            }, {
                key: "onBallLost",
                value: function() {
                    for (var a = 0, b = this.targetGroups.length; a < b; a++)
                        this.targetGroups[a].reset();
                    this.targets.reset(),
                    this.ramp0.reset(),
                    this.ramp1.reset(),
                    this.ramp2.reset(),
                    this.ramp3.reset(),
                    this.slots.reset(),
                    this.level1.reset(),
                    this.level2.reset()
                }
            }, {
                key: "onMissionComplete",
                value: function(a) {
                    switch (a) {
                    case "paris":
                        this.logo.lit(0);
                        break;
                    case "bordeaux":
                        this.logo.lit(1);
                        break;
                    case "marseille":
                        this.logo.lit(2);
                        break;
                    case "strasbourg":
                        this.logo.lit(3);
                        break;
                    case "rennes":
                        this.logo.lit(4)
                    }
                }
            }, {
                key: "missionsReset",
                value: function() {
                    this.logo.unlit(0),
                    this.logo.unlit(1),
                    this.logo.unlit(2),
                    this.logo.unlit(3),
                    this.logo.unlit(4)
                }
            }, {
                key: "onSensorHit",
                value: function(a) {
                    switch (a) {
                    case 11:
                        this.sensors.hit(1);
                        break;
                    case 12:
                        this.sensors.hit(2);
                        break;
                    case 13:
                        this.sensors.hit(4);
                        break;
                    case 15:
                        this.sensors.hit(3)
                    }
                }
            }, {
                key: "onTargetHit",
                value: function(a, b) {
                    switch (a) {
                    case 2:
                        this.ramp3.targetOn(b);
                        break;
                    case 3:
                        this.ramp1.targetOn(b);
                        break;
                    case 4:
                        this.ramp0.targetOn(b);
                        break;
                    case null:
                        this.targets.hit(b)
                    }
                }
            }, {
                key: "onTargetComplete",
                value: function(a, b) {
                    switch (a) {
                    case 3:
                        this.ramp1.targetComplete(b);
                        break;
                    case 2:
                        this.ramp2.targetComplete(b);
                        break;
                    case 4:
                        this.ramp3.targetComplete(b)
                    }
                }
            }]),
            a
        }();
        c.default = C
    }
    , {
        "game/GameEvent": 28,
        "game/stage/items/ground/Bumpers": 101,
        "game/stage/items/ground/Deco": 102,
        "game/stage/items/ground/Logo": 104,
        "game/stage/items/ground/Plateau1": 105,
        "game/stage/items/ground/Plateau2": 106,
        "game/stage/items/ground/Ramps": 107,
        "game/stage/items/ground/Rollovers": 108,
        "game/stage/items/ground/Sensors": 109,
        "game/stage/items/ground/TargetGroup": 110,
        "game/stage/items/ground/Targets": 111
    }],
    99: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("three")
          , h = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(g)
          , i = a("game/glsl/skydome_vert.glsl")
          , j = d(i)
          , k = a("game/glsl/skydome_frag.glsl")
          , l = d(k)
          , m = a("utils/Render")
          , n = d(m)
          , o = function() {
            function a() {
                e(this, a),
                this.geometry = new h.SphereBufferGeometry(1.5,32,32),
                this.material = new h.ShaderMaterial({
                    uniforms: {
                        elapsedTime: {
                            value: .3
                        },
                        scale: {
                            value: .65
                        },
                        lightColor: {
                            value: new h.Color(2181247)
                        },
                        darkColor: {
                            value: new h.Color(1517118)
                        },
                        visible: {
                            value: 1
                        }
                    },
                    vertexShader: j.default,
                    fragmentShader: l.default,
                    side: h.BackSide
                }),
                app.stage.materials.needMasking.push(this.material),
                this.mesh = new h.Mesh(this.geometry,this.material),
                app.stage.scene.add(this.mesh)
            }
            return f(a, [{
                key: "update",
                value: function() {
                    this.material.uniforms.elapsedTime.value = n.default.elapsedTime
                }
            }]),
            a
        }();
        c.default = o
    }
    , {
        "game/glsl/skydome_frag.glsl": 55,
        "game/glsl/skydome_vert.glsl": 56,
        three: 10,
        "utils/Render": 140
    }],
    100: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("three")
          , h = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(g)
          , i = a("game/glsl/volumetric_spotlight_vert.glsl")
          , j = d(i)
          , k = a("game/glsl/volumetric_spotlight_frag.glsl")
          , l = d(k)
          , m = a("utils/FunctionUtils")
          , n = d(m)
          , o = function() {
            function a(b, c, d, f) {
                e(this, a),
                this.position = new h.Vector3;
                this.geometry = new h.CylinderGeometry(.2 * .05,.065,.4,32,10,!0),
                this.material = new h.ShaderMaterial({
                    uniforms: {
                        attenuation: {
                            value: .16
                        },
                        anglePower: {
                            value: 4
                        },
                        spotPosition: {
                            value: new h.Vector3(.438,.201,-.212)
                        },
                        lightColor: {
                            value: new h.Color(16777215)
                        },
                        visible: {
                            value: 1
                        }
                    },
                    vertexShader: j.default,
                    fragmentShader: l.default,
                    shading: h.SmoothShading,
                    transparent: !0,
                    depthWrite: !1
                }),
                app.stage.materials.needMasking.push(this.material),
                this.group = new h.Object3D,
                this.group.position.set(.438, .201, -.212),
                app.stage.scene.add(this.group);
                var g = new h.Texture;
                g.image = app.game.assets["flare.lensflare"],
                g.minFilter = g.magFilter = h.LinearFilter,
                g.needsUpdate = !0,
                g.repeat.set(3, 1);
                var i = new h.CylinderGeometry(.01932,.01932,.7 * .05,64,1,!0)
                  , k = new h.MeshBasicMaterial({
                    map: g,
                    transparent: !0
                });
                this.flare = new h.Mesh(i,k),
                this.target = new h.Object3D,
                this.mesh = new h.Mesh(this.geometry,this.material),
                this.mesh.rotation.x = n.default.toRadians(-90),
                app.stage.scene.add(this.mesh),
                this.group.add(this.mesh),
                this.group.add(this.flare),
                this.group.add(this.target),
                this.mesh.position.set(0, -.005, .22),
                this.target.position.set(0, 0, .18),
                this.flare.rotation.set(0, n.default.toRadians(-60), 0)
            }
            return f(a, [{
                key: "update",
                value: function() {
                    this.position.setFromMatrixPosition(this.target.matrixWorld),
                    this.material.uniforms.spotPosition.value = this.position,
                    this.group.rotation.y += .01
                }
            }]),
            a
        }();
        c.default = o
    }
    , {
        "game/glsl/volumetric_spotlight_frag.glsl": 57,
        "game/glsl/volumetric_spotlight_vert.glsl": 58,
        three: 10,
        "utils/FunctionUtils": 137
    }],
    101: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = function() {
            function a(b) {
                d(this, a),
                this.dico = {},
                b.forEach(function(a) {
                    this.dico[a.id] = a
                }, this)
            }
            return e(a, [{
                key: "onHit",
                value: function(a) {
                    var b = this.dico[a];
                    b.active = !0,
                    b.alpha = 1,
                    TweenMax.set(b, {
                        delay: .1,
                        active: !1,
                        alpha: 0
                    })
                }
            }]),
            a
        }();
        c.default = f
    }
    , {}],
    102: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = a("game/stage/items/ground/LightGroup")
          , g = function(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }(f)
          , h = function() {
            function a(b) {
                d(this, a),
                this.dico = b,
                this.all = [],
                this.gLogo = new g.default([b["OUIGO.0"], b["OUIGO.1"], b["OUIGO.2"], b["OUIGO.3"], b["OUIGO.4"]],{
                    yoyo: !0,
                    speed: 1
                }),
                this.gSlots1 = new g.default([b["SLOTS.L3"], b["SLOTS.L2"], b["SLOTS.L1"], b["SLOTS.L0"]]),
                this.gSlotsArrows1 = new g.default([b["SLOTS.A3"], b["SLOTS.A2"], b["SLOTS.A1"], b["SLOTS.A0"]]),
                this.gSlots2 = new g.default([b["SLOTS.A0"], b["SLOTS.A1"], b["SLOTS.A2"], b["SLOTS.A3"]]),
                this.gBumper = new g.default([b.B1, b.B2, b.B3]),
                this.gRolls = new g.default([b["S1.L"], b["S2.L"], b["S3.L"]]),
                this.gRollUp = new g.default([b["S4.A"], b["S4.L"], b["C3.L0"], b["C3.L1"], b["C3.L2"]]),
                this.gRollUpArrows = new g.default([b["C3.L0"], b["C3.L1"], b["C3.L2"]]),
                this.gTarget1 = this.createTargetGroup("G0"),
                this.gTarget2 = this.createTargetGroup("G5"),
                this.gRamp1 = this.createRampGroup("A0", "G4"),
                this.gRamp2 = this.createRampGroup("A1", "G3"),
                this.gRamp3 = this.createRampGroup("A3", "G2"),
                this.gRamp4 = new g.default([b["T0.A"], b["T0.L"], b["A2.A"], b["T1.A"], b["T1.L"]],{
                    speed: .7
                }),
                this.gMultiball = new g.default([b["P1.L0"], b["P1.L1"], b["P1.L2"]],{
                    yoyo: !0
                }),
                this.gWizzard1 = new g.default([b["P2.LA.L0"], b["P2.LA.L1"], b["P2.LB.L0"], b["P2.LB.L1"], b["P2.LC.L0"], b["P2.LC.L1"]],{
                    speed: .5
                }),
                this.gWizzard2 = new g.default([b["P2.N0"], b["P2.N2"], b["P2.N5"], b["P2.N8"], b["P2.N11"]]),
                this.gWizzard3 = new g.default([b["P2.N1"], b["P2.N3"], b["P2.N5"], b["P2.N7"], b["P2.N9"]]),
                this.gWizzard4 = new g.default([b["P2.N4"], b["P2.N7"], b["P2.N10"], b["P2.N8"], b["P2.N6"]]),
                this.gJackpot1 = new g.default([b["G1A.L0"], b["G1B.L0"], b["G1C.L0"], b["G1D.L0"]],{
                    yoyo: !0,
                    speed: .5
                }),
                this.gJackpot2 = new g.default([b["G1D.L1"], b["G1C.L1"], b["G1B.L1"], b["G1A.L1"]],{
                    yoyo: !0,
                    speed: .5
                }),
                this.gJackpot3 = new g.default([b["G1A.L2"], b["G1B.L2"], b["G1C.L2"], b["G1D.L2"]],{
                    yoyo: !0,
                    speed: .5
                }),
                this.gJackpot4 = new g.default([b["P0.L0"], b["P0.L1"], b["P0.L2"]]),
                this.all.push(this.gSlots1),
                this.all.push(this.gSlots2),
                this.all.push(this.gBumper),
                this.all.push(this.gRolls),
                this.all.push(this.gRollUp),
                this.all = this.all.concat(this.gTarget1),
                this.all = this.all.concat(this.gTarget2),
                this.all = this.all.concat(this.gRamp1),
                this.all = this.all.concat(this.gRamp2),
                this.all = this.all.concat(this.gRamp3),
                this.all.push(this.gRamp4),
                this.all.push(this.gWizzard2),
                this.all.push(this.gWizzard3),
                this.all.push(this.gWizzard4)
            }
            return e(a, [{
                key: "startAll",
                value: function() {
                    var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : .5;
                    0 == a ? this.all.forEach(function(a, b) {
                        a.start()
                    }) : this.all.forEach(function(b, c) {
                        b.start({
                            delay: c * a
                        })
                    }),
                    this.gLogo.start(),
                    this.gMultiball.start(),
                    this.gWizzard1.start(),
                    this.gJackpot1.start(),
                    this.gJackpot2.start(),
                    this.gJackpot3.start(),
                    this.gJackpot4.start()
                }
            }, {
                key: "stopAll",
                value: function() {
                    this.all.forEach(function(a) {
                        a.stop()
                    }),
                    this.gLogo.stop(),
                    this.gMultiball.stop(),
                    this.gWizzard1.stop(),
                    this.gJackpot1.stop(),
                    this.gJackpot2.stop(),
                    this.gJackpot3.stop(),
                    this.gJackpot4.stop()
                }
            }, {
                key: "createTargetGroup",
                value: function(a) {
                    var b = []
                      , c = new g.default([this.dico[a + "A.L2"], this.dico[a + "A.L1"], this.dico[a + "A.L0"]]);
                    return b.push(c),
                    c = new g.default([this.dico[a + "B.L2"], this.dico[a + "B.L1"], this.dico[a + "B.L0"]]),
                    b.push(c),
                    c = new g.default([this.dico[a + "C.L2"], this.dico[a + "C.L1"], this.dico[a + "C.L0"]]),
                    b.push(c),
                    c = new g.default([this.dico[a + "A.A"], this.dico[a + "B.A"], this.dico[a + "C.A"]]),
                    b.push(c),
                    b
                }
            }, {
                key: "createRampGroup",
                value: function(a, b) {
                    var c = []
                      , d = new g.default([this.dico[b + "A.A"], this.dico[b + "A.L"], this.dico[b + "B.A"], this.dico[b + "B.L"]]);
                    return c.push(d),
                    d = new g.default([this.dico[a + ".L2"], this.dico[a + ".L1"], this.dico[a + ".L0"], this.dico[a + ".A"]]),
                    c.push(d),
                    c
                }
            }]),
            a
        }();
        c.default = h
    }
    , {
        "game/stage/items/ground/LightGroup": 103
    }],
    103: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = function() {
            function a(b) {
                var c = this
                  , e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                d(this, a),
                this._play = this._play.bind(this),
                this.lights = b;
                var f = e.speed || 1
                  , g = e.yoyo || !1
                  , h = .15 * f * (1.1 - .2 * Math.random());
                this._tl = new TimelineMax({
                    paused: !0,
                    repeat: -1,
                    yoyo: g,
                    onStart: function() {
                        c.isAnimated || c._tl.pause()
                    },
                    onRepeat: function() {
                        c.isAnimated || c._tl.pause()
                    }
                }),
                b.forEach(function(a, b) {
                    c._tl.addCallback(function() {
                        c.blink(a)
                    }, h * (b + 1))
                })
            }
            return e(a, [{
                key: "blink",
                value: function(a) {
                    var b = new TimelineMax;
                    b.to(a, .1, {
                        alpha: 1,
                        ease: Power2.easeOut
                    }),
                    b.to(a, .5, {
                        alpha: 0,
                        ease: Power2.easeOut
                    })
                }
            }, {
                key: "start",
                value: function() {
                    var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    this.isAnimated || (this.isAnimated = !0,
                    void 0 != a.delay ? (this._tl.repeatDelay(1 + Math.random()),
                    TweenLite.delayedCall(a.delay, this._play)) : this._tl.play(0 * Math.random()))
                }
            }, {
                key: "stop",
                value: function() {
                    this.isAnimated && (this.isAnimated = !1,
                    TweenLite.killTweensOf(this._play),
                    TweenLite.killTweensOf(this.blink),
                    this._tl.kill(),
                    this.lights.forEach(function(a) {
                        TweenLite.to(a, .5, {
                            alpha: a.active ? 1 : 0,
                            ease: Power2.easeOut,
                            delay: .1
                        })
                    }))
                }
            }, {
                key: "_play",
                value: function() {
                    this._tl.play()
                }
            }]),
            a
        }();
        c.default = f
    }
    , {}],
    104: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = function() {
            function a(b) {
                d(this, a),
                this.letters = [b["OUIGO.0"], b["OUIGO.1"], b["OUIGO.2"], b["OUIGO.3"], b["OUIGO.4"]],
                this.leds = [],
                this.ledsTotal = 35;
                for (var c = 0; c <= this.ledsTotal; c++)
                    this.leds.push(b["CIRCLE.L" + c]);
                this.ledsSpacing = 5,
                this.ledsFilling = 0,
                this._rotation = 10,
                this.leds.forEach(function(a, b) {
                    a.active = 0 == status
                }),
                TweenMax.to(this, 2, {
                    repeat: -1,
                    rotation: 360,
                    ease: Power0.easeInOut
                })
            }
            return e(a, [{
                key: "updateLeds",
                value: function() {
                    var a = this
                      , b = Math.round(this.rotation % 360 * this.ledsTotal / 360);
                    this.leds.forEach(function(c, d) {
                        var e = (d + b) % a.ledsSpacing;
                        c.alpha = 0 == e ? 1 : 0
                    })
                }
            }, {
                key: "lit",
                value: function(a) {
                    var b = this.letters[a];
                    this.letters[a].active = !0,
                    (new TimelineMax).to(b, .2, {
                        alpha: 1,
                        ease: Power2.easeOut
                    }).to(b, .2, {
                        alpha: 0,
                        ease: Power2.easeOut
                    }).to(b, .2, {
                        alpha: 1,
                        ease: Power2.easeOut
                    })
                }
            }, {
                key: "unlit",
                value: function(a) {
                    var b = this.letters[a];
                    this.letters[a].active = !1,
                    (new TimelineMax).to(b, .5, {
                        alpha: 0,
                        ease: Power2.easeOut
                    })
                }
            }, {
                key: "rotation",
                get: function() {
                    return this._rotation
                },
                set: function(a) {
                    this._rotation = a,
                    this.updateLeds()
                }
            }]),
            a
        }();
        c.default = f
    }
    , {}],
    105: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = a("game/audio/ThreeAudioManager")
          , g = function(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }(f)
          , h = function() {
            function a(b) {
                d(this, a),
                this.RNG = void 0,
                this.slots = [b["P1.L0"], b["P1.L1"], b["P1.L2"]]
            }
            return e(a, [{
                key: "open",
                value: function() {
                    g.default.play("frites.in", .7)
                }
            }, {
                key: "shuffle",
                value: function() {
                    this.currentLight = 0,
                    TweenLite.to(this, 2, {
                        currentLight: 12 + this.RNG,
                        ease: Power1.easeOut
                    }),
                    g.default.play("balls.out")
                }
            }, {
                key: "reset",
                value: function() {
                    this.slots.forEach(function(a) {
                        a.active = !1,
                        a.alpha = 0
                    })
                }
            }, {
                key: "currentLight",
                get: function() {
                    return this._currentLight
                },
                set: function(a) {
                    this.reset(),
                    this._currentLight = Math.floor(a % 3),
                    this.slots[this._currentLight].active = !0,
                    this.slots[this._currentLight].alpha = 1
                }
            }]),
            a
        }();
        c.default = h
    }
    , {
        "game/audio/ThreeAudioManager": 32
    }],
    106: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = a("game/audio/ThreeAudioManager")
          , g = function(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }(f)
          , h = function() {
            function a(b) {
                d(this, a),
                this.totalSensors = 12,
                this.sensors = [],
                this.currentSound = 0,
                this.totalSounds = 10;
                for (var c = 0; c < this.totalSensors; c++) {
                    var e = b["P2.N" + c];
                    this.sensors.push(e),
                    e.onTl = new TimelineMax({
                        paused: !0
                    }),
                    e.onTl.to(e, .3, {
                        alpha: 1,
                        ease: Power2.easeOut
                    })
                }
            }
            return e(a, [{
                key: "open",
                value: function() {
                    g.default.play("phare.in")
                }
            }, {
                key: "onSensorHit",
                value: function(a) {
                    this.sensors[a].onTl.play(0),
                    g.default.play("phare." + this.currentSound),
                    this.currentSound++,
                    this.currentSound %= this.totalSounds
                }
            }, {
                key: "reset",
                value: function() {
                    this.sensors.forEach(function(a) {
                        a.onTl.kill(),
                        a.active = !1,
                        a.alpha = 0
                    })
                }
            }]),
            a
        }();
        c.default = h
    }
    , {
        "game/audio/ThreeAudioManager": 32
    }],
    107: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = function() {
            function a(b, c, e) {
                var f = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
                if (d(this, a),
                this.arrow = b[e + ".A"],
                this.physicItem = c,
                this.lights = [b[e + ".L0"], b[e + ".L1"], b[e + ".L2"]],
                this.targets = [],
                this.targetCompleted = 0,
                f)
                    for (var g = 0, h = f.length; g < h; g++) {
                        var i = f[g]
                          , j = {
                            arrow: b[i + ".A"],
                            light: b[i + ".L"]
                        };
                        this.targets.push(j)
                    }
                this.bind(),
                this.createTls()
            }
            return e(a, [{
                key: "bind",
                value: function() {
                    this.rampComplete = this.rampComplete.bind(this),
                    this.physicItem.completed.add(this.rampComplete)
                }
            }, {
                key: "createTls",
                value: function() {
                    var a = this;
                    this.arrowDoorOpenTl = new TimelineMax({
                        paused: !0,
                        yoyo: !0,
                        repeat: -1,
                        onStart: function() {
                            a.arrow.active = !0
                        }
                    }),
                    this.arrowMissionOnTl = new TimelineMax({
                        paused: !0,
                        yoyo: !0,
                        repeat: -1,
                        onStart: function() {
                            a.arrow.active = !0
                        }
                    }),
                    this.arrowOffTl = new TimelineMax({
                        paused: !0,
                        onComplete: function() {
                            a.arrow.active = !1
                        }
                    }),
                    this.arrowDoorOpenTl.addCallback(function() {
                        a.blink(a.arrow, .6, .6)
                    }, .6),
                    this.arrowMissionOnTl.addCallback(function() {
                        a.blink(a.arrow, .3, .3)
                    }, .3),
                    this.arrowOffTl.addCallback(function() {
                        a.blinkAnimationOff(a.arrow, {
                            onDuration: .1,
                            offDuration: .1
                        })
                    });
                    for (var b = 0, c = this.lights.length; b < c; b++) {
                        if ("break" === function(b, c) {
                            var d = a.lights[b];
                            if (!d)
                                return "break";
                            d.onTl = new TimelineMax({
                                paused: !0,
                                repeat: 3,
                                repeatDelay: .5,
                                onStart: function() {
                                    d.active = !0
                                }
                            }),
                            d.onCompleteTl = new TimelineMax({
                                paused: !0,
                                repeat: 3,
                                repeatDelay: .6,
                                onStart: function() {
                                    d.active = !0
                                }
                            }),
                            d.offTl = new TimelineMax({
                                paused: !0,
                                repeat: 2,
                                onComplete: function() {
                                    d.active = !1
                                }
                            }),
                            d.onTl.addCallback(function() {
                                a.blinkAnimationOn(d, {
                                    onDuration: .3,
                                    offDuration: .3
                                })
                            }),
                            d.onCompleteTl.addCallback(function() {
                                a.blinkAnimationOff(d, {
                                    onDuration: .3,
                                    offDuration: .3
                                })
                            }, .1 * b)
                        }(b))
                            break
                    }
                }
            }, {
                key: "initMission",
                value: function() {
                    this.arrow.active = !0,
                    this.arrowOffTl.kill(),
                    this.arrowDoorOpenTl.kill(),
                    this.arrowMissionOnTl.play(0)
                }
            }, {
                key: "missionClear",
                value: function() {
                    this.arrow.active = !1,
                    this.arrowDoorOpenTl.kill(),
                    this.arrowMissionOnTl.kill(),
                    this.arrowOffTl.play(0)
                }
            }, {
                key: "rampComplete",
                value: function(a) {
                    if (this.lights) {
                        if (a >= 3)
                            for (var b = 0, c = this.lights.length; b < c; b++) {
                                var d = this.lights[b];
                                d && (d.onTl.pause(),
                                d.onCompleteTl.play(0))
                            }
                        else {
                            var e = this.lights[a - 1];
                            e && (e.onCompleteTl.pause(),
                            e.onTl.play(0))
                        }
                        this.arrowDoorOpenTl.kill()
                    }
                }
            }, {
                key: "rampReset",
                value: function() {
                    this.lights && this.lights.forEach(function(a) {
                        a && (a.onTl.pause(),
                        a.onCompleteTl.pause(),
                        a.active = !1,
                        a.alpha = 0)
                    })
                }
            }, {
                key: "targetOn",
                value: function(a) {
                    this.targets && this.targets[a].light && (this.targets[a].light.active = !0)
                }
            }, {
                key: "targetComplete",
                value: function(a) {
                    this.targetCompleted = a,
                    0 == this.targetCompleted && this.targetReset()
                }
            }, {
                key: "targetReset",
                value: function() {
                    this.targets && (this.targets.forEach(function(a) {
                        a.light.active = !1
                    }),
                    this.targetCompleted = 0)
                }
            }, {
                key: "doorOpenAnimation",
                value: function() {
                    this.arrowDoorOpenTl.play(0)
                }
            }, {
                key: "blink",
                value: function(a, b, c) {
                    var d = new TimelineMax;
                    d.to(a, b, {
                        alpha: 1,
                        ease: Power2.easeOut
                    }),
                    d.to(a, c, {
                        alpha: 0,
                        ease: Power2.easeOut
                    })
                }
            }, {
                key: "blinkAnimationOn",
                value: function(a, b) {
                    var c = b.onDuration
                      , d = b.offDuration
                      , e = new TimelineMax;
                    e.to(a, c, {
                        alpha: 0,
                        ease: Power2.easeOut
                    }),
                    e.to(a, d, {
                        alpha: 1,
                        ease: Power2.easeOut
                    })
                }
            }, {
                key: "blinkAnimationOff",
                value: function(a, b) {
                    var c = b.onDuration
                      , d = b.offDuration
                      , e = new TimelineMax;
                    e.to(a, c, {
                        alpha: 1,
                        ease: Power2.easeOut
                    }),
                    e.to(a, d, {
                        alpha: 0,
                        ease: Power2.easeOut
                    })
                }
            }, {
                key: "reset",
                value: function() {
                    this.targetReset(),
                    this.rampReset()
                }
            }]),
            a
        }();
        c.default = f
    }
    , {}],
    108: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = a("game/audio/ThreeAudioManager")
          , g = (function(a) {
            a && a.__esModule
        }(f),
        function() {
            function a(b, c, e) {
                d(this, a),
                this.arrows = [],
                this.lights = [];
                for (var f = 0, g = c.length; f < g; f++)
                    this.arrows.push(b[c[f]]);
                for (var h = 0, i = e.length; h < i; h++)
                    this.lights.push(b[e[h]]);
                this.createTls()
            }
            return e(a, [{
                key: "createTls",
                value: function() {
                    for (var a = this, b = 0, c = this.arrows.length; b < c; b++)
                        !function(b, c) {
                            var d = a.arrows[b];
                            d.arrowOnTl = new TimelineMax({
                                paused: !0,
                                repeat: -1,
                                yoyo: !0
                            }),
                            d.arrowOnTl.delay = .15 / 3 * b,
                            d.arrowOffTl = new TimelineMax({
                                paused: !0,
                                onComplete: function() {
                                    d.active = !1
                                }
                            }),
                            d.arrowOnTl.set(d, {
                                active: !0
                            }).to(d, .05, {
                                alpha: 0
                            }).to(d, .1, {
                                alpha: 1
                            }),
                            d.arrowOffTl.to(d, .5, {
                                alpha: 0
                            })
                        }(b)
                }
            }, {
                key: "initMission",
                value: function() {
                    this.arrows.forEach(function(a) {
                        a.arrowOffTl.pause(),
                        a.arrowOnTl.play(a.arrowOnTl.delay)
                    })
                }
            }, {
                key: "missionClear",
                value: function() {
                    this.arrows.forEach(function(a) {
                        a.arrowOnTl.pause(),
                        a.arrowOffTl.play(0)
                    })
                }
            }, {
                key: "lightOn",
                value: function(a) {
                    var b = this;
                    a.forEach(function(a, c) {
                        b.lights[c].active = a.active,
                        b.lights[c].alpha = a.active ? 1 : 0
                    })
                }
            }, {
                key: "complete",
                value: function() {}
            }, {
                key: "reset",
                value: function() {
                    this.arrows.forEach(function(a) {
                        a.arrowOnTl.pause(),
                        a.arrowOffTl.pause(),
                        a.active = !1,
                        a.alpha = 0
                    })
                }
            }]),
            a
        }());
        c.default = g
    }
    , {
        "game/audio/ThreeAudioManager": 32
    }],
    109: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = a("game/audio/ThreeAudioManager")
          , g = function(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }(f)
          , h = function() {
            function a(b, c) {
                d(this, a),
                this.dico = {},
                this.sensors = [];
                for (var e = 0, f = c.length; e < f; e++) {
                    var g = c[e]
                      , h = {
                        arrow: b[g + ".A"],
                        light: b[g + ".L"]
                    };
                    void 0 != h.arrow && (this.dico[g + ".A"] = h.arrow),
                    this.dico[g + ".L"] = h.light,
                    this.sensors.push(h)
                }
                this.reset(),
                this.createTls()
            }
            return e(a, [{
                key: "createTls",
                value: function() {
                    for (var a = this, b = 0, c = this.sensors.length; b < c; b++) {
                        (function(b, c) {
                            var d = a.sensors[b].arrow;
                            if (void 0 == d)
                                return "continue";
                            d.arrowOnTl = new TimelineMax({
                                paused: !0,
                                repeat: -1,
                                yoyo: !0
                            }),
                            d.arrowOnTl.delay = .15 / 3 * b,
                            d.arrowOffTl = new TimelineMax({
                                paused: !0,
                                onComplete: function() {
                                    d.active = !1
                                }
                            }),
                            d.arrowOnTl.to(d, .05, {
                                alpha: 0
                            }).to(d, .1, {
                                alpha: 1
                            }),
                            d.arrowOffTl.to(d, .5, {
                                alpha: 0
                            })
                        }
                        )(b)
                    }
                }
            }, {
                key: "initMission",
                value: function(a) {
                    var b = this.dico["S" + a + ".A"];
                    b.arrowOffTl.kill(),
                    b.arrowOnTl.play(0)
                }
            }, {
                key: "missionClear",
                value: function(a) {
                    var b = this.dico["S" + a + ".A"];
                    b.arrowOnTl.kill(),
                    b.arrowOffTl.play(0)
                }
            }, {
                key: "hit",
                value: function(a) {
                    var b = this.dico["S" + a + ".L"]
                      , c = new TimelineMax;
                    c.set(b, {
                        alpha: 1
                    }, .2),
                    c.to(b, .2, {
                        alpha: 0
                    }, .6);
                    var d = (Math.random(),
                    -.5);
                    3 == a && (d = .5),
                    (new TimelineLite).add(function() {
                        g.default.play("balls.rollover", .8, d)
                    }, .2)
                }
            }, {
                key: "reset",
                value: function() {
                    for (var a in this.dico)
                        this.dico[a].active = !1,
                        this.dico[a].alpha = 0
                }
            }]),
            a
        }();
        c.default = h
    }
    , {
        "game/audio/ThreeAudioManager": 32
    }],
    110: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = function() {
            function a(b, c) {
                var e = this;
                d(this, a),
                this.targets = [],
                this.completed = 0,
                this.dico = b,
                this.physicItem = c,
                this.completedTlIsPlaying = !1;
                for (var f = 0, g = c.targets.length; f < g; f++) {
                    for (var h = c.targets[f].originalId, i = {
                        arrow: b[h + ".A"],
                        lights: []
                    }, j = 0; j < c.maxIterations; j++) {
                        var k = 1 === c.maxIterations ? "" : j;
                        i.lights.push(b[h + ".L" + k])
                    }
                    this.targets.push(i)
                }
                this.bind(),
                this.completedTl = new TimelineMax({
                    paused: !0,
                    onStart: function() {
                        e.completedTlIsPlaying = !0
                    }
                });
                for (var l = 0, m = this.targets.length; l < m; l++)
                    !function(a, b) {
                        var c = e.targets[b];
                        c.arrow && (c.arrowOnTl = new TimelineMax({
                            paused: !0,
                            yoyo: !0,
                            repeat: -1,
                            onStart: function() {}
                        }),
                        c.arrowOffTl = new TimelineMax({
                            paused: !0,
                            onComplete: function() {
                                c.arrow.active = !1
                            }
                        }),
                        c.arrowOnTl.addCallback(function() {
                            e.blinkAnimation(c.arrow, {
                                onDuration: .3,
                                offDuration: .3
                            })
                        }, .3),
                        c.arrowOffTl.addCallback(function() {
                            e.blinkAnimation(c.arrow, {
                                onDuration: .1,
                                offDuration: .1
                            })
                        }));
                        for (var d = 0, f = c.lights.length; d < f; d++) {
                            var g = c.lights[d];
                            g.onTl = new TimelineMax({
                                paused: !0,
                                repeat: 2
                            }),
                            g.onTl.set(g, {
                                active: !0,
                                alpha: 0
                            }).to(g, .3, {
                                alpha: 1
                            });
                            var h = b * d * .05
                              , i = a * f * .04;
                            e.completedTl.to(g, .04, {
                                alpha: 0
                            }, h),
                            e.completedTl.to(g, .04, {
                                alpha: 1
                            }, i + h),
                            e.completedTl.to(g, .04, {
                                alpha: 0
                            }, 2 * i + h)
                        }
                    }(m, l)
            }
            return e(a, [{
                key: "bind",
                value: function() {
                    this.onTargetActivated = this.onTargetActivated.bind(this),
                    this.onCompleted = this.onCompleted.bind(this),
                    this.physicItem.targetActivated.add(this.onTargetActivated),
                    this.physicItem.completed.add(this.onCompleted)
                }
            }, {
                key: "initMission",
                value: function() {
                    this.reset(),
                    this.targets.forEach(function(a) {
                        a.arrow && (a.arrowOffTl.kill(),
                        a.arrowOnTl.play(0))
                    })
                }
            }, {
                key: "missionClear",
                value: function() {
                    this.targets.forEach(function(a) {
                        a.arrow && (a.arrowOnTl.kill(),
                        a.arrowOffTl.play(0))
                    })
                }
            }, {
                key: "lightOn",
                value: function(a) {
                    this.targets[a].lights[this.completed] && (this.targets[a].lights[this.completed].active = !0,
                    this.completedTlIsPlaying && (this.completedTl.kill(),
                    this.completedTlIsPlaying = !1,
                    this.reset()),
                    this.targets[a].lights[this.completed].onTl.play(0))
                }
            }, {
                key: "arrowOff",
                value: function(a) {
                    this.targets[a].arrowOnTl.kill(),
                    this.targets[a].arrowOffTl.play(0)
                }
            }, {
                key: "blinkAnimation",
                value: function(a, b) {
                    var c = b.onDuration
                      , d = b.offDuration
                      , e = new TimelineMax;
                    e.to(a, c, {
                        alpha: 1,
                        ease: Power2.easeOut
                    }),
                    e.to(a, d, {
                        alpha: 0,
                        ease: Power2.easeOut
                    })
                }
            }, {
                key: "onTargetActivated",
                value: function(a) {
                    if (this.physicItem.maxIterations > 1)
                        this.lightOn(a.id);
                    else {
                        var b = a.id ? 0 : 1;
                        this.lightOn(b)
                    }
                }
            }, {
                key: "onCompleted",
                value: function(a) {
                    this.completed = a.iteration,
                    a.maxIterations > 1 && a.iteration >= a.maxIterations && (this.completed = 0,
                    this.targets.forEach(function(a) {
                        a.lights.forEach(function(a) {
                            a && a.onTl.kill()
                        })
                    }),
                    this.completedTl.play(0))
                }
            }, {
                key: "reset",
                value: function() {
                    this.completedTl.kill(),
                    this.completedTlIsPlaying = !1,
                    this.targets.forEach(function(a) {
                        a.lights.forEach(function(a) {
                            a && (a.onTl.kill(),
                            a.active = !1,
                            a.alpha = 0)
                        })
                    }),
                    this.completed = 0
                }
            }]),
            a
        }();
        c.default = f
    }
    , {}],
    111: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = function() {
            function a(b, c) {
                d(this, a),
                this.dico = {},
                this.targets = [];
                for (var e = 0, f = c.length; e < f; e++) {
                    var g = c[e]
                      , h = {
                        arrow: b[g + ".A"],
                        light: b[g + ".L"]
                    };
                    this.dico[g + ".A"] = h.arrow,
                    this.dico[g + ".L"] = h.light,
                    this.targets.push(h)
                }
                this.reset(),
                this.createTls()
            }
            return e(a, [{
                key: "createTls",
                value: function() {
                    for (var a = this, b = 0, c = this.targets.length; b < c; b++)
                        !function(b, c) {
                            var d = a.targets[b];
                            d.arrowOnTl = new TimelineMax({
                                paused: !0,
                                yoyo: !0,
                                repeat: -1,
                                onStart: function() {},
                                onRepeat: function() {}
                            }),
                            d.arrowOffTl = new TimelineMax({
                                paused: !0,
                                onComplete: function() {
                                    d.arrow.active = !1
                                }
                            }),
                            d.arrowOnTl.addCallback(function() {
                                a.blinkAnimation(d.arrow, {
                                    onDuration: .3,
                                    offDuration: .3
                                })
                            }, .3),
                            d.arrowOffTl.addCallback(function() {
                                a.blinkAnimation(d.arrow, {
                                    onDuration: .1,
                                    offDuration: .1
                                })
                            })
                        }(b)
                }
            }, {
                key: "initMission",
                value: function(a) {
                    var b = "T0" === a ? this.targets[0] : this.targets[1];
                    b.arrowOffTl.kill(),
                    b.arrowOnTl.play(0)
                }
            }, {
                key: "missionClear",
                value: function(a) {
                    var b = "T0" === a ? this.targets[0] : this.targets[1];
                    b.arrowOnTl.kill(),
                    b.arrowOffTl.play(0)
                }
            }, {
                key: "blinkAnimation",
                value: function(a, b) {
                    var c = b.onDuration
                      , d = b.offDuration
                      , e = new TimelineMax;
                    e.to(a, c, {
                        alpha: 1,
                        ease: Power2.easeOut
                    }),
                    e.to(a, d, {
                        alpha: 0,
                        ease: Power2.easeOut
                    })
                }
            }, {
                key: "hit",
                value: function(a) {
                    var b = this.dico[a + ".L"];
                    b.active = !0,
                    b.alpha = 1,
                    TweenMax.set(b, {
                        delay: .2,
                        active: !1,
                        alpha: 0
                    })
                }
            }, {
                key: "reset",
                value: function() {
                    for (var a in this.dico)
                        this.dico[a].active = !1,
                        this.dico[a].alpha = 0
                }
            }]),
            a
        }();
        c.default = f
    }
    , {}],
    112: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("three")
          , h = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(g)
          , i = a("game/stage/camera_sequences")
          , j = d(i)
          , k = a("game/GameEvent")
          , l = d(k)
          , m = a("utils/Device")
          , n = d(m)
          , o = a("utils/Viewport")
          , p = d(o)
          , q = function() {
            function a(b, c) {
                var d = this;
                e(this, a),
                this.mode = "animate",
                this.update = this.update.bind(this),
                this.stage = b,
                this.camera = this.stage.camera,
                this.mode = c || "traveling",
                this.target = new h.Vector3,
                this.disable = !1,
                this.friction = .05,
                this.offsets = {
                    follow: new h.Vector3(0,.5,.3),
                    target: new h.Vector3(0,0,-.1),
                    portrait: new h.Vector3(0,.15,.15)
                },
                n.default.mobile && this.offsets.follow.set(0, .35, .3),
                this.velocity = new h.Vector3,
                this.min = new h.Vector3(-.25,0,-.35),
                this.max = new h.Vector3(.25,0,.2),
                this.speed = .001,
                this.angle = 0,
                this.progress = 0,
                this.sequences = j.default;
                for (var f = 0; f < this.sequences.length; f++) {
                    this.sequences[f].current = 0
                }
                l.default.JACKPOT_END.add(function() {
                    d.mode = "follow";
                    var a = d.camera.position.clone().sub(d.target);
                    TweenLite.set(d.offsets.follow, {
                        x: a.x,
                        y: a.y,
                        z: a.z
                    }),
                    TweenLite.to(d.offsets.follow, 2, {
                        x: 0,
                        y: .5,
                        z: .3,
                        ease: Linear.easeNone
                    }),
                    TweenLite.set(d.min, {
                        z: -.5
                    }),
                    TweenLite.to(d.min, 2, {
                        z: -.35,
                        ease: Linear.easeNone
                    }),
                    a = null
                })
            }
            return f(a, [{
                key: "set",
                value: function(a) {
                    var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    if (!this.disable) {
                        this.mode = "animate";
                        var c = new h.Vector3
                          , d = new h.Vector3
                          , e = b.duration || 1.5
                          , f = b.ease || Power4.easeOut
                          , g = b.delay || 0;
                        switch (a) {
                        case "lostBall":
                            c.copy(this.camera.position),
                            d.copy(this.target),
                            c.x += 10 * this.velocity.x,
                            c.y += 10 * this.velocity.y,
                            d.x += 10 * this.velocity.x,
                            d.y += 10 * this.velocity.y;
                            break;
                        case "frameAll":
                            c.set(-.005, .7, .6),
                            d.set(-.005, -.5, -.35);
                            break;
                        case "plunger":
                            c.set(.145, .15, .45),
                            d.set(.2, 0, .25);
                            break;
                        case "ramp0":
                            c.set(.01, .4, -.35),
                            d.set(.01, .08, -.8);
                            break;
                        case "ramp1":
                            c.set(-.45, .4, .35),
                            d.set(-.45, 0, 0);
                            break;
                        case "ramp3":
                            c.set(.42, .5, .2),
                            d.set(.42, .05, -.1);
                            break;
                        case "gate":
                            c.set(.14, .5, .4),
                            d.set(.14, 0, .1),
                            f = Power4.easeInOut;
                            break;
                        case "multiball":
                            c.set(0, .65, .7),
                            d.set(0, 0, 0),
                            f = Power4.easeInOut
                        }
                        TweenLite.to(this.camera.position, e, {
                            x: c.x,
                            y: c.y,
                            z: c.z,
                            delay: g,
                            ease: f
                        }),
                        TweenLite.to(this.target, e, {
                            x: d.x,
                            y: d.y,
                            z: d.z,
                            delay: g,
                            ease: f,
                            onComplete: b.onComplete
                        })
                    }
                }
            }, {
                key: "update",
                value: function() {
                    if (!this.disable && "multiball" != this.mode)
                        switch (this.mode) {
                        case "follow":
                        case "plunger":
                            this.target.z < this.min.z && (this.target.z += .75 * (this.min.z - this.target.z)),
                            "plunger" !== this.mode && this.target.z > this.max.z && (this.target.z += .75 * (this.max.z - this.target.z));
                            var a = this.target.clone()
                              , b = this.offsets["plunger" == this.mode ? "follow" : this.mode].clone();
                            n.default.mobile && !p.default.orientation && b.add(this.offsets.portrait);
                            var c = a.clone().add(b);
                            this.velocity = c.sub(this.camera.position).multiplyScalar(this.friction),
                            this.camera.position.add(this.velocity),
                            "follow" == this.mode && (this.target.x = this.camera.position.x,
                            a.x = this.camera.position.x),
                            this.camera.lookAt(a);
                            break;
                        case "traveling":
                            var d = this.sequences[0]
                              , e = d.rotation.end - d.rotation.start
                              , f = Math.sign(e);
                            this.angle += this.speed * f,
                            d.current = d.rotation.start + this.angle;
                            var g = Math.abs(this.angle / e);
                            this.camera.position.copy(d.target),
                            this.camera.position.x += Math.cos(d.current) * d.radius,
                            this.camera.position.z += Math.sin(d.current) * d.radius,
                            this.camera.position.y += d.height.start,
                            this.camera.position.y += (d.height.end - d.height.start) * g,
                            this.camera.lookAt(d.target),
                            Math.abs(this.angle) > Math.abs(e) && (this.angle = 0,
                            d.current = 0,
                            this.sequences.push(this.sequences.shift()),
                            this.update()),
                            d = null,
                            e = null,
                            f = null,
                            g = null;
                            break;
                        case "animate":
                            this.camera.lookAt(this.target)
                        }
                }
            }]),
            a
        }();
        c.default = q
    }
    , {
        "game/GameEvent": 28,
        "game/stage/camera_sequences": 94,
        three: 10,
        "utils/Device": 135,
        "utils/Viewport": 144
    }],
    113: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("vendors/signal/Signal")
          , h = d(g)
          , i = a("utils/Viewport")
          , j = d(i)
          , k = a("utils/Device")
          , l = d(k)
          , m = function() {
            function a() {
                e(this, a),
                this.canvas = document.createElement("canvas"),
                this.context = this.canvas.getContext("experimental-webgl"),
                this.devicePixelRatio = j.default.devicePixelRatio,
                this.debugRendererInfo = this.context.getExtension("WEBGL_debug_renderer_info"),
                this.unmaskedRenderer = this.debugRendererInfo ? this.context.getParameter(this.debugRendererInfo.UNMASKED_RENDERER_WEBGL) : "",
                this.gpu = this.getGPU(),
                this.versions = {
                    desktop: {
                        ultra: {
                            antialias: !0,
                            shadowMap: !0,
                            reflection: 2,
                            postProcessing: 2,
                            timeStep: 2,
                            maxVelocity: 20,
                            animation: !0
                        }
                    },
                    mobile: {}
                },
                this.versions.desktop.high = this._clone(this.versions.desktop.ultra),
                this.versions.desktop.high.postProcessing = 0,
                this.versions.desktop.high.reflection = 1,
                this.versions.desktop.low = this._clone(this.versions.desktop.high),
                this.versions.desktop.low.shadowMap = !1,
                this.versions.desktop.low.antialias = !1,
                this.versions.desktop.low.reflection = 0,
                this.versions.mobile.high = this._clone(this.versions.desktop.high),
                this.versions.mobile.high.reflection = 0,
                this.versions.mobile.high.postProcessing = 2,
                this.versions.mobile.low = this._clone(this.versions.desktop.low),
                this.versions.mobile.low.antialias = !1,
                this.versions.mobile.low.shadowMap = !1,
                this.versions.mobile.low.timeStep = 1,
                this.versions.mobile.low.maxVelocity = 15,
                this.onChange = new h.default,
                this.set(this.getOptimalVersionName()),
                this.canvas = null,
                this.context = null
            }
            return f(a, [{
                key: "_clone",
                value: function(a) {
                    return JSON.parse(JSON.stringify(a))
                }
            }, {
                key: "getOptimalVersionName",
                value: function() {
                    if (!this.gpu)
                        return "low";
                    if (l.default.browser.firefox)
                        return "low";
                    switch (this.gpu.type) {
                    case "NVIDIA":
                        return this.gpu.prefix || this.gpu.model.match("GTX") ? this.gpu.prefix.match("GTX") || this.gpu.model.match("GTX") ? "ultra" : "high" : "low";
                    case "AMD":
                        return this.versions.desktop.ultra.shadowMap = !1,
                        this.versions.desktop.high.shadowMap = !1,
                        l.default.browser.safari ? "low" : "high";
                    case "Intel":
                        return j.default.devicePixelRatio > 1 && !l.default.browser.safari && screen.width > 1280 ? "high" : "low";
                    case "Adreno":
                        return this.gpu.generation > 4 ? "high" : "low";
                    case "Apple":
                        return this.versions.mobile.low.timeStep = 2,
                        this.gpu.generation > 8 ? "high" : "low"
                    }
                }
            }, {
                key: "get",
                value: function(a) {
                    return this.versions[l.default.mobile ? "mobile" : "desktop"][a]
                }
            }, {
                key: "set",
                value: function(a) {
                    this.currentVersionName = a;
                    var b = this.get(a);
                    for (var c in b)
                        b.hasOwnProperty(c) && (this[c] = b[c]);
                    this.onChange.dispatch()
                }
            }, {
                key: "getGPU",
                value: function() {
                    for (var a = ["Intel", "NVIDIA", "AMD", "Adreno", "Apple"], b = 0; b < a.length; b++) {
                        var c = a[b];
                        if (this.unmaskedRenderer.indexOf(c) > -1) {
                            var d = {
                                type: c,
                                model: null,
                                series: null,
                                generation: null,
                                tier: null,
                                revision: null
                            };
                            d.model = this.unmaskedRenderer.replace(/NVIDIA GeForce |AMD Radeon |Apple | OpenGL Engine/g, "");
                            var e = d.model.split(" ");
                            return d.series = d.type.match(/NVIDIA|AMD/g) ? e[e.length - 1] : d.model,
                            d.series = d.series.replace(/\D/g, ""),
                            d.prefix = e.length > 1 ? e[0] : null,
                            d.generation = d.series.substring(0, d.series.length - 2),
                            d.tier = d.series.slice(-2, -1),
                            d.revision = d.series.slice(-1),
                            "Apple" == d.type && (d.generation = d.series,
                            d.tier = null,
                            d.revision = null),
                            d
                        }
                    }
                }
            }]),
            a
        }();
        c.default = m
    }
    , {
        "utils/Device": 135,
        "utils/Viewport": 144,
        "vendors/signal/Signal": 149
    }],
    114: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = a("three")
          , g = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(f)
          , h = function() {
            function a(b, c) {
                d(this, a),
                this.renderer = b,
                this.shader = c;
                var e = 512 * app.game.config.reflection;
                this.renderTarget = new g.WebGLRenderTarget(e,e,{
                    minFilter: g.LinearFilter,
                    magFilter: g.LinearFilter,
                    format: g.RGBFormat,
                    stencilBuffer: !1
                }),
                this.scene = new g.Scene,
                this.camera = new g.OrthographicCamera(-1,1,1,-1,0,1),
                this.material = new g.ShaderMaterial(c),
                this.uniforms = this.material.uniforms,
                this.quad = new g.Mesh(new g.PlaneBufferGeometry(2,2),null),
                this.quad.material = this.material,
                this.quad.frustumCulled = !1,
                this.scene.add(this.quad)
            }
            return e(a, [{
                key: "resize",
                value: function() {
                    var a = 512 * app.game.config.reflection;
                    this.material.uniforms.resolution.value.set(a, a),
                    this.renderTarget.setSize(a, a)
                }
            }, {
                key: "render",
                value: function() {
                    return this.renderer.render(this.scene, this.camera, this.renderTarget, !0),
                    this.renderTarget.texture
                }
            }]),
            a
        }();
        c.default = h
    }
    , {
        three: 10
    }],
    115: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("three")
          , h = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(g)
          , i = a("utils/Viewport")
          , j = d(i)
          , k = a("utils/Render")
          , l = d(k)
          , m = a("vendors/three/postprocessing/EffectComposer")
          , n = (d(m),
        a("vendors/three/postprocessing/RenderPass"))
          , o = (d(n),
        a("vendors/three/postprocessing/MaskPass"))
          , p = (d(o),
        a("vendors/three/postprocessing/ShaderPass"))
          , q = (d(p),
        a("vendors/three/shaders/CopyShader"))
          , r = (d(q),
        a("vendors/three/shaders/ConvolutionShader"))
          , s = (d(r),
        a("vendors/three/shaders/HorizontalTiltShiftShader"))
          , t = (d(s),
        a("vendors/three/shaders/VerticalTiltShiftShader"))
          , u = (d(t),
        a("game/glsl/pass_through_vert.glsl"))
          , v = d(u)
          , w = a("game/glsl/gaussian_blur_frag.glsl")
          , x = d(w)
          , y = a("game/glsl/additive_blending_frag.glsl")
          , z = d(y)
          , A = function() {
            function a(b) {
                var c = this;
                e(this, a),
                this.camera = b.camera,
                this.scene = b.scene,
                this.renderer = b.renderer,
                this.layers = b.layers,
                this.materials = b.materials.needMasking,
                this.tiltShiftBlur = .8,
                this.quality = app.game.config.postProcessing,
                this.renderTarget = new h.WebGLRenderTarget(0,0),
                this.composers = {
                    default: new h.EffectComposer(this.renderer),
                    occlusion: new h.EffectComposer(this.renderer,this.renderTarget)
                },
                this.copyPass = new h.ShaderPass(h.CopyShader),
                this.blurPass = new h.ShaderPass({
                    uniforms: {
                        tDiffuse: {
                            value: null
                        },
                        resolution: {
                            value: new h.Vector2
                        },
                        blur: {
                            value: 3
                        }
                    },
                    vertexShader: v.default,
                    fragmentShader: x.default
                }),
                this.blurPass.needsSwap = !1,
                this.additiveBlendingPass = new h.ShaderPass({
                    uniforms: {
                        tDiffuse: {
                            value: null
                        },
                        tAdd: {
                            value: null
                        }
                    },
                    vertexShader: v.default,
                    fragmentShader: z.default
                }),
                this.additiveBlendingPass.uniforms.tAdd.value = this.renderTarget.texture,
                this.renderPasses = {
                    default: new h.RenderPass(this.scene,this.camera),
                    occlusion: new h.RenderPass(this.scene,this.camera)
                },
                this.composers.occlusion.addPass(this.renderPasses.occlusion),
                this.composers.occlusion.addPass(this.blurPass),
                this.composers.default.addPass(this.renderPasses.default),
                this.composers.default.addPass(this.additiveBlendingPass),
                this.composers.default.addPass(this.copyPass),
                this.copyPass.renderToScreen = !0,
                app.game.config.onChange.add(function() {
                    c.quality = app.game.config.postProcessing,
                    c.resize()
                })
            }
            return f(a, [{
                key: "update",
                value: function() {
                    var a = void 0
                      , b = this.materials.length;
                    for (a = 0; a < b; a++)
                        this.materials[a].uniforms.visible.value = 0;
                    for (this.composers.occlusion.render(),
                    a = 0; a < b; a++)
                        this.materials[a].uniforms.visible.value = 1,
                        this.materials[a].uniforms.elapsedTime && (this.materials[a].uniforms.elapsedTime.value = l.default.elapsedTime);
                    this.composers.default.render()
                }
            }, {
                key: "resize",
                value: function() {
                    this.size = new h.Vector2(j.default.width,j.default.height),
                    this.resolution = (new h.Vector2).set(1 / j.default.width, 1 / j.default.height);
                    this.tiltShiftBlur,
                    j.default.devicePixelRatio;
                    this.renderTarget.setSize(j.default.width, j.default.height),
                    this.blurPass.uniforms.resolution.value.set(j.default.width, j.default.height),
                    this.composers.occlusion.setSize(j.default.width, j.default.height),
                    this.composers.default.setSize(j.default.width * this.quality, j.default.height * this.quality)
                }
            }]),
            a
        }();
        c.default = A
    }
    , {
        "game/glsl/additive_blending_frag.glsl": 44,
        "game/glsl/gaussian_blur_frag.glsl": 49,
        "game/glsl/pass_through_vert.glsl": 54,
        three: 10,
        "utils/Render": 140,
        "utils/Viewport": 144,
        "vendors/three/postprocessing/EffectComposer": 156,
        "vendors/three/postprocessing/MaskPass": 157,
        "vendors/three/postprocessing/RenderPass": 158,
        "vendors/three/postprocessing/ShaderPass": 159,
        "vendors/three/shaders/ConvolutionShader": 160,
        "vendors/three/shaders/CopyShader": 161,
        "vendors/three/shaders/HorizontalTiltShiftShader": 162,
        "vendors/three/shaders/VerticalTiltShiftShader": 163
    }],
    116: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = a("three")
          , j = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(i)
          , k = a("game/stage/utils/Pass")
          , l = d(k)
          , m = a("game/glsl/pass_through_vert.glsl")
          , n = d(m)
          , o = a("game/glsl/gaussian_blur_frag.glsl")
          , p = d(o)
          , q = function(a) {
            function b(a, c) {
                var d = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                e(this, b);
                var g = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this));
                g.resize = g.resize.bind(g),
                g.renderer = a,
                g.camera = c,
                g.matrixNeedsUpdate = !0;
                var h = 512 * app.game.config.reflection
                  , i = 512 * app.game.config.reflection;
                return g.clipBias = d.clipBias || 5e-4,
                g.rotation.x = .5 * -Math.PI,
                g.plane = new j.Plane,
                g.normal = new j.Vector3(0,0,1),
                g.reflectionWorldPosition = new j.Vector3,
                g.cameraWorldPosition = new j.Vector3,
                g.rotationMatrix = new j.Matrix4,
                g.lookAtPosition = new j.Vector3(0,0,-1),
                g.clipPlane = new j.Vector4,
                g.mapMatrix = new j.Matrix4,
                g.reflectionCamera = g.camera.clone(),
                g.reflectionCamera.matrixAutoUpdate = !0,
                g.renderTarget = new j.WebGLRenderTarget(h,i,{
                    minFilter: j.LinearFilter,
                    magFilter: j.LinearFilter,
                    format: j.RGBFormat,
                    stencilBuffer: !1
                }),
                g.pass = new l.default(g.renderer,{
                    uniforms: {
                        tDiffuse: {
                            value: g.renderTarget.texture
                        },
                        resolution: {
                            value: new j.Vector2(h,i)
                        },
                        blur: {
                            value: 1.2
                        }
                    },
                    vertexShader: n.default,
                    fragmentShader: p.default
                }),
                app.game.config.onChange.add(g.resize),
                g.updateTextureMatrix(),
                g.render(),
                g.resize(),
                g
            }
            return g(b, a),
            h(b, [{
                key: "updateTextureMatrix",
                value: function() {
                    this.updateMatrixWorld(),
                    this.reflectionWorldPosition.setFromMatrixPosition(this.matrixWorld),
                    this.cameraWorldPosition.setFromMatrixPosition(this.camera.matrixWorld),
                    this.rotationMatrix.extractRotation(this.matrixWorld),
                    this.normal.set(0, 0, 1),
                    this.normal.applyMatrix4(this.rotationMatrix);
                    var a = this.reflectionWorldPosition.clone().sub(this.cameraWorldPosition);
                    a.reflect(this.normal).negate(),
                    a.add(this.reflectionWorldPosition),
                    this.rotationMatrix.extractRotation(this.camera.matrixWorld),
                    this.lookAtPosition.set(0, 0, -1),
                    this.lookAtPosition.applyMatrix4(this.rotationMatrix),
                    this.lookAtPosition.add(this.cameraWorldPosition);
                    var b = this.reflectionWorldPosition.clone().sub(this.lookAtPosition);
                    b.reflect(this.normal).negate(),
                    b.add(this.reflectionWorldPosition),
                    this.up.set(0, -1, 0),
                    this.up.applyMatrix4(this.rotationMatrix),
                    this.up.reflect(this.normal).negate(),
                    this.reflectionCamera.position.copy(a),
                    this.reflectionCamera.up = this.up,
                    this.reflectionCamera.lookAt(b),
                    this.reflectionCamera.updateProjectionMatrix(),
                    this.reflectionCamera.updateMatrixWorld(),
                    this.reflectionCamera.matrixWorldInverse.getInverse(this.reflectionCamera.matrixWorld),
                    this.mapMatrix.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1),
                    this.mapMatrix.multiply(this.reflectionCamera.projectionMatrix),
                    this.mapMatrix.multiply(this.reflectionCamera.matrixWorldInverse),
                    this.plane.setFromNormalAndCoplanarPoint(this.normal, this.reflectionWorldPosition),
                    this.plane.applyMatrix4(this.reflectionCamera.matrixWorldInverse),
                    this.clipPlane.set(this.plane.normal.x, this.plane.normal.y, this.plane.normal.z, this.plane.constant);
                    var c = new j.Vector4
                      , d = this.reflectionCamera.projectionMatrix;
                    c.x = Math.sign(this.clipPlane.x) + d.elements[8] / d.elements[0],
                    c.y = Math.sign(this.clipPlane.y) + d.elements[9] / d.elements[5],
                    c.z = -1,
                    c.w = (1 + d.elements[10]) / d.elements[14];
                    var e = new j.Vector4;
                    e = this.clipPlane.multiplyScalar(2 / this.clipPlane.dot(c)),
                    d.elements[2] = e.x,
                    d.elements[6] = e.y,
                    d.elements[10] = e.z + 1 - this.clipBias,
                    d.elements[14] = e.w
                }
            }, {
                key: "render",
                value: function() {
                    this.matrixNeedsUpdate && this.updateTextureMatrix();
                    for (var a = this; null !== a.parent; )
                        a = a.parent;
                    if (void 0 !== a && a instanceof j.Scene) {
                        var b = this.material.visible;
                        this.material.visible = !1,
                        this.renderer.render(a, this.reflectionCamera, this.renderTarget, !1),
                        this.material.visible = b
                    }
                    return this.pass.render()
                }
            }, {
                key: "resize",
                value: function() {
                    this.pass.resize();
                    var a = 512 * app.game.config.reflection;
                    this.renderTarget.setSize(a, a),
                    this.reflectionCamera = this.camera.clone()
                }
            }]),
            b
        }(j.Object3D);
        c.default = q
    }
    , {
        "game/glsl/gaussian_blur_frag.glsl": 49,
        "game/glsl/pass_through_vert.glsl": 54,
        "game/stage/utils/Pass": 114,
        three: 10
    }],
    117: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("three")
          , h = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(g)
          , i = a("vendors/three/loaders/DDSLoader")
          , j = (d(i),
        a("vendors/three/loaders/PVRLoader"))
          , k = (d(j),
        a("utils/Cache"))
          , l = (d(k),
        a("utils/Device"))
          , m = (d(l),
        function() {
            function a() {
                e(this, a),
                this.get = this.get.bind(this),
                this.useCompressedTexture = !0;
                var b = document.createElement("canvas");
                !!window.WebGLRenderingContext && (b.getContext("webgl") || b.getContext("experimental-webgl")) && (this.supportedExtensions = this.getSupportedExtensions(),
                this.format = this.useCompressedTexture ? this.getFormat() : "png",
                this.loader = this.getLoader()),
                this.textures = {}
            }
            return f(a, [{
                key: "_createTexture",
                value: function(a, b) {
                    var c = void 0
                      , d = a.id.replace(".mobile", "").split(".")
                      , e = d.pop().replace(/-dxt5|-atca/g, "")
                      , f = d.pop()
                      , g = f + "." + e;
                    if (this.useCompressedTexture) {
                        var i = a.item.item;
                        c = new h.CompressedTexture;
                        var j = this.loader.parse(i, !0);
                        c.image.width = j.width,
                        c.image.height = j.height,
                        c.mipmaps = j.mipmaps,
                        1 === j.mipmapCount && (c.minFilter = h.LinearFilter),
                        c.format = j.format
                    } else
                        c = new h.Texture,
                        c.image = a.item.item;
                    c.minFilter = c.magFilter = h.LinearFilter,
                    c.needsUpdate = !0,
                    this.textures[g] = c,
                    b && (b(),
                    this.loader = null)
                }
            }, {
                key: "register",
                value: function(a, b) {
                    var c = this;
                    a.forEach(function(d, e) {
                        d.id.match(/pack/g) || setTimeout(function() {
                            c._createTexture(d, e === a.length - 1 ? b : null)
                        }, 20 * e)
                    })
                }
            }, {
                key: "get",
                value: function(a) {
                    return this.textures[a]
                }
            }, {
                key: "getSupportedExtensions",
                value: function() {
                    function a(a) {
                        var c = ["", "WEBKIT_", "MOZ_"]
                          , d = null;
                        for (var e in c)
                            if (d = b.getExtension(c[e] + a))
                                break;
                        return d
                    }
                    var b = document.createElement("canvas").getContext("webgl") || document.createElement("canvas").getContext("experimental-webgl");
                    return {
                        dxt: a("WEBGL_compressed_texture_s3tc"),
                        pvr: a("WEBGL_compressed_texture_pvrtc"),
                        atc: a("WEBGL_compressed_texture_atc")
                    }
                }
            }, {
                key: "getFormat",
                value: function() {
                    if (this.useCompressedTexture)
                        return this.supportedExtensions.dxt ? "dxt5" : this.supportedExtensions.pvr ? "pvr" : this.supportedExtensions.atc ? "atca" : (this.useCompressedTexture = !1,
                        "png")
                }
            }, {
                key: "getLoader",
                value: function() {
                    return this.format.match(/dxt5|atca/g) ? h.DDSLoader : "pvr" == this.format ? h.PVRLoader : void 0
                }
            }]),
            a
        }());
        c.default = new m
    }
    , {
        three: 10,
        "utils/Cache": 133,
        "utils/Device": 135,
        "vendors/three/loaders/DDSLoader": 153,
        "vendors/three/loaders/PVRLoader": 155
    }],
    118: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = function a(b, c, d) {
            null === b && (b = Function.prototype);
            var e = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === e) {
                var f = Object.getPrototypeOf(b);
                return null === f ? void 0 : a(f, c, d)
            }
            if ("value"in e)
                return e.value;
            var g = e.get;
            if (void 0 !== g)
                return g.call(d)
        }
          , j = a("core/modules/AbstractModule")
          , k = d(j)
          , l = a("core/utils/TemplateRenderer")
          , m = d(l)
          , n = a("vendors/signal/Signal")
          , o = d(n)
          , p = a("core/utils/TransitionType")
          , q = d(p)
          , r = function(a) {
            function b(a, c) {
                e(this, b);
                var d = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, c));
                return d.preloadReady = new o.default,
                d
            }
            return g(b, a),
            h(b, [{
                key: "getBatches",
                value: function() {
                    return this.id
                }
            }, {
                key: "preload",
                value: function() {
                    this.preloadReady.dispatch(this.id)
                }
            }, {
                key: "addTemplate",
                value: function(a) {
                    var b = this.getDatas()
                      , c = app.manifestLoader.getFile(this.id, "tpl." + this.id);
                    this.$elt = m.default.append(a, c, b),
                    this.domElement = this.$elt[0]
                }
            }, {
                key: "enter",
                value: function() {
                    this.showed || (this.params.parent ? this.$parentWrapper = $("#" + this.params.parent) : this.$parentWrapper = app.$root,
                    this.addTemplate(this.$parentWrapper),
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "enter", this).call(this))
                }
            }, {
                key: "show",
                value: function() {
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "show", this).call(this)
                }
            }, {
                key: "exit",
                value: function() {
                    this.showed && i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "exit", this).call(this)
                }
            }, {
                key: "hide",
                value: function() {
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "hide", this).call(this)
                }
            }, {
                key: "destroy",
                value: function() {
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "destroy", this).call(this),
                    this.$elt.remove()
                }
            }, {
                key: "resolveTransitionType",
                value: function() {
                    return q.default.EXIT_BEFORE_ENTER
                }
            }, {
                key: "getDatas",
                value: function() {
                    var a = app.datas;
                    return a.params = this.params,
                    a
                }
            }]),
            b
        }(k.default);
        c.default = r
    }
    , {
        "core/modules/AbstractModule": 17,
        "core/utils/TemplateRenderer": 24,
        "core/utils/TransitionType": 25,
        "vendors/signal/Signal": 149
    }],
    119: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = function a(b, c, d) {
            null === b && (b = Function.prototype);
            var e = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === e) {
                var f = Object.getPrototypeOf(b);
                return null === f ? void 0 : a(f, c, d)
            }
            if ("value"in e)
                return e.value;
            var g = e.get;
            if (void 0 !== g)
                return g.call(d)
        }
          , j = a("./BaseModule")
          , k = d(j)
          , l = a("common/Utils")
          , m = a("utils/Device")
          , n = d(m)
          , o = a("utils/Tracker")
          , p = d(o)
          , q = function(a) {
            function b(a, c) {
                e(this, b);
                var d = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, c));
                return (0,
                l.scope)(d, ["changeLb"]),
                d.actualButton = document.querySelector(".footer__navigation__contest"),
                d.actualButton.classList.contains("footer__selected__item") || d.actualButton.classList.add("footer__selected__item"),
                d.actualTable = 0,
                d.lastTable = 0,
                d.contestClose = d.contestClose.bind(d),
                d
            }
            return g(b, a),
            h(b, [{
                key: "registerDOM",
                value: function() {
                    this.tables = this.domElement.querySelectorAll(".rank--choice"),
                    this.panels = this.domElement.querySelectorAll(".panel--choice"),
                    this.buttonClose = document.querySelector(".button__close"),
                    this.launchGameButton = this.domElement.querySelector(".contest__button"),
                    this.overlay = document.querySelector(".overlay")
                }
            }, {
                key: "enter",
                value: function() {
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "enter", this).call(this),
                    this.registerDOM(),
                    this.bind(),
                    this.buttonClose.classList.add("button__close--show")
                }
            }, {
                key: "bind",
                value: function() {
                    for (var a = 0; a < this.tables.length; a++)
                        this.tables[a].addEventListener("click", this.changeLb);
                    this.buttonClose.addEventListener("click", this.contestClose, !1),
                    this.launchGameButton.addEventListener("click", this.startGame, !1)
                }
            }, {
                key: "unbind",
                value: function() {
                    for (var a = 0; a < this.tables.length; a++)
                        this.tables[a].removeEventListener("click", this.changeLb);
                    this.buttonClose.removeEventListener("click", this.contestClose, !1),
                    this.launchGameButton.removeEventListener("click", this.startGame, !1)
                }
            }, {
                key: "show",
                value: function() {
                    var a = this;
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "showStart", this).call(this),
                    setTimeout(function() {
                        a.overlay.classList.add("overlay--darker")
                    }, 20),
                    app.header.show(),
                    app.header.hideMenuButton(),
                    n.default.desktop ? app.footer.show() : app.footer.hide(),
                    this.domElement.classList.remove("contest--animation-out"),
                    this.animationInTimeout = setTimeout(function() {
                        a.domElement.classList.remove("contest--animation-in")
                    }, 100),
                    p.default.pageview("Écran Jeu concours", "/contest")
                }
            }, {
                key: "hide",
                value: function() {
                    var a = this;
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "hideStart", this).call(this),
                    this.unbind(),
                    clearTimeout(this.animationInTimeout),
                    this.domElement.classList.add("contest--animation-out"),
                    (new TimelineLite).add(function() {
                        a.buttonClose.classList.remove("button__close--show"),
                        i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "hideEnd", a).call(a)
                    }, .7)
                }
            }, {
                key: "changeLb",
                value: function(a) {
                    var b = a.target;
                    this.tables[this.actualTable].classList.remove("rank--selected"),
                    this.panels[this.actualTable].classList.remove("panel--selected"),
                    this.actualTable = b.getAttribute("data-typeTable"),
                    this.tables[this.actualTable].classList.add("rank--selected");
                    var c = this.panels[this.actualTable];
                    if (c.classList.add("panel--selected"),
                    parseInt(this.lastTable, 10) !== parseInt(this.actualTable, 10)) {
                        var d = c.querySelector(".choice__image")
                          , e = c.querySelector(".choice__text");
                        TweenMax.set(d, {
                            opacity: 0,
                            scale: .98
                        }),
                        TweenMax.set(e, {
                            opacity: 0,
                            y: 10
                        }),
                        TweenMax.to(d, 1.2, {
                            opacity: 1,
                            scale: 1,
                            ease: Expo.easeOut
                        }),
                        TweenMax.to(e, 1, {
                            opacity: 1,
                            y: 0,
                            ease: Expo.easeOut,
                            delay: .2
                        })
                    }
                    this.lastTable = this.actualTable;
                    var f = parseInt(this.actualTable, 10) + 1;
                    p.default.event("jeu_concours", "click_concours_rang" + f)
                }
            }, {
                key: "startGame",
                value: function() {
                    app.router.navigate("/game"),
                    p.default.event("jeu_concours", "click_start_jeu_concours")
                }
            }, {
                key: "contestClose",
                value: function() {
                    app.footer.resetSelection(),
                    app.router.navigate(app.closeBtnRoute),
                    p.default.event("jeu_concours", "click_fermer_concours")
                }
            }]),
            b
        }(k.default);
        c.default = q
    }
    , {
        "./BaseModule": 118,
        "common/Utils": 14,
        "utils/Device": 135,
        "utils/Tracker": 143
    }],
    120: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = function a(b, c, d) {
            null === b && (b = Function.prototype);
            var e = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === e) {
                var f = Object.getPrototypeOf(b);
                return null === f ? void 0 : a(f, c, d)
            }
            if ("value"in e)
                return e.value;
            var g = e.get;
            if (void 0 !== g)
                return g.call(d)
        }
          , j = a("./BaseModule")
          , k = d(j)
          , l = a("utils/Device")
          , m = d(l)
          , n = a("utils/Viewport")
          , o = d(n)
          , p = a("utils/Tracker")
          , q = d(p)
          , r = function(a) {
            function b(a, c) {
                e(this, b);
                var d = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, c));
                return d.hideCredits = d.hideCredits.bind(d),
                d.handleMouseDown = d.handleMouseDown.bind(d),
                d.handleMouseUp = d.handleMouseUp.bind(d),
                d
            }
            return g(b, a),
            h(b, [{
                key: "registerDOM",
                value: function() {
                    this.buttonClose = this.domElement.querySelector(".button__close"),
                    this.overlay = document.querySelector(".overlay"),
                    this.wrapper = this.domElement.querySelector(".wrapper__credits")
                }
            }, {
                key: "bind",
                value: function() {
                    this.buttonClose.addEventListener("click", this.hideCredits, !1),
                    m.default.mobile ? (this.domElement.addEventListener("touchstart", this.handleMouseDown, !1),
                    this.domElement.addEventListener("touchend", this.handleMouseUp, !1)) : (this.domElement.addEventListener("mousedown", this.handleMouseDown, !1),
                    this.domElement.addEventListener("mouseup", this.handleMouseUp, !1))
                }
            }, {
                key: "unbind",
                value: function() {
                    this.buttonClose.removeEventListener("click", this.hideCredits, !1),
                    m.default.mobile ? (this.domElement.removeEventListener("touchstart", this.handleMouseDown, !1),
                    this.domElement.removeEventListener("touchend", this.handleMouseUp, !1)) : (this.domElement.removeEventListener("mousedown", this.handleMouseDown, !1),
                    this.domElement.removeEventListener("mouseup", this.handleMouseUp, !1))
                }
            }, {
                key: "enter",
                value: function() {
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "enter", this).call(this),
                    this.registerDOM(),
                    this.bind(),
                    this.loopAnimation(),
                    this.buttonClose.classList.add("button__close--show"),
                    q.default.pageview("Écran credits", "/credits")
                }
            }, {
                key: "show",
                value: function() {
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "show", this).call(this),
                    app.header.hideMenuButton(),
                    app.header.hide(),
                    app.footer.hide(),
                    app.header.hideHeaderMenu()
                }
            }, {
                key: "hide",
                value: function() {
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "hide", this).call(this),
                    this.unbind(),
                    this.loopTl.kill(),
                    app.header.showMenuButton(),
                    this.overlay.classList.remove("overlay--darker"),
                    this.buttonClose.classList.remove("button__close--show")
                }
            }, {
                key: "hideCredits",
                value: function() {
                    q.default.event("credits", "click_ferner_credits"),
                    app.router.navigate(app.closeBtnRoute)
                }
            }, {
                key: "destroy",
                value: function() {
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "destroy", this).call(this)
                }
            }, {
                key: "loopAnimation",
                value: function() {
                    var a = this;
                    this.loopTl && this.loopTl.kill(),
                    this.loopTl = new TimelineMax({
                        onComplete: function() {
                            a.loopAnimation()
                        }
                    }),
                    this.loopTl.set(this.wrapper, {
                        y: o.default.height + 10
                    }).to(this.wrapper, 20, {
                        y: -this.wrapper.clientHeight,
                        ease: Power0.easeNone,
                        force3D: !0
                    })
                }
            }, {
                key: "handleMouseDown",
                value: function() {
                    this.loopTl.timeScale(.1)
                }
            }, {
                key: "handleMouseUp",
                value: function() {
                    this.loopTl.timeScale(1)
                }
            }]),
            b
        }(k.default);
        c.default = r
    }
    , {
        "./BaseModule": 118,
        "utils/Device": 135,
        "utils/Tracker": 143,
        "utils/Viewport": 144
    }],
    121: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = function a(b, c, d) {
            null === b && (b = Function.prototype);
            var e = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === e) {
                var f = Object.getPrototypeOf(b);
                return null === f ? void 0 : a(f, c, d)
            }
            if ("value"in e)
                return e.value;
            var g = e.get;
            if (void 0 !== g)
                return g.call(d)
        }
          , j = a("./BaseModule")
          , k = d(j)
          , l = a("utils/Tracker")
          , m = d(l)
          , n = function(a) {
            function b(a, c) {
                e(this, b);
                var d = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, c));
                return d.onUserVerified = d.onUserVerified.bind(d),
                d.onCaptchaExpired = d.onCaptchaExpired.bind(d),
                d.formClose = d.formClose.bind(d),
                d.checkForm = d.checkForm.bind(d),
                d.backToHome = d.backToHome.bind(d),
                d.checkIfName = d.checkIfName.bind(d),
                d.checkIfBirthday = d.checkIfBirthday.bind(d),
                d.checkIfStation = d.checkIfStation.bind(d),
                d.checkIfMail = d.checkIfMail.bind(d),
                d.checkIfZipcode = d.checkIfZipcode.bind(d),
                d.checkIfCheckboxes = d.checkIfCheckboxes.bind(d),
                d.onFocusOutName = d.onFocusOutName.bind(d),
                d.onFocusOutBirthday = d.onFocusOutBirthday.bind(d),
                d.onFocusOutMail = d.onFocusOutMail.bind(d),
                d.onFocusOutZipcode = d.onFocusOutZipcode.bind(d),
                d.onFocusOutStation = d.onFocusOutStation.bind(d),
                d.onFocusOutCheckbox = d.onFocusOutCheckbox.bind(d),
                d
            }
            return g(b, a),
            h(b, [{
                key: "registerDOM",
                value: function() {
                    this.buttonClose = document.querySelector(".button__close"),
                    this.buttonForm = this.domElement.querySelector(".form__button"),
                    this.wrapperForm = this.domElement.querySelector(".wrapper__form"),
                    this.form = this.domElement.querySelector(".form"),
                    this.recaptcha = this.form.querySelector(".g-recaptcha"),
                    this.recaptchaField = this.form.querySelector(".fieldset__captcha"),
                    this.firstname = this.form.querySelector(".firstname"),
                    this.lastname = this.form.querySelector(".lastname"),
                    this.mail = this.form.querySelector(".mail"),
                    this.zipcode = this.form.querySelector(".zipcode"),
                    this.day = this.form.querySelector(".day"),
                    this.month = this.form.querySelector(".month"),
                    this.year = this.form.querySelector(".year"),
                    this.station = this.form.querySelector(".station"),
                    this.checkbox_input = this.form.querySelector(".checkbox_input"),
                    this.checkbox = this.form.querySelector(".checkbox"),
                    this.buttonValid = this.domElement.querySelector(".valid__button"),
                    this.wrapperValid = this.domElement.querySelector(".wrapper__valid"),
                    this.overlay = document.querySelector(".overlay")
                }
            }, {
                key: "bind",
                value: function() {
                    this.buttonClose.addEventListener("click", this.formClose, !1),
                    this.buttonForm.addEventListener("click", this.checkForm, !1),
                    this.buttonValid.addEventListener("click", this.backToHome, !1),
                    this.firstname.addEventListener("focusout", this.onFocusOutName, !1),
                    this.lastname.addEventListener("focusout", this.onFocusOutName, !1),
                    this.mail.addEventListener("focusout", this.onFocusOutMail, !1),
                    this.zipcode.addEventListener("focusout", this.onFocusOutZipcode, !1),
                    this.station.addEventListener("focusout", this.onFocusOutStation, !1),
                    this.day.addEventListener("focusout", this.onFocusOutBirthday, !1),
                    this.month.addEventListener("focusout", this.onFocusOutBirthday, !1),
                    this.year.addEventListener("focusout", this.onFocusOutBirthday, !1),
                    this.checkbox_input.addEventListener("change", this.onFocusOutCheckbox, !1)
                }
            }, {
                key: "unbind",
                value: function() {
                    this.buttonClose.removeEventListener("click", this.formClose, !1),
                    this.buttonForm.removeEventListener("click", this.checkForm, !1),
                    this.buttonValid.removeEventListener("click", this.backToHome, !1),
                    this.firstname.removeEventListener("focusout", this.onFocusOutName, !1),
                    this.lastname.removeEventListener("focusout", this.onFocusOutName, !1),
                    this.mail.removeEventListener("focusout", this.onFocusOutMail, !1),
                    this.zipcode.removeEventListener("focusout", this.onFocusOutZipcode, !1),
                    this.station.removeEventListener("focusout", this.onFocusOutStation, !1),
                    this.day.removeEventListener("focusout", this.onFocusOutBirthday, !1),
                    this.month.removeEventListener("focusout", this.onFocusOutBirthday, !1),
                    this.year.removeEventListener("focusout", this.onFocusOutBirthday, !1),
                    this.checkbox_input.removeEventListener("change", this.onFocusOutCheckbox, !1)
                }
            }, {
                key: "enter",
                value: function() {
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "enter", this).call(this),
                    this.registerDOM(),
                    this.bind();
                    var a = {
                        sitekey: "6LeR1RsUAAAAACDmoiZrvv0A8szv6ZpYG-So-6aJ",
                        callback: this.onUserVerified,
                        "expired-callback": this.onCaptchaExpired
                    };
                    grecaptcha.render(this.recaptcha, a),
                    this.buttonClose.classList.add("button__close--show"),
                    app.closeBtnRoute = "/form",
                    m.default.pageview("Écran de Formulaire d'inscription", "/form")
                }
            }, {
                key: "show",
                value: function() {
                    var a = this;
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "showStart", this).call(this),
                    app.header.show(),
                    app.header.hideMenuButton(),
                    app.footer.hide(),
                    setTimeout(function() {
                        a.domElement.classList.add("form--show"),
                        a.overlay.classList.add("overlay--darker")
                    }, 150)
                }
            }, {
                key: "hide",
                value: function() {
                    var a = this;
                    this.unbind(),
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "hideStart", this).call(this),
                    this.domElement.classList.remove("form--show"),
                    this.overlay.classList.remove("overlay--darker"),
                    (new TimelineLite).add(function() {
                        a.buttonClose.classList.remove("button__close--show"),
                        i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "hideEnd", a).call(a)
                    }, .85)
                }
            }, {
                key: "formClose",
                value: function() {
                    void 0 === app.router.lastRoute ? app.router.navigate("/") : app.router.navigate("/" + app.lastModuleId),
                    m.default.event("formulaire", "click_fermer_formulaire")
                }
            }, {
                key: "formSend",
                value: function() {
                    var a = this
                      , b = app.game.stats.score
                      , c = Math.round(app.game.stats.totalSession / 1e3)
                      , d = {
                        firstname: this.firstname.value,
                        lastname: this.lastname.value,
                        birthday: this.year.value + "-" + this.month.value + "-" + this.day.value,
                        zipcode: this.zipcode.value,
                        email: this.mail.value,
                        fav_station: this.station.value,
                        score: b,
                        time_played: c,
                        optin: this.checkbox_input.checked ? 1 : 0,
                        "g-recaptcha-response": this.recaptchaToken
                    }
                      , e = Object.keys(d).map(function(a) {
                        return encodeURIComponent(a) + "=" + encodeURIComponent(d[a])
                    }).join("&")
                      , f = new XMLHttpRequest;
                    f.onreadystatechange = function() {
                        var b = {};
                        4 == f.readyState && 200 == f.status ? (b = JSON.parse(f.responseText),
                        null == b.error ? (a.wrapperForm.classList.add("wrapper__form--hide"),
                        a.wrapperValid.classList.add("wrapper__valid--show"),
                        app.footer.show()) : (a.recaptchaToken = null,
                        grecaptcha.reset(),
                        a.recaptchaField.classList.add("error"))) : 4 == f.readyState && 200 != f.status && (a.recaptchaToken = null,
                        grecaptcha.reset(),
                        a.recaptchaField.classList.add("error"))
                    }
                    ,
                    f.open("POST", apiURL + "/game/saveScore", !0),
                    f.setRequestHeader("Content-Type", "application/x-www-form-urlencoded; charset=UTF-8"),
                    f.send(e),
                    m.default.event("formulaire", "valider_formulaire_inscription")
                }
            }, {
                key: "backToHome",
                value: function() {
                    this.domElement.classList.remove("wrapper__valid--show"),
                    app.router.navigate("/"),
                    m.default.event("formulaire", "click_confirmation_formulaire")
                }
            }, {
                key: "onUserVerified",
                value: function(a) {
                    this.recaptchaToken = a,
                    this.recaptchaField.classList.remove("error")
                }
            }, {
                key: "onCaptchaExpired",
                value: function() {
                    this.recaptchaToken = null,
                    this.recaptchaField.classList.add("error")
                }
            }, {
                key: "onFocusOutName",
                value: function(a) {
                    a = a.currentTarget || a,
                    a.classList.contains("error") && this.checkIfName(a)
                }
            }, {
                key: "onFocusOutBirthday",
                value: function(a) {
                    a = a.currentTarget || a,
                    a.classList.contains("error") && this.checkIfBirthday()
                }
            }, {
                key: "onFocusOutMail",
                value: function(a) {
                    a = a.currentTarget || a,
                    a.classList.contains("error") && this.checkIfMail(a)
                }
            }, {
                key: "onFocusOutZipcode",
                value: function(a) {
                    a = a.currentTarget || a,
                    a.classList.contains("error") && this.checkIfZipcode(a)
                }
            }, {
                key: "onFocusOutStation",
                value: function(a) {
                    a = a.currentTarget || a,
                    a.classList.contains("error") && this.checkIfStation(a)
                }
            }, {
                key: "onFocusOutCheckbox",
                value: function(a) {
                    a = a.currentTarget || a,
                    this.checkbox.classList.contains("error") && this.checkIfCheckboxes(a)
                }
            }, {
                key: "checkForm",
                value: function() {
                    var a = this.checkIfName(this.firstname)
                      , b = this.checkIfName(this.lastname)
                      , c = this.checkIfBirthday()
                      , d = this.checkIfStation(this.station)
                      , e = this.checkIfZipcode(this.zipcode)
                      , f = this.checkIfMail(this.mail)
                      , g = this.checkIfCheckboxes(this.checkbox_input);
                    return !!(a && b && c && d && e && f && g) && (this.recaptchaToken ? (this.recaptchaField.classList.remove("error"),
                    this.formSend(),
                    !0) : (this.recaptchaField.classList.add("error"),
                    !1))
                }
            }, {
                key: "checkIfName",
                value: function(a) {
                    return a = a.currentTarget || a,
                    /^[\D\s]+$/i.test(a.value) ? (a.classList.contains("error") && a.classList.remove("error"),
                    !0) : (a.classList.add("error"),
                    !1)
                }
            }, {
                key: "checkIfBirthday",
                value: function() {
                    var a = !1
                      , b = !1
                      , c = !1
                      , d = (new Date).getFullYear() - 100
                      , e = (new Date).getFullYear();
                    if ("" == this.day.value ? (this.day.classList.add("error"),
                    a = !1,
                    !1) : isNaN(parseInt(this.day.value, 10)) || parseInt(this.day.value, 10) < 1 || parseInt(this.day.value, 10) > 31 ? (this.day.classList.add("error"),
                    a = !1,
                    !1) : (this.day.classList.remove("error"),
                    a = !0),
                    "" == this.month.value ? (this.month.classList.add("error"),
                    b = !1,
                    !1) : isNaN(parseInt(this.month.value, 10)) || parseInt(this.month.value, 10) < 1 || parseInt(this.month.value, 10) > 12 || 2 == parseInt(this.month.value, 10) && parseInt(this.day.value) > 29 ? (this.month.classList.add("error"),
                    b = !1,
                    !1) : (this.month.classList.remove("error"),
                    b = !0),
                    "" == this.year.value ? (this.year.classList.add("error"),
                    c = !1,
                    !1) : isNaN(parseInt(this.year.value, 10)) || parseInt(this.year.value, 10) < d || parseInt(this.year.value, 10) > e ? (this.year.classList.add("error"),
                    c = !1,
                    !1) : (this.year.classList.remove("error"),
                    c = !0),
                    a && b && c) {
                        var f = new Date(this.year.value,this.month.value - 1,this.day.value)
                          , g = Date.now();
                        return parseInt(g.valueOf() - f.valueOf()) <= 864e5 ? (this.year.classList.add("error"),
                        !1,
                        c = !1,
                        !1) : (this.year.classList.remove("error"),
                        this.month.classList.remove("error"),
                        this.day.classList.remove("error"),
                        !0,
                        !0)
                    }
                    return !1
                }
            }, {
                key: "checkIfMail",
                value: function(a) {
                    return a = a.currentTarget || a,
                    /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i.test(a.value) ? (a.classList.contains("error") && a.classList.remove("error"),
                    !0) : (a.classList.add("error"),
                    !1)
                }
            }, {
                key: "checkIfZipcode",
                value: function(a) {
                    return a = a.currentTarget || a,
                    /^[\d]{5}/i.test(a.value) ? (a.classList.contains("error") && a.classList.remove("error"),
                    !0) : (a.classList.add("error"),
                    !1)
                }
            }, {
                key: "checkIfStation",
                value: function(a) {
                    return a = a.currentTarget || a,
                    "" != a.value && void 0 != a.value ? (a.classList.contains("error") && a.classList.remove("error"),
                    !0) : (a.classList.add("error"),
                    !1)
                }
            }, {
                key: "checkIfCheckboxes",
                value: function(a) {
                    return !0
                }
            }]),
            b
        }(k.default);
        c.default = n
    }
    , {
        "./BaseModule": 118,
        "utils/Tracker": 143
    }],
    122: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = function a(b, c, d) {
            null === b && (b = Function.prototype);
            var e = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === e) {
                var f = Object.getPrototypeOf(b);
                return null === f ? void 0 : a(f, c, d)
            }
            if ("value"in e)
                return e.value;
            var g = e.get;
            if (void 0 !== g)
                return g.call(d)
        }
          , j = a("./BaseModule")
          , k = d(j)
          , l = a("game/audio/ThreeAudioManager")
          , m = d(l)
          , n = a("utils/Device")
          , o = d(n)
          , p = a("utils/Tracker")
          , q = d(p)
          , r = function(a) {
            function b(a, c) {
                e(this, b);
                var d = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, c));
                return d.openIGMenu = d.openIGMenu.bind(d),
                d.continueGame = d.continueGame.bind(d),
                d.restartGame = d.restartGame.bind(d),
                d.switchSound = d.switchSound.bind(d),
                d.switchDisplay = d.switchDisplay.bind(d),
                d.hideWalkthrough = d.hideWalkthrough.bind(d),
                d.escKeypress = d.escKeypress.bind(d),
                d.onMuted = d.onMuted.bind(d),
                d.onUnmuted = d.onUnmuted.bind(d),
                d.handleClickSwitchDisplay = d.handleClickSwitchDisplay.bind(d),
                d
            }
            return g(b, a),
            h(b, [{
                key: "registerDOM",
                value: function() {
                    this.inGamePause = this.domElement.querySelector(".game__menu__pause"),
                    this.inGameMenu = this.domElement.querySelector(".wrapper__menu"),
                    this.buttonContinue = this.domElement.querySelector(".button__continue"),
                    this.buttonRestart = this.domElement.querySelector(".button__restart"),
                    this.toggleSound = this.domElement.querySelector(".toggle__sound"),
                    m.default.muted ? this.onMuted() : this.onUnmuted(),
                    this.toggleDisplay = this.domElement.querySelector(".toggle__display"),
                    this.toggleDisplayUltra = this.toggleDisplay.querySelector(".display__ultra"),
                    this.toggleDisplayHD = this.toggleDisplay.querySelector(".display__hd"),
                    this.toggleDisplaySD = this.toggleDisplay.querySelector(".display__sd"),
                    this.wrapperWalkthrough = this.domElement.querySelector(".wrapper__walkthrough"),
                    this.overlay = document.querySelector(".overlay"),
                    this.gameOverlay = this.domElement.querySelector(".overlay"),
                    o.default.mobile && this.domElement.classList.add("device--mobile"),
                    this.switchDisplay(app.game.config.currentVersionName)
                }
            }, {
                key: "bind",
                value: function() {
                    this.inGamePause.addEventListener("click", this.openIGMenu, !1),
                    this.inGamePause.addEventListener("touchstart", this.openIGMenu, !1),
                    this.buttonContinue.addEventListener("click", this.continueGame, !1),
                    this.buttonRestart.addEventListener("click", this.restartGame, !1),
                    this.toggleSound.addEventListener("click", this.switchSound, !1),
                    o.default.mobile || this.toggleDisplayUltra.addEventListener("click", this.handleClickSwitchDisplay, !1),
                    this.toggleDisplayHD.addEventListener("click", this.handleClickSwitchDisplay, !1),
                    this.toggleDisplaySD.addEventListener("click", this.handleClickSwitchDisplay, !1),
                    this.wrapperWalkthrough.addEventListener("click", this.hideWalkthrough, !1),
                    document.addEventListener("keydown", this.escKeypress, !1),
                    this.gameOverlay.addEventListener("click", this.continueGame, !1),
                    m.default.onMute.add(this.onMuted),
                    m.default.onUnmute.add(this.onUnmuted)
                }
            }, {
                key: "unbind",
                value: function() {
                    this.inGamePause.removeEventListener("click", this.openIGMenu, !1),
                    this.inGamePause.removeEventListener("touchstart", this.openIGMenu, !1),
                    this.buttonContinue.removeEventListener("click", this.continueGame, !1),
                    this.buttonRestart.removeEventListener("click", this.restartGame, !1),
                    this.toggleSound.removeEventListener("click", this.switchSound, !1),
                    o.default.mobile || this.toggleDisplayUltra.removeEventListener("click", this.switchDisplay, !1),
                    this.toggleDisplayHD.removeEventListener("click", this.switchDisplay, !1),
                    this.toggleDisplaySD.removeEventListener("click", this.switchDisplay, !1),
                    this.wrapperWalkthrough.removeEventListener("click", this.hideWalkthrough, !1),
                    document.removeEventListener("keydown", this.escKeypress, !1),
                    this.gameOverlay.removeEventListener("click", this.continueGame, !1),
                    m.default.onMute.remove(this.onMuted),
                    m.default.onUnmute.remove(this.onUnmuted)
                }
            }, {
                key: "onMuted",
                value: function() {
                    this.toggleSound.classList.remove("sound--active")
                }
            }, {
                key: "onUnmuted",
                value: function() {
                    this.toggleSound.classList.add("sound--active")
                }
            }, {
                key: "show",
                value: function() {
                    var a = this;
                    this.registerDOM(),
                    this.bind(),
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "showStart", this).call(this),
                    app.footer.hide(),
                    app.header.hideMenuButton(),
                    app.header.hidePinballLogo(!0),
                    setTimeout(function() {
                        a.overlay.classList.add("overlay--hide"),
                        a.showWalkthrough()
                    }, 150),
                    setTimeout(function() {
                        a.hideWalkthrough()
                    }, 7e3),
                    app.game.start(),
                    q.default.pageview("Écran de jeu (partie)", "/game")
                }
            }, {
                key: "hide",
                value: function() {
                    var a = this;
                    this.unbind(),
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "hideStart", this).call(this),
                    app.game.stop(),
                    this.domElement.classList.remove("game--show"),
                    this.overlay.classList.add("overlay--hide"),
                    (new TimelineLite).add(function() {
                        i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "hideEnd", a).call(a)
                    }, .85)
                }
            }, {
                key: "escKeypress",
                value: function(a) {
                    27 !== a.keyCode || this.domElement.classList.contains("ig__menu--show") ? 27 === a.keyCode && this.continueGame() : this.openIGMenu()
                }
            }, {
                key: "openIGMenu",
                value: function() {
                    this.overlay.classList.remove("overlay--hide"),
                    this.domElement.classList.add("ig__menu--show"),
                    this.inGamePause.classList.add("game__menu__pause--hide"),
                    this.hideWalkthrough(),
                    app.game.pause(),
                    app.header.hide(),
                    q.default.event("jeu", "acces_menu_pause")
                }
            }, {
                key: "continueGame",
                value: function() {
                    this.overlay.classList.add("overlay--hide"),
                    this.domElement.classList.remove("ig__menu--show"),
                    this.inGamePause.classList.remove("game__menu__pause--hide"),
                    app.game.resume(),
                    app.header.show(),
                    q.default.event("jeu", "click_ingame_reprendre")
                }
            }, {
                key: "showWalkthrough",
                value: function() {
                    this.wrapperWalkthrough.classList.remove("wrapper__walkthrough--hide")
                }
            }, {
                key: "hideWalkthrough",
                value: function() {
                    this.wrapperWalkthrough.classList.add("wrapper__walkthrough--hide")
                }
            }, {
                key: "restartGame",
                value: function() {
                    this.overlay.classList.add("overlay--hide"),
                    this.inGamePause.classList.remove("game__menu__pause--hide"),
                    this.domElement.classList.remove("ig__menu--show"),
                    app.header.show(),
                    app.game.plunger.enable = !1,
                    app.game.stop(!0),
                    app.game.missions.reset(),
                    app.game.reset(),
                    app.game.start(),
                    q.default.event("jeu", "click_ingame_recommencer")
                }
            }, {
                key: "switchSound",
                value: function() {
                    this.toggleSound.classList.toggle("sound--active"),
                    this.toggleSound.classList.contains("sound--active") ? q.default.event("jeu", "click_son_on") : q.default.event("jeu", "click_son_off"),
                    m.default.toggle()
                }
            }, {
                key: "handleClickSwitchDisplay",
                value: function(a) {
                    a.currentTarget.classList.contains("display__ultra") ? q.default.event("jeu", "click_affichage_ultra") : a.currentTarget.classList.contains("display__hd") ? q.default.event("jeu", "click_affichage_hd") : a.currentTarget.classList.contains("display__sd") && q.default.event("jeu", "click_affichage_sd"),
                    this.switchDisplay(a)
                }
            }, {
                key: "switchDisplay",
                value: function(a) {
                    "ultra" == a || "string" != typeof a && a.currentTarget.classList.contains("display__ultra") ? (this.toggleDisplay.classList.add("displayultra--active"),
                    this.toggleDisplay.classList.remove("displayhd--active"),
                    this.toggleDisplay.classList.remove("displaysd--active"),
                    app.game.config.set("ultra")) : "high" == a || "string" != typeof a && a.currentTarget.classList.contains("display__hd") ? (this.toggleDisplay.classList.remove("displayultra--active"),
                    this.toggleDisplay.classList.add("displayhd--active"),
                    this.toggleDisplay.classList.remove("displaysd--active"),
                    app.game.config.set("high")) : ("low" == a || "string" != typeof a && a.currentTarget.classList.contains("display__sd")) && (this.toggleDisplay.classList.remove("displayultra--active"),
                    this.toggleDisplay.classList.remove("displayhd--active"),
                    this.toggleDisplay.classList.add("displaysd--active"),
                    app.game.config.set("low"))
                }
            }]),
            b
        }(k.default);
        c.default = r
    }
    , {
        "./BaseModule": 118,
        "game/audio/ThreeAudioManager": 32,
        "utils/Device": 135,
        "utils/Tracker": 143
    }],
    123: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = function a(b, c, d) {
            null === b && (b = Function.prototype);
            var e = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === e) {
                var f = Object.getPrototypeOf(b);
                return null === f ? void 0 : a(f, c, d)
            }
            if ("value"in e)
                return e.value;
            var g = e.get;
            if (void 0 !== g)
                return g.call(d)
        }
          , j = a("./BaseModule")
          , k = d(j);
        a("gsap");
        var l = a("utils/Device")
          , m = d(l)
          , n = a("utils/FunctionUtils")
          , o = d(n)
          , p = a("utils/Tracker")
          , q = d(p)
          , r = a("game/audio/ThreeAudioManager")
          , s = d(r)
          , t = function(a) {
            function b(a, c) {
                e(this, b);
                var d = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, c));
                return d.startGame = d.startGame.bind(d),
                d.onCookieClick = d.onCookieClick.bind(d),
                d.handleKeyDown = d.handleKeyDown.bind(d),
                d
            }
            return g(b, a),
            h(b, [{
                key: "registerDOM",
                value: function() {
                    this.startButton = this.domElement.querySelector(".home__button"),
                    this.cookie = document.querySelector(".home__cookies")
                }
            }, {
                key: "bind",
                value: function() {
                    this.startButton.addEventListener("click", this.startGame, !1),
                    this.cookie.addEventListener("click", this.onCookieClick, !1),
                    addEventListener("keydown", this.handleKeyDown, !1)
                }
            }, {
                key: "unbind",
                value: function() {
                    this.startButton.removeEventListener("click", this.startGame, !1),
                    this.cookie.removeEventListener("click", this.onCookieClick, !1),
                    removeEventListener("keydown", this.handleKeyDown, !1)
                }
            }, {
                key: "onCookieClick",
                value: function(a) {
                    this.cookie.classList.remove("home__cookies--show")
                }
            }, {
                key: "enter",
                value: function() {
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "enter", this).call(this),
                    this.registerDOM(),
                    this.bind(),
                    app.closeBtnRoute = "/"
                }
            }, {
                key: "show",
                value: function() {
                    var a = this;
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "showStart", this).call(this),
                    q.default.pageview("Home page", "/"),
                    app.header.show(),
                    app.header.hidePinballLogo(),
                    app.header.showMenuButton(),
                    app.footer.show(),
                    setTimeout(function() {
                        a.startButton.classList.remove("home__button--hide"),
                        a.domElement.classList.add("home--show"),
                        app.cookiesSeen || a.cookie.classList.add("home__cookies--show")
                    }, 150),
                    setTimeout(function() {
                        a.startButton.classList.remove("home__button--animated"),
                        i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "showEnd", a).call(a)
                    }, 2e3)
                }
            }, {
                key: "hide",
                value: function() {
                    var a = this;
                    this.unbind(),
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "hideStart", this).call(this),
                    app.cookiesSeen = !0,
                    this.cookie.classList.remove("home__cookies--show"),
                    this.domElement.classList.add("home--hide"),
                    m.default.mobile && app.footer.hide(),
                    (new TimelineLite).add(function() {
                        i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "hideEnd", a).call(a)
                    }, .85)
                }
            }, {
                key: "startGame",
                value: function() {
                    app.router.navigate("/game"),
                    s.default.init(),
                    s.default.enable(),
                    audioContext.resume(),
                    "android" === m.default.os && o.default.requestFullScreen(),
                    q.default.event("home", "click_start_jeu")
                }
            }, {
                key: "handleKeyDown",
                value: function(a) {}
            }]),
            b
        }(k.default);
        c.default = t
    }
    , {
        "./BaseModule": 118,
        "game/audio/ThreeAudioManager": 32,
        gsap: 4,
        "utils/Device": 135,
        "utils/FunctionUtils": 137,
        "utils/Tracker": 143
    }],
    124: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = function a(b, c, d) {
            null === b && (b = Function.prototype);
            var e = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === e) {
                var f = Object.getPrototypeOf(b);
                return null === f ? void 0 : a(f, c, d)
            }
            if ("value"in e)
                return e.value;
            var g = e.get;
            if (void 0 !== g)
                return g.call(d)
        }
          , j = a("./BaseModule")
          , k = d(j)
          , l = a("common/Utils")
          , m = a("utils/MathUtils")
          , n = d(m)
          , o = a("utils/Device")
          , p = d(o)
          , q = a("utils/Viewport")
          , r = (d(q),
        a("utils/Tracker"))
          , s = d(r)
          , t = function(a) {
            function b(a, c) {
                e(this, b);
                var d = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, c));
                (0,
                l.scope)(d, ["changeLb", "scrollScore", "activateScroll", "deActivateScroll", "moveMouse", "leaderboardClose"]),
                d.scrollEnabled = !1;
                var g = document.querySelector(".footer__navigation__leaderboard");
                return g.classList.contains("footer__selected__item") || g.classList.add("footer__selected__item"),
                d.actualTable = 0,
                d.lastTable = 0,
                d.scrollClicked = !1,
                d.baseValue = 0,
                d.posScroll = 0,
                d
            }
            return g(b, a),
            h(b, [{
                key: "getDatas",
                value: function() {
                    for (var a = i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "getDatas", this).call(this), c = 1; c <= 3; c++) {
                        a["rank" + c] = JSON.parse(app.manifestLoader.getFile("leaderboard", "rank" + c));
                        for (var d = a["rank" + c].length - 1; d >= 0; d--)
                            a["rank" + c][d].score = this.formatScore(a["rank" + c][d].score)
                    }
                    return a
                }
            }, {
                key: "registerDOM",
                value: function() {
                    this.tables = this.domElement.querySelectorAll(".rank--choice"),
                    this.panels = this.domElement.querySelectorAll(".panel--choice"),
                    this.mPanel = this.domElement.querySelector(".panel"),
                    this.scrollBar = this.domElement.querySelector(".scrollbar"),
                    this.scrollBarHandle = this.domElement.querySelector(".scrollbar__handle"),
                    this.buttonClose = document.querySelector(".button__close"),
                    this.launchGameButton = this.domElement.querySelector(".leaderboard__button"),
                    this.overlay = document.querySelector(".overlay")
                }
            }, {
                key: "enter",
                value: function() {
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "enter", this).call(this),
                    this.registerDOM(),
                    this.bind(),
                    this.buttonClose.classList.add("button__close--show"),
                    s.default.pageview("Écran Classement", "/leaderboard")
                }
            }, {
                key: "bind",
                value: function() {
                    p.default.mobile || (p.default.browser.firefox ? document.addEventListener("DOMMouseScroll", this.scrollScore) : (document.addEventListener("wheel", this.scrollScore),
                    document.addEventListener("mousewheel", this.scrollScore)));
                    for (var a = this.tables.length - 1; a >= 0; a--)
                        this.tables[a].addEventListener("click", this.changeLb);
                    this.scrollBarHandle.addEventListener("mousedown", this.activateScroll),
                    document.addEventListener("mouseup", this.deActivateScroll),
                    document.addEventListener("mousemove", this.moveMouse),
                    this.buttonClose.addEventListener("click", this.leaderboardClose, !1),
                    this.launchGameButton.addEventListener("click", this.startGame, !1)
                }
            }, {
                key: "unbind",
                value: function() {
                    p.default.mobile || (p.default.browser.firefox ? document.removeEventListener("DOMMouseScroll", this.scrollScore) : (document.removeEventListener("wheel", this.scrollScore),
                    document.removeEventListener("mousewheel", this.scrollScore)));
                    for (var a = this.tables.length - 1; a >= 0; a--)
                        this.tables[a].removeEventListener("click", this.changeLb);
                    this.scrollBarHandle.removeEventListener("mousedown", this.activateScroll),
                    document.removeEventListener("mouseup", this.deActivateScroll),
                    document.removeEventListener("mousemove", this.moveMouse),
                    this.buttonClose.removeEventListener("click", this.leaderboardClose, !1),
                    this.launchGameButton.removeEventListener("click", this.startGame, !1)
                }
            }, {
                key: "show",
                value: function() {
                    var a = this;
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "showStart", this).call(this),
                    app.header.show(),
                    app.header.hideMenuButton(),
                    p.default.desktop ? app.footer.show() : app.footer.hide(),
                    this.domElement.classList.remove("leaderboard--animation-out"),
                    this.animationInTimeout = setTimeout(function() {
                        a.domElement.classList.remove("leaderboard--animation-in")
                    }, 100),
                    setTimeout(function() {
                        a.overlay.classList.add("overlay--darker")
                    }, 20)
                }
            }, {
                key: "hide",
                value: function() {
                    var a = this;
                    this.unbind(),
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "hideStart", this).call(this),
                    clearTimeout(this.animationInTimeout),
                    this.domElement.classList.add("leaderboard--animation-out"),
                    (new TimelineLite).add(function() {
                        a.buttonClose.classList.remove("button__close--show"),
                        i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "hideEnd", a).call(a)
                    }, .7)
                }
            }, {
                key: "activateScroll",
                value: function(a) {
                    this.scrollClicked = !0,
                    "" != this.scrollBarHandle.style.top && (this.posScroll = parseInt(this.scrollBarHandle.style.top, 10)),
                    p.default.mobile ? this.baseValue = a.touches[0].clientY : this.baseValue = a.clientY
                }
            }, {
                key: "deActivateScroll",
                value: function() {
                    this.scrollClicked = !1,
                    this.baseValue = 0,
                    this.posScroll = 0
                }
            }, {
                key: "moveMouse",
                value: function(a) {
                    if (p.default.mobile || this.scrollClicked) {
                        var b = this.panels[this.actualTable]
                          , c = 0;
                        c = p.default.mobile ? -1 * (a.touches[0].clientY - this.baseValue) + this.posScroll : a.clientY - this.baseValue + this.posScroll,
                        c = Math.max(0, Math.min(c, b.clientHeight - this.scrollBarHandle.clientHeight)),
                        this.scrollBarHandle.style.top = c + "px";
                        var d = c / (b.clientHeight - this.scrollBarHandle.clientHeight);
                        b.scrollTop = d * (b.querySelector(".name__panel").clientHeight - b.clientHeight)
                    }
                }
            }, {
                key: "scrollScore",
                value: function(a) {
                    if (this.scrollEnabled) {
                        var b = a.wheelDelta ? a.wheelDelta : 20 * -a.detail
                          , c = this.panels[this.actualTable];
                        c.scrollTop -= b / 2;
                        var d = c.scrollTop / (c.querySelector(".name__panel").clientHeight - c.clientHeight)
                          , e = d * (c.clientHeight - this.scrollBarHandle.clientHeight);
                        this.scrollBarHandle.style.top = e + "px"
                    }
                }
            }, {
                key: "changeLb",
                value: function(a) {
                    var b = a.target;
                    this.tables[this.actualTable].classList.remove("rank--selected"),
                    this.panels[this.actualTable].classList.remove("panel--selected"),
                    this.panels[this.actualTable].scrollTop = 0,
                    this.actualTable = b.getAttribute("data-typeTable"),
                    this.tables[this.actualTable].classList.add("rank--selected"),
                    this.panels[this.actualTable].classList.add("panel--selected");
                    var c = this.mPanel.clientHeight;
                    this.panels[this.actualTable].querySelector(".name__panel").clientHeight > c ? (this.scrollBar.classList.contains("scrollbar--hide") && (this.scrollBar.classList.remove("scrollbar--hide"),
                    this.mPanel.classList.remove("no__scrollBar")),
                    this.scrollEnabled = !0) : (this.scrollBar.classList.contains("scrollbar--hide") || (this.scrollBar.classList.add("scrollbar--hide"),
                    this.mPanel.classList.add("no__scrollBar")),
                    this.scrollEnabled = !1),
                    this.panels[this.actualTable].scrollTop = 0,
                    this.scrollBarHandle.style.top = "0px",
                    this.animateCurrentTabContent(),
                    this.scrollEnabled && this.setScrollbarHeight(),
                    this.lastTable = this.actualTable;
                    var d = parseInt(this.actualTable, 10) + 1;
                    s.default.event("classement", "click_classement_rang" + d)
                }
            }, {
                key: "animateCurrentTabContent",
                value: function() {
                    if (parseInt(this.lastTable, 10) !== parseInt(this.actualTable, 10)) {
                        var a = this.panels[this.actualTable]
                          , b = a.querySelector(".number__panel")
                          , c = a.querySelector(".name__panel")
                          , d = a.querySelector(".point__panel");
                        TweenMax.set([b, c, d], {
                            opacity: 0,
                            x: 10
                        }),
                        TweenMax.to(b, 1.4, {
                            opacity: 1,
                            x: 0,
                            ease: Expo.easeOut
                        }),
                        TweenMax.to(c, 1.4, {
                            opacity: 1,
                            x: 0,
                            ease: Expo.easeOut,
                            delay: .05
                        }),
                        TweenMax.to(d, 1.4, {
                            opacity: 1,
                            x: 0,
                            ease: Expo.easeOut,
                            delay: .1
                        })
                    }
                }
            }, {
                key: "setScrollbarHeight",
                value: function() {
                    var a = this.panels[this.actualTable]
                      , b = a.querySelectorAll(".number__panel li")
                      , c = b.length;
                    this.scrollBarHandle.style.height = n.default.map(c, 0, 900, 100, 8) + "%"
                }
            }, {
                key: "checksizeScore",
                value: function() {
                    for (var a = this.panels[this.actualTable], b = a.querySelector(".name__panel").clientWidth, c = a.querySelectorAll(".point__player"), d = a.querySelectorAll(".name__player"), e = 0; e < c.length; e++) {
                        var f = b - (30 + c[e].clientWidth);
                        d[e].style.width = f + "px"
                    }
                }
            }, {
                key: "startGame",
                value: function() {
                    app.router.navigate("/game"),
                    s.default.event("classement", "click_start_jeu_classement")
                }
            }, {
                key: "leaderboardClose",
                value: function() {
                    app.footer.resetSelection(),
                    app.router.navigate(app.closeBtnRoute),
                    s.default.event("classement", "click_fermer_classement")
                }
            }, {
                key: "formatScore",
                value: function(a) {
                    return a.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".")
                }
            }]),
            b
        }(k.default);
        c.default = t
    }
    , {
        "./BaseModule": 118,
        "common/Utils": 14,
        "utils/Device": 135,
        "utils/MathUtils": 138,
        "utils/Tracker": 143,
        "utils/Viewport": 144
    }],
    125: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = function() {
            function a() {
                d(this, a),
                this.speed = 0,
                this.onStart = this.onStart.bind(this),
                this.onProgress = this.onProgress.bind(this),
                this.onComplete = this.onComplete.bind(this),
                this.bind = this.bind.bind(this),
                this.$loader = $("#loader")
            }
            return e(a, [{
                key: "bind",
                value: function() {
                    app.manifestLoader.start.add(this.onStart),
                    app.manifestLoader.progress.add(this.onProgress),
                    app.manifestLoader.complete.add(this.onComplete)
                }
            }, {
                key: "onStart",
                value: function() {
                    this.prevTime = Date.now(),
                    this.prevLoaded = 0,
                    this.$loader.addClass("show")
                }
            }, {
                key: "onProgress",
                value: function(a) {
                    var b = (a.loaded - this.prevLoaded) / (Date.now() - this.prevTime) * 1e3;
                    isNaN(b) || (this.speed = b.toFixed(2)),
                    this.prevLoaded = a.loaded,
                    this.prevTime = Date.now()
                }
            }, {
                key: "onComplete",
                value: function() {
                    this.$loader.removeClass("show");
                    this.speed > 2.5 && this.speed,
                    this.speed
                }
            }]),
            a
        }();
        c.default = f
    }
    , {}],
    126: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = a("vendors/signal/Signal")
          , g = function(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }(f)
          , h = function() {
            function a() {
                d(this, a),
                this.speed = 0,
                this.destroy = new g.default,
                this.onStart = this.onStart.bind(this),
                this.onProgress = this.onProgress.bind(this),
                this.onComplete = this.onComplete.bind(this),
                this.registerDOM(),
                this.bind()
            }
            return e(a, [{
                key: "registerDOM",
                value: function() {
                    this.mainLoader = document.querySelector("#main-loader"),
                    this.progress = this.mainLoader.querySelector(".loader__progress")
                }
            }, {
                key: "bind",
                value: function() {
                    app.manifestLoader.start.add(this.onStart),
                    app.manifestLoader.progress.add(this.onProgress),
                    app.manifestLoader.complete.add(this.onComplete)
                }
            }, {
                key: "unbind",
                value: function() {
                    app.manifestLoader.start.remove(this.onStart),
                    app.manifestLoader.progress.remove(this.onProgress),
                    app.manifestLoader.complete.remove(this.onComplete)
                }
            }, {
                key: "onStart",
                value: function() {
                    this.prevTime = Date.now(),
                    this.prevLoaded = 0,
                    this.mainLoader.classList.add("show")
                }
            }, {
                key: "onProgress",
                value: function(a) {
                    var b = (a.loaded - this.prevLoaded) / (Date.now() - this.prevTime) * 1e3;
                    isNaN(b) || (this.speed = b.toFixed(2)),
                    this.prevLoaded = a.loaded,
                    this.prevTime = Date.now();
                    var c = 5 * Math.floor(100 * a.progress / 5);
                    this.progress.style.width = c + "%"
                }
            }, {
                key: "onComplete",
                value: function() {
                    var a = this;
                    app.game.onLoad(function() {
                        a.mainLoader.classList.remove("show"),
                        a.unbind(),
                        a.destroy.dispatch()
                    });
                    this.speed > 2.5 && this.speed,
                    this.speed
                }
            }]),
            a
        }();
        c.default = h
    }
    , {
        "vendors/signal/Signal": 149
    }],
    127: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = function a(b, c, d) {
            null === b && (b = Function.prototype);
            var e = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === e) {
                var f = Object.getPrototypeOf(b);
                return null === f ? void 0 : a(f, c, d)
            }
            if ("value"in e)
                return e.value;
            var g = e.get;
            if (void 0 !== g)
                return g.call(d)
        }
          , j = a("./BaseModule")
          , k = d(j)
          , l = a("utils/Sharer")
          , m = d(l)
          , n = a("utils/DateUtils")
          , o = d(n)
          , p = a("utils/NumberUtils")
          , q = d(p)
          , r = a("utils/Device")
          , s = d(r)
          , t = a("utils/FunctionUtils")
          , u = d(t)
          , v = a("utils/Tracker")
          , w = d(v)
          , x = function(a) {
            function b(a, c) {
                e(this, b);
                var d = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, c));
                return d.restartGame = d.restartGame.bind(d),
                d.openForm = d.openForm.bind(d),
                d.handleKeyDown = d.handleKeyDown.bind(d),
                d
            }
            return g(b, a),
            h(b, [{
                key: "registerDOM",
                value: function() {
                    this.buttonRestart = this.domElement.querySelector(".button__restart"),
                    this.formButton = this.domElement.querySelector(".button__form"),
                    this.shareTwitter = this.domElement.querySelector(".button-tw"),
                    this.shareFacebook = this.domElement.querySelector(".button-fb"),
                    this.overlay = document.querySelector(".overlay")
                }
            }, {
                key: "bind",
                value: function() {
                    this.buttonRestart.addEventListener("click", this.restartGame, !1),
                    this.formButton.addEventListener("click", this.openForm, !1),
                    this.shareTwitter.addEventListener("click", this.openShareTwitter),
                    this.shareFacebook.addEventListener("click", this.openShareFacebook),
                    document.addEventListener("keydown", this.handleKeyDown, !1)
                }
            }, {
                key: "unbind",
                value: function() {
                    this.buttonRestart.removeEventListener("click", this.restartGame, !1),
                    this.formButton.removeEventListener("click", this.openForm, !1),
                    this.shareTwitter.addEventListener("click", this.openShareTwitter),
                    this.shareFacebook.addEventListener("click", this.openShareFacebook),
                    document.removeEventListener("keydown", this.handleKeyDown, !1)
                }
            }, {
                key: "enter",
                value: function() {
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "enter", this).call(this),
                    this.registerDOM(),
                    this.bind(),
                    app.closeBtnRoute = "/result",
                    w.default.pageview("Écran Résultat (Game over)", "/result")
                }
            }, {
                key: "getDatas",
                value: function() {
                    var a = app.datas;
                    return a.l10n.result.mission.data = app.game.stats.nbMissions,
                    a.l10n.result.precision.data = Math.round(100 * app.game.stats.precision),
                    a.l10n.result.multiballs.data = app.game.stats.multiballs,
                    a.l10n.result.survival.data = o.default.formatMsToMinSec(app.game.stats.sessionDuration),
                    a.l10n.result.score.data = q.default.formatWithSeparator(app.game.stats.score),
                    a
                }
            }, {
                key: "show",
                value: function() {
                    var a = this;
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "showStart", this).call(this),
                    app.header.show(),
                    app.header.showMenuButton(),
                    app.footer.show(),
                    setTimeout(function() {
                        a.overlay.classList.remove("overlay--hide"),
                        a.overlay.classList.remove("overlay--darker"),
                        a.domElement.classList.add("result--show")
                    }, 20)
                }
            }, {
                key: "hide",
                value: function() {
                    var a = this;
                    this.unbind(),
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "hideStart", this).call(this),
                    this.domElement.classList.remove("result--show"),
                    (new TimelineLite).add(function() {
                        i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "hideEnd", a).call(a)
                    }, .85)
                }
            }, {
                key: "restartGame",
                value: function() {
                    "android" === s.default.os && u.default.requestFullScreen(),
                    app.router.navigate("/game"),
                    w.default.event("resultat", "click_recommencer")
                }
            }, {
                key: "openForm",
                value: function() {
                    app.router.navigate("/form"),
                    w.default.event("resultat", "click_participer_jeu_concours")
                }
            }, {
                key: "openShareTwitter",
                value: function() {
                    m.default.twitter(app.datas.l10n.result.share.twitter_text, ["OUIGOLetsPlay"], baseURL),
                    w.default.event("resultat", "partage_score_twitter")
                }
            }, {
                key: "openShareFacebook",
                value: function() {
                    m.default.facebook(baseURL + "?r"),
                    w.default.event("resultat", "partage_score_facebook")
                }
            }, {
                key: "handleKeyDown",
                value: function(a) {}
            }]),
            b
        }(k.default);
        c.default = x
    }
    , {
        "./BaseModule": 118,
        "utils/DateUtils": 134,
        "utils/Device": 135,
        "utils/FunctionUtils": 137,
        "utils/NumberUtils": 139,
        "utils/Sharer": 141,
        "utils/Tracker": 143
    }],
    128: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        function f(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
        function g(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var h = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , i = function a(b, c, d) {
            null === b && (b = Function.prototype);
            var e = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === e) {
                var f = Object.getPrototypeOf(b);
                return null === f ? void 0 : a(f, c, d)
            }
            if ("value"in e)
                return e.value;
            var g = e.get;
            if (void 0 !== g)
                return g.call(d)
        }
          , j = a("./BaseModule")
          , k = d(j)
          , l = a("utils/Tracker")
          , m = (d(l),
        function(a) {
            function b(a, c) {
                return e(this, b),
                f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, c))
            }
            return g(b, a),
            h(b, [{
                key: "registerDOM",
                value: function() {
                    this.overlay = document.querySelector(".overlay"),
                    this.wrapperForm = this.domElement.querySelector(".wrapper__form"),
                    this.form = this.domElement.querySelector(".form"),
                    this.buttonValid = this.domElement.querySelector(".valid__button"),
                    this.wrapperValid = this.domElement.querySelector(".wrapper__valid"),
                    this.city = this.form.querySelector(".city"),
                    this.schoolName = this.form.querySelector(".school_name"),
                    this.bdeName = this.form.querySelector(".bde_name"),
                    this.bdeEmail = this.form.querySelector(".bde_email"),
                    this.bdePhone = this.form.querySelector(".bde_phone"),
                    this.userFirstname = this.form.querySelector(".user_firstname"),
                    this.userLastname = this.form.querySelector(".user_lastname"),
                    this.userEmail = this.form.querySelector(".user_email"),
                    this.checkbox = this.form.querySelector(".checkbox"),
                    this.checkbox_input = this.form.querySelector(".checkbox_input"),
                    this.recaptcha = this.form.querySelector(".g-recaptcha"),
                    this.recaptchaField = this.form.querySelector(".fieldset__captcha"),
                    this.buttonForm = this.domElement.querySelector(".form__button")
                }
            }, {
                key: "fastbind",
                value: function(a) {
                    return this.bound || (this.bound = []),
                    ~this.bound.indexOf(a) ? this[a] : (this[a],
                    this[a] = this[a].bind(this),
                    this.bound.push(a),
                    this[a])
                }
            }, {
                key: "bind",
                value: function() {
                    this.fastbind("onUserVerified"),
                    this.fastbind("onCaptchaExpired"),
                    this.buttonValid.addEventListener("click", this.fastbind("trainPinball"), !1),
                    this.buttonForm.addEventListener("click", this.fastbind("checkForm"), !1),
                    this.city.addEventListener("focusout", this.fastbind("onFocusOutCity"), !1),
                    this.schoolName.addEventListener("focusout", this.fastbind("onFocusOutSchoolName"), !1),
                    this.bdeEmail.addEventListener("focusout", this.fastbind("onFocusOutBdeEmail"), !1),
                    this.bdePhone.addEventListener("focusout", this.fastbind("onFocusOutBdePhone"), !1),
                    this.userLastname.addEventListener("focusout", this.fastbind("onFocusOutUserLastname"), !1),
                    this.userEmail.addEventListener("focusout", this.fastbind("onFocusOutUserEmail"), !1),
                    this.checkbox_input.addEventListener("change", this.fastbind("onFocusOutCheckbox"), !1)
                }
            }, {
                key: "unbind",
                value: function() {
                    this.buttonValid.removeEventListener("click", this.fastbind("trainPinball"), !1),
                    this.buttonForm.removeEventListener("click", this.fastbind("checkForm"), !1),
                    this.city.removeEventListener("focusout", this.fastbind("onFocusOutCity"), !1),
                    this.schoolName.removeEventListener("focusout", this.fastbind("onFocusOutSchoolName"), !1),
                    this.bdeEmail.removeEventListener("focusout", this.fastbind("onFocusOutBdeEmail"), !1),
                    this.bdePhone.removeEventListener("focusout", this.fastbind("onFocusOutBdePhone"), !1),
                    this.userLastname.removeEventListener("focusout", this.fastbind("onFocusOutUserLastname"), !1),
                    this.userEmail.removeEventListener("focusout", this.fastbind("onFocusOutUserEmail"), !1),
                    this.checkbox_input.removeEventListener("change", this.fastbind("onFocusOutCheckbox"), !1)
                }
            }, {
                key: "enter",
                value: function() {
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "enter", this).call(this),
                    this.registerDOM(),
                    this.bind();
                    var a = {
                        sitekey: "6LeR1RsUAAAAACDmoiZrvv0A8szv6ZpYG-So-6aJ",
                        callback: this.onUserVerified,
                        "expired-callback": this.onCaptchaExpired
                    };
                    grecaptcha.render(this.recaptcha, a)
                }
            }, {
                key: "show",
                value: function() {
                    var a = this;
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "showStart", this).call(this),
                    app.header.show(),
                    app.header.hideMenuButton(),
                    app.footer.hide(),
                    setTimeout(function() {
                        a.hidden || (a.domElement.classList.add("form--show"),
                        a.overlay.classList.add("overlay--darker"),
                        a.overlay.classList.remove("overlay--hide"))
                    }, 150)
                }
            }, {
                key: "hide",
                value: function() {
                    this.hidden = !0,
                    this.unbind(),
                    i(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "hide", this).call(this)
                }
            }, {
                key: "formSend",
                value: function() {
                    var a = this
                      , b = {
                        city: this.city.value,
                        school_name: this.schoolName.value,
                        bde_name: this.bdeName.value,
                        bde_email: this.bdeEmail.value,
                        bde_phone: (this.bdePhone.value + "").trim(),
                        user_firstname: this.userFirstname.value,
                        user_lastname: this.userLastname.value,
                        user_email: this.userEmail.value,
                        recaptcha: this.recaptchaToken
                    }
                      , c = Object.keys(b).map(function(a) {
                        return encodeURIComponent(a) + "=" + encodeURIComponent(b[a])
                    }).join("&");
                    this.wrapperForm.classList.add("wrapper__form--hide"),
                    this.wrapperValid.classList.add("wrapper__valid--show");
                    var d = new XMLHttpRequest;
                    d.onreadystatechange = function() {
                        var b = {};
                        4 == d.readyState && 200 == d.status ? (b = JSON.parse(d.responseText),
                        null == b.error ? (a.wrapperForm.classList.add("wrapper__form--hide"),
                        a.wrapperValid.classList.add("wrapper__valid--show"),
                        app.footer.show()) : (a.recaptchaToken = null,
                        grecaptcha.reset(),
                        a.recaptchaField.classList.add("error"))) : 4 == d.readyState && 200 != d.status && (a.recaptchaToken = null,
                        grecaptcha.reset(),
                        a.recaptchaField.classList.add("error"))
                    }
                    ,
                    d.open("POST", schoolFormApiURL + "/school/register", !0),
                    d.setRequestHeader("Content-Type", "application/x-www-form-urlencoded; charset=UTF-8"),
                    d.send(c)
                }
            }, {
                key: "trainPinball",
                value: function() {
                    app.router.navigate("/")
                }
            }, {
                key: "onUserVerified",
                value: function(a) {
                    this.recaptchaToken = a,
                    this.recaptchaField.classList.remove("error")
                }
            }, {
                key: "onCaptchaExpired",
                value: function() {
                    this.recaptchaToken = null,
                    this.recaptchaField.classList.add("error")
                }
            }, {
                key: "onFocusOutCity",
                value: function(a) {
                    a = a.currentTarget || a,
                    a.classList.contains("error") && this.checkIfCity(a)
                }
            }, {
                key: "onFocusOutSchoolName",
                value: function(a) {
                    a = a.currentTarget || a,
                    a.classList.contains("error") && this.checkIfName(a)
                }
            }, {
                key: "onFocusOutBdeName",
                value: function(a) {
                    a = a.currentTarget || a,
                    a.classList.contains("error") && this.checkIfName(a)
                }
            }, {
                key: "onFocusOutBdeEmail",
                value: function(a) {
                    a = a.currentTarget || a,
                    a.classList.contains("error") && this.checkIfMail(a)
                }
            }, {
                key: "onFocusOutBdePhone",
                value: function(a) {
                    a = a.currentTarget || a,
                    a.classList.contains("error") && this.checkIfPhone(a)
                }
            }, {
                key: "onFocusOutUserFirstname",
                value: function(a) {
                    a = a.currentTarget || a,
                    a.classList.contains("error") && this.checkIfName(a)
                }
            }, {
                key: "onFocusOutUserLastname",
                value: function(a) {
                    a = a.currentTarget || a,
                    a.classList.contains("error") && this.checkIfName(a)
                }
            }, {
                key: "onFocusOutUserEmail",
                value: function(a) {
                    a = a.currentTarget || a,
                    a.classList.contains("error") && this.checkIfMail(a)
                }
            }, {
                key: "onFocusOutCheckbox",
                value: function(a) {
                    a = a.currentTarget || a,
                    this.checkbox.classList.contains("error") && this.checkIfCheckboxes(a)
                }
            }, {
                key: "scrollTo",
                value: function(a) {
                    var b = a.getBoundingClientRect().top;
                    this.domElement.scrollTop += b - 50
                }
            }, {
                key: "checkAndScroll",
                value: function(a, b, c) {
                    var d = this[a](b);
                    return !d && c && this.scrollTo(b),
                    d
                }
            }, {
                key: "checkForm",
                value: function() {
                    var a = !0;
                    return a &= this.checkAndScroll("checkIfCity", this.city, a),
                    a &= this.checkAndScroll("checkIfName", this.schoolName, a),
                    a &= this.checkAndScroll("checkIfMail", this.bdeEmail, a),
                    a &= this.checkAndScroll("checkIfPhone", this.bdePhone, a),
                    a &= this.checkAndScroll("checkIfName", this.userLastname, a),
                    a &= this.checkAndScroll("checkIfMail", this.userEmail, a),
                    !!(a &= this.checkAndScroll("checkIfCheckboxes", this.checkbox_input, a)) && (this.recaptchaToken ? (this.recaptchaField.classList.remove("error"),
                    this.formSend(),
                    !0) : (this.recaptchaField.classList.add("error"),
                    !1))
                }
            }, {
                key: "checkIfCity",
                value: function(a) {
                    return a = a.currentTarget || a,
                    "" != a.value && void 0 != a.value ? (a.classList.contains("error") && a.classList.remove("error"),
                    !0) : (a.classList.add("error"),
                    !1)
                }
            }, {
                key: "checkIfName",
                value: function(a) {
                    return a = a.currentTarget || a,
                    "" != a.value && void 0 != a.value ? (a.classList.contains("error") && a.classList.remove("error"),
                    !0) : (a.classList.add("error"),
                    !1)
                }
            }, {
                key: "checkIfMail",
                value: function(a) {
                    return a = a.currentTarget || a,
                    /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i.test(a.value) ? (a.classList.contains("error") && a.classList.remove("error"),
                    !0) : (a.classList.add("error"),
                    !1)
                }
            }, {
                key: "checkIfPhone",
                value: function(a) {
                    return a = a.currentTarget || a,
                    /^(?:(?:\+)33|0)\s*[1-9](?:[\s.-]*\d{2}){4}$/i.test((a.value + "").trim()) ? (a.classList.contains("error") && a.classList.remove("error"),
                    !0) : (a.classList.add("error"),
                    !1)
                }
            }, {
                key: "checkIfCheckboxes",
                value: function(a) {
                    return a = a.currentTarget || a,
                    a.checked ? (this.checkbox.classList.contains("error") && this.checkbox.classList.remove("error"),
                    !0) : (this.checkbox.classList.add("error"),
                    !1)
                }
            }]),
            b
        }(k.default));
        c.default = m
    }
    , {
        "./BaseModule": 118,
        "utils/Tracker": 143
    }],
    129: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        }),
        c.SchoolformModule = c.CreditsModule = c.FormModule = c.ResultModule = c.LeaderboardModule = c.ContestModule = c.GameModule = c.HomeModule = void 0;
        var e = a("./HomeModule")
          , f = d(e)
          , g = a("./GameModule")
          , h = d(g)
          , i = a("./ContestModule")
          , j = d(i)
          , k = a("./LeaderboardModule")
          , l = d(k)
          , m = a("./ResultModule")
          , n = d(m)
          , o = a("./FormModule")
          , p = d(o)
          , q = a("./CreditsModule")
          , r = d(q)
          , s = a("./SchoolformModule")
          , t = d(s);
        c.HomeModule = f.default,
        c.GameModule = h.default,
        c.ContestModule = j.default,
        c.LeaderboardModule = l.default,
        c.ResultModule = n.default,
        c.FormModule = p.default,
        c.CreditsModule = r.default,
        c.SchoolformModule = t.default
    }
    , {
        "./ContestModule": 119,
        "./CreditsModule": 120,
        "./FormModule": 121,
        "./GameModule": 122,
        "./HomeModule": 123,
        "./LeaderboardModule": 124,
        "./ResultModule": 127,
        "./SchoolformModule": 128
    }],
    130: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("common/Utils")
          , h = a("utils/Sharer")
          , i = d(h)
          , j = a("utils/Tracker")
          , k = d(j)
          , l = function() {
            function a() {
                e(this, a),
                (0,
                g.scope)(this, ["switchContest", "switchLeaderboard", "handleClickOnLogo", "switchLegals", "openRules"]),
                this.domElement = document.querySelector(".footer"),
                this.footerLogo = this.domElement.querySelector(".footer__logo"),
                this.buttonLeaderboard = this.domElement.querySelector(".footer__navigation__leaderboard"),
                this.shareTwitter = this.domElement.querySelector(".footer__shares__twitter"),
                this.shareFacebook = this.domElement.querySelector(".footer__shares__facebook"),
                this.buttonCredits = this.domElement.querySelector(".link__credits"),
                this.buttonRules = this.domElement.querySelector(".link__rules"),
                this.bind()
            }
            return f(a, [{
                key: "bind",
                value: function() {
                    this.footerLogo.addEventListener("click", this.handleClickOnLogo),
                    this.buttonLeaderboard.addEventListener("click", this.switchLeaderboard),
                    this.shareTwitter.addEventListener("click", this.openShareTwitter),
                    this.shareFacebook.addEventListener("click", this.openShareFacebook),
                    this.buttonCredits.addEventListener("click", this.openCredits, !1),
                    this.buttonRules.addEventListener("click", this.openRules, !1)
                }
            }, {
                key: "unbind",
                value: function() {
                    this.footerLogo.addEventListremoveEventListenerener("click", this.handleClickOnLogo),
                    this.buttonContest.removeEventListener("click", this.switchContest),
                    this.buttonRules.removeEventListener("click", this.openRules, !1)
                }
            }, {
                key: "onResize",
                value: function() {}
            }, {
                key: "onUpdate",
                value: function() {}
            }, {
                key: "handleClickOnLogo",
                value: function() {
                    window.open("http://www.ouigo.com/", "_blank"),
                    "/" !== app.router.nextRoute.clean && k.default.event("footer", "click_dot_com")
                }
            }, {
                key: "deselectAll",
                value: function() {
                    this.buttonLeaderboard.classList.contains("footer__selected__item") && this.buttonLeaderboard.classList.remove("footer__selected__item")
                }
            }, {
                key: "openRules",
                value: function() {
                    k.default.event("footer", "acces_reglement")
                }
            }, {
                key: "openCredits",
                value: function() {
                    app.router.navigate("/credits"),
                    k.default.event("footer", "acces_credits")
                }
            }, {
                key: "switchLegals",
                value: function() {
                    k.default.event("footer", "acces_legals")
                }
            }, {
                key: "switchContest",
                value: function() {
                    this.buttonContest.classList.add("footer__selected__item"),
                    this.buttonLeaderboard.classList.contains("footer__selected__item") && this.buttonLeaderboard.classList.remove("footer__selected__item"),
                    app.router.navigate("/contest"),
                    k.default.event("footer", "acces_jeu_concours")
                }
            }, {
                key: "switchLeaderboard",
                value: function() {
                    this.buttonLeaderboard.classList.add("footer__selected__item"),
                    app.router.navigate("/leaderboard"),
                    k.default.event("footer", "acces_classement")
                }
            }, {
                key: "hide",
                value: function() {
                    this.domElement.classList.remove("footer--show")
                }
            }, {
                key: "show",
                value: function() {
                    this.domElement.classList.add("footer--show")
                }
            }, {
                key: "resetSelection",
                value: function() {
                    this.buttonLeaderboard.classList.remove("footer__selected__item")
                }
            }, {
                key: "openShareTwitter",
                value: function() {
                    i.default.twitter(app.datas.l10n.share.twitter_text, ["OUIGOLetsPlay"], baseURL),
                    k.default.event("footer", "partage_twitter")
                }
            }, {
                key: "openShareFacebook",
                value: function() {
                    i.default.facebook(baseURL),
                    k.default.event("footer", "partage_facebook")
                }
            }]),
            a
        }();
        c.default = l
    }
    , {
        "common/Utils": 14,
        "utils/Sharer": 141,
        "utils/Tracker": 143
    }],
    131: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("utils/Sharer")
          , h = d(g)
          , i = a("utils/Tracker")
          , j = d(i)
          , k = function() {
            function a() {
                e(this, a),
                this.domElement = document.querySelector(".header"),
                this.buttonLogo = this.domElement.querySelector(".header__logo"),
                this.buttonHeaderMenu = this.domElement.querySelector(".header__toggle__menu"),
                this.overlay = this.domElement.querySelector(".header__menu__overlay"),
                this.buttonHeaderMenuOpen = this.buttonHeaderMenu.querySelector(".open"),
                this.buttonHeaderMenuClose = this.buttonHeaderMenu.querySelector(".close"),
                this.headerLogo = this.domElement.querySelector(".header__logo"),
                this.shareTwitter = this.domElement.querySelector(".header__menu__share__item--tw"),
                this.shareFacebook = this.domElement.querySelector(".header__menu__share__item--fb"),
                this.buttonCredits = this.domElement.querySelector(".link__credits"),
                this.buttonRules = this.domElement.querySelector(".link__rules"),
                this.showHeaderMenu = this.showHeaderMenu.bind(this),
                this.hideHeaderMenu = this.hideHeaderMenu.bind(this),
                this.openShareTwitter = this.openShareTwitter.bind(this),
                this.openShareFacebook = this.openShareFacebook.bind(this),
                this.openLegals = this.openLegals.bind(this),
                this.openRules = this.openRules.bind(this),
                this.bind()
            }
            return f(a, [{
                key: "bind",
                value: function() {
                    this.buttonHeaderMenuOpen.addEventListener("click", this.showHeaderMenu, !1),
                    this.buttonHeaderMenuClose.addEventListener("click", this.hideHeaderMenu, !1),
                    this.overlay.addEventListener("click", this.hideHeaderMenu, !1),
                    this.shareTwitter.addEventListener("click", this.openShareTwitter, !1),
                    this.shareFacebook.addEventListener("click", this.openShareFacebook, !1),
                    this.buttonCredits.addEventListener("click", this.openCredits, !1),
                    this.buttonRules.addEventListener("click", this.openRules, !1)
                }
            }, {
                key: "unbind",
                value: function() {
                    this.buttonHeaderMenu.removeEventListener("click", this.showHeaderMenu, !1),
                    this.overlay.removeEventListener("click", this.hideHeaderMenu, !1),
                    this.shareTwitter.removeEventListener("click", this.openShareTwitter, !1),
                    this.shareFacebook.removeEventListener("click", this.openShareFacebook, !1),
                    this.buttonCredits.removeEventListener("click", this.openCredits, !1),
                    this.buttonRules.removeEventListener("click", this.openRules, !1)
                }
            }, {
                key: "onClick",
                value: function() {
                    app.footer.deselectAll(),
                    app.router.navigate("")
                }
            }, {
                key: "showHeaderMenu",
                value: function(a) {
                    null != a && a.preventDefault(),
                    this.domElement.classList.add("menu--show"),
                    j.default.event("mobile_menu", "access_mobile_menu")
                }
            }, {
                key: "hideHeaderMenu",
                value: function(a) {
                    null != a && a.preventDefault(),
                    this.domElement.classList.remove("menu--show")
                }
            }, {
                key: "hideMenuButton",
                value: function(a) {
                    null != a && a.preventDefault(),
                    this.buttonHeaderMenu.classList.add("header__toggle__menu--hide")
                }
            }, {
                key: "showMenuButton",
                value: function(a) {
                    null != a && a.preventDefault(),
                    this.buttonHeaderMenu.classList.remove("header__toggle__menu--hide")
                }
            }, {
                key: "showPinballLogo",
                value: function() {}
            }, {
                key: "hidePinballLogo",
                value: function() {
                    arguments.length > 0 && void 0 !== arguments[0] && arguments[0]
                }
            }, {
                key: "openLegals",
                value: function() {
                    j.default.event("mobile_menu", "acces_legals")
                }
            }, {
                key: "openRules",
                value: function() {
                    j.default.event("mobile_menu", "acces_reglement")
                }
            }, {
                key: "openCredits",
                value: function() {
                    app.router.navigate("/credits"),
                    j.default.event("mobile_menu", "acces_credits")
                }
            }, {
                key: "openShareTwitter",
                value: function() {
                    h.default.twitter(app.datas.l10n.share.twitter_text, ["OUIGOLetsPlay"], baseURL),
                    j.default.event("mobile_menu", "partage_twitter")
                }
            }, {
                key: "openShareFacebook",
                value: function() {
                    h.default.facebook(baseURL),
                    j.default.event("mobile_menu", "partage_facebook")
                }
            }, {
                key: "show",
                value: function() {
                    this.domElement.classList.add("header--show")
                }
            }, {
                key: "hide",
                value: function() {
                    this.domElement.classList.remove("header--show")
                }
            }]),
            a
        }();
        c.default = k
    }
    , {
        "utils/Sharer": 141,
        "utils/Tracker": 143
    }],
    132: [function(a, b, c) {
        "use strict";
        function d(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function e(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var f = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , g = a("vendors/sono/sono.min")
          , h = d(g)
          , i = a("vendors/signal/Signal")
          , j = d(i)
          , k = a("utils/Render")
          , l = d(k)
          , m = a("utils/Device")
          , n = d(m)
          , o = a("es6-promise")
          , p = d(o)
          , q = p.default.Promise
          , r = function() {
            function a() {
                e(this, a),
                this.prefix = "",
                this.noPanFiles = [],
                this.sounds = [],
                this.loops = [],
                this.soundPools = {},
                this.nbFilesAudio = 0,
                this.audioTasks = [],
                this.onMute = new j.default,
                this.onUnmute = new j.default,
                this.onReady = new j.default,
                this.wasMuted = !1,
                this.musicVol = .7 * music,
                this.isModul = !1,
                this.queue = [],
                l.default.add(this.update.bind(this))
            }
            return f(a, [{
                key: "init",
                value: function() {
                    var a = this
                      , b = [];
                    this.count = this.queue.length,
                    this.queue.forEach(function(c, d) {
                        c.id = c.id.replace("assets.audio.", ""),
                        b.push(function() {
                            return new q(function(b, e) {
                                var f = void 0;
                                "string" == typeof c.data ? (f = h.default.createSound({
                                    id: c.id,
                                    src: c.data
                                }),
                                f.on("ready", function() {
                                    a.sounds.push(f),
                                    --a.count || a.enter()
                                }),
                                b()) : h.default.context.decodeAudioData(c.data, function(e) {
                                    f = h.default.createSound(e),
                                    window.audioContext = f._context,
                                    f.id = c.id,
                                    a.sounds.push(f),
                                    d == a.queue.length - 1 && a.enter(),
                                    b()
                                })
                            }
                            )
                        })
                    });
                    for (var c = b[0](), d = 1; d < b.length; d++)
                        c = c.then(b[d])
                }
            }, {
                key: "_loop",
                value: function(a) {}
            }, {
                key: "update",
                value: function() {
                    for (var a = 0; a < this.loops.length; a++) {
                        var b = this.loops[a];
                        b.playing || this.play(0),
                        b.currentTime >= b.duration - .04 && (b.currentTime = .035)
                    }
                }
            }, {
                key: "getStream",
                value: function(a) {
                    var b = this
                      , c = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                      , d = app.datas.assetsBaseURL + app.datas.assetsPath + "music"
                      , e = document.createElement("audio")
                      , f = "android" == n.default.os ? "click" : "touchstart"
                      , g = function g(h) {
                        e.src = d + a,
                        new Promise(function(a) {
                            return a(e.play())
                        }
                        ).catch(function() {}),
                        e.pause(),
                        c.loop && (e.loop = !0,
                        b.loops.push(e)),
                        removeEventListener(f, g)
                    };
                    return n.default.mobile ? addEventListener(f, g) : g(),
                    e
                }
            }, {
                key: "initStream",
                value: function() {
                    this.music = this.getStream("/main.m4a", {
                        loop: !0
                    }),
                    this.modul = this.getStream("/modul.m4a", {
                        loop: !0
                    }),
                    this.intro = this.getStream("/intro.m4a"),
                    this.music.volume = this.musicVol,
                    this.intro.volume = .5,
                    this.mute()
                }
            }, {
                key: "enter",
                value: function() {
                    this.onReady.dispatch()
                }
            }, {
                key: "hasAudioContext",
                value: function() {
                    return !(!window.AudioContext && !window.webkitAudioContext)
                }
            }, {
                key: "getSoundObject",
                value: function(a) {
                    if ("string" != typeof a)
                        return a;
                    for (var b = void 0, c = 0; c < this.sounds.length; c++)
                        if (b = this.sounds[c],
                        b.id === a)
                            return b
                }
            }, {
                key: "pan",
                value: function(a, b) {
                    a.panner || (a.panner = a.effects.add(h.default.panner({
                        panningModel: "equalpower"
                    }))),
                    a.panner.set(b)
                }
            }, {
                key: "play",
                value: function(a) {
                    var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1
                      , c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null
                      , d = this.getSoundObject(a);
                    d && (null !== b && (d.volume = b),
                    null !== c && this.pan(d, c),
                    d.play())
                }
            }, {
                key: "pause",
                value: function(a) {
                    this.getSoundObject(a).pause()
                }
            }, {
                key: "stop",
                value: function(a) {
                    var b = this.getSoundObject(a);
                    b.loop = !1,
                    b.stop()
                }
            }, {
                key: "fadeOut",
                value: function(a, b) {
                    this.getSoundObject(a).fade(0, b)
                }
            }, {
                key: "toggle",
                value: function() {
                    this[this.muted ? "unmute" : "mute"]()
                }
            }, {
                key: "enable",
                value: function() {
                    this.wasMuted || this.unmute()
                }
            }, {
                key: "disable",
                value: function() {
                    this.wasMuted = this.muted,
                    this.stopMusic(),
                    this.mute()
                }
            }, {
                key: "mute",
                value: function() {
                    this.muted || (this.muted = !0,
                    this.onMute.dispatch(),
                    this.music.volume = 0,
                    this.modul.volume = 0,
                    this.intro.volume = 0,
                    "ios" == n.default.os && (this.music.playbackRate = this.modul.playbackRate = this.intro.playbackRate = 1e-10),
                    h.default.mute())
                }
            }, {
                key: "unmute",
                value: function() {
                    this.muted && (this.muted = !1,
                    this.onUnmute.dispatch(),
                    this.music.volume = this.musicVol,
                    this.modul.volume = 1,
                    this.intro.volume = .5,
                    "ios" == n.default.os && (this.music.playbackRate = this.modul.playbackRate = this.intro.playbackRate = 1),
                    h.default.unMute())
                }
            }, {
                key: "startMusic",
                value: function() {
                    this.isModul || (this.music.play(),
                    this.music.volume = this.muted ? 0 : this.musicVol)
                }
            }, {
                key: "stopMusic",
                value: function() {
                    this.music.pause(),
                    this.music.currentTime = 0,
                    this.modul.pause(),
                    this.modul.currentTime = 0
                }
            }, {
                key: "toggleModul",
                value: function() {
                    var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1
                      , b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                    if (!n.default.mobile) {
                        null !== b && (this.isModul = !b);
                        var c = this.muted ? 0 : this.musicVol;
                        this.isModul ? (this.music.playing || this.music.play(0),
                        this.music.volume = 0,
                        TweenLite.to(this.music, a, {
                            volume: c,
                            delay: .5,
                            ease: Power0.easeOut
                        }),
                        TweenLite.to(this.modul, a, {
                            volume: 0,
                            ease: Power0.easeOut
                        }),
                        this.isModul = !1) : (this.modul.playing || this.modul.play(0),
                        this.modul.volume = 0,
                        TweenLite.to(this.music, a, {
                            volume: 0,
                            ease: Power0.easeOut
                        }),
                        TweenLite.to(this.modul, a, {
                            volume: c,
                            delay: .3,
                            ease: Power0.easeOut
                        }),
                        this.isModul = !0)
                    }
                }
            }, {
                key: "fadeOut",
                value: function(a, b) {
                    var c = this.getSoundObject(a);
                    TweenLite.to(c, b, {
                        volume: 0,
                        ease: Power0.easeOut
                    })
                }
            }, {
                key: "fadeMusic",
                value: function() {
                    TweenLite.to(this.music, 5, {
                        volume: 0,
                        ease: Power0.easeOut
                    })
                }
            }]),
            a
        }();
        c.default = r
    }
    , {
        "es6-promise": 2,
        "utils/Device": 135,
        "utils/Render": 140,
        "vendors/signal/Signal": 149,
        "vendors/sono/sono.min": 150
    }],
    133: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = a("vendors/Exist")
          , g = function(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }(f)
          , h = function() {
            function a() {
                d(this, a),
                this.items = {},
                this.itemsTmp = {}
            }
            return e(a, [{
                key: "set",
                value: function(a, b) {
                    this.items[a] = b
                }
            }, {
                key: "remove",
                value: function(a) {
                    (0,
                    g.default)(this.items[a]) && delete this.items[a]
                }
            }, {
                key: "empty",
                value: function(a) {
                    (0,
                    g.default)(this.items[a]) && (this.items[a] = "emptied")
                }
            }, {
                key: "get",
                value: function(a) {
                    return !!(0,
                    g.default)(this.items[a]) && this.items[a]
                }
            }, {
                key: "getAll",
                value: function() {
                    return this.items
                }
            }, {
                key: "setTmp",
                value: function(a, b) {
                    this.itemsTmp[a] = b
                }
            }, {
                key: "getTmp",
                value: function(a) {
                    return !!(0,
                    g.default)(this.itemsTmp[a]) && this.itemsTmp[a]
                }
            }]),
            a
        }();
        c.default = new h
    }
    , {
        "vendors/Exist": 147
    }],
    134: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = a("utils/NumberUtils")
          , g = function(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }(f)
          , h = function() {
            function a() {
                d(this, a)
            }
            return e(a, null, [{
                key: "formatMsToMinSec",
                value: function(a) {
                    var b = Math.floor(a / 1e3 / 60)
                      , c = Math.round((a - 1e3 * b * 60) / 1e3);
                    return g.default.pad(b, 2) + ":" + g.default.pad(c, 2)
                }
            }]),
            a
        }();
        c.default = h
    }
    , {
        "utils/NumberUtils": 139
    }],
    135: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = function() {
            function a() {
                d(this, a),
                this._tagDiv = null,
                this.agent = navigator.userAgent.toLowerCase(),
                this.prefix = this.resolvePrefix(),
                this.tablet = this.phone = !1,
                this.touch = null === window.ontouchstart && null === window.ontouchmove && null === window.ontouchend,
                this.mobile = this.touch && this.detect(["ios", "iphone", "ipad", "windows", "android", "blackberry"]),
                this.mobile && (this.tablet = Math.max(window.screen.width, window.screen.height) > 812,
                this.phone = !this.tablet),
                this.desktop = !this.mobile,
                this.browser = {},
                this.browser.ie = this.detect("msie") || this.detect("trident") && this.detect("rv:") || this.detect("windows") && this.detect("edge"),
                this.browser.chrome = !this.browser.ie && this.detect("chrome"),
                this.browser.safari = !this.browser.ie && !this.browser.chrome && this.detect("safari"),
                this.browser.firefox = this.detect("firefox"),
                this.version = this.getVersion(),
                this.system = {},
                this.system.retina = window.devicePixelRatio > 1,
                this.system.webworker = void 0 !== window.Worker,
                this.system.offline = void 0 !== window.applicationCache,
                this.system.webcam = !!(navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia),
                this.system.webaudio = void 0 !== window.AudioContext;
                try {
                    this.system.localStorage = void 0 !== window.localStorage
                } catch (a) {
                    this.system.localStorage = !1
                }
                this.styles = {},
                this.styles.filter = this.checkForTag("filter"),
                this.styles.blendMode = this.checkForTag("mix-blend-mode"),
                this.styles.vendors = this.prefix.unprefixed ? "" : this.prefix.js,
                this.styles.vendorsTransition = this.styles.vendors.length ? this.styles.vendors + "Transition" : "transition",
                this.styles.vendorsTransform = this.styles.vendors.length ? this.styles.vendors + "Transform" : "transform",
                this.tween = {},
                this.tween.transition = this.checkForTag("transition"),
                this.tween.css2d = this.checkForTag("transform"),
                this.tween.css3d = this.checkForTag("perspective"),
                this.tween.complete = this.prefix.unprefixed ? "transitionend" : this.prefix.lowercase + "TransitionEnd",
                this.pixelRatio = Math.min(window.devicePixelRatio || 1, 2),
                this.graphics = {},
                this.graphics.webgl = this.getWebgl(),
                this.video = this.getSupportVideo(),
                this.os = this.getOS(),
                this.setBrowserClass(),
                this.setDeviceClass(),
                this.setOsClass()
            }
            return e(a, [{
                key: "setBrowserClass",
                value: function() {
                    var a = "browser-";
                    this.browser.ie ? a += "ie" : this.browser.chrome ? a += "chrome" : this.browser.safari ? a += "safari" : this.browser.firefox && (a += "firefox");
                    var b = a + "-" + this.version;
                    this.browserStr = a,
                    this.browserVersionStr = b,
                    document.querySelector("html").classList.add(a),
                    document.querySelector("html").classList.add(b)
                }
            }, {
                key: "setDeviceClass",
                value: function() {
                    var a = "device-";
                    this.phone ? a += "phone" : this.tablet ? a += "tablet" : a += "desktop",
                    document.querySelector("html").classList.add(a)
                }
            }, {
                key: "setOsClass",
                value: function() {
                    document.querySelector("html").classList.add("os-" + this.os)
                }
            }, {
                key: "getOS",
                value: function() {
                    if (this.desktop) {
                        if (this.detect("mac os"))
                            return "mac";
                        if (this.detect("windows nt 6.3"))
                            return "windows8.1";
                        if (this.detect("windows nt 6.2"))
                            return "windows8";
                        if (this.detect("windows nt 6.1"))
                            return "windows7";
                        if (this.detect("windows nt 6.0"))
                            return "windowsvista";
                        if (this.detect("windows nt 5.1"))
                            return "windowsxp";
                        if (this.detect("windows"))
                            return "windows";
                        if (this.detect("linux"))
                            return "linux"
                    } else {
                        if (this.detect("windows", "iemobile"))
                            return "windows";
                        if (this.detect(["ipad", "iphone"]))
                            return "ios";
                        if (this.detect(["android", "kindle"]))
                            return "android";
                        if (this.detect("blackberry"))
                            return "blackberry"
                    }
                    return "unknown"
                }
            }, {
                key: "getSupportVideo",
                value: function() {
                    var a = document.createElement("video")
                      , b = !1;
                    try {
                        (b = !!a.canPlayType) && (b = new Boolean(b),
                        b.ogg = a.canPlayType('video/ogg; codecs="theora"').replace(/^no$/, ""),
                        b.h264 = a.canPlayType('video/mp4; codecs="avc1.42E01E"').replace(/^no$/, ""),
                        b.webm = a.canPlayType('video/webm; codecs="vp8, vorbis"').replace(/^no$/, ""))
                    } catch (a) {}
                    return b
                }
            }, {
                key: "detect",
                value: function(a) {
                    "string" == typeof a && (a = [a]);
                    for (var b = a.length - 1; b >= 0; b--) {
                        var c = a[b];
                        if (-1 !== this.agent.indexOf(c))
                            return !0
                    }
                    return !1
                }
            }, {
                key: "checkForTag",
                value: function(a) {
                    var b = this._tagDiv || document.createElement("div")
                      , c = "Khtml ms O Moz Webkit".split(" ")
                      , d = c.length;
                    if (this._tagDiv = b,
                    a in b.style)
                        return !0;
                    for (a = a.replace(/^[a-z]/, function(a) {
                        return a.toUpperCase()
                    }); d--; )
                        if (c[d] + a in b.style)
                            return !0;
                    return !1
                }
            }, {
                key: "resolvePrefix",
                value: function() {
                    var a = ""
                      , b = void 0;
                    if (window._NODE_ || window._GLES_)
                        a = "webkit";
                    else {
                        var c = window.getComputedStyle(document.documentElement, "");
                        a = (Array.prototype.slice.call(c).join("").match(/-(moz|webkit|ms)-/) || "" === c.OLink && ["", "o"])[1],
                        b = "WebKit|Moz|MS|O".match(new RegExp("(" + a + ")","i"))[1]
                    }
                    var d = this.detect("trident");
                    return {
                        unprefixed: d && !this.detect("msie 9"),
                        dom: b,
                        lowercase: a,
                        css: "-" + a + "-",
                        js: (d ? a[0] : a[0].toUpperCase()) + a.substr(1)
                    }
                }
            }, {
                key: "getWebgl",
                value: function() {
                    try {
                        for (var a = ["webgl", "experimental-webgl", "webkit-3d", "moz-webgl"], b = document.createElement("canvas"), c = 0; c < a.length; c++) {
                            var d = a[c];
                            if (b.getContext(d))
                                break
                        }
                        var e = gl.getExtension("WEBGL_debug_renderer_info")
                          , f = {};
                        if (e) {
                            var g = e.UNMASKED_RENDERER_WEBGL;
                            f.gpu = gl.getParameter(g).toLowerCase()
                        }
                        return f.renderer = gl.getParameter(gl.RENDERER).toLowerCase(),
                        f.version = gl.getParameter(gl.VERSION).toLowerCase(),
                        f.glsl = gl.getParameter(gl.SHADING_LANGUAGE_VERSION).toLowerCase(),
                        f.extensions = gl.getSupportedExtensions(),
                        f.detect = function(a) {
                            for (var b = 0; b < a.length; b++) {
                                var c = a[b];
                                if (f.gpu && -1 !== f.gpu.toLowerCase().indexOf(c))
                                    return !0;
                                if (f.version && -1 !== f.version.toLowerCase().indexOf(c))
                                    return !0;
                                for (var d = 0; d < f.extensions.length; d++) {
                                    if (-1 !== f.extensions[d].toLowerCase().indexOf(c))
                                        return !0
                                }
                            }
                            return !1
                        }
                        ,
                        f
                    } catch (a) {
                        return !1
                    }
                }
            }, {
                key: "getVersion",
                value: function() {
                    try {
                        if (this.browser.chrome)
                            return Number(this.agent.split("chrome/")[1].split(".")[0]);
                        if (this.browser.firefox)
                            return Number(this.agent.split("firefox/")[1].split(".")[0]);
                        if (this.browser.safari) {
                            var a = this.agent.match(/version\/([\.\d]+)/i);
                            return parseFloat(a[1])
                        }
                        if (this.browser.ie)
                            return this.detect("msie") ? Number(this.agent.split("msie ")[1].split(".")[0]) : this.detect("rv:") ? Number(this.agent.split("rv:")[1].split(".")[0]) : Number(this.agent.split("edge/")[1].split(".")[0])
                    } catch (a) {
                        return -1
                    }
                }
            }]),
            a
        }();
        c.default = new f
    }
    , {}],
    136: [function(a, b, c) {
        "use strict";
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var d = a("vendors/signal/Signal")
          , e = function(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }(d);
        c.default = {
            CLICK: "click",
            DOWN: "mousedown",
            MOVE: "mousemove",
            UP: "mouseup",
            RESIZE: "resize",
            RESIZED: new e.default,
            SCROLLED: new e.default
        }
    }
    , {
        "vendors/signal/Signal": 149
    }],
    137: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = function() {
            function a() {
                d(this, a)
            }
            return e(a, null, [{
                key: "getCoverSizeImage",
                value: function(a, b, c, d) {
                    var e = a
                      , f = b
                      , g = c || Stage.width
                      , h = d || Stage.height
                      , i = e / f;
                    return g / h < i ? {
                        width: h * i,
                        height: h,
                        top: 0,
                        left: .5 * -(h * i - g)
                    } : {
                        width: g,
                        height: g / i,
                        top: .5 * -(g / i - h),
                        left: 0
                    }
                }
            }, {
                key: "hashString",
                value: function(a) {
                    var b = 0;
                    if (0 == a.length)
                        return b;
                    for (var c = 0; c < a.length; c++) {
                        b = (b << 5) - b + a.charCodeAt(c),
                        b &= b
                    }
                    return b
                }
            }, {
                key: "rand",
                value: function(a, b) {
                    return lerp(Math.random(), a, b)
                }
            }, {
                key: "toDegrees",
                value: function(a) {
                    return a * (180 / Math.PI)
                }
            }, {
                key: "toRadians",
                value: function(a) {
                    return a * (Math.PI / 180)
                }
            }, {
                key: "findDistance",
                value: function(a, b) {
                    var c = b.x - a.x
                      , d = b.y - a.y;
                    return Math.sqrt(c * c + d * d)
                }
            }, {
                key: "randomColor",
                value: function() {
                    var a = "#" + Math.floor(16777215 * Math.random()).toString(16);
                    return a.length < 7 ? this.randomColor() : a
                }
            }, {
                key: "clamp",
                value: function() {
                    return Math.min(Math.max(num, min), max)
                }
            }, {
                key: "constrain",
                value: function() {
                    return Math.min(Math.max(num, Math.min(min, max)), Math.max(min, max))
                }
            }, {
                key: "mix",
                value: function(a, b, c) {
                    return a * (1 - c) + b * c
                }
            }, {
                key: "smoothstep",
                value: function(a, b, c) {
                    var d = Math.max(0, Math.min(1, (c - a) / (b - a)));
                    return d * d * (3 - 2 * d)
                }
            }, {
                key: "hitTestObject",
                value: function(a, b) {
                    var c = a.x
                      , d = a.y
                      , e = a.width
                      , f = a.height
                      , g = b.x
                      , h = b.y
                      , i = b.width
                      , j = b.height
                      , k = c + e
                      , l = d + f
                      , m = g + i
                      , n = h + j;
                    if (g >= c && g <= k) {
                        if (h >= d && h <= l)
                            return !0;
                        if (d >= h && d <= n)
                            return !0
                    } else if (c >= g && c <= m) {
                        if (h >= d && h <= l)
                            return !0;
                        if (d >= h && d <= n)
                            return !0
                    }
                    return !1
                }
            }, {
                key: "removeTextNodes",
                value: function(a) {
                    var b = a.childNodes;
                    if (b.length) {
                        for (var c = [], d = 0; d < b.length; d++)
                            1 != b[d].nodeType && c.push(d);
                        for (var e = c.length - 1; e >= 0; e--)
                            b[c[e]].parentNode.removeChild(b[c[e]]);
                        for (var f = 0; f < b.length; f++)
                            b[f].childrenSanitize = this.removeTextNodes(b[f])
                    }
                    return b
                }
            }, {
                key: "requestFullScreen",
                value: function(a) {
                    if (document.fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.documentElement.webkitRequestFullScreen,
                    document.fullscreenEnabled) {
                        var b = a || document.documentElement;
                        b.requestFullscreen ? b.requestFullscreen() : b.mozRequestFullScreen ? b.mozRequestFullScreen() : b.webkitRequestFullScreen && b.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT)
                    }
                }
            }]),
            a
        }();
        c.default = f
    }
    , {}],
    138: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = function() {
            function a() {
                d(this, a)
            }
            return e(a, null, [{
                key: "transformPoint",
                value: function(a, b, c) {
                    return [a * c.a + b * c.c + c.e, a * c.b + b * c.d + c.f]
                }
            }, {
                key: "getPosition",
                value: function(a) {
                    return [a.e, a.f]
                }
            }, {
                key: "getScale",
                value: function(a) {
                    return [Math.sqrt(a.a * a.a + a.c * a.c), Math.sqrt(a.b * a.b + a.d * a.d)]
                }
            }, {
                key: "getRotation",
                value: function(a) {
                    return Math.atan(-a.b / a.a)
                }
            }, {
                key: "lerp",
                value: function(a, b, c) {
                    return b + a * (c - b)
                }
            }, {
                key: "clamp",
                value: function(a, b, c) {
                    return c < a ? a : c > b ? b : c
                }
            }, {
                key: "norm",
                value: function(a, b, c) {
                    return (a - b) / (c - b)
                }
            }, {
                key: "map",
                value: function(b, c, d, e, f) {
                    return a.lerp(a.norm(b, c, d), e, f)
                }
            }, {
                key: "mod",
                value: function(a, b) {
                    return (a % b + b) % b
                }
            }, {
                key: "identity",
                get: function() {
                    return {
                        a: 1,
                        b: 0,
                        c: 0,
                        d: 1,
                        e: 0,
                        f: 0
                    }
                }
            }]),
            a
        }();
        c.default = f
    }
    , {}],
    139: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = function() {
            function a() {
                d(this, a)
            }
            return e(a, null, [{
                key: "pad",
                value: function(a, b, c) {
                    return c = c || "0",
                    a += "",
                    a.length >= b ? a : new Array(b - a.length + 1).join(c) + a
                }
            }, {
                key: "formatWithSeparator",
                value: function(a) {
                    var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "."
                      , c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 3;
                    a += "";
                    for (var d = [], e = a.length - c; e >= 0; e -= c)
                        d.unshift(a.substr(e, c));
                    return e > -c && d.unshift(a.substr(0, e + c)),
                    d.join(b)
                }
            }]),
            a
        }();
        c.default = f
    }
    , {}],
    140: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = a("vendors/stats/stats")
          , g = (function(a) {
            a && a.__esModule
        }(f),
        function() {
            function a() {
                d(this, a),
                this.update = this.update.bind(this),
                this.datas = [],
                this.deltaTime = 0,
                this.oldTime = 0,
                this.elapsedTime = 0,
                this.update()
            }
            return e(a, [{
                key: "update",
                value: function() {
                    for (var a = Date.now(), b = this.datas.length - 1; b >= 0; ) {
                        var c = this.datas[b]
                          , d = a - c.lastTime
                          , e = 1e3 / c.fps;
                        d > e && (c.lastTime += e,
                        c.cb()),
                        b--
                    }
                    var f = performance.now() / 1e3;
                    this.deltaTime = f - this.oldTime,
                    this.oldTime = f,
                    this.elapsedTime += this.deltaTime,
                    requestAnimationFrame(this.update)
                }
            }, {
                key: "add",
                value: function(a) {
                    var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 60;
                    if (null == a || "function" != typeof a)
                        throw new Error("Invalid callback");
                    var c = {
                        cb: a,
                        fps: b,
                        lastTime: Date.now()
                    };
                    this.datas.push(c),
                    c.id = this.datas.length
                }
            }, {
                key: "remove",
                value: function(a) {
                    for (var b = this.datas.length - 1; b >= 0; ) {
                        if (this.datas[b].cb == a) {
                            this.datas.splice(b, 1);
                            break
                        }
                        b--
                    }
                }
            }]),
            a
        }());
        c.default = new g
    }
    , {
        "vendors/stats/stats": 151
    }],
    141: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = function() {
            function a() {
                d(this, a),
                this.defaultPopupSizes = {
                    twitter: {
                        width: 500,
                        height: 310
                    },
                    fb: {
                        width: 555,
                        height: 320
                    },
                    email: {
                        width: 555,
                        height: 320
                    }
                }
            }
            return e(a, [{
                key: "getTwitterURL",
                value: function(a) {
                    var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : []
                      , c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null
                      , d = "https://twitter.com/intent/tweet?text=" + encodeURIComponent(a);
                    return b.length && (d += "&hashtags=" + b.join(",")),
                    c && (d += "&url=" + encodeURIComponent(c)),
                    d
                }
            }, {
                key: "twitter",
                value: function(a) {
                    var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : []
                      , c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null
                      , d = this.defaultPopupSizes.twitter.width
                      , e = this.defaultPopupSizes.twitter.height
                      , f = this.getTwitterURL(a, b, c);
                    this.openPopup(f, d, e)
                }
            }, {
                key: "getFacebookURL",
                value: function(a) {
                    return "http://www.facebook.com/sharer/sharer.php?u=" + encodeURIComponent(a)
                }
            }, {
                key: "facebook",
                value: function(a) {
                    var b = this.defaultPopupSizes.fb.width
                      , c = this.defaultPopupSizes.fb.height
                      , d = this.getFacebookURL(a);
                    this.openPopup(d, b, c)
                }
            }, {
                key: "getLinkedInURL",
                value: function() {
                    var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null
                      , b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null
                      , c = arguments[2]
                      , d = "https://www.linkedin.com/shareArticle?mini=true&url=" + encodeURIComponent(c);
                    return a && (d += "&title=" + a),
                    b && (d += "&summary=" + b),
                    d
                }
            }, {
                key: "linkedIn",
                value: function() {
                    var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null
                      , b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null
                      , c = arguments[2]
                      , d = this.defaultPopupSizes.twitter.width
                      , e = this.defaultPopupSizes.twitter.height
                      , f = this.getLinkedInURL(a, b, c);
                    this.openPopup(f, d, e)
                }
            }, {
                key: "openPopup",
                value: function(a, b, c) {
                    var d = .5 * (window.innerWidth - b)
                      , e = .5 * (window.innerHeight - c)
                      , f = "width=" + b + ",height=" + c + ",top=" + e + ",left=" + d + ",scrollbars=1,location=0,menubar=0,resizable=0,status=0,toolbar=0";
                    window.open(a, "twitter", f)
                }
            }]),
            a
        }();
        c.default = new f
    }
    , {}],
    142: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = function() {
            function a() {
                d(this, a)
            }
            return e(a, null, [{
                key: "removeLeadingSlash",
                value: function(a) {
                    return 0 === a.indexOf("/") ? a.substr(1) : a
                }
            }, {
                key: "removeTrailingSlash",
                value: function(a) {
                    return a.lastIndexOf("/") === a.length - 1 ? a.substring(0, a.lastIndexOf("/")) : a
                }
            }, {
                key: "ucFirst",
                value: function(a) {
                    return a.charAt(0).toUpperCase() + a.slice(1)
                }
            }]),
            a
        }();
        c.default = f
    }
    , {}],
    143: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = function() {
            function a() {
                d(this, a)
            }
            return e(a, null, [{
                key: "event",
                value: function(a, b) {
                    tc_events_7 && tc_events_7(null, "trackInteraction", {
                        gaKey1: a,
                        gaKey2: b
                    })
                }
            }, {
                key: "pageview",
                value: function(a, b) {
                    tc_events_7 && tc_events_7(null, "trackvpv", {
                        pageTitle: a,
                        pagePath: b
                    })
                }
            }]),
            a
        }();
        c.default = f
    }
    , {}],
    144: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = a("vendors/signal/Signal")
          , g = function(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }(f)
          , h = function() {
            function a() {
                d(this, a),
                addEventListener("resize", this.onResize.bind(this)),
                addEventListener("orientationChange", this.onResize.bind(this)),
                addEventListener("blur", this.onBlur.bind(this)),
                addEventListener("focus", this.onFocus.bind(this)),
                this.resized = new g.default,
                this.focusChanged = new g.default,
                this.blurred = !document.hasFocus(),
                this.onResize()
            }
            return e(a, [{
                key: "onResize",
                value: function() {
                    this.width = window.innerWidth,
                    this.height = window.innerHeight,
                    this.aspect = this.width / this.height,
                    this.devicePixelRatio = window.devicePixelRatio || 1,
                    this.orientation = this.aspect > 1 ? 1 : 0,
                    document.documentElement.classList[this.orientation ? "add" : "remove"]("landscape"),
                    this.resized.dispatch()
                }
            }, {
                key: "onBlur",
                value: function() {
                    this.blurred = !0,
                    this.focusChanged.dispatch()
                }
            }, {
                key: "onFocus",
                value: function() {
                    this.blurred = !1,
                    this.focusChanged.dispatch()
                }
            }, {
                key: "isFullscreen",
                value: function() {
                    return !this.orientation && this.height === screen.height && this.width === screen.width || this.orientation && this.width === screen.height && this.height === screen.width
                }
            }]),
            a
        }();
        c.default = new h
    }
    , {
        "vendors/signal/Signal": 149
    }],
    145: [function(a, b, c) {
        "use strict";
        function d(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        Object.defineProperty(c, "__esModule", {
            value: !0
        });
        var e = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , f = a("three")
          , g = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(f)
          , h = function() {
            function a() {
                d(this, a)
            }
            return e(a, null, [{
                key: "worldToScreen",
                value: function(a, b) {
                    a = a.clone().project(b).multiply(new g.Vector3(1,-1,0)).add(new g.Vector3(1,1,0)).multiplyScalar(.5).multiply(new g.Vector3(window.innerWidth,window.innerHeight,0))
                }
            }, {
                key: "screenToWorld",
                value: function(b, c) {
                    for (var d = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1e-4, e = [], f = new g.Vector3(0,0,1), h = new g.Plane(f,d), i = 0, j = c.length; i < j; i++)
                        a.raycaster.setFromCamera(c[i], b),
                        e[i] = a.raycaster.ray.intersectPlane(h);
                    return e
                }
            }, {
                key: "screenToPlane",
                value: function(b) {
                    var c = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1e-4
                      , d = [new g.Vector3(-1,1,0), new g.Vector3(1,1,0), new g.Vector3(-1,-1,0), new g.Vector3(1,-1,0)]
                      , e = {
                        points: a.screenToWorld(b, d, c)
                    };
                    return e.width = e.points[1].x - e.points[2].x,
                    e.height = e.points[1].y - e.points[2].y,
                    e.left = e.points[0].x,
                    e.top = e.points[0].y,
                    e.ratio = window.innerWidth / e.width,
                    e
                }
            }, {
                key: "raycaster",
                get: function() {
                    return void 0 === a._raycaster && (a._raycaster = new g.Raycaster),
                    a._raycaster
                }
            }]),
            a
        }();
        c.default = h
    }
    , {
        three: 10
    }],
    146: [function(a, b, c) {
        "use strict";
        Object.defineProperty(c, "__esModule", {
            value: !0
        }),
        c.default = function() {
            $.fn.show = function() {
                return this.css("display", "block"),
                this
            }
            ,
            $.fn.hide = function() {
                return this.css("display", "none"),
                this
            }
            ,
            $.fn.cssTween = function(a, b) {
                this.css(a, b),
                this._cssTween || (this._cssTween = {});
                for (var c in a)
                    "" === a[c] ? delete this._cssTween[c] : this._cssTween[c] = a[c]
            }
            ,
            $.fn.clearTweenCSS = function() {
                for (var a in this._cssTween)
                    this.css(a, ""),
                    delete this._cssTween[a]
            }
        }
    }
    , {}],
    147: [function(a, b, c) {
        "use strict";
        b.exports = function(a) {
            return !!a
        }
    }
    , {}],
    148: [function(a, b, c) {
        (function(d) {
            (function() {
                "use strict";
                var e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(a) {
                    return typeof a
                }
                : function(a) {
                    return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
                }
                ;
                !function(a) {
                    if ("object" == (void 0 === c ? "undefined" : e(c)))
                        b.exports = a();
                    else {
                        var f;
                        "undefined" != typeof window ? f = window : void 0 !== d ? f = d : "undefined" != typeof self && (f = self),
                        f.p2 = a()
                    }
                }(function() {
                    return function b(c, d, e) {
                        function f(h, i) {
                            if (!d[h]) {
                                if (!c[h]) {
                                    var j = "function" == typeof a && a;
                                    if (!i && j)
                                        return j(h, !0);
                                    if (g)
                                        return g(h, !0);
                                    throw new Error("Cannot find module '" + h + "'")
                                }
                                var k = d[h] = {
                                    exports: {}
                                };
                                c[h][0].call(k.exports, function(a) {
                                    var b = c[h][1][a];
                                    return f(b || a)
                                }, k, k.exports, b, c, d, e)
                            }
                            return d[h].exports
                        }
                        for (var g = "function" == typeof a && a, h = 0; h < e.length; h++)
                            f(e[h]);
                        return f
                    }({
                        1: [function(a, b, c) {
                            function d() {}
                            var e = a("./Scalar");
                            b.exports = d,
                            d.lineInt = function(a, b, c) {
                                c = c || 0;
                                var d, f, g, h, i, j, k, l = [0, 0];
                                return d = a[1][1] - a[0][1],
                                f = a[0][0] - a[1][0],
                                g = d * a[0][0] + f * a[0][1],
                                h = b[1][1] - b[0][1],
                                i = b[0][0] - b[1][0],
                                j = h * b[0][0] + i * b[0][1],
                                k = d * i - h * f,
                                e.eq(k, 0, c) || (l[0] = (i * g - f * j) / k,
                                l[1] = (d * j - h * g) / k),
                                l
                            }
                            ,
                            d.segmentsIntersect = function(a, b, c, d) {
                                var e = b[0] - a[0]
                                  , f = b[1] - a[1]
                                  , g = d[0] - c[0]
                                  , h = d[1] - c[1];
                                if (g * f - h * e == 0)
                                    return !1;
                                var i = (e * (c[1] - a[1]) + f * (a[0] - c[0])) / (g * f - h * e)
                                  , j = (g * (a[1] - c[1]) + h * (c[0] - a[0])) / (h * e - g * f);
                                return i >= 0 && i <= 1 && j >= 0 && j <= 1
                            }
                        }
                        , {
                            "./Scalar": 4
                        }],
                        2: [function(a, b, c) {
                            function d() {}
                            b.exports = d,
                            d.area = function(a, b, c) {
                                return (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1])
                            }
                            ,
                            d.left = function(a, b, c) {
                                return d.area(a, b, c) > 0
                            }
                            ,
                            d.leftOn = function(a, b, c) {
                                return d.area(a, b, c) >= 0
                            }
                            ,
                            d.right = function(a, b, c) {
                                return d.area(a, b, c) < 0
                            }
                            ,
                            d.rightOn = function(a, b, c) {
                                return d.area(a, b, c) <= 0
                            }
                            ;
                            var e = []
                              , f = [];
                            d.collinear = function(a, b, c, g) {
                                if (g) {
                                    var h = e
                                      , i = f;
                                    h[0] = b[0] - a[0],
                                    h[1] = b[1] - a[1],
                                    i[0] = c[0] - b[0],
                                    i[1] = c[1] - b[1];
                                    var j = h[0] * i[0] + h[1] * i[1]
                                      , k = Math.sqrt(h[0] * h[0] + h[1] * h[1])
                                      , l = Math.sqrt(i[0] * i[0] + i[1] * i[1]);
                                    return Math.acos(j / (k * l)) < g
                                }
                                return 0 == d.area(a, b, c)
                            }
                            ,
                            d.sqdist = function(a, b) {
                                var c = b[0] - a[0]
                                  , d = b[1] - a[1];
                                return c * c + d * d
                            }
                        }
                        , {}],
                        3: [function(a, b, c) {
                            function d() {
                                this.vertices = []
                            }
                            function e(a, b, c, d, e) {
                                e = e || 0;
                                var f = b[1] - a[1]
                                  , g = a[0] - b[0]
                                  , i = f * a[0] + g * a[1]
                                  , j = d[1] - c[1]
                                  , k = c[0] - d[0]
                                  , l = j * c[0] + k * c[1]
                                  , m = f * k - j * g;
                                return h.eq(m, 0, e) ? [0, 0] : [(k * i - g * l) / m, (f * l - j * i) / m]
                            }
                            var f = a("./Line")
                              , g = a("./Point")
                              , h = a("./Scalar");
                            b.exports = d,
                            d.prototype.at = function(a) {
                                var b = this.vertices
                                  , c = b.length;
                                return b[a < 0 ? a % c + c : a % c]
                            }
                            ,
                            d.prototype.first = function() {
                                return this.vertices[0]
                            }
                            ,
                            d.prototype.last = function() {
                                return this.vertices[this.vertices.length - 1]
                            }
                            ,
                            d.prototype.clear = function() {
                                this.vertices.length = 0
                            }
                            ,
                            d.prototype.append = function(a, b, c) {
                                if (void 0 === b)
                                    throw new Error("From is not given!");
                                if (void 0 === c)
                                    throw new Error("To is not given!");
                                if (c - 1 < b)
                                    throw new Error("lol1");
                                if (c > a.vertices.length)
                                    throw new Error("lol2");
                                if (b < 0)
                                    throw new Error("lol3");
                                for (var d = b; d < c; d++)
                                    this.vertices.push(a.vertices[d])
                            }
                            ,
                            d.prototype.makeCCW = function() {
                                for (var a = 0, b = this.vertices, c = 1; c < this.vertices.length; ++c)
                                    (b[c][1] < b[a][1] || b[c][1] == b[a][1] && b[c][0] > b[a][0]) && (a = c);
                                g.left(this.at(a - 1), this.at(a), this.at(a + 1)) || this.reverse()
                            }
                            ,
                            d.prototype.reverse = function() {
                                for (var a = [], b = 0, c = this.vertices.length; b !== c; b++)
                                    a.push(this.vertices.pop());
                                this.vertices = a
                            }
                            ,
                            d.prototype.isReflex = function(a) {
                                return g.right(this.at(a - 1), this.at(a), this.at(a + 1))
                            }
                            ;
                            var i = []
                              , j = [];
                            d.prototype.canSee = function(a, b) {
                                var c, d, e = i, h = j;
                                if (g.leftOn(this.at(a + 1), this.at(a), this.at(b)) && g.rightOn(this.at(a - 1), this.at(a), this.at(b)))
                                    return !1;
                                d = g.sqdist(this.at(a), this.at(b));
                                for (var k = 0; k !== this.vertices.length; ++k)
                                    if ((k + 1) % this.vertices.length !== a && k !== a && g.leftOn(this.at(a), this.at(b), this.at(k + 1)) && g.rightOn(this.at(a), this.at(b), this.at(k)) && (e[0] = this.at(a),
                                    e[1] = this.at(b),
                                    h[0] = this.at(k),
                                    h[1] = this.at(k + 1),
                                    c = f.lineInt(e, h),
                                    g.sqdist(this.at(a), c) < d))
                                        return !1;
                                return !0
                            }
                            ,
                            d.prototype.copy = function(a, b, c) {
                                var e = c || new d;
                                if (e.clear(),
                                a < b)
                                    for (var f = a; f <= b; f++)
                                        e.vertices.push(this.vertices[f]);
                                else {
                                    for (var f = 0; f <= b; f++)
                                        e.vertices.push(this.vertices[f]);
                                    for (var f = a; f < this.vertices.length; f++)
                                        e.vertices.push(this.vertices[f])
                                }
                                return e
                            }
                            ,
                            d.prototype.getCutEdges = function() {
                                for (var a = [], b = [], c = [], e = new d, f = Number.MAX_VALUE, g = 0; g < this.vertices.length; ++g)
                                    if (this.isReflex(g))
                                        for (var h = 0; h < this.vertices.length; ++h)
                                            if (this.canSee(g, h)) {
                                                b = this.copy(g, h, e).getCutEdges(),
                                                c = this.copy(h, g, e).getCutEdges();
                                                for (var i = 0; i < c.length; i++)
                                                    b.push(c[i]);
                                                b.length < f && (a = b,
                                                f = b.length,
                                                a.push([this.at(g), this.at(h)]))
                                            }
                                return a
                            }
                            ,
                            d.prototype.decomp = function() {
                                var a = this.getCutEdges();
                                return a.length > 0 ? this.slice(a) : [this]
                            }
                            ,
                            d.prototype.slice = function(a) {
                                if (0 == a.length)
                                    return [this];
                                if (a instanceof Array && a.length && a[0]instanceof Array && 2 == a[0].length && a[0][0]instanceof Array) {
                                    for (var b = [this], c = 0; c < a.length; c++)
                                        for (var d = a[c], e = 0; e < b.length; e++) {
                                            var f = b[e]
                                              , g = f.slice(d);
                                            if (g) {
                                                b.splice(e, 1),
                                                b.push(g[0], g[1]);
                                                break
                                            }
                                        }
                                    return b
                                }
                                var d = a
                                  , c = this.vertices.indexOf(d[0])
                                  , e = this.vertices.indexOf(d[1]);
                                return -1 != c && -1 != e && [this.copy(c, e), this.copy(e, c)]
                            }
                            ,
                            d.prototype.isSimple = function() {
                                for (var a = this.vertices, b = 0; b < a.length - 1; b++)
                                    for (var c = 0; c < b - 1; c++)
                                        if (f.segmentsIntersect(a[b], a[b + 1], a[c], a[c + 1]))
                                            return !1;
                                for (var b = 1; b < a.length - 2; b++)
                                    if (f.segmentsIntersect(a[0], a[a.length - 1], a[b], a[b + 1]))
                                        return !1;
                                return !0
                            }
                            ,
                            d.prototype.quickDecomp = function(a, b, c, f, h, i) {
                                h = h || 100,
                                i = i || 0,
                                f = f || 25,
                                a = void 0 !== a ? a : [],
                                b = b || [],
                                c = c || [];
                                var j = [0, 0]
                                  , k = [0, 0]
                                  , l = [0, 0]
                                  , m = 0
                                  , n = 0
                                  , o = 0
                                  , p = 0
                                  , q = 0
                                  , r = 0
                                  , s = 0
                                  , t = new d
                                  , u = new d
                                  , v = this
                                  , w = this.vertices;
                                if (w.length < 3)
                                    return a;
                                if (++i > h)
                                    return a;
                                for (var x = 0; x < this.vertices.length; ++x)
                                    if (v.isReflex(x)) {
                                        b.push(v.vertices[x]),
                                        m = n = Number.MAX_VALUE;
                                        for (var y = 0; y < this.vertices.length; ++y)
                                            g.left(v.at(x - 1), v.at(x), v.at(y)) && g.rightOn(v.at(x - 1), v.at(x), v.at(y - 1)) && (l = e(v.at(x - 1), v.at(x), v.at(y), v.at(y - 1)),
                                            g.right(v.at(x + 1), v.at(x), l) && (o = g.sqdist(v.vertices[x], l)) < n && (n = o,
                                            k = l,
                                            r = y)),
                                            g.left(v.at(x + 1), v.at(x), v.at(y + 1)) && g.rightOn(v.at(x + 1), v.at(x), v.at(y)) && (l = e(v.at(x + 1), v.at(x), v.at(y), v.at(y + 1)),
                                            g.left(v.at(x - 1), v.at(x), l) && (o = g.sqdist(v.vertices[x], l)) < m && (m = o,
                                            j = l,
                                            q = y));
                                        if (r == (q + 1) % this.vertices.length)
                                            l[0] = (k[0] + j[0]) / 2,
                                            l[1] = (k[1] + j[1]) / 2,
                                            c.push(l),
                                            x < q ? (t.append(v, x, q + 1),
                                            t.vertices.push(l),
                                            u.vertices.push(l),
                                            0 != r && u.append(v, r, v.vertices.length),
                                            u.append(v, 0, x + 1)) : (0 != x && t.append(v, x, v.vertices.length),
                                            t.append(v, 0, q + 1),
                                            t.vertices.push(l),
                                            u.vertices.push(l),
                                            u.append(v, r, x + 1));
                                        else {
                                            if (r > q && (q += this.vertices.length),
                                            p = Number.MAX_VALUE,
                                            q < r)
                                                return a;
                                            for (var y = r; y <= q; ++y)
                                                g.leftOn(v.at(x - 1), v.at(x), v.at(y)) && g.rightOn(v.at(x + 1), v.at(x), v.at(y)) && (o = g.sqdist(v.at(x), v.at(y))) < p && (p = o,
                                                s = y % this.vertices.length);
                                            x < s ? (t.append(v, x, s + 1),
                                            0 != s && u.append(v, s, w.length),
                                            u.append(v, 0, x + 1)) : (0 != x && t.append(v, x, w.length),
                                            t.append(v, 0, s + 1),
                                            u.append(v, s, x + 1))
                                        }
                                        return t.vertices.length < u.vertices.length ? (t.quickDecomp(a, b, c, f, h, i),
                                        u.quickDecomp(a, b, c, f, h, i)) : (u.quickDecomp(a, b, c, f, h, i),
                                        t.quickDecomp(a, b, c, f, h, i)),
                                        a
                                    }
                                return a.push(this),
                                a
                            }
                            ,
                            d.prototype.removeCollinearPoints = function(a) {
                                for (var b = 0, c = this.vertices.length - 1; this.vertices.length > 3 && c >= 0; --c)
                                    g.collinear(this.at(c - 1), this.at(c), this.at(c + 1), a) && (this.vertices.splice(c % this.vertices.length, 1),
                                    c--,
                                    b++);
                                return b
                            }
                        }
                        , {
                            "./Line": 1,
                            "./Point": 2,
                            "./Scalar": 4
                        }],
                        4: [function(a, b, c) {
                            function d() {}
                            b.exports = d,
                            d.eq = function(a, b, c) {
                                return c = c || 0,
                                Math.abs(a - b) < c
                            }
                        }
                        , {}],
                        5: [function(a, b, c) {
                            b.exports = {
                                Polygon: a("./Polygon"),
                                Point: a("./Point")
                            }
                        }
                        , {
                            "./Point": 2,
                            "./Polygon": 3
                        }],
                        6: [function(a, b, c) {
                            b.exports = {
                                name: "p2",
                                version: "0.7.1",
                                description: "A JavaScript 2D physics engine.",
                                author: "Stefan Hedman <schteppe@gmail.com> (http://steffe.se)",
                                keywords: ["p2.js", "p2", "physics", "engine", "2d"],
                                main: "./src/p2.js",
                                engines: {
                                    node: "*"
                                },
                                repository: {
                                    type: "git",
                                    url: "https://github.com/schteppe/p2.js.git"
                                },
                                bugs: {
                                    url: "https://github.com/schteppe/p2.js/issues"
                                },
                                licenses: [{
                                    type: "MIT"
                                }],
                                devDependencies: {
                                    grunt: "^0.4.5",
                                    "grunt-contrib-jshint": "^0.11.2",
                                    "grunt-contrib-nodeunit": "^0.4.1",
                                    "grunt-contrib-uglify": "~0.4.0",
                                    "grunt-contrib-watch": "~0.5.0",
                                    "grunt-browserify": "~2.0.1",
                                    "grunt-contrib-concat": "^0.4.0"
                                },
                                dependencies: {
                                    "poly-decomp": "0.1.1"
                                }
                            }
                        }
                        , {}],
                        7: [function(a, b, c) {
                            function d(a) {
                                this.lowerBound = e.create(),
                                a && a.lowerBound && e.copy(this.lowerBound, a.lowerBound),
                                this.upperBound = e.create(),
                                a && a.upperBound && e.copy(this.upperBound, a.upperBound)
                            }
                            var e = a("../math/vec2");
                            a("../utils/Utils");
                            b.exports = d;
                            var f = e.create();
                            d.prototype.setFromPoints = function(a, b, c, d) {
                                var g = this.lowerBound
                                  , h = this.upperBound;
                                "number" != typeof c && (c = 0),
                                0 !== c ? e.rotate(g, a[0], c) : e.copy(g, a[0]),
                                e.copy(h, g);
                                for (var i = Math.cos(c), j = Math.sin(c), k = 1; k < a.length; k++) {
                                    var l = a[k];
                                    if (0 !== c) {
                                        var m = l[0]
                                          , n = l[1];
                                        f[0] = i * m - j * n,
                                        f[1] = j * m + i * n,
                                        l = f
                                    }
                                    for (var o = 0; o < 2; o++)
                                        l[o] > h[o] && (h[o] = l[o]),
                                        l[o] < g[o] && (g[o] = l[o])
                                }
                                b && (e.add(this.lowerBound, this.lowerBound, b),
                                e.add(this.upperBound, this.upperBound, b)),
                                d && (this.lowerBound[0] -= d,
                                this.lowerBound[1] -= d,
                                this.upperBound[0] += d,
                                this.upperBound[1] += d)
                            }
                            ,
                            d.prototype.copy = function(a) {
                                e.copy(this.lowerBound, a.lowerBound),
                                e.copy(this.upperBound, a.upperBound)
                            }
                            ,
                            d.prototype.extend = function(a) {
                                for (var b = 2; b--; ) {
                                    var c = a.lowerBound[b];
                                    this.lowerBound[b] > c && (this.lowerBound[b] = c);
                                    var d = a.upperBound[b];
                                    this.upperBound[b] < d && (this.upperBound[b] = d)
                                }
                            }
                            ,
                            d.prototype.overlaps = function(a) {
                                var b = this.lowerBound
                                  , c = this.upperBound
                                  , d = a.lowerBound
                                  , e = a.upperBound;
                                return (d[0] <= c[0] && c[0] <= e[0] || b[0] <= e[0] && e[0] <= c[0]) && (d[1] <= c[1] && c[1] <= e[1] || b[1] <= e[1] && e[1] <= c[1])
                            }
                            ,
                            d.prototype.containsPoint = function(a) {
                                var b = this.lowerBound
                                  , c = this.upperBound;
                                return b[0] <= a[0] && a[0] <= c[0] && b[1] <= a[1] && a[1] <= c[1]
                            }
                            ,
                            d.prototype.overlapsRay = function(a) {
                                var b = 1 / a.direction[0]
                                  , c = 1 / a.direction[1]
                                  , d = (this.lowerBound[0] - a.from[0]) * b
                                  , e = (this.upperBound[0] - a.from[0]) * b
                                  , f = (this.lowerBound[1] - a.from[1]) * c
                                  , g = (this.upperBound[1] - a.from[1]) * c
                                  , h = Math.max(Math.max(Math.min(d, e), Math.min(f, g)))
                                  , i = Math.min(Math.min(Math.max(d, e), Math.max(f, g)));
                                return i < 0 ? -1 : h > i ? -1 : h
                            }
                        }
                        , {
                            "../math/vec2": 30,
                            "../utils/Utils": 57
                        }],
                        8: [function(a, b, c) {
                            function d(a) {
                                this.type = a,
                                this.result = [],
                                this.world = null,
                                this.boundingVolumeType = d.AABB
                            }
                            var e = a("../math/vec2")
                              , f = a("../objects/Body");
                            b.exports = d,
                            d.AABB = 1,
                            d.BOUNDING_CIRCLE = 2,
                            d.prototype.setWorld = function(a) {
                                this.world = a
                            }
                            ,
                            d.prototype.getCollisionPairs = function(a) {}
                            ;
                            var g = e.create();
                            d.boundingRadiusCheck = function(a, b) {
                                e.sub(g, a.position, b.position);
                                var c = e.squaredLength(g)
                                  , d = a.boundingRadius + b.boundingRadius;
                                return c <= d * d
                            }
                            ,
                            d.aabbCheck = function(a, b) {
                                return a.getAABB().overlaps(b.getAABB())
                            }
                            ,
                            d.prototype.boundingVolumeCheck = function(a, b) {
                                var c;
                                switch (this.boundingVolumeType) {
                                case d.BOUNDING_CIRCLE:
                                    c = d.boundingRadiusCheck(a, b);
                                    break;
                                case d.AABB:
                                    c = d.aabbCheck(a, b);
                                    break;
                                default:
                                    throw new Error("Bounding volume type not recognized: " + this.boundingVolumeType)
                                }
                                return c
                            }
                            ,
                            d.canCollide = function(a, b) {
                                var c = f.KINEMATIC
                                  , d = f.STATIC;
                                return (a.type !== d || b.type !== d) && (!(a.type === c && b.type === d || a.type === d && b.type === c) && ((a.type !== c || b.type !== c) && ((a.sleepState !== f.SLEEPING || b.sleepState !== f.SLEEPING) && !(a.sleepState === f.SLEEPING && b.type === d || b.sleepState === f.SLEEPING && a.type === d))))
                            }
                            ,
                            d.NAIVE = 1,
                            d.SAP = 2
                        }
                        , {
                            "../math/vec2": 30,
                            "../objects/Body": 31
                        }],
                        9: [function(a, b, c) {
                            function d() {
                                e.call(this, e.NAIVE)
                            }
                            var e = (a("../shapes/Circle"),
                            a("../shapes/Plane"),
                            a("../shapes/Shape"),
                            a("../shapes/Particle"),
                            a("../collision/Broadphase"));
                            a("../math/vec2");
                            b.exports = d,
                            d.prototype = new e,
                            d.prototype.constructor = d,
                            d.prototype.getCollisionPairs = function(a) {
                                var b = a.bodies
                                  , c = this.result;
                                c.length = 0;
                                for (var d = 0, f = b.length; d !== f; d++)
                                    for (var g = b[d], h = 0; h < d; h++) {
                                        var i = b[h];
                                        e.canCollide(g, i) && this.boundingVolumeCheck(g, i) && c.push(g, i)
                                    }
                                return c
                            }
                            ,
                            d.prototype.aabbQuery = function(a, b, c) {
                                c = c || [];
                                for (var d = a.bodies, e = 0; e < d.length; e++) {
                                    var f = d[e];
                                    f.aabbNeedsUpdate && f.updateAABB(),
                                    f.aabb.overlaps(b) && c.push(f)
                                }
                                return c
                            }
                        }
                        , {
                            "../collision/Broadphase": 8,
                            "../math/vec2": 30,
                            "../shapes/Circle": 39,
                            "../shapes/Particle": 43,
                            "../shapes/Plane": 44,
                            "../shapes/Shape": 45
                        }],
                        10: [function(a, b, c) {
                            function d() {
                                this.contactEquations = [],
                                this.frictionEquations = [],
                                this.enableFriction = !0,
                                this.enabledEquations = !0,
                                this.slipForce = 10,
                                this.frictionCoefficient = .3,
                                this.surfaceVelocity = 0,
                                this.contactEquationPool = new k({
                                    size: 32
                                }),
                                this.frictionEquationPool = new l({
                                    size: 64
                                }),
                                this.restitution = 0,
                                this.stiffness = n.DEFAULT_STIFFNESS,
                                this.relaxation = n.DEFAULT_RELAXATION,
                                this.frictionStiffness = n.DEFAULT_STIFFNESS,
                                this.frictionRelaxation = n.DEFAULT_RELAXATION,
                                this.enableFrictionReduction = !0,
                                this.collidingBodiesLastStep = new m,
                                this.contactSkinSize = .01
                            }
                            function e(a, b) {
                                g.set(a.vertices[0], .5 * -b.length, -b.radius),
                                g.set(a.vertices[1], .5 * b.length, -b.radius),
                                g.set(a.vertices[2], .5 * b.length, b.radius),
                                g.set(a.vertices[3], .5 * -b.length, b.radius)
                            }
                            function f(a, b, c, d) {
                                for (var e = T, f = U, j = V, k = W, l = a, m = b.vertices, n = null, o = 0; o !== m.length + 1; o++) {
                                    var p = m[o % m.length]
                                      , q = m[(o + 1) % m.length];
                                    g.rotate(e, p, d),
                                    g.rotate(f, q, d),
                                    i(e, e, c),
                                    i(f, f, c),
                                    h(j, e, l),
                                    h(k, f, l);
                                    var r = g.crossLength(j, k);
                                    if (null === n && (n = r),
                                    r * n <= 0)
                                        return !1;
                                    n = r
                                }
                                return !0
                            }
                            var g = a("../math/vec2")
                              , h = g.sub
                              , i = g.add
                              , j = g.dot
                              , k = (a("../utils/Utils"),
                            a("../utils/ContactEquationPool"))
                              , l = a("../utils/FrictionEquationPool")
                              , m = a("../utils/TupleDictionary")
                              , n = a("../equations/Equation")
                              , o = (a("../equations/ContactEquation"),
                            a("../equations/FrictionEquation"),
                            a("../shapes/Circle"))
                              , p = a("../shapes/Convex")
                              , q = a("../shapes/Shape")
                              , r = (a("../objects/Body"),
                            a("../shapes/Box"));
                            b.exports = d;
                            var s = g.fromValues(0, 1)
                              , t = g.fromValues(0, 0)
                              , u = g.fromValues(0, 0)
                              , v = g.fromValues(0, 0)
                              , w = g.fromValues(0, 0)
                              , x = g.fromValues(0, 0)
                              , y = g.fromValues(0, 0)
                              , z = g.fromValues(0, 0)
                              , A = g.fromValues(0, 0)
                              , B = g.fromValues(0, 0)
                              , C = g.fromValues(0, 0)
                              , D = g.fromValues(0, 0)
                              , E = g.fromValues(0, 0)
                              , F = g.fromValues(0, 0)
                              , G = g.fromValues(0, 0)
                              , H = g.fromValues(0, 0)
                              , I = g.fromValues(0, 0)
                              , J = g.fromValues(0, 0)
                              , K = g.fromValues(0, 0)
                              , L = []
                              , M = g.create()
                              , N = g.create();
                            d.prototype.bodiesOverlap = function(a, b) {
                                for (var c = M, d = N, e = 0, f = a.shapes.length; e !== f; e++) {
                                    var g = a.shapes[e];
                                    a.toWorldFrame(c, g.position);
                                    for (var h = 0, i = b.shapes.length; h !== i; h++) {
                                        var j = b.shapes[h];
                                        if (b.toWorldFrame(d, j.position),
                                        this[g.type | j.type](a, g, c, g.angle + a.angle, b, j, d, j.angle + b.angle, !0))
                                            return !0
                                    }
                                }
                                return !1
                            }
                            ,
                            d.prototype.collidedLastStep = function(a, b) {
                                var c = 0 | a.id
                                  , d = 0 | b.id;
                                return !!this.collidingBodiesLastStep.get(c, d)
                            }
                            ,
                            d.prototype.reset = function() {
                                this.collidingBodiesLastStep.reset();
                                for (var a = this.contactEquations, b = a.length; b--; ) {
                                    var c = a[b]
                                      , d = c.bodyA.id
                                      , e = c.bodyB.id;
                                    this.collidingBodiesLastStep.set(d, e, !0)
                                }
                                for (var f = this.contactEquations, g = this.frictionEquations, h = 0; h < f.length; h++)
                                    this.contactEquationPool.release(f[h]);
                                for (var h = 0; h < g.length; h++)
                                    this.frictionEquationPool.release(g[h]);
                                this.contactEquations.length = this.frictionEquations.length = 0
                            }
                            ,
                            d.prototype.createContactEquation = function(a, b, c, d) {
                                var e = this.contactEquationPool.get();
                                return e.bodyA = a,
                                e.bodyB = b,
                                e.shapeA = c,
                                e.shapeB = d,
                                e.restitution = this.restitution,
                                e.firstImpact = !this.collidedLastStep(a, b),
                                e.stiffness = this.stiffness,
                                e.relaxation = this.relaxation,
                                e.needsUpdate = !0,
                                e.enabled = this.enabledEquations,
                                e.offset = this.contactSkinSize,
                                e
                            }
                            ,
                            d.prototype.createFrictionEquation = function(a, b, c, d) {
                                var e = this.frictionEquationPool.get();
                                return e.bodyA = a,
                                e.bodyB = b,
                                e.shapeA = c,
                                e.shapeB = d,
                                e.setSlipForce(this.slipForce),
                                e.frictionCoefficient = this.frictionCoefficient,
                                e.relativeVelocity = this.surfaceVelocity,
                                e.enabled = this.enabledEquations,
                                e.needsUpdate = !0,
                                e.stiffness = this.frictionStiffness,
                                e.relaxation = this.frictionRelaxation,
                                e.contactEquations.length = 0,
                                e
                            }
                            ,
                            d.prototype.createFrictionFromContact = function(a) {
                                var b = this.createFrictionEquation(a.bodyA, a.bodyB, a.shapeA, a.shapeB);
                                return g.copy(b.contactPointA, a.contactPointA),
                                g.copy(b.contactPointB, a.contactPointB),
                                g.rotate90cw(b.t, a.normalA),
                                b.contactEquations.push(a),
                                b
                            }
                            ,
                            d.prototype.createFrictionFromAverage = function(a) {
                                var b = this.contactEquations[this.contactEquations.length - 1]
                                  , c = this.createFrictionEquation(b.bodyA, b.bodyB, b.shapeA, b.shapeB)
                                  , d = b.bodyA;
                                b.bodyB;
                                g.set(c.contactPointA, 0, 0),
                                g.set(c.contactPointB, 0, 0),
                                g.set(c.t, 0, 0);
                                for (var e = 0; e !== a; e++)
                                    b = this.contactEquations[this.contactEquations.length - 1 - e],
                                    b.bodyA === d ? (g.add(c.t, c.t, b.normalA),
                                    g.add(c.contactPointA, c.contactPointA, b.contactPointA),
                                    g.add(c.contactPointB, c.contactPointB, b.contactPointB)) : (g.sub(c.t, c.t, b.normalA),
                                    g.add(c.contactPointA, c.contactPointA, b.contactPointB),
                                    g.add(c.contactPointB, c.contactPointB, b.contactPointA)),
                                    c.contactEquations.push(b);
                                var f = 1 / a;
                                return g.scale(c.contactPointA, c.contactPointA, f),
                                g.scale(c.contactPointB, c.contactPointB, f),
                                g.normalize(c.t, c.t),
                                g.rotate90cw(c.t, c.t),
                                c
                            }
                            ,
                            d.prototype[q.LINE | q.CONVEX] = d.prototype.convexLine = function(a, b, c, d, e, f, g, h, i) {
                                return !i && 0
                            }
                            ,
                            d.prototype[q.LINE | q.BOX] = d.prototype.lineBox = function(a, b, c, d, e, f, g, h, i) {
                                return !i && 0
                            }
                            ;
                            var O = new r({
                                width: 1,
                                height: 1
                            })
                              , P = g.create();
                            d.prototype[q.CAPSULE | q.CONVEX] = d.prototype[q.CAPSULE | q.BOX] = d.prototype.convexCapsule = function(a, b, c, d, f, h, i, j, k) {
                                var l = P;
                                g.set(l, h.length / 2, 0),
                                g.rotate(l, l, j),
                                g.add(l, l, i);
                                var m = this.circleConvex(f, h, l, j, a, b, c, d, k, h.radius);
                                g.set(l, -h.length / 2, 0),
                                g.rotate(l, l, j),
                                g.add(l, l, i);
                                var n = this.circleConvex(f, h, l, j, a, b, c, d, k, h.radius);
                                if (k && (m || n))
                                    return !0;
                                var o = O;
                                return e(o, h),
                                this.convexConvex(a, b, c, d, f, o, i, j, k) + m + n
                            }
                            ,
                            d.prototype[q.CAPSULE | q.LINE] = d.prototype.lineCapsule = function(a, b, c, d, e, f, g, h, i) {
                                return !i && 0
                            }
                            ;
                            var Q = g.create()
                              , R = g.create()
                              , S = new r({
                                width: 1,
                                height: 1
                            });
                            d.prototype[q.CAPSULE | q.CAPSULE] = d.prototype.capsuleCapsule = function(a, b, c, d, f, h, i, j, k) {
                                for (var l, m = Q, n = R, o = 0, p = 0; p < 2; p++) {
                                    g.set(m, (0 === p ? -1 : 1) * b.length / 2, 0),
                                    g.rotate(m, m, d),
                                    g.add(m, m, c);
                                    for (var q = 0; q < 2; q++) {
                                        g.set(n, (0 === q ? -1 : 1) * h.length / 2, 0),
                                        g.rotate(n, n, j),
                                        g.add(n, n, i),
                                        this.enableFrictionReduction && (l = this.enableFriction,
                                        this.enableFriction = !1);
                                        var r = this.circleCircle(a, b, m, d, f, h, n, j, k, b.radius, h.radius);
                                        if (this.enableFrictionReduction && (this.enableFriction = l),
                                        k && r)
                                            return !0;
                                        o += r
                                    }
                                }
                                this.enableFrictionReduction && (l = this.enableFriction,
                                this.enableFriction = !1);
                                var s = S;
                                e(s, b);
                                var t = this.convexCapsule(a, s, c, d, f, h, i, j, k);
                                if (this.enableFrictionReduction && (this.enableFriction = l),
                                k && t)
                                    return !0;
                                if (o += t,
                                this.enableFrictionReduction) {
                                    var l = this.enableFriction;
                                    this.enableFriction = !1
                                }
                                e(s, h);
                                var u = this.convexCapsule(f, s, i, j, a, b, c, d, k);
                                return this.enableFrictionReduction && (this.enableFriction = l),
                                !(!k || !u) || (o += u,
                                this.enableFrictionReduction && o && this.enableFriction && this.frictionEquations.push(this.createFrictionFromAverage(o)),
                                o)
                            }
                            ,
                            d.prototype[q.LINE | q.LINE] = d.prototype.lineLine = function(a, b, c, d, e, f, g, h, i) {
                                return !i && 0
                            }
                            ,
                            d.prototype[q.PLANE | q.LINE] = d.prototype.planeLine = function(a, b, c, d, e, f, k, l, m) {
                                var n = t
                                  , o = u
                                  , p = v
                                  , q = w
                                  , r = x
                                  , C = y
                                  , D = z
                                  , E = A
                                  , F = B
                                  , G = L
                                  , H = 0;
                                g.set(n, -f.length / 2, 0),
                                g.set(o, f.length / 2, 0),
                                g.rotate(p, n, l),
                                g.rotate(q, o, l),
                                i(p, p, k),
                                i(q, q, k),
                                g.copy(n, p),
                                g.copy(o, q),
                                h(r, o, n),
                                g.normalize(C, r),
                                g.rotate90cw(F, C),
                                g.rotate(E, s, d),
                                G[0] = n,
                                G[1] = o;
                                for (var I = 0; I < G.length; I++) {
                                    var J = G[I];
                                    h(D, J, c);
                                    var K = j(D, E);
                                    if (K < 0) {
                                        if (m)
                                            return !0;
                                        var M = this.createContactEquation(a, e, b, f);
                                        H++,
                                        g.copy(M.normalA, E),
                                        g.normalize(M.normalA, M.normalA),
                                        g.scale(D, E, K),
                                        h(M.contactPointA, J, D),
                                        h(M.contactPointA, M.contactPointA, a.position),
                                        h(M.contactPointB, J, k),
                                        i(M.contactPointB, M.contactPointB, k),
                                        h(M.contactPointB, M.contactPointB, e.position),
                                        this.contactEquations.push(M),
                                        this.enableFrictionReduction || this.enableFriction && this.frictionEquations.push(this.createFrictionFromContact(M))
                                    }
                                }
                                return !m && (this.enableFrictionReduction || H && this.enableFriction && this.frictionEquations.push(this.createFrictionFromAverage(H)),
                                H)
                            }
                            ,
                            d.prototype[q.PARTICLE | q.CAPSULE] = d.prototype.particleCapsule = function(a, b, c, d, e, f, g, h, i) {
                                return this.circleLine(a, b, c, d, e, f, g, h, i, f.radius, 0)
                            }
                            ,
                            d.prototype[q.CIRCLE | q.LINE] = d.prototype.circleLine = function(a, b, c, d, e, f, k, l, m, n, o) {
                                var n = n || 0
                                  , o = void 0 !== o ? o : b.radius
                                  , p = t
                                  , q = u
                                  , r = v
                                  , s = w
                                  , H = x
                                  , I = y
                                  , J = z
                                  , K = A
                                  , M = B
                                  , N = C
                                  , O = D
                                  , P = E
                                  , Q = F
                                  , R = G
                                  , S = L;
                                g.set(K, -f.length / 2, 0),
                                g.set(M, f.length / 2, 0),
                                g.rotate(N, K, l),
                                g.rotate(O, M, l),
                                i(N, N, k),
                                i(O, O, k),
                                g.copy(K, N),
                                g.copy(M, O),
                                h(I, M, K),
                                g.normalize(J, I),
                                g.rotate90cw(H, J),
                                h(P, c, K);
                                var T = j(P, H);
                                h(s, K, k),
                                h(Q, c, k);
                                var U = o + n;
                                if (Math.abs(T) < U) {
                                    g.scale(p, H, T),
                                    h(r, c, p),
                                    g.scale(q, H, j(H, Q)),
                                    g.normalize(q, q),
                                    g.scale(q, q, n),
                                    i(r, r, q);
                                    var V = j(J, r)
                                      , W = j(J, K)
                                      , X = j(J, M);
                                    if (V > W && V < X) {
                                        if (m)
                                            return !0;
                                        var Y = this.createContactEquation(a, e, b, f);
                                        return g.scale(Y.normalA, p, -1),
                                        g.normalize(Y.normalA, Y.normalA),
                                        g.scale(Y.contactPointA, Y.normalA, o),
                                        i(Y.contactPointA, Y.contactPointA, c),
                                        h(Y.contactPointA, Y.contactPointA, a.position),
                                        h(Y.contactPointB, r, k),
                                        i(Y.contactPointB, Y.contactPointB, k),
                                        h(Y.contactPointB, Y.contactPointB, e.position),
                                        this.contactEquations.push(Y),
                                        this.enableFriction && this.frictionEquations.push(this.createFrictionFromContact(Y)),
                                        1
                                    }
                                }
                                S[0] = K,
                                S[1] = M;
                                for (var Z = 0; Z < S.length; Z++) {
                                    var $ = S[Z];
                                    if (h(P, $, c),
                                    g.squaredLength(P) < Math.pow(U, 2)) {
                                        if (m)
                                            return !0;
                                        var Y = this.createContactEquation(a, e, b, f);
                                        return g.copy(Y.normalA, P),
                                        g.normalize(Y.normalA, Y.normalA),
                                        g.scale(Y.contactPointA, Y.normalA, o),
                                        i(Y.contactPointA, Y.contactPointA, c),
                                        h(Y.contactPointA, Y.contactPointA, a.position),
                                        h(Y.contactPointB, $, k),
                                        g.scale(R, Y.normalA, -n),
                                        i(Y.contactPointB, Y.contactPointB, R),
                                        i(Y.contactPointB, Y.contactPointB, k),
                                        h(Y.contactPointB, Y.contactPointB, e.position),
                                        this.contactEquations.push(Y),
                                        this.enableFriction && this.frictionEquations.push(this.createFrictionFromContact(Y)),
                                        1
                                    }
                                }
                                return 0
                            }
                            ,
                            d.prototype[q.CIRCLE | q.CAPSULE] = d.prototype.circleCapsule = function(a, b, c, d, e, f, g, h, i) {
                                return this.circleLine(a, b, c, d, e, f, g, h, i, f.radius)
                            }
                            ,
                            d.prototype[q.CIRCLE | q.CONVEX] = d.prototype[q.CIRCLE | q.BOX] = d.prototype.circleConvex = function(a, b, c, d, e, j, k, l, m, n) {
                                for (var n = "number" == typeof n ? n : b.radius, o = t, p = u, q = v, r = w, s = x, y = C, z = D, A = F, B = G, E = H, J = I, K = !1, L = Number.MAX_VALUE, M = j.vertices, N = 0; N !== M.length + 1; N++) {
                                    var O = M[N % M.length]
                                      , P = M[(N + 1) % M.length];
                                    if (g.rotate(o, O, l),
                                    g.rotate(p, P, l),
                                    i(o, o, k),
                                    i(p, p, k),
                                    h(q, p, o),
                                    g.normalize(r, q),
                                    g.rotate90cw(s, r),
                                    g.scale(B, s, -b.radius),
                                    i(B, B, c),
                                    f(B, j, k, l)) {
                                        g.sub(E, o, B);
                                        var Q = Math.abs(g.dot(E, s));
                                        Q < L && (g.copy(J, B),
                                        L = Q,
                                        g.scale(A, s, Q),
                                        g.add(A, A, B),
                                        K = !0)
                                    }
                                }
                                if (K) {
                                    if (m)
                                        return !0;
                                    var R = this.createContactEquation(a, e, b, j);
                                    return g.sub(R.normalA, J, c),
                                    g.normalize(R.normalA, R.normalA),
                                    g.scale(R.contactPointA, R.normalA, n),
                                    i(R.contactPointA, R.contactPointA, c),
                                    h(R.contactPointA, R.contactPointA, a.position),
                                    h(R.contactPointB, A, k),
                                    i(R.contactPointB, R.contactPointB, k),
                                    h(R.contactPointB, R.contactPointB, e.position),
                                    this.contactEquations.push(R),
                                    this.enableFriction && this.frictionEquations.push(this.createFrictionFromContact(R)),
                                    1
                                }
                                if (n > 0)
                                    for (var N = 0; N < M.length; N++) {
                                        var S = M[N];
                                        if (g.rotate(z, S, l),
                                        i(z, z, k),
                                        h(y, z, c),
                                        g.squaredLength(y) < Math.pow(n, 2)) {
                                            if (m)
                                                return !0;
                                            var R = this.createContactEquation(a, e, b, j);
                                            return g.copy(R.normalA, y),
                                            g.normalize(R.normalA, R.normalA),
                                            g.scale(R.contactPointA, R.normalA, n),
                                            i(R.contactPointA, R.contactPointA, c),
                                            h(R.contactPointA, R.contactPointA, a.position),
                                            h(R.contactPointB, z, k),
                                            i(R.contactPointB, R.contactPointB, k),
                                            h(R.contactPointB, R.contactPointB, e.position),
                                            this.contactEquations.push(R),
                                            this.enableFriction && this.frictionEquations.push(this.createFrictionFromContact(R)),
                                            1
                                        }
                                    }
                                return 0
                            }
                            ;
                            var T = g.create()
                              , U = g.create()
                              , V = g.create()
                              , W = g.create();
                            d.prototype[q.PARTICLE | q.CONVEX] = d.prototype[q.PARTICLE | q.BOX] = d.prototype.particleConvex = function(a, b, c, d, e, k, l, m, n) {
                                var o = t
                                  , p = u
                                  , q = v
                                  , r = w
                                  , s = x
                                  , A = y
                                  , B = z
                                  , D = C
                                  , E = F
                                  , G = J
                                  , H = K
                                  , I = Number.MAX_VALUE
                                  , L = !1
                                  , M = k.vertices;
                                if (!f(c, k, l, m))
                                    return 0;
                                if (n)
                                    return !0;
                                for (var N = 0; N !== M.length + 1; N++) {
                                    var O = M[N % M.length]
                                      , P = M[(N + 1) % M.length];
                                    g.rotate(o, O, m),
                                    g.rotate(p, P, m),
                                    i(o, o, l),
                                    i(p, p, l),
                                    h(q, p, o),
                                    g.normalize(r, q),
                                    g.rotate90cw(s, r),
                                    h(D, c, o);
                                    j(D, s);
                                    h(A, o, l),
                                    h(B, c, l),
                                    g.sub(G, o, c);
                                    var Q = Math.abs(g.dot(G, s));
                                    Q < I && (I = Q,
                                    g.scale(E, s, Q),
                                    g.add(E, E, c),
                                    g.copy(H, s),
                                    L = !0)
                                }
                                if (L) {
                                    var R = this.createContactEquation(a, e, b, k);
                                    return g.scale(R.normalA, H, -1),
                                    g.normalize(R.normalA, R.normalA),
                                    g.set(R.contactPointA, 0, 0),
                                    i(R.contactPointA, R.contactPointA, c),
                                    h(R.contactPointA, R.contactPointA, a.position),
                                    h(R.contactPointB, E, l),
                                    i(R.contactPointB, R.contactPointB, l),
                                    h(R.contactPointB, R.contactPointB, e.position),
                                    this.contactEquations.push(R),
                                    this.enableFriction && this.frictionEquations.push(this.createFrictionFromContact(R)),
                                    1
                                }
                                return 0
                            }
                            ,
                            d.prototype[q.CIRCLE] = d.prototype.circleCircle = function(a, b, c, d, e, f, j, k, l, m, n) {
                                var o = t
                                  , m = m || b.radius
                                  , n = n || f.radius;
                                h(o, c, j);
                                var p = m + n;
                                if (g.squaredLength(o) > Math.pow(p, 2))
                                    return 0;
                                if (l)
                                    return !0;
                                var q = this.createContactEquation(a, e, b, f);
                                return h(q.normalA, j, c),
                                g.normalize(q.normalA, q.normalA),
                                g.scale(q.contactPointA, q.normalA, m),
                                g.scale(q.contactPointB, q.normalA, -n),
                                i(q.contactPointA, q.contactPointA, c),
                                h(q.contactPointA, q.contactPointA, a.position),
                                i(q.contactPointB, q.contactPointB, j),
                                h(q.contactPointB, q.contactPointB, e.position),
                                this.contactEquations.push(q),
                                this.enableFriction && this.frictionEquations.push(this.createFrictionFromContact(q)),
                                1
                            }
                            ,
                            d.prototype[q.PLANE | q.CONVEX] = d.prototype[q.PLANE | q.BOX] = d.prototype.planeConvex = function(a, b, c, d, e, f, k, l, m) {
                                var n = t
                                  , o = u
                                  , p = v
                                  , q = 0;
                                g.rotate(o, s, d);
                                for (var r = 0; r !== f.vertices.length; r++) {
                                    var w = f.vertices[r];
                                    if (g.rotate(n, w, l),
                                    i(n, n, k),
                                    h(p, n, c),
                                    j(p, o) <= 0) {
                                        if (m)
                                            return !0;
                                        q++;
                                        var x = this.createContactEquation(a, e, b, f);
                                        h(p, n, c),
                                        g.copy(x.normalA, o);
                                        var y = j(p, x.normalA);
                                        g.scale(p, x.normalA, y),
                                        h(x.contactPointB, n, e.position),
                                        h(x.contactPointA, n, p),
                                        h(x.contactPointA, x.contactPointA, a.position),
                                        this.contactEquations.push(x),
                                        this.enableFrictionReduction || this.enableFriction && this.frictionEquations.push(this.createFrictionFromContact(x))
                                    }
                                }
                                return this.enableFrictionReduction && this.enableFriction && q && this.frictionEquations.push(this.createFrictionFromAverage(q)),
                                q
                            }
                            ,
                            d.prototype[q.PARTICLE | q.PLANE] = d.prototype.particlePlane = function(a, b, c, d, e, f, i, k, l) {
                                var m = t
                                  , n = u;
                                k = k || 0,
                                h(m, c, i),
                                g.rotate(n, s, k);
                                var o = j(m, n);
                                if (o > 0)
                                    return 0;
                                if (l)
                                    return !0;
                                var p = this.createContactEquation(e, a, f, b);
                                return g.copy(p.normalA, n),
                                g.scale(m, p.normalA, o),
                                h(p.contactPointA, c, m),
                                h(p.contactPointA, p.contactPointA, e.position),
                                h(p.contactPointB, c, a.position),
                                this.contactEquations.push(p),
                                this.enableFriction && this.frictionEquations.push(this.createFrictionFromContact(p)),
                                1
                            }
                            ,
                            d.prototype[q.CIRCLE | q.PARTICLE] = d.prototype.circleParticle = function(a, b, c, d, e, f, j, k, l) {
                                var m = t;
                                if (h(m, j, c),
                                g.squaredLength(m) > Math.pow(b.radius, 2))
                                    return 0;
                                if (l)
                                    return !0;
                                var n = this.createContactEquation(a, e, b, f);
                                return g.copy(n.normalA, m),
                                g.normalize(n.normalA, n.normalA),
                                g.scale(n.contactPointA, n.normalA, b.radius),
                                i(n.contactPointA, n.contactPointA, c),
                                h(n.contactPointA, n.contactPointA, a.position),
                                h(n.contactPointB, j, e.position),
                                this.contactEquations.push(n),
                                this.enableFriction && this.frictionEquations.push(this.createFrictionFromContact(n)),
                                1
                            }
                            ;
                            var X = new o({
                                radius: 1
                            })
                              , Y = g.create()
                              , Z = g.create();
                            g.create();
                            d.prototype[q.PLANE | q.CAPSULE] = d.prototype.planeCapsule = function(a, b, c, d, e, f, h, j, k) {
                                var l = Y
                                  , m = Z
                                  , n = X;
                                g.set(l, -f.length / 2, 0),
                                g.rotate(l, l, j),
                                i(l, l, h),
                                g.set(m, f.length / 2, 0),
                                g.rotate(m, m, j),
                                i(m, m, h),
                                n.radius = f.radius;
                                var o;
                                this.enableFrictionReduction && (o = this.enableFriction,
                                this.enableFriction = !1);
                                var p = this.circlePlane(e, n, l, 0, a, b, c, d, k)
                                  , q = this.circlePlane(e, n, m, 0, a, b, c, d, k);
                                if (this.enableFrictionReduction && (this.enableFriction = o),
                                k)
                                    return p || q;
                                var r = p + q;
                                return this.enableFrictionReduction && r && this.frictionEquations.push(this.createFrictionFromAverage(r)),
                                r
                            }
                            ,
                            d.prototype[q.CIRCLE | q.PLANE] = d.prototype.circlePlane = function(a, b, c, d, e, f, k, l, m) {
                                var n = a
                                  , o = b
                                  , p = c
                                  , q = e
                                  , r = k
                                  , w = l;
                                w = w || 0;
                                var x = t
                                  , y = u
                                  , z = v;
                                h(x, p, r),
                                g.rotate(y, s, w);
                                var A = j(y, x);
                                if (A > o.radius)
                                    return 0;
                                if (m)
                                    return !0;
                                var B = this.createContactEquation(q, n, f, b);
                                return g.copy(B.normalA, y),
                                g.scale(B.contactPointB, B.normalA, -o.radius),
                                i(B.contactPointB, B.contactPointB, p),
                                h(B.contactPointB, B.contactPointB, n.position),
                                g.scale(z, B.normalA, A),
                                h(B.contactPointA, x, z),
                                i(B.contactPointA, B.contactPointA, r),
                                h(B.contactPointA, B.contactPointA, q.position),
                                this.contactEquations.push(B),
                                this.enableFriction && this.frictionEquations.push(this.createFrictionFromContact(B)),
                                1
                            }
                            ,
                            d.prototype[q.CONVEX] = d.prototype[q.CONVEX | q.BOX] = d.prototype[q.BOX] = d.prototype.convexConvex = function(a, b, c, e, f, k, l, m, n, o) {
                                var p = t
                                  , q = u
                                  , r = v
                                  , s = w
                                  , y = x
                                  , C = z
                                  , D = A
                                  , E = B
                                  , F = 0
                                  , o = "number" == typeof o ? o : 0;
                                if (!d.findSeparatingAxis(b, c, e, k, l, m, p))
                                    return 0;
                                h(D, l, c),
                                j(p, D) > 0 && g.scale(p, p, -1);
                                var G = d.getClosestEdge(b, e, p, !0)
                                  , H = d.getClosestEdge(k, m, p);
                                if (-1 === G || -1 === H)
                                    return 0;
                                for (var I = 0; I < 2; I++) {
                                    var J = G
                                      , K = H
                                      , L = b
                                      , M = k
                                      , N = c
                                      , O = l
                                      , P = e
                                      , Q = m
                                      , R = a
                                      , S = f;
                                    if (0 === I) {
                                        var T;
                                        T = J,
                                        J = K,
                                        K = T,
                                        T = L,
                                        L = M,
                                        M = T,
                                        T = N,
                                        N = O,
                                        O = T,
                                        T = P,
                                        P = Q,
                                        Q = T,
                                        T = R,
                                        R = S,
                                        S = T
                                    }
                                    for (var U = K; U < K + 2; U++) {
                                        var V = M.vertices[(U + M.vertices.length) % M.vertices.length];
                                        g.rotate(q, V, Q),
                                        i(q, q, O);
                                        for (var W = 0, X = J - 1; X < J + 2; X++) {
                                            var Y = L.vertices[(X + L.vertices.length) % L.vertices.length]
                                              , Z = L.vertices[(X + 1 + L.vertices.length) % L.vertices.length];
                                            g.rotate(r, Y, P),
                                            g.rotate(s, Z, P),
                                            i(r, r, N),
                                            i(s, s, N),
                                            h(y, s, r),
                                            g.rotate90cw(E, y),
                                            g.normalize(E, E),
                                            h(D, q, r);
                                            var $ = j(E, D);
                                            (X === J && $ <= o || X !== J && $ <= 0) && W++
                                        }
                                        if (W >= 3) {
                                            if (n)
                                                return !0;
                                            var _ = this.createContactEquation(R, S, L, M);
                                            F++;
                                            var Y = L.vertices[J % L.vertices.length]
                                              , Z = L.vertices[(J + 1) % L.vertices.length];
                                            g.rotate(r, Y, P),
                                            g.rotate(s, Z, P),
                                            i(r, r, N),
                                            i(s, s, N),
                                            h(y, s, r),
                                            g.rotate90cw(_.normalA, y),
                                            g.normalize(_.normalA, _.normalA),
                                            h(D, q, r);
                                            var $ = j(_.normalA, D);
                                            g.scale(C, _.normalA, $),
                                            h(_.contactPointA, q, N),
                                            h(_.contactPointA, _.contactPointA, C),
                                            i(_.contactPointA, _.contactPointA, N),
                                            h(_.contactPointA, _.contactPointA, R.position),
                                            h(_.contactPointB, q, O),
                                            i(_.contactPointB, _.contactPointB, O),
                                            h(_.contactPointB, _.contactPointB, S.position),
                                            this.contactEquations.push(_),
                                            this.enableFrictionReduction || this.enableFriction && this.frictionEquations.push(this.createFrictionFromContact(_))
                                        }
                                    }
                                }
                                return this.enableFrictionReduction && this.enableFriction && F && this.frictionEquations.push(this.createFrictionFromAverage(F)),
                                F
                            }
                            ;
                            var $ = g.fromValues(0, 0);
                            d.projectConvexOntoAxis = function(a, b, c, d, e) {
                                var f, h, i = null, k = null, l = $;
                                g.rotate(l, d, -c);
                                for (var m = 0; m < a.vertices.length; m++)
                                    f = a.vertices[m],
                                    h = j(f, l),
                                    (null === i || h > i) && (i = h),
                                    (null === k || h < k) && (k = h);
                                if (k > i) {
                                    var n = k;
                                    k = i,
                                    i = n
                                }
                                var o = j(b, d);
                                g.set(e, k + o, i + o)
                            }
                            ;
                            var _ = g.fromValues(0, 0)
                              , aa = g.fromValues(0, 0)
                              , ba = g.fromValues(0, 0)
                              , ca = g.fromValues(0, 0)
                              , da = g.fromValues(0, 0)
                              , ea = g.fromValues(0, 0);
                            d.findSeparatingAxis = function(a, b, c, e, f, i, j) {
                                var k = null
                                  , l = !1
                                  , m = !1
                                  , n = _
                                  , o = aa
                                  , p = ba
                                  , q = ca
                                  , s = da
                                  , t = ea;
                                if (a instanceof r && e instanceof r)
                                    for (var u = 0; 2 !== u; u++) {
                                        var v = a
                                          , w = c;
                                        1 === u && (v = e,
                                        w = i);
                                        for (var x = 0; 2 !== x; x++) {
                                            0 === x ? g.set(q, 0, 1) : 1 === x && g.set(q, 1, 0),
                                            0 !== w && g.rotate(q, q, w),
                                            d.projectConvexOntoAxis(a, b, c, q, s),
                                            d.projectConvexOntoAxis(e, f, i, q, t);
                                            var y = s
                                              , z = t;
                                            s[0] > t[0] && (z = s,
                                            y = t,
                                            !0);
                                            var A = z[0] - y[1];
                                            l = A <= 0,
                                            (null === k || A > k) && (g.copy(j, q),
                                            k = A,
                                            m = l)
                                        }
                                    }
                                else
                                    for (var u = 0; 2 !== u; u++) {
                                        var v = a
                                          , w = c;
                                        1 === u && (v = e,
                                        w = i);
                                        for (var x = 0; x !== v.vertices.length; x++) {
                                            g.rotate(o, v.vertices[x], w),
                                            g.rotate(p, v.vertices[(x + 1) % v.vertices.length], w),
                                            h(n, p, o),
                                            g.rotate90cw(q, n),
                                            g.normalize(q, q),
                                            d.projectConvexOntoAxis(a, b, c, q, s),
                                            d.projectConvexOntoAxis(e, f, i, q, t);
                                            var y = s
                                              , z = t;
                                            s[0] > t[0] && (z = s,
                                            y = t,
                                            !0);
                                            var A = z[0] - y[1];
                                            l = A <= 0,
                                            (null === k || A > k) && (g.copy(j, q),
                                            k = A,
                                            m = l)
                                        }
                                    }
                                return m
                            }
                            ;
                            var fa = g.fromValues(0, 0)
                              , ga = g.fromValues(0, 0)
                              , ha = g.fromValues(0, 0);
                            d.getClosestEdge = function(a, b, c, d) {
                                var e = fa
                                  , f = ga
                                  , i = ha;
                                g.rotate(e, c, -b),
                                d && g.scale(e, e, -1);
                                for (var k = -1, l = a.vertices.length, m = -1, n = 0; n !== l; n++) {
                                    h(f, a.vertices[(n + 1) % l], a.vertices[n % l]),
                                    g.rotate90cw(i, f),
                                    g.normalize(i, i);
                                    var o = j(i, e);
                                    (-1 === k || o > m) && (k = n % l,
                                    m = o)
                                }
                                return k
                            }
                            ;
                            var ia = g.create()
                              , ja = g.create()
                              , ka = g.create()
                              , la = g.create()
                              , ma = g.create()
                              , na = g.create()
                              , oa = g.create();
                            d.prototype[q.CIRCLE | q.HEIGHTFIELD] = d.prototype.circleHeightfield = function(a, b, c, d, e, f, j, k, l, m) {
                                var n = f.heights
                                  , m = m || b.radius
                                  , o = f.elementWidth
                                  , p = ja
                                  , q = ia
                                  , r = ma
                                  , s = oa
                                  , t = na
                                  , u = ka
                                  , v = la
                                  , w = Math.floor((c[0] - m - j[0]) / o)
                                  , x = Math.ceil((c[0] + m - j[0]) / o);
                                w < 0 && (w = 0),
                                x >= n.length && (x = n.length - 1);
                                for (var y = n[w], z = n[x], A = w; A < x; A++)
                                    n[A] < z && (z = n[A]),
                                    n[A] > y && (y = n[A]);
                                if (c[1] - m > y)
                                    return !l && 0;
                                for (var B = !1, A = w; A < x; A++) {
                                    g.set(u, A * o, n[A]),
                                    g.set(v, (A + 1) * o, n[A + 1]),
                                    g.add(u, u, j),
                                    g.add(v, v, j),
                                    g.sub(t, v, u),
                                    g.rotate(t, t, Math.PI / 2),
                                    g.normalize(t, t),
                                    g.scale(q, t, -m),
                                    g.add(q, q, c),
                                    g.sub(p, q, u);
                                    var C = g.dot(p, t);
                                    if (q[0] >= u[0] && q[0] < v[0] && C <= 0) {
                                        if (l)
                                            return !0;
                                        B = !0,
                                        g.scale(p, t, -C),
                                        g.add(r, q, p),
                                        g.copy(s, t);
                                        var D = this.createContactEquation(e, a, f, b);
                                        g.copy(D.normalA, s),
                                        g.scale(D.contactPointB, D.normalA, -m),
                                        i(D.contactPointB, D.contactPointB, c),
                                        h(D.contactPointB, D.contactPointB, a.position),
                                        g.copy(D.contactPointA, r),
                                        g.sub(D.contactPointA, D.contactPointA, e.position),
                                        this.contactEquations.push(D),
                                        this.enableFriction && this.frictionEquations.push(this.createFrictionFromContact(D))
                                    }
                                }
                                if (B = !1,
                                m > 0)
                                    for (var A = w; A <= x; A++)
                                        if (g.set(u, A * o, n[A]),
                                        g.add(u, u, j),
                                        g.sub(p, c, u),
                                        g.squaredLength(p) < Math.pow(m, 2)) {
                                            if (l)
                                                return !0;
                                            B = !0;
                                            var D = this.createContactEquation(e, a, f, b);
                                            g.copy(D.normalA, p),
                                            g.normalize(D.normalA, D.normalA),
                                            g.scale(D.contactPointB, D.normalA, -m),
                                            i(D.contactPointB, D.contactPointB, c),
                                            h(D.contactPointB, D.contactPointB, a.position),
                                            h(D.contactPointA, u, j),
                                            i(D.contactPointA, D.contactPointA, j),
                                            h(D.contactPointA, D.contactPointA, e.position),
                                            this.contactEquations.push(D),
                                            this.enableFriction && this.frictionEquations.push(this.createFrictionFromContact(D))
                                        }
                                return B ? 1 : 0
                            }
                            ;
                            var pa = g.create()
                              , qa = g.create()
                              , ra = g.create()
                              , sa = new p({
                                vertices: [g.create(), g.create(), g.create(), g.create()]
                            });
                            d.prototype[q.BOX | q.HEIGHTFIELD] = d.prototype[q.CONVEX | q.HEIGHTFIELD] = d.prototype.convexHeightfield = function(a, b, c, d, e, f, h, i, j) {
                                var k = f.heights
                                  , l = f.elementWidth
                                  , m = pa
                                  , n = qa
                                  , o = ra
                                  , p = sa
                                  , q = Math.floor((a.aabb.lowerBound[0] - h[0]) / l)
                                  , r = Math.ceil((a.aabb.upperBound[0] - h[0]) / l);
                                q < 0 && (q = 0),
                                r >= k.length && (r = k.length - 1);
                                for (var s = k[q], t = k[r], u = q; u < r; u++)
                                    k[u] < t && (t = k[u]),
                                    k[u] > s && (s = k[u]);
                                if (a.aabb.lowerBound[1] > s)
                                    return !j && 0;
                                for (var v = 0, u = q; u < r; u++) {
                                    g.set(m, u * l, k[u]),
                                    g.set(n, (u + 1) * l, k[u + 1]),
                                    g.add(m, m, h),
                                    g.add(n, n, h);
                                    g.set(o, .5 * (n[0] + m[0]), .5 * (n[1] + m[1] - 100)),
                                    g.sub(p.vertices[0], n, o),
                                    g.sub(p.vertices[1], m, o),
                                    g.copy(p.vertices[2], p.vertices[1]),
                                    g.copy(p.vertices[3], p.vertices[0]),
                                    p.vertices[2][1] -= 100,
                                    p.vertices[3][1] -= 100,
                                    v += this.convexConvex(a, b, c, d, e, p, o, 0, j)
                                }
                                return v
                            }
                        }
                        , {
                            "../equations/ContactEquation": 21,
                            "../equations/Equation": 22,
                            "../equations/FrictionEquation": 23,
                            "../math/vec2": 30,
                            "../objects/Body": 31,
                            "../shapes/Box": 37,
                            "../shapes/Circle": 39,
                            "../shapes/Convex": 40,
                            "../shapes/Shape": 45,
                            "../utils/ContactEquationPool": 48,
                            "../utils/FrictionEquationPool": 49,
                            "../utils/TupleDictionary": 56,
                            "../utils/Utils": 57
                        }],
                        11: [function(a, b, c) {
                            function d(a) {
                                a = a || {},
                                this.from = a.from ? f.fromValues(a.from[0], a.from[1]) : f.create(),
                                this.to = a.to ? f.fromValues(a.to[0], a.to[1]) : f.create(),
                                this.checkCollisionResponse = void 0 === a.checkCollisionResponse || a.checkCollisionResponse,
                                this.skipBackfaces = !!a.skipBackfaces,
                                this.collisionMask = void 0 !== a.collisionMask ? a.collisionMask : -1,
                                this.collisionGroup = void 0 !== a.collisionGroup ? a.collisionGroup : -1,
                                this.mode = void 0 !== a.mode ? a.mode : d.ANY,
                                this.callback = a.callback || function(a) {}
                                ,
                                this.direction = f.create(),
                                this.length = 1,
                                this.update()
                            }
                            function e(a, b, c) {
                                f.sub(h, c, a);
                                var d = f.dot(h, b);
                                return f.scale(i, b, d),
                                f.add(i, i, a),
                                f.squaredDistance(c, i)
                            }
                            b.exports = d;
                            var f = a("../math/vec2");
                            a("../collision/RaycastResult"),
                            a("../shapes/Shape"),
                            a("../collision/AABB");
                            d.prototype.constructor = d,
                            d.CLOSEST = 1,
                            d.ANY = 2,
                            d.ALL = 4,
                            d.prototype.update = function() {
                                var a = this.direction;
                                f.sub(a, this.to, this.from),
                                this.length = f.length(a),
                                f.normalize(a, a)
                            }
                            ,
                            d.prototype.intersectBodies = function(a, b) {
                                for (var c = 0, d = b.length; !a.shouldStop(this) && c < d; c++) {
                                    var e = b[c]
                                      , f = e.getAABB();
                                    (f.overlapsRay(this) >= 0 || f.containsPoint(this.from)) && this.intersectBody(a, e)
                                }
                            }
                            ;
                            var g = f.create();
                            d.prototype.intersectBody = function(a, b) {
                                var c = this.checkCollisionResponse;
                                if (!c || b.collisionResponse)
                                    for (var d = g, e = 0, h = b.shapes.length; e < h; e++) {
                                        var i = b.shapes[e];
                                        if ((!c || i.collisionResponse) && (0 != (this.collisionGroup & i.collisionMask) && 0 != (i.collisionGroup & this.collisionMask))) {
                                            f.rotate(d, i.position, b.angle),
                                            f.add(d, d, b.position);
                                            var j = i.angle + b.angle;
                                            if (this.intersectShape(a, i, j, d, b),
                                            a.shouldStop(this))
                                                break
                                        }
                                    }
                            }
                            ,
                            d.prototype.intersectShape = function(a, b, c, d, f) {
                                e(this.from, this.direction, d) > b.boundingRadius * b.boundingRadius || (this._currentBody = f,
                                this._currentShape = b,
                                b.raycast(a, this, d, c),
                                this._currentBody = this._currentShape = null)
                            }
                            ,
                            d.prototype.getAABB = function(a) {
                                var b = this.to
                                  , c = this.from;
                                f.set(a.lowerBound, Math.min(b[0], c[0]), Math.min(b[1], c[1])),
                                f.set(a.upperBound, Math.max(b[0], c[0]), Math.max(b[1], c[1]))
                            }
                            ;
                            f.create();
                            d.prototype.reportIntersection = function(a, b, c, e) {
                                var g = (this.from,
                                this.to,
                                this._currentShape)
                                  , h = this._currentBody;
                                if (!(this.skipBackfaces && f.dot(c, this.direction) > 0))
                                    switch (this.mode) {
                                    case d.ALL:
                                        a.set(c, g, h, b, e),
                                        this.callback(a);
                                        break;
                                    case d.CLOSEST:
                                        (b < a.fraction || !a.hasHit()) && a.set(c, g, h, b, e);
                                        break;
                                    case d.ANY:
                                        a.set(c, g, h, b, e)
                                    }
                            }
                            ;
                            var h = f.create()
                              , i = f.create()
                        }
                        , {
                            "../collision/AABB": 7,
                            "../collision/RaycastResult": 12,
                            "../math/vec2": 30,
                            "../shapes/Shape": 45
                        }],
                        12: [function(a, b, c) {
                            function d() {
                                this.normal = e.create(),
                                this.shape = null,
                                this.body = null,
                                this.faceIndex = -1,
                                this.fraction = -1,
                                this.isStopped = !1
                            }
                            var e = a("../math/vec2")
                              , f = a("../collision/Ray");
                            b.exports = d,
                            d.prototype.reset = function() {
                                e.set(this.normal, 0, 0),
                                this.shape = null,
                                this.body = null,
                                this.faceIndex = -1,
                                this.fraction = -1,
                                this.isStopped = !1
                            }
                            ,
                            d.prototype.getHitDistance = function(a) {
                                return e.distance(a.from, a.to) * this.fraction
                            }
                            ,
                            d.prototype.hasHit = function() {
                                return -1 !== this.fraction
                            }
                            ,
                            d.prototype.getHitPoint = function(a, b) {
                                e.lerp(a, b.from, b.to, this.fraction)
                            }
                            ,
                            d.prototype.stop = function() {
                                this.isStopped = !0
                            }
                            ,
                            d.prototype.shouldStop = function(a) {
                                return this.isStopped || -1 !== this.fraction && a.mode === f.ANY
                            }
                            ,
                            d.prototype.set = function(a, b, c, d, f) {
                                e.copy(this.normal, a),
                                this.shape = b,
                                this.body = c,
                                this.fraction = d,
                                this.faceIndex = f
                            }
                        }
                        , {
                            "../collision/Ray": 11,
                            "../math/vec2": 30
                        }],
                        13: [function(a, b, c) {
                            function d() {
                                f.call(this, f.SAP),
                                this.axisList = [],
                                this.axisIndex = 0;
                                var a = this;
                                this._addBodyHandler = function(b) {
                                    a.axisList.push(b.body)
                                }
                                ,
                                this._removeBodyHandler = function(b) {
                                    var c = a.axisList.indexOf(b.body);
                                    -1 !== c && a.axisList.splice(c, 1)
                                }
                            }
                            var e = a("../utils/Utils")
                              , f = a("../collision/Broadphase");
                            b.exports = d,
                            d.prototype = new f,
                            d.prototype.constructor = d,
                            d.prototype.setWorld = function(a) {
                                this.axisList.length = 0,
                                e.appendArray(this.axisList, a.bodies),
                                a.off("addBody", this._addBodyHandler).off("removeBody", this._removeBodyHandler),
                                a.on("addBody", this._addBodyHandler).on("removeBody", this._removeBodyHandler),
                                this.world = a
                            }
                            ,
                            d.sortAxisList = function(a, b) {
                                b |= 0;
                                for (var c = 1, d = a.length; c < d; c++) {
                                    for (var e = a[c], f = c - 1; f >= 0 && !(a[f].aabb.lowerBound[b] <= e.aabb.lowerBound[b]); f--)
                                        a[f + 1] = a[f];
                                    a[f + 1] = e
                                }
                                return a
                            }
                            ,
                            d.prototype.sortList = function() {
                                var a = this.axisList
                                  , b = this.axisIndex;
                                d.sortAxisList(a, b)
                            }
                            ,
                            d.prototype.getCollisionPairs = function(a) {
                                var b = this.axisList
                                  , c = this.result
                                  , d = this.axisIndex;
                                c.length = 0;
                                for (var e = b.length; e--; ) {
                                    var g = b[e];
                                    g.aabbNeedsUpdate && g.updateAABB()
                                }
                                this.sortList();
                                for (var h = 0, i = 0 | b.length; h !== i; h++)
                                    for (var j = b[h], k = h + 1; k < i; k++) {
                                        var l = b[k]
                                          , m = l.aabb.lowerBound[d] <= j.aabb.upperBound[d];
                                        if (!m)
                                            break;
                                        f.canCollide(j, l) && this.boundingVolumeCheck(j, l) && c.push(j, l)
                                    }
                                return c
                            }
                            ,
                            d.prototype.aabbQuery = function(a, b, c) {
                                c = c || [],
                                this.sortList();
                                var d = this.axisIndex
                                  , e = "x";
                                1 === d && (e = "y"),
                                2 === d && (e = "z");
                                for (var f = this.axisList, g = (b.lowerBound[e],
                                b.upperBound[e],
                                0); g < f.length; g++) {
                                    var h = f[g];
                                    h.aabbNeedsUpdate && h.updateAABB(),
                                    h.aabb.overlaps(b) && c.push(h)
                                }
                                return c
                            }
                        }
                        , {
                            "../collision/Broadphase": 8,
                            "../utils/Utils": 57
                        }],
                        14: [function(a, b, c) {
                            function d(a, b, c, d) {
                                this.type = c,
                                d = e.defaults(d, {
                                    collideConnected: !0,
                                    wakeUpBodies: !0
                                }),
                                this.equations = [],
                                this.bodyA = a,
                                this.bodyB = b,
                                this.collideConnected = d.collideConnected,
                                d.wakeUpBodies && (a && a.wakeUp(),
                                b && b.wakeUp())
                            }
                            b.exports = d;
                            var e = a("../utils/Utils");
                            d.prototype.update = function() {
                                throw new Error("method update() not implmemented in this Constraint subclass!")
                            }
                            ,
                            d.DISTANCE = 1,
                            d.GEAR = 2,
                            d.LOCK = 3,
                            d.PRISMATIC = 4,
                            d.REVOLUTE = 5,
                            d.prototype.setStiffness = function(a) {
                                for (var b = this.equations, c = 0; c !== b.length; c++) {
                                    var d = b[c];
                                    d.stiffness = a,
                                    d.needsUpdate = !0
                                }
                            }
                            ,
                            d.prototype.setRelaxation = function(a) {
                                for (var b = this.equations, c = 0; c !== b.length; c++) {
                                    var d = b[c];
                                    d.relaxation = a,
                                    d.needsUpdate = !0
                                }
                            }
                        }
                        , {
                            "../utils/Utils": 57
                        }],
                        15: [function(a, b, c) {
                            function d(a, b, c) {
                                c = h.defaults(c, {
                                    localAnchorA: [0, 0],
                                    localAnchorB: [0, 0]
                                }),
                                e.call(this, a, b, e.DISTANCE, c),
                                this.localAnchorA = g.fromValues(c.localAnchorA[0], c.localAnchorA[1]),
                                this.localAnchorB = g.fromValues(c.localAnchorB[0], c.localAnchorB[1]);
                                var d = this.localAnchorA
                                  , i = this.localAnchorB;
                                if (this.distance = 0,
                                "number" == typeof c.distance)
                                    this.distance = c.distance;
                                else {
                                    var j = g.create()
                                      , k = g.create()
                                      , l = g.create();
                                    g.rotate(j, d, a.angle),
                                    g.rotate(k, i, b.angle),
                                    g.add(l, b.position, k),
                                    g.sub(l, l, j),
                                    g.sub(l, l, a.position),
                                    this.distance = g.length(l)
                                }
                                var m;
                                m = void 0 === c.maxForce ? Number.MAX_VALUE : c.maxForce;
                                var n = new f(a,b,-m,m);
                                this.equations = [n],
                                this.maxForce = m;
                                var l = g.create()
                                  , o = g.create()
                                  , p = g.create()
                                  , q = this;
                                n.computeGq = function() {
                                    var a = this.bodyA
                                      , b = this.bodyB
                                      , c = a.position
                                      , e = b.position;
                                    return g.rotate(o, d, a.angle),
                                    g.rotate(p, i, b.angle),
                                    g.add(l, e, p),
                                    g.sub(l, l, o),
                                    g.sub(l, l, c),
                                    g.length(l) - q.distance
                                }
                                ,
                                this.setMaxForce(m),
                                this.upperLimitEnabled = !1,
                                this.upperLimit = 1,
                                this.lowerLimitEnabled = !1,
                                this.lowerLimit = 0,
                                this.position = 0
                            }
                            var e = a("./Constraint")
                              , f = a("../equations/Equation")
                              , g = a("../math/vec2")
                              , h = a("../utils/Utils");
                            b.exports = d,
                            d.prototype = new e,
                            d.prototype.constructor = d;
                            var i = g.create()
                              , j = g.create()
                              , k = g.create();
                            d.prototype.update = function() {
                                var a = this.equations[0]
                                  , b = this.bodyA
                                  , c = this.bodyB
                                  , d = (this.distance,
                                b.position)
                                  , e = c.position
                                  , f = this.equations[0]
                                  , h = a.G;
                                g.rotate(j, this.localAnchorA, b.angle),
                                g.rotate(k, this.localAnchorB, c.angle),
                                g.add(i, e, k),
                                g.sub(i, i, j),
                                g.sub(i, i, d),
                                this.position = g.length(i);
                                var l = !1;
                                if (this.upperLimitEnabled && this.position > this.upperLimit && (f.maxForce = 0,
                                f.minForce = -this.maxForce,
                                this.distance = this.upperLimit,
                                l = !0),
                                this.lowerLimitEnabled && this.position < this.lowerLimit && (f.maxForce = this.maxForce,
                                f.minForce = 0,
                                this.distance = this.lowerLimit,
                                l = !0),
                                (this.lowerLimitEnabled || this.upperLimitEnabled) && !l)
                                    return void (f.enabled = !1);
                                f.enabled = !0,
                                g.normalize(i, i);
                                var m = g.crossLength(j, i)
                                  , n = g.crossLength(k, i);
                                h[0] = -i[0],
                                h[1] = -i[1],
                                h[2] = -m,
                                h[3] = i[0],
                                h[4] = i[1],
                                h[5] = n
                            }
                            ,
                            d.prototype.setMaxForce = function(a) {
                                var b = this.equations[0];
                                b.minForce = -a,
                                b.maxForce = a
                            }
                            ,
                            d.prototype.getMaxForce = function() {
                                return this.equations[0].maxForce
                            }
                        }
                        , {
                            "../equations/Equation": 22,
                            "../math/vec2": 30,
                            "../utils/Utils": 57,
                            "./Constraint": 14
                        }],
                        16: [function(a, b, c) {
                            function d(a, b, c) {
                                c = c || {},
                                e.call(this, a, b, e.GEAR, c),
                                this.ratio = void 0 !== c.ratio ? c.ratio : 1,
                                this.angle = void 0 !== c.angle ? c.angle : b.angle - this.ratio * a.angle,
                                c.angle = this.angle,
                                c.ratio = this.ratio,
                                this.equations = [new f(a,b,c)],
                                void 0 !== c.maxTorque && this.setMaxTorque(c.maxTorque)
                            }
                            var e = a("./Constraint")
                              , f = (a("../equations/Equation"),
                            a("../equations/AngleLockEquation"));
                            a("../math/vec2");
                            b.exports = d,
                            d.prototype = new e,
                            d.prototype.constructor = d,
                            d.prototype.update = function() {
                                var a = this.equations[0];
                                a.ratio !== this.ratio && a.setRatio(this.ratio),
                                a.angle = this.angle
                            }
                            ,
                            d.prototype.setMaxTorque = function(a) {
                                this.equations[0].setMaxTorque(a)
                            }
                            ,
                            d.prototype.getMaxTorque = function(a) {
                                return this.equations[0].maxForce
                            }
                        }
                        , {
                            "../equations/AngleLockEquation": 20,
                            "../equations/Equation": 22,
                            "../math/vec2": 30,
                            "./Constraint": 14
                        }],
                        17: [function(a, b, c) {
                            function d(a, b, c) {
                                c = c || {},
                                e.call(this, a, b, e.LOCK, c);
                                var d = void 0 === c.maxForce ? Number.MAX_VALUE : c.maxForce
                                  , h = (c.localAngleB,
                                new g(a,b,-d,d))
                                  , i = new g(a,b,-d,d)
                                  , j = new g(a,b,-d,d)
                                  , k = f.create()
                                  , l = f.create()
                                  , m = this;
                                h.computeGq = function() {
                                    return f.rotate(k, m.localOffsetB, a.angle),
                                    f.sub(l, b.position, a.position),
                                    f.sub(l, l, k),
                                    l[0]
                                }
                                ,
                                i.computeGq = function() {
                                    return f.rotate(k, m.localOffsetB, a.angle),
                                    f.sub(l, b.position, a.position),
                                    f.sub(l, l, k),
                                    l[1]
                                }
                                ;
                                var n = f.create()
                                  , o = f.create();
                                j.computeGq = function() {
                                    return f.rotate(n, m.localOffsetB, b.angle - m.localAngleB),
                                    f.scale(n, n, -1),
                                    f.sub(l, a.position, b.position),
                                    f.add(l, l, n),
                                    f.rotate(o, n, -Math.PI / 2),
                                    f.normalize(o, o),
                                    f.dot(l, o)
                                }
                                ,
                                this.localOffsetB = f.create(),
                                c.localOffsetB ? f.copy(this.localOffsetB, c.localOffsetB) : (f.sub(this.localOffsetB, b.position, a.position),
                                f.rotate(this.localOffsetB, this.localOffsetB, -a.angle)),
                                this.localAngleB = 0,
                                "number" == typeof c.localAngleB ? this.localAngleB = c.localAngleB : this.localAngleB = b.angle - a.angle,
                                this.equations.push(h, i, j),
                                this.setMaxForce(d)
                            }
                            var e = a("./Constraint")
                              , f = a("../math/vec2")
                              , g = a("../equations/Equation");
                            b.exports = d,
                            d.prototype = new e,
                            d.prototype.constructor = d,
                            d.prototype.setMaxForce = function(a) {
                                for (var b = this.equations, c = 0; c < this.equations.length; c++)
                                    b[c].maxForce = a,
                                    b[c].minForce = -a
                            }
                            ,
                            d.prototype.getMaxForce = function() {
                                return this.equations[0].maxForce
                            }
                            ;
                            var h = f.create()
                              , i = f.create()
                              , j = f.create()
                              , k = f.fromValues(1, 0)
                              , l = f.fromValues(0, 1);
                            d.prototype.update = function() {
                                var a = this.equations[0]
                                  , b = this.equations[1]
                                  , c = this.equations[2]
                                  , d = this.bodyA
                                  , e = this.bodyB;
                                f.rotate(h, this.localOffsetB, d.angle),
                                f.rotate(i, this.localOffsetB, e.angle - this.localAngleB),
                                f.scale(i, i, -1),
                                f.rotate(j, i, Math.PI / 2),
                                f.normalize(j, j),
                                a.G[0] = -1,
                                a.G[1] = 0,
                                a.G[2] = -f.crossLength(h, k),
                                a.G[3] = 1,
                                b.G[0] = 0,
                                b.G[1] = -1,
                                b.G[2] = -f.crossLength(h, l),
                                b.G[4] = 1,
                                c.G[0] = -j[0],
                                c.G[1] = -j[1],
                                c.G[3] = j[0],
                                c.G[4] = j[1],
                                c.G[5] = f.crossLength(i, j)
                            }
                        }
                        , {
                            "../equations/Equation": 22,
                            "../math/vec2": 30,
                            "./Constraint": 14
                        }],
                        18: [function(a, b, c) {
                            function d(a, b, c) {
                                c = c || {},
                                e.call(this, a, b, e.PRISMATIC, c);
                                var d = h.fromValues(0, 0)
                                  , j = h.fromValues(1, 0)
                                  , k = h.fromValues(0, 0);
                                c.localAnchorA && h.copy(d, c.localAnchorA),
                                c.localAxisA && h.copy(j, c.localAxisA),
                                c.localAnchorB && h.copy(k, c.localAnchorB),
                                this.localAnchorA = d,
                                this.localAnchorB = k,
                                this.localAxisA = j;
                                var l = this.maxForce = void 0 !== c.maxForce ? c.maxForce : Number.MAX_VALUE
                                  , m = new g(a,b,-l,l)
                                  , n = new h.create
                                  , o = new h.create
                                  , p = new h.create
                                  , q = new h.create;
                                if (m.computeGq = function() {
                                    return h.dot(p, q)
                                }
                                ,
                                m.updateJacobian = function() {
                                    var c = this.G
                                      , e = a.position
                                      , f = b.position;
                                    h.rotate(n, d, a.angle),
                                    h.rotate(o, k, b.angle),
                                    h.add(p, f, o),
                                    h.sub(p, p, e),
                                    h.sub(p, p, n),
                                    h.rotate(q, j, a.angle + Math.PI / 2),
                                    c[0] = -q[0],
                                    c[1] = -q[1],
                                    c[2] = -h.crossLength(n, q) + h.crossLength(q, p),
                                    c[3] = q[0],
                                    c[4] = q[1],
                                    c[5] = h.crossLength(o, q)
                                }
                                ,
                                this.equations.push(m),
                                !c.disableRotationalLock) {
                                    var r = new i(a,b,-l,l);
                                    this.equations.push(r)
                                }
                                this.position = 0,
                                this.velocity = 0,
                                this.lowerLimitEnabled = void 0 !== c.lowerLimit,
                                this.upperLimitEnabled = void 0 !== c.upperLimit,
                                this.lowerLimit = void 0 !== c.lowerLimit ? c.lowerLimit : 0,
                                this.upperLimit = void 0 !== c.upperLimit ? c.upperLimit : 1,
                                this.upperLimitEquation = new f(a,b),
                                this.lowerLimitEquation = new f(a,b),
                                this.upperLimitEquation.minForce = this.lowerLimitEquation.minForce = 0,
                                this.upperLimitEquation.maxForce = this.lowerLimitEquation.maxForce = l,
                                this.motorEquation = new g(a,b),
                                this.motorEnabled = !1,
                                this.motorSpeed = 0;
                                var s = this
                                  , t = this.motorEquation;
                                t.computeGW;
                                t.computeGq = function() {
                                    return 0
                                }
                                ,
                                t.computeGW = function() {
                                    var a = this.G
                                      , b = this.bodyA
                                      , c = this.bodyB
                                      , d = b.velocity
                                      , e = c.velocity
                                      , f = b.angularVelocity
                                      , g = c.angularVelocity;
                                    return this.gmult(a, d, f, e, g) + s.motorSpeed
                                }
                            }
                            var e = a("./Constraint")
                              , f = a("../equations/ContactEquation")
                              , g = a("../equations/Equation")
                              , h = a("../math/vec2")
                              , i = a("../equations/RotationalLockEquation");
                            b.exports = d,
                            d.prototype = new e,
                            d.prototype.constructor = d;
                            var j = h.create()
                              , k = h.create()
                              , l = h.create()
                              , m = h.create()
                              , n = h.create()
                              , o = h.create();
                            d.prototype.update = function() {
                                var a = this.equations
                                  , b = a[0]
                                  , c = this.upperLimit
                                  , d = this.lowerLimit
                                  , e = this.upperLimitEquation
                                  , f = this.lowerLimitEquation
                                  , g = this.bodyA
                                  , i = this.bodyB
                                  , p = this.localAxisA
                                  , q = this.localAnchorA
                                  , r = this.localAnchorB;
                                b.updateJacobian(),
                                h.rotate(j, p, g.angle),
                                h.rotate(m, q, g.angle),
                                h.add(k, m, g.position),
                                h.rotate(n, r, i.angle),
                                h.add(l, n, i.position);
                                var s = this.position = h.dot(l, j) - h.dot(k, j);
                                if (this.motorEnabled) {
                                    var t = this.motorEquation.G;
                                    t[0] = j[0],
                                    t[1] = j[1],
                                    t[2] = h.crossLength(j, n),
                                    t[3] = -j[0],
                                    t[4] = -j[1],
                                    t[5] = -h.crossLength(j, m)
                                }
                                if (this.upperLimitEnabled && s > c)
                                    h.scale(e.normalA, j, -1),
                                    h.sub(e.contactPointA, k, g.position),
                                    h.sub(e.contactPointB, l, i.position),
                                    h.scale(o, j, c),
                                    h.add(e.contactPointA, e.contactPointA, o),
                                    -1 === a.indexOf(e) && a.push(e);
                                else {
                                    var u = a.indexOf(e);
                                    -1 !== u && a.splice(u, 1)
                                }
                                if (this.lowerLimitEnabled && s < d)
                                    h.scale(f.normalA, j, 1),
                                    h.sub(f.contactPointA, k, g.position),
                                    h.sub(f.contactPointB, l, i.position),
                                    h.scale(o, j, d),
                                    h.sub(f.contactPointB, f.contactPointB, o),
                                    -1 === a.indexOf(f) && a.push(f);
                                else {
                                    var u = a.indexOf(f);
                                    -1 !== u && a.splice(u, 1)
                                }
                            }
                            ,
                            d.prototype.enableMotor = function() {
                                this.motorEnabled || (this.equations.push(this.motorEquation),
                                this.motorEnabled = !0)
                            }
                            ,
                            d.prototype.disableMotor = function() {
                                if (this.motorEnabled) {
                                    var a = this.equations.indexOf(this.motorEquation);
                                    this.equations.splice(a, 1),
                                    this.motorEnabled = !1
                                }
                            }
                            ,
                            d.prototype.setLimits = function(a, b) {
                                "number" == typeof a ? (this.lowerLimit = a,
                                this.lowerLimitEnabled = !0) : (this.lowerLimit = a,
                                this.lowerLimitEnabled = !1),
                                "number" == typeof b ? (this.upperLimit = b,
                                this.upperLimitEnabled = !0) : (this.upperLimit = b,
                                this.upperLimitEnabled = !1)
                            }
                        }
                        , {
                            "../equations/ContactEquation": 21,
                            "../equations/Equation": 22,
                            "../equations/RotationalLockEquation": 24,
                            "../math/vec2": 30,
                            "./Constraint": 14
                        }],
                        19: [function(a, b, c) {
                            function d(a, b, c) {
                                c = c || {},
                                e.call(this, a, b, e.REVOLUTE, c);
                                var d = this.maxForce = void 0 !== c.maxForce ? c.maxForce : Number.MAX_VALUE;
                                this.pivotA = i.create(),
                                this.pivotB = i.create(),
                                c.worldPivot ? (i.sub(this.pivotA, c.worldPivot, a.position),
                                i.sub(this.pivotB, c.worldPivot, b.position),
                                i.rotate(this.pivotA, this.pivotA, -a.angle),
                                i.rotate(this.pivotB, this.pivotB, -b.angle)) : (i.copy(this.pivotA, c.localPivotA),
                                i.copy(this.pivotB, c.localPivotB));
                                var o = this.equations = [new f(a,b,-d,d), new f(a,b,-d,d)]
                                  , p = o[0]
                                  , q = o[1]
                                  , r = this;
                                p.computeGq = function() {
                                    return i.rotate(j, r.pivotA, a.angle),
                                    i.rotate(k, r.pivotB, b.angle),
                                    i.add(n, b.position, k),
                                    i.sub(n, n, a.position),
                                    i.sub(n, n, j),
                                    i.dot(n, l)
                                }
                                ,
                                q.computeGq = function() {
                                    return i.rotate(j, r.pivotA, a.angle),
                                    i.rotate(k, r.pivotB, b.angle),
                                    i.add(n, b.position, k),
                                    i.sub(n, n, a.position),
                                    i.sub(n, n, j),
                                    i.dot(n, m)
                                }
                                ,
                                q.minForce = p.minForce = -d,
                                q.maxForce = p.maxForce = d,
                                this.motorEquation = new g(a,b),
                                this.motorEnabled = !1,
                                this.angle = 0,
                                this.lowerLimitEnabled = !1,
                                this.upperLimitEnabled = !1,
                                this.lowerLimit = 0,
                                this.upperLimit = 0,
                                this.upperLimitEquation = new h(a,b),
                                this.lowerLimitEquation = new h(a,b),
                                this.upperLimitEquation.minForce = 0,
                                this.lowerLimitEquation.maxForce = 0
                            }
                            var e = a("./Constraint")
                              , f = a("../equations/Equation")
                              , g = a("../equations/RotationalVelocityEquation")
                              , h = a("../equations/RotationalLockEquation")
                              , i = a("../math/vec2");
                            b.exports = d;
                            var j = i.create()
                              , k = i.create()
                              , l = i.fromValues(1, 0)
                              , m = i.fromValues(0, 1)
                              , n = i.create();
                            d.prototype = new e,
                            d.prototype.constructor = d,
                            d.prototype.setLimits = function(a, b) {
                                "number" == typeof a ? (this.lowerLimit = a,
                                this.lowerLimitEnabled = !0) : (this.lowerLimit = a,
                                this.lowerLimitEnabled = !1),
                                "number" == typeof b ? (this.upperLimit = b,
                                this.upperLimitEnabled = !0) : (this.upperLimit = b,
                                this.upperLimitEnabled = !1)
                            }
                            ,
                            d.prototype.update = function() {
                                var a = this.bodyA
                                  , b = this.bodyB
                                  , c = this.pivotA
                                  , d = this.pivotB
                                  , e = this.equations
                                  , f = (e[0],
                                e[1],
                                e[0])
                                  , g = e[1]
                                  , h = this.upperLimit
                                  , n = this.lowerLimit
                                  , o = this.upperLimitEquation
                                  , p = this.lowerLimitEquation
                                  , q = this.angle = b.angle - a.angle;
                                if (this.upperLimitEnabled && q > h)
                                    o.angle = h,
                                    -1 === e.indexOf(o) && e.push(o);
                                else {
                                    var r = e.indexOf(o);
                                    -1 !== r && e.splice(r, 1)
                                }
                                if (this.lowerLimitEnabled && q < n)
                                    p.angle = n,
                                    -1 === e.indexOf(p) && e.push(p);
                                else {
                                    var r = e.indexOf(p);
                                    -1 !== r && e.splice(r, 1)
                                }
                                i.rotate(j, c, a.angle),
                                i.rotate(k, d, b.angle),
                                f.G[0] = -1,
                                f.G[1] = 0,
                                f.G[2] = -i.crossLength(j, l),
                                f.G[3] = 1,
                                f.G[4] = 0,
                                f.G[5] = i.crossLength(k, l),
                                g.G[0] = 0,
                                g.G[1] = -1,
                                g.G[2] = -i.crossLength(j, m),
                                g.G[3] = 0,
                                g.G[4] = 1,
                                g.G[5] = i.crossLength(k, m)
                            }
                            ,
                            d.prototype.enableMotor = function() {
                                this.motorEnabled || (this.equations.push(this.motorEquation),
                                this.motorEnabled = !0)
                            }
                            ,
                            d.prototype.disableMotor = function() {
                                if (this.motorEnabled) {
                                    var a = this.equations.indexOf(this.motorEquation);
                                    this.equations.splice(a, 1),
                                    this.motorEnabled = !1
                                }
                            }
                            ,
                            d.prototype.motorIsEnabled = function() {
                                return !!this.motorEnabled
                            }
                            ,
                            d.prototype.setMotorSpeed = function(a) {
                                if (this.motorEnabled) {
                                    var b = this.equations.indexOf(this.motorEquation);
                                    this.equations[b].relativeVelocity = a
                                }
                            }
                            ,
                            d.prototype.getMotorSpeed = function() {
                                return !!this.motorEnabled && this.motorEquation.relativeVelocity
                            }
                        }
                        , {
                            "../equations/Equation": 22,
                            "../equations/RotationalLockEquation": 24,
                            "../equations/RotationalVelocityEquation": 25,
                            "../math/vec2": 30,
                            "./Constraint": 14
                        }],
                        20: [function(a, b, c) {
                            function d(a, b, c) {
                                c = c || {},
                                e.call(this, a, b, -Number.MAX_VALUE, Number.MAX_VALUE),
                                this.angle = c.angle || 0,
                                this.ratio = "number" == typeof c.ratio ? c.ratio : 1,
                                this.setRatio(this.ratio)
                            }
                            var e = a("./Equation");
                            a("../math/vec2");
                            b.exports = d,
                            d.prototype = new e,
                            d.prototype.constructor = d,
                            d.prototype.computeGq = function() {
                                return this.ratio * this.bodyA.angle - this.bodyB.angle + this.angle
                            }
                            ,
                            d.prototype.setRatio = function(a) {
                                var b = this.G;
                                b[2] = a,
                                b[5] = -1,
                                this.ratio = a
                            }
                            ,
                            d.prototype.setMaxTorque = function(a) {
                                this.maxForce = a,
                                this.minForce = -a
                            }
                        }
                        , {
                            "../math/vec2": 30,
                            "./Equation": 22
                        }],
                        21: [function(a, b, c) {
                            function d(a, b) {
                                e.call(this, a, b, 0, Number.MAX_VALUE),
                                this.contactPointA = f.create(),
                                this.penetrationVec = f.create(),
                                this.contactPointB = f.create(),
                                this.normalA = f.create(),
                                this.restitution = 0,
                                this.firstImpact = !1,
                                this.shapeA = null,
                                this.shapeB = null
                            }
                            var e = a("./Equation")
                              , f = a("../math/vec2");
                            b.exports = d,
                            d.prototype = new e,
                            d.prototype.constructor = d,
                            d.prototype.computeB = function(a, b, c) {
                                var d = this.bodyA
                                  , e = this.bodyB
                                  , g = this.contactPointA
                                  , h = this.contactPointB
                                  , i = d.position
                                  , j = e.position
                                  , k = this.penetrationVec
                                  , l = this.normalA
                                  , m = this.G
                                  , n = f.crossLength(g, l)
                                  , o = f.crossLength(h, l);
                                m[0] = -l[0],
                                m[1] = -l[1],
                                m[2] = -n,
                                m[3] = l[0],
                                m[4] = l[1],
                                m[5] = o,
                                f.add(k, j, h),
                                f.sub(k, k, i),
                                f.sub(k, k, g);
                                var p, q;
                                return this.firstImpact && 0 !== this.restitution ? (q = 0,
                                p = 1 / b * (1 + this.restitution) * this.computeGW()) : (q = f.dot(l, k) + this.offset,
                                p = this.computeGW()),
                                -q * a - p * b - c * this.computeGiMf()
                            }
                            ;
                            var g = f.create()
                              , h = f.create()
                              , i = f.create();
                            d.prototype.getVelocityAlongNormal = function() {
                                return this.bodyA.getVelocityAtPoint(g, this.contactPointA),
                                this.bodyB.getVelocityAtPoint(h, this.contactPointB),
                                f.subtract(i, g, h),
                                f.dot(this.normalA, i)
                            }
                        }
                        , {
                            "../math/vec2": 30,
                            "./Equation": 22
                        }],
                        22: [function(a, b, c) {
                            function d(a, b, c, e) {
                                this.minForce = void 0 === c ? -Number.MAX_VALUE : c,
                                this.maxForce = void 0 === e ? Number.MAX_VALUE : e,
                                this.bodyA = a,
                                this.bodyB = b,
                                this.stiffness = d.DEFAULT_STIFFNESS,
                                this.relaxation = d.DEFAULT_RELAXATION,
                                this.G = new f.ARRAY_TYPE(6);
                                for (var g = 0; g < 6; g++)
                                    this.G[g] = 0;
                                this.offset = 0,
                                this.a = 0,
                                this.b = 0,
                                this.epsilon = 0,
                                this.timeStep = 1 / 60,
                                this.needsUpdate = !0,
                                this.multiplier = 0,
                                this.relativeVelocity = 0,
                                this.enabled = !0
                            }
                            b.exports = d;
                            var e = a("../math/vec2")
                              , f = a("../utils/Utils");
                            a("../objects/Body");
                            d.prototype.constructor = d,
                            d.DEFAULT_STIFFNESS = 1e6,
                            d.DEFAULT_RELAXATION = 4,
                            d.prototype.update = function() {
                                var a = this.stiffness
                                  , b = this.relaxation
                                  , c = this.timeStep;
                                this.a = 4 / (c * (1 + 4 * b)),
                                this.b = 4 * b / (1 + 4 * b),
                                this.epsilon = 4 / (c * c * a * (1 + 4 * b)),
                                this.needsUpdate = !1
                            }
                            ,
                            d.prototype.gmult = function(a, b, c, d, e) {
                                return a[0] * b[0] + a[1] * b[1] + a[2] * c + a[3] * d[0] + a[4] * d[1] + a[5] * e
                            }
                            ,
                            d.prototype.computeB = function(a, b, c) {
                                var d = this.computeGW();
                                return -this.computeGq() * a - d * b - this.computeGiMf() * c
                            }
                            ;
                            var g = e.create()
                              , h = e.create();
                            d.prototype.computeGq = function() {
                                var a = this.G
                                  , b = this.bodyA
                                  , c = this.bodyB
                                  , d = (b.position,
                                c.position,
                                b.angle)
                                  , e = c.angle;
                                return this.gmult(a, g, d, h, e) + this.offset
                            }
                            ,
                            d.prototype.computeGW = function() {
                                var a = this.G
                                  , b = this.bodyA
                                  , c = this.bodyB
                                  , d = b.velocity
                                  , e = c.velocity
                                  , f = b.angularVelocity
                                  , g = c.angularVelocity;
                                return this.gmult(a, d, f, e, g) + this.relativeVelocity
                            }
                            ,
                            d.prototype.computeGWlambda = function() {
                                var a = this.G
                                  , b = this.bodyA
                                  , c = this.bodyB
                                  , d = b.vlambda
                                  , e = c.vlambda
                                  , f = b.wlambda
                                  , g = c.wlambda;
                                return this.gmult(a, d, f, e, g)
                            }
                            ;
                            var i = e.create()
                              , j = e.create();
                            d.prototype.computeGiMf = function() {
                                var a = this.bodyA
                                  , b = this.bodyB
                                  , c = a.force
                                  , d = a.angularForce
                                  , f = b.force
                                  , g = b.angularForce
                                  , h = a.invMassSolve
                                  , k = b.invMassSolve
                                  , l = a.invInertiaSolve
                                  , m = b.invInertiaSolve
                                  , n = this.G;
                                return e.scale(i, c, h),
                                e.multiply(i, a.massMultiplier, i),
                                e.scale(j, f, k),
                                e.multiply(j, b.massMultiplier, j),
                                this.gmult(n, i, d * l, j, g * m)
                            }
                            ,
                            d.prototype.computeGiMGt = function() {
                                var a = this.bodyA
                                  , b = this.bodyB
                                  , c = a.invMassSolve
                                  , d = b.invMassSolve
                                  , e = a.invInertiaSolve
                                  , f = b.invInertiaSolve
                                  , g = this.G;
                                return g[0] * g[0] * c * a.massMultiplier[0] + g[1] * g[1] * c * a.massMultiplier[1] + g[2] * g[2] * e + g[3] * g[3] * d * b.massMultiplier[0] + g[4] * g[4] * d * b.massMultiplier[1] + g[5] * g[5] * f
                            }
                            ;
                            var k = e.create()
                              , l = e.create()
                              , m = e.create();
                            e.create(),
                            e.create(),
                            e.create();
                            d.prototype.addToWlambda = function(a) {
                                var b = this.bodyA
                                  , c = this.bodyB
                                  , d = k
                                  , f = l
                                  , g = m
                                  , h = b.invMassSolve
                                  , i = c.invMassSolve
                                  , j = b.invInertiaSolve
                                  , n = c.invInertiaSolve
                                  , o = this.G;
                                f[0] = o[0],
                                f[1] = o[1],
                                g[0] = o[3],
                                g[1] = o[4],
                                e.scale(d, f, h * a),
                                e.multiply(d, d, b.massMultiplier),
                                e.add(b.vlambda, b.vlambda, d),
                                b.wlambda += j * o[2] * a,
                                e.scale(d, g, i * a),
                                e.multiply(d, d, c.massMultiplier),
                                e.add(c.vlambda, c.vlambda, d),
                                c.wlambda += n * o[5] * a
                            }
                            ,
                            d.prototype.computeInvC = function(a) {
                                return 1 / (this.computeGiMGt() + a)
                            }
                        }
                        , {
                            "../math/vec2": 30,
                            "../objects/Body": 31,
                            "../utils/Utils": 57
                        }],
                        23: [function(a, b, c) {
                            function d(a, b, c) {
                                f.call(this, a, b, -c, c),
                                this.contactPointA = e.create(),
                                this.contactPointB = e.create(),
                                this.t = e.create(),
                                this.contactEquations = [],
                                this.shapeA = null,
                                this.shapeB = null,
                                this.frictionCoefficient = .3
                            }
                            var e = a("../math/vec2")
                              , f = a("./Equation");
                            a("../utils/Utils");
                            b.exports = d,
                            d.prototype = new f,
                            d.prototype.constructor = d,
                            d.prototype.setSlipForce = function(a) {
                                this.maxForce = a,
                                this.minForce = -a
                            }
                            ,
                            d.prototype.getSlipForce = function() {
                                return this.maxForce
                            }
                            ,
                            d.prototype.computeB = function(a, b, c) {
                                var d = (this.bodyA,
                                this.bodyB,
                                this.contactPointA)
                                  , f = this.contactPointB
                                  , g = this.t
                                  , h = this.G;
                                return h[0] = -g[0],
                                h[1] = -g[1],
                                h[2] = -e.crossLength(d, g),
                                h[3] = g[0],
                                h[4] = g[1],
                                h[5] = e.crossLength(f, g),
                                -this.computeGW() * b - c * this.computeGiMf()
                            }
                        }
                        , {
                            "../math/vec2": 30,
                            "../utils/Utils": 57,
                            "./Equation": 22
                        }],
                        24: [function(a, b, c) {
                            function d(a, b, c) {
                                c = c || {},
                                e.call(this, a, b, -Number.MAX_VALUE, Number.MAX_VALUE),
                                this.angle = c.angle || 0;
                                var d = this.G;
                                d[2] = 1,
                                d[5] = -1
                            }
                            var e = a("./Equation")
                              , f = a("../math/vec2");
                            b.exports = d,
                            d.prototype = new e,
                            d.prototype.constructor = d;
                            var g = f.create()
                              , h = f.create()
                              , i = f.fromValues(1, 0)
                              , j = f.fromValues(0, 1);
                            d.prototype.computeGq = function() {
                                return f.rotate(g, i, this.bodyA.angle + this.angle),
                                f.rotate(h, j, this.bodyB.angle),
                                f.dot(g, h)
                            }
                        }
                        , {
                            "../math/vec2": 30,
                            "./Equation": 22
                        }],
                        25: [function(a, b, c) {
                            function d(a, b) {
                                e.call(this, a, b, -Number.MAX_VALUE, Number.MAX_VALUE),
                                this.relativeVelocity = 1,
                                this.ratio = 1
                            }
                            var e = a("./Equation");
                            a("../math/vec2");
                            b.exports = d,
                            d.prototype = new e,
                            d.prototype.constructor = d,
                            d.prototype.computeB = function(a, b, c) {
                                var d = this.G;
                                d[2] = -1,
                                d[5] = this.ratio;
                                var e = this.computeGiMf();
                                return -this.computeGW() * b - c * e
                            }
                        }
                        , {
                            "../math/vec2": 30,
                            "./Equation": 22
                        }],
                        26: [function(a, b, c) {
                            var d = function() {};
                            b.exports = d,
                            d.prototype = {
                                constructor: d,
                                on: function(a, b, c) {
                                    b.context = c || this,
                                    void 0 === this._listeners && (this._listeners = {});
                                    var d = this._listeners;
                                    return void 0 === d[a] && (d[a] = []),
                                    -1 === d[a].indexOf(b) && d[a].push(b),
                                    this
                                },
                                has: function(a, b) {
                                    if (void 0 === this._listeners)
                                        return !1;
                                    var c = this._listeners;
                                    if (b) {
                                        if (void 0 !== c[a] && -1 !== c[a].indexOf(b))
                                            return !0
                                    } else if (void 0 !== c[a])
                                        return !0;
                                    return !1
                                },
                                off: function(a, b) {
                                    if (void 0 === this._listeners)
                                        return this;
                                    var c = this._listeners
                                      , d = c[a].indexOf(b);
                                    return -1 !== d && c[a].splice(d, 1),
                                    this
                                },
                                emit: function(a) {
                                    if (void 0 === this._listeners)
                                        return this;
                                    var b = this._listeners
                                      , c = b[a.type];
                                    if (void 0 !== c) {
                                        a.target = this;
                                        for (var d = 0, e = c.length; d < e; d++) {
                                            var f = c[d];
                                            f.call(f.context, a)
                                        }
                                    }
                                    return this
                                }
                            }
                        }
                        , {}],
                        27: [function(a, b, c) {
                            function d(a, b, c) {
                                if (c = c || {},
                                !(a instanceof e && b instanceof e))
                                    throw new Error("First two arguments must be Material instances.");
                                this.id = d.idCounter++,
                                this.materialA = a,
                                this.materialB = b,
                                this.friction = void 0 !== c.friction ? Number(c.friction) : .3,
                                this.restitution = void 0 !== c.restitution ? Number(c.restitution) : 0,
                                this.stiffness = void 0 !== c.stiffness ? Number(c.stiffness) : f.DEFAULT_STIFFNESS,
                                this.relaxation = void 0 !== c.relaxation ? Number(c.relaxation) : f.DEFAULT_RELAXATION,
                                this.frictionStiffness = void 0 !== c.frictionStiffness ? Number(c.frictionStiffness) : f.DEFAULT_STIFFNESS,
                                this.frictionRelaxation = void 0 !== c.frictionRelaxation ? Number(c.frictionRelaxation) : f.DEFAULT_RELAXATION,
                                this.surfaceVelocity = void 0 !== c.surfaceVelocity ? Number(c.surfaceVelocity) : 0,
                                this.contactSkinSize = .005
                            }
                            var e = a("./Material")
                              , f = a("../equations/Equation");
                            b.exports = d,
                            d.idCounter = 0
                        }
                        , {
                            "../equations/Equation": 22,
                            "./Material": 28
                        }],
                        28: [function(a, b, c) {
                            function d(a) {
                                this.id = a || d.idCounter++
                            }
                            b.exports = d,
                            d.idCounter = 0
                        }
                        , {}],
                        29: [function(a, b, c) {
                            var d = {};
                            d.GetArea = function(a) {
                                if (a.length < 6)
                                    return 0;
                                for (var b = a.length - 2, c = 0, d = 0; d < b; d += 2)
                                    c += (a[d + 2] - a[d]) * (a[d + 1] + a[d + 3]);
                                return .5 * -(c += (a[0] - a[b]) * (a[b + 1] + a[1]))
                            }
                            ,
                            d.Triangulate = function(a) {
                                var b = a.length >> 1;
                                if (b < 3)
                                    return [];
                                for (var c = [], e = [], f = 0; f < b; f++)
                                    e.push(f);
                                for (var f = 0, g = b; g > 3; ) {
                                    var h = e[(f + 0) % g]
                                      , i = e[(f + 1) % g]
                                      , j = e[(f + 2) % g]
                                      , k = a[2 * h]
                                      , l = a[2 * h + 1]
                                      , m = a[2 * i]
                                      , n = a[2 * i + 1]
                                      , o = a[2 * j]
                                      , p = a[2 * j + 1]
                                      , q = !1;
                                    if (d._convex(k, l, m, n, o, p)) {
                                        q = !0;
                                        for (var r = 0; r < g; r++) {
                                            var s = e[r];
                                            if (s != h && s != i && s != j && d._PointInTriangle(a[2 * s], a[2 * s + 1], k, l, m, n, o, p)) {
                                                q = !1;
                                                break
                                            }
                                        }
                                    }
                                    if (q)
                                        c.push(h, i, j),
                                        e.splice((f + 1) % g, 1),
                                        g--,
                                        f = 0;
                                    else if (f++ > 3 * g)
                                        break
                                }
                                return c.push(e[0], e[1], e[2]),
                                c
                            }
                            ,
                            d._PointInTriangle = function(a, b, c, d, e, f, g, h) {
                                var i = g - c
                                  , j = h - d
                                  , k = e - c
                                  , l = f - d
                                  , m = a - c
                                  , n = b - d
                                  , o = i * i + j * j
                                  , p = i * k + j * l
                                  , q = i * m + j * n
                                  , r = k * k + l * l
                                  , s = k * m + l * n
                                  , t = 1 / (o * r - p * p)
                                  , u = (r * q - p * s) * t
                                  , v = (o * s - p * q) * t;
                                return u >= 0 && v >= 0 && u + v < 1
                            }
                            ,
                            d._convex = function(a, b, c, d, e, f) {
                                return (b - d) * (e - c) + (c - a) * (f - d) >= 0
                            }
                            ,
                            b.exports = d
                        }
                        , {}],
                        30: [function(a, b, c) {
                            var d = b.exports = {}
                              , e = a("../utils/Utils");
                            d.crossLength = function(a, b) {
                                return a[0] * b[1] - a[1] * b[0]
                            }
                            ,
                            d.crossVZ = function(a, b, c) {
                                return d.rotate(a, b, -Math.PI / 2),
                                d.scale(a, a, c),
                                a
                            }
                            ,
                            d.crossZV = function(a, b, c) {
                                return d.rotate(a, c, Math.PI / 2),
                                d.scale(a, a, b),
                                a
                            }
                            ,
                            d.rotate = function(a, b, c) {
                                if (0 !== c) {
                                    var d = Math.cos(c)
                                      , e = Math.sin(c)
                                      , f = b[0]
                                      , g = b[1];
                                    a[0] = d * f - e * g,
                                    a[1] = e * f + d * g
                                } else
                                    a[0] = b[0],
                                    a[1] = b[1]
                            }
                            ,
                            d.rotate90cw = function(a, b) {
                                var c = b[0]
                                  , d = b[1];
                                a[0] = d,
                                a[1] = -c
                            }
                            ,
                            d.toLocalFrame = function(a, b, c, e) {
                                d.copy(a, b),
                                d.sub(a, a, c),
                                d.rotate(a, a, -e)
                            }
                            ,
                            d.toGlobalFrame = function(a, b, c, e) {
                                d.copy(a, b),
                                d.rotate(a, a, e),
                                d.add(a, a, c)
                            }
                            ,
                            d.vectorToLocalFrame = function(a, b, c) {
                                d.rotate(a, b, -c)
                            }
                            ,
                            d.vectorToGlobalFrame = function(a, b, c) {
                                d.rotate(a, b, c)
                            }
                            ,
                            d.centroid = function(a, b, c, e) {
                                return d.add(a, b, c),
                                d.add(a, a, e),
                                d.scale(a, a, 1 / 3),
                                a
                            }
                            ,
                            d.create = function() {
                                var a = new e.ARRAY_TYPE(2);
                                return a[0] = 0,
                                a[1] = 0,
                                a
                            }
                            ,
                            d.clone = function(a) {
                                var b = new e.ARRAY_TYPE(2);
                                return b[0] = a[0],
                                b[1] = a[1],
                                b
                            }
                            ,
                            d.fromValues = function(a, b) {
                                var c = new e.ARRAY_TYPE(2);
                                return c[0] = a,
                                c[1] = b,
                                c
                            }
                            ,
                            d.copy = function(a, b) {
                                return a[0] = b[0],
                                a[1] = b[1],
                                a
                            }
                            ,
                            d.set = function(a, b, c) {
                                return a[0] = b,
                                a[1] = c,
                                a
                            }
                            ,
                            d.add = function(a, b, c) {
                                return a[0] = b[0] + c[0],
                                a[1] = b[1] + c[1],
                                a
                            }
                            ,
                            d.subtract = function(a, b, c) {
                                return a[0] = b[0] - c[0],
                                a[1] = b[1] - c[1],
                                a
                            }
                            ,
                            d.sub = d.subtract,
                            d.multiply = function(a, b, c) {
                                return a[0] = b[0] * c[0],
                                a[1] = b[1] * c[1],
                                a
                            }
                            ,
                            d.mul = d.multiply,
                            d.divide = function(a, b, c) {
                                return a[0] = b[0] / c[0],
                                a[1] = b[1] / c[1],
                                a
                            }
                            ,
                            d.div = d.divide,
                            d.scale = function(a, b, c) {
                                return a[0] = b[0] * c,
                                a[1] = b[1] * c,
                                a
                            }
                            ,
                            d.distance = function(a, b) {
                                var c = b[0] - a[0]
                                  , d = b[1] - a[1];
                                return Math.sqrt(c * c + d * d)
                            }
                            ,
                            d.dist = d.distance,
                            d.squaredDistance = function(a, b) {
                                var c = b[0] - a[0]
                                  , d = b[1] - a[1];
                                return c * c + d * d
                            }
                            ,
                            d.sqrDist = d.squaredDistance,
                            d.length = function(a) {
                                var b = a[0]
                                  , c = a[1];
                                return Math.sqrt(b * b + c * c)
                            }
                            ,
                            d.len = d.length,
                            d.squaredLength = function(a) {
                                var b = a[0]
                                  , c = a[1];
                                return b * b + c * c
                            }
                            ,
                            d.sqrLen = d.squaredLength,
                            d.negate = function(a, b) {
                                return a[0] = -b[0],
                                a[1] = -b[1],
                                a
                            }
                            ,
                            d.normalize = function(a, b) {
                                var c = b[0]
                                  , d = b[1]
                                  , e = c * c + d * d;
                                return e > 0 && (e = 1 / Math.sqrt(e),
                                a[0] = b[0] * e,
                                a[1] = b[1] * e),
                                a
                            }
                            ,
                            d.dot = function(a, b) {
                                return a[0] * b[0] + a[1] * b[1]
                            }
                            ,
                            d.str = function(a) {
                                return "vec2(" + a[0] + ", " + a[1] + ")"
                            }
                            ,
                            d.lerp = function(a, b, c, d) {
                                var e = b[0]
                                  , f = b[1];
                                return a[0] = e + d * (c[0] - e),
                                a[1] = f + d * (c[1] - f),
                                a
                            }
                            ,
                            d.reflect = function(a, b, c) {
                                var d = b[0] * c[0] + b[1] * c[1];
                                a[0] = b[0] - 2 * c[0] * d,
                                a[1] = b[1] - 2 * c[1] * d
                            }
                            ,
                            d.getLineSegmentsIntersection = function(a, b, c, e, f) {
                                var g = d.getLineSegmentsIntersectionFraction(b, c, e, f);
                                return !(g < 0) && (a[0] = b[0] + g * (c[0] - b[0]),
                                a[1] = b[1] + g * (c[1] - b[1]),
                                !0)
                            }
                            ,
                            d.getLineSegmentsIntersectionFraction = function(a, b, c, d) {
                                var e, f, g = b[0] - a[0], h = b[1] - a[1], i = d[0] - c[0], j = d[1] - c[1];
                                return e = (-h * (a[0] - c[0]) + g * (a[1] - c[1])) / (-i * h + g * j),
                                f = (i * (a[1] - c[1]) - j * (a[0] - c[0])) / (-i * h + g * j),
                                e >= 0 && e <= 1 && f >= 0 && f <= 1 ? f : -1
                            }
                        }
                        , {
                            "../utils/Utils": 57
                        }],
                        31: [function(a, b, c) {
                            function d(a) {
                                a = a || {},
                                k.call(this),
                                this.id = a.id || ++d._idCounter,
                                this.world = null,
                                this.shapes = [],
                                this.mass = a.mass || 0,
                                this.invMass = 0,
                                this.inertia = 0,
                                this.invInertia = 0,
                                this.invMassSolve = 0,
                                this.invInertiaSolve = 0,
                                this.fixedRotation = !!a.fixedRotation,
                                this.fixedX = !!a.fixedX,
                                this.fixedY = !!a.fixedY,
                                this.massMultiplier = e.create(),
                                this.position = e.fromValues(0, 0),
                                a.position && e.copy(this.position, a.position),
                                this.interpolatedPosition = e.fromValues(0, 0),
                                this.interpolatedAngle = 0,
                                this.previousPosition = e.fromValues(0, 0),
                                this.previousAngle = 0,
                                this.velocity = e.fromValues(0, 0),
                                a.velocity && e.copy(this.velocity, a.velocity),
                                this.vlambda = e.fromValues(0, 0),
                                this.wlambda = 0,
                                this.angle = a.angle || 0,
                                this.angularVelocity = a.angularVelocity || 0,
                                this.force = e.create(),
                                a.force && e.copy(this.force, a.force),
                                this.angularForce = a.angularForce || 0,
                                this.damping = "number" == typeof a.damping ? a.damping : .1,
                                this.angularDamping = "number" == typeof a.angularDamping ? a.angularDamping : .1,
                                this.type = d.STATIC,
                                void 0 !== a.type ? this.type = a.type : a.mass ? this.type = d.DYNAMIC : this.type = d.STATIC,
                                this.boundingRadius = 0,
                                this.aabb = new j,
                                this.aabbNeedsUpdate = !0,
                                this.allowSleep = void 0 === a.allowSleep || a.allowSleep,
                                this.wantsToSleep = !1,
                                this.sleepState = d.AWAKE,
                                this.sleepSpeedLimit = void 0 !== a.sleepSpeedLimit ? a.sleepSpeedLimit : .2,
                                this.sleepTimeLimit = void 0 !== a.sleepTimeLimit ? a.sleepTimeLimit : 1,
                                this.gravityScale = void 0 !== a.gravityScale ? a.gravityScale : 1,
                                this.collisionResponse = void 0 === a.collisionResponse || a.collisionResponse,
                                this.contactResponse = void 0 === a.contactResponse || a.contactResponse,
                                this.idleTime = 0,
                                this.timeLastSleepy = 0,
                                this.ccdSpeedThreshold = void 0 !== a.ccdSpeedThreshold ? a.ccdSpeedThreshold : -1,
                                this.ccdIterations = void 0 !== a.ccdIterations ? a.ccdIterations : 10,
                                this.concavePath = null,
                                this._wakeUpAfterNarrowphase = !1,
                                this.updateMassProperties()
                            }
                            var e = a("../math/vec2")
                              , f = a("poly-decomp")
                              , g = a("../shapes/Convex")
                              , h = a("../collision/RaycastResult")
                              , i = a("../collision/Ray")
                              , j = a("../collision/AABB")
                              , k = a("../events/EventEmitter");
                            b.exports = d,
                            d.prototype = new k,
                            d.prototype.constructor = d,
                            d._idCounter = 0,
                            d.prototype.updateSolveMassProperties = function() {
                                this.sleepState === d.SLEEPING || this.type === d.KINEMATIC ? (this.invMassSolve = 0,
                                this.invInertiaSolve = 0) : (this.invMassSolve = this.invMass,
                                this.invInertiaSolve = this.invInertia)
                            }
                            ,
                            d.prototype.setDensity = function(a) {
                                var b = this.getArea();
                                this.mass = b * a,
                                this.updateMassProperties()
                            }
                            ,
                            d.prototype.getArea = function() {
                                for (var a = 0, b = 0; b < this.shapes.length; b++)
                                    a += this.shapes[b].area;
                                return a
                            }
                            ,
                            d.prototype.getAABB = function() {
                                return this.aabbNeedsUpdate && this.updateAABB(),
                                this.aabb
                            }
                            ;
                            var l = new j
                              , m = e.create();
                            d.prototype.updateAABB = function() {
                                for (var a = this.shapes, b = a.length, c = m, d = this.angle, f = 0; f !== b; f++) {
                                    var g = a[f]
                                      , h = g.angle + d;
                                    e.rotate(c, g.position, d),
                                    e.add(c, c, this.position),
                                    g.computeAABB(l, c, h),
                                    0 === f ? this.aabb.copy(l) : this.aabb.extend(l)
                                }
                                this.aabbNeedsUpdate = !1
                            }
                            ,
                            d.prototype.updateBoundingRadius = function() {
                                for (var a = this.shapes, b = a.length, c = 0, d = 0; d !== b; d++) {
                                    var f = a[d]
                                      , g = e.length(f.position)
                                      , h = f.boundingRadius;
                                    g + h > c && (c = g + h)
                                }
                                this.boundingRadius = c
                            }
                            ,
                            d.prototype.addShape = function(a, b, c) {
                                if (a.body)
                                    throw new Error("A shape can only be added to one body.");
                                a.body = this,
                                b ? e.copy(a.position, b) : e.set(a.position, 0, 0),
                                a.angle = c || 0,
                                this.shapes.push(a),
                                this.updateMassProperties(),
                                this.updateBoundingRadius(),
                                this.aabbNeedsUpdate = !0
                            }
                            ,
                            d.prototype.removeShape = function(a) {
                                var b = this.shapes.indexOf(a);
                                return -1 !== b && (this.shapes.splice(b, 1),
                                this.aabbNeedsUpdate = !0,
                                a.body = null,
                                !0)
                            }
                            ,
                            d.prototype.updateMassProperties = function() {
                                if (this.type === d.STATIC || this.type === d.KINEMATIC)
                                    this.mass = Number.MAX_VALUE,
                                    this.invMass = 0,
                                    this.inertia = Number.MAX_VALUE,
                                    this.invInertia = 0;
                                else {
                                    var a = this.shapes
                                      , b = a.length
                                      , c = this.mass / b
                                      , f = 0;
                                    if (this.fixedRotation)
                                        this.inertia = Number.MAX_VALUE,
                                        this.invInertia = 0;
                                    else {
                                        for (var g = 0; g < b; g++) {
                                            var h = a[g]
                                              , i = e.squaredLength(h.position);
                                            f += h.computeMomentOfInertia(c) + c * i
                                        }
                                        this.inertia = f,
                                        this.invInertia = f > 0 ? 1 / f : 0
                                    }
                                    this.invMass = 1 / this.mass,
                                    e.set(this.massMultiplier, this.fixedX ? 0 : 1, this.fixedY ? 0 : 1)
                                }
                            }
                            ;
                            e.create();
                            d.prototype.applyForce = function(a, b) {
                                if (e.add(this.force, this.force, a),
                                b) {
                                    var c = e.crossLength(b, a);
                                    this.angularForce += c
                                }
                            }
                            ;
                            var n = e.create()
                              , o = e.create()
                              , p = e.create();
                            d.prototype.applyForceLocal = function(a, b) {
                                b = b || p;
                                var c = n
                                  , d = o;
                                this.vectorToWorldFrame(c, a),
                                this.vectorToWorldFrame(d, b),
                                this.applyForce(c, d)
                            }
                            ;
                            var q = e.create();
                            d.prototype.applyImpulse = function(a, b) {
                                if (this.type === d.DYNAMIC) {
                                    var c = q;
                                    if (e.scale(c, a, this.invMass),
                                    e.multiply(c, this.massMultiplier, c),
                                    e.add(this.velocity, c, this.velocity),
                                    b) {
                                        var f = e.crossLength(b, a);
                                        f *= this.invInertia,
                                        this.angularVelocity += f
                                    }
                                }
                            }
                            ;
                            var r = e.create()
                              , s = e.create()
                              , t = e.create();
                            d.prototype.applyImpulseLocal = function(a, b) {
                                b = b || t;
                                var c = r
                                  , d = s;
                                this.vectorToWorldFrame(c, a),
                                this.vectorToWorldFrame(d, b),
                                this.applyImpulse(c, d)
                            }
                            ,
                            d.prototype.toLocalFrame = function(a, b) {
                                e.toLocalFrame(a, b, this.position, this.angle)
                            }
                            ,
                            d.prototype.toWorldFrame = function(a, b) {
                                e.toGlobalFrame(a, b, this.position, this.angle)
                            }
                            ,
                            d.prototype.vectorToLocalFrame = function(a, b) {
                                e.vectorToLocalFrame(a, b, this.angle)
                            }
                            ,
                            d.prototype.vectorToWorldFrame = function(a, b) {
                                e.vectorToGlobalFrame(a, b, this.angle)
                            }
                            ,
                            d.prototype.fromPolygon = function(a, b) {
                                b = b || {};
                                for (var c = this.shapes.length; c >= 0; --c)
                                    this.removeShape(this.shapes[c]);
                                var d = new f.Polygon;
                                if (d.vertices = a,
                                d.makeCCW(),
                                "number" == typeof b.removeCollinearPoints && d.removeCollinearPoints(b.removeCollinearPoints),
                                void 0 === b.skipSimpleCheck && !d.isSimple())
                                    return !1;
                                this.concavePath = d.vertices.slice(0);
                                for (var c = 0; c < this.concavePath.length; c++) {
                                    var h = [0, 0];
                                    e.copy(h, this.concavePath[c]),
                                    this.concavePath[c] = h
                                }
                                var i;
                                i = b.optimalDecomp ? d.decomp() : d.quickDecomp();
                                for (var j = e.create(), c = 0; c !== i.length; c++) {
                                    for (var k = new g({
                                        vertices: i[c].vertices
                                    }), l = 0; l !== k.vertices.length; l++) {
                                        var h = k.vertices[l];
                                        e.sub(h, h, k.centerOfMass)
                                    }
                                    e.scale(j, k.centerOfMass, 1),
                                    k.updateTriangles(),
                                    k.updateCenterOfMass(),
                                    k.updateBoundingRadius(),
                                    this.addShape(k, j)
                                }
                                return this.adjustCenterOfMass(),
                                this.aabbNeedsUpdate = !0,
                                !0
                            }
                            ;
                            var u = (e.fromValues(0, 0),
                            e.fromValues(0, 0))
                              , v = e.fromValues(0, 0)
                              , w = e.fromValues(0, 0);
                            d.prototype.adjustCenterOfMass = function() {
                                var a = u
                                  , b = v
                                  , c = w
                                  , d = 0;
                                e.set(b, 0, 0);
                                for (var f = 0; f !== this.shapes.length; f++) {
                                    var g = this.shapes[f];
                                    e.scale(a, g.position, g.area),
                                    e.add(b, b, a),
                                    d += g.area
                                }
                                e.scale(c, b, 1 / d);
                                for (var f = 0; f !== this.shapes.length; f++) {
                                    var g = this.shapes[f];
                                    e.sub(g.position, g.position, c)
                                }
                                e.add(this.position, this.position, c);
                                for (var f = 0; this.concavePath && f < this.concavePath.length; f++)
                                    e.sub(this.concavePath[f], this.concavePath[f], c);
                                this.updateMassProperties(),
                                this.updateBoundingRadius()
                            }
                            ,
                            d.prototype.setZeroForce = function() {
                                e.set(this.force, 0, 0),
                                this.angularForce = 0
                            }
                            ,
                            d.prototype.resetConstraintVelocity = function() {
                                var a = this
                                  , b = a.vlambda;
                                e.set(b, 0, 0),
                                a.wlambda = 0
                            }
                            ,
                            d.prototype.addConstraintVelocity = function() {
                                var a = this
                                  , b = a.velocity;
                                e.add(b, b, a.vlambda),
                                a.angularVelocity += a.wlambda
                            }
                            ,
                            d.prototype.applyDamping = function(a) {
                                if (this.type === d.DYNAMIC) {
                                    var b = this.velocity;
                                    e.scale(b, b, Math.pow(1 - this.damping, a)),
                                    this.angularVelocity *= Math.pow(1 - this.angularDamping, a)
                                }
                            }
                            ,
                            d.prototype.wakeUp = function() {
                                var a = this.sleepState;
                                this.sleepState = d.AWAKE,
                                this.idleTime = 0,
                                a !== d.AWAKE && this.emit(d.wakeUpEvent)
                            }
                            ,
                            d.prototype.sleep = function() {
                                this.sleepState = d.SLEEPING,
                                this.angularVelocity = 0,
                                this.angularForce = 0,
                                e.set(this.velocity, 0, 0),
                                e.set(this.force, 0, 0),
                                this.emit(d.sleepEvent)
                            }
                            ,
                            d.prototype.sleepTick = function(a, b, c) {
                                if (this.allowSleep && this.type !== d.SLEEPING) {
                                    this.wantsToSleep = !1;
                                    this.sleepState;
                                    e.squaredLength(this.velocity) + Math.pow(this.angularVelocity, 2) >= Math.pow(this.sleepSpeedLimit, 2) ? (this.idleTime = 0,
                                    this.sleepState = d.AWAKE) : (this.idleTime += c,
                                    this.sleepState = d.SLEEPY),
                                    this.idleTime > this.sleepTimeLimit && (b ? this.wantsToSleep = !0 : this.sleep())
                                }
                            }
                            ,
                            d.prototype.overlaps = function(a) {
                                return this.world.overlapKeeper.bodiesAreOverlapping(this, a)
                            }
                            ;
                            var x = e.create()
                              , y = e.create();
                            d.prototype.integrate = function(a) {
                                var b = this.invMass
                                  , c = this.force
                                  , d = this.position
                                  , f = this.velocity;
                                e.copy(this.previousPosition, this.position),
                                this.previousAngle = this.angle,
                                this.fixedRotation || (this.angularVelocity += this.angularForce * this.invInertia * a),
                                e.scale(x, c, a * b),
                                e.multiply(x, this.massMultiplier, x),
                                e.add(f, x, f),
                                this.integrateToTimeOfImpact(a) || (e.scale(y, f, a),
                                e.add(d, d, y),
                                this.fixedRotation || (this.angle += this.angularVelocity * a)),
                                this.aabbNeedsUpdate = !0
                            }
                            ;
                            var z = new h
                              , A = new i({
                                mode: i.ALL
                            })
                              , B = e.create()
                              , C = e.create()
                              , D = e.create()
                              , E = e.create();
                            d.prototype.integrateToTimeOfImpact = function(a) {
                                if (this.ccdSpeedThreshold < 0 || e.squaredLength(this.velocity) < Math.pow(this.ccdSpeedThreshold, 2))
                                    return !1;
                                e.normalize(B, this.velocity),
                                e.scale(C, this.velocity, a),
                                e.add(C, C, this.position),
                                e.sub(D, C, this.position);
                                var b, c = this.angularVelocity * a, d = e.length(D), f = 1, g = this;
                                if (z.reset(),
                                A.callback = function(a) {
                                    a.body !== g && (b = a.body,
                                    a.getHitPoint(C, A),
                                    e.sub(D, C, g.position),
                                    f = e.length(D) / d,
                                    a.stop())
                                }
                                ,
                                e.copy(A.from, this.position),
                                e.copy(A.to, C),
                                A.update(),
                                this.world.raycast(z, A),
                                !b)
                                    return !1;
                                var h = this.angle;
                                e.copy(E, this.position);
                                for (var i = 0, j = 0, k = 0, l = f; l >= j && i < this.ccdIterations; ) {
                                    i++,
                                    k = (l - j) / 2,
                                    e.scale(y, D, f),
                                    e.add(this.position, E, y),
                                    this.angle = h + c * f,
                                    this.updateAABB();
                                    this.aabb.overlaps(b.aabb) && this.world.narrowphase.bodiesOverlap(this, b) ? j = k : l = k
                                }
                                return f = k,
                                e.copy(this.position, E),
                                this.angle = h,
                                e.scale(y, D, f),
                                e.add(this.position, this.position, y),
                                this.fixedRotation || (this.angle += c * f),
                                !0
                            }
                            ,
                            d.prototype.getVelocityAtPoint = function(a, b) {
                                return e.crossVZ(a, b, this.angularVelocity),
                                e.subtract(a, this.velocity, a),
                                a
                            }
                            ,
                            d.sleepyEvent = {
                                type: "sleepy"
                            },
                            d.sleepEvent = {
                                type: "sleep"
                            },
                            d.wakeUpEvent = {
                                type: "wakeup"
                            },
                            d.DYNAMIC = 1,
                            d.STATIC = 2,
                            d.KINEMATIC = 4,
                            d.AWAKE = 0,
                            d.SLEEPY = 1,
                            d.SLEEPING = 2
                        }
                        , {
                            "../collision/AABB": 7,
                            "../collision/Ray": 11,
                            "../collision/RaycastResult": 12,
                            "../events/EventEmitter": 26,
                            "../math/vec2": 30,
                            "../shapes/Convex": 40,
                            "poly-decomp": 5
                        }],
                        32: [function(a, b, c) {
                            function d(a, b, c) {
                                c = c || {},
                                f.call(this, a, b, c),
                                this.localAnchorA = e.fromValues(0, 0),
                                this.localAnchorB = e.fromValues(0, 0),
                                c.localAnchorA && e.copy(this.localAnchorA, c.localAnchorA),
                                c.localAnchorB && e.copy(this.localAnchorB, c.localAnchorB),
                                c.worldAnchorA && this.setWorldAnchorA(c.worldAnchorA),
                                c.worldAnchorB && this.setWorldAnchorB(c.worldAnchorB);
                                var d = e.create()
                                  , g = e.create();
                                this.getWorldAnchorA(d),
                                this.getWorldAnchorB(g);
                                var h = e.distance(d, g);
                                this.restLength = "number" == typeof c.restLength ? c.restLength : h
                            }
                            var e = a("../math/vec2")
                              , f = a("./Spring");
                            a("../utils/Utils");
                            b.exports = d,
                            d.prototype = new f,
                            d.prototype.constructor = d,
                            d.prototype.setWorldAnchorA = function(a) {
                                this.bodyA.toLocalFrame(this.localAnchorA, a)
                            }
                            ,
                            d.prototype.setWorldAnchorB = function(a) {
                                this.bodyB.toLocalFrame(this.localAnchorB, a)
                            }
                            ,
                            d.prototype.getWorldAnchorA = function(a) {
                                this.bodyA.toWorldFrame(a, this.localAnchorA)
                            }
                            ,
                            d.prototype.getWorldAnchorB = function(a) {
                                this.bodyB.toWorldFrame(a, this.localAnchorB)
                            }
                            ;
                            var g = e.create()
                              , h = e.create()
                              , i = e.create()
                              , j = e.create()
                              , k = e.create()
                              , l = e.create()
                              , m = e.create()
                              , n = e.create()
                              , o = e.create();
                            d.prototype.applyForce = function() {
                                var a = this.stiffness
                                  , b = this.damping
                                  , c = this.restLength
                                  , d = this.bodyA
                                  , f = this.bodyB
                                  , p = g
                                  , q = h
                                  , r = i
                                  , s = j
                                  , t = o
                                  , u = k
                                  , v = l
                                  , w = m
                                  , x = n;
                                this.getWorldAnchorA(u),
                                this.getWorldAnchorB(v),
                                e.sub(w, u, d.position),
                                e.sub(x, v, f.position),
                                e.sub(p, v, u);
                                var y = e.len(p);
                                e.normalize(q, p),
                                e.sub(r, f.velocity, d.velocity),
                                e.crossZV(t, f.angularVelocity, x),
                                e.add(r, r, t),
                                e.crossZV(t, d.angularVelocity, w),
                                e.sub(r, r, t),
                                e.scale(s, q, -a * (y - c) - b * e.dot(r, q)),
                                e.sub(d.force, d.force, s),
                                e.add(f.force, f.force, s);
                                var z = e.crossLength(w, s)
                                  , A = e.crossLength(x, s);
                                d.angularForce -= z,
                                f.angularForce += A
                            }
                        }
                        , {
                            "../math/vec2": 30,
                            "../utils/Utils": 57,
                            "./Spring": 34
                        }],
                        33: [function(a, b, c) {
                            function d(a, b, c) {
                                c = c || {},
                                e.call(this, a, b, c),
                                this.restAngle = "number" == typeof c.restAngle ? c.restAngle : b.angle - a.angle
                            }
                            var e = (a("../math/vec2"),
                            a("./Spring"));
                            b.exports = d,
                            d.prototype = new e,
                            d.prototype.constructor = d,
                            d.prototype.applyForce = function() {
                                var a = this.stiffness
                                  , b = this.damping
                                  , c = this.restAngle
                                  , d = this.bodyA
                                  , e = this.bodyB
                                  , f = e.angle - d.angle
                                  , g = e.angularVelocity - d.angularVelocity
                                  , h = -a * (f - c) - b * g * 0;
                                d.angularForce -= h,
                                e.angularForce += h
                            }
                        }
                        , {
                            "../math/vec2": 30,
                            "./Spring": 34
                        }],
                        34: [function(a, b, c) {
                            function d(a, b, c) {
                                c = e.defaults(c, {
                                    stiffness: 100,
                                    damping: 1
                                }),
                                this.stiffness = c.stiffness,
                                this.damping = c.damping,
                                this.bodyA = a,
                                this.bodyB = b
                            }
                            var e = (a("../math/vec2"),
                            a("../utils/Utils"));
                            b.exports = d,
                            d.prototype.applyForce = function() {}
                        }
                        , {
                            "../math/vec2": 30,
                            "../utils/Utils": 57
                        }],
                        35: [function(a, b, c) {
                            function d(a, b) {
                                b = b || {},
                                this.chassisBody = a,
                                this.wheels = [],
                                this.groundBody = new i({
                                    mass: 0
                                }),
                                this.world = null;
                                var c = this;
                                this.preStepCallback = function() {
                                    c.update()
                                }
                            }
                            function e(a, b) {
                                b = b || {},
                                this.vehicle = a,
                                this.forwardEquation = new h(a.chassisBody,a.groundBody),
                                this.sideEquation = new h(a.chassisBody,a.groundBody),
                                this.steerValue = 0,
                                this.engineForce = 0,
                                this.setSideFriction(void 0 !== b.sideFriction ? b.sideFriction : 5),
                                this.localForwardVector = f.fromValues(0, 1),
                                b.localForwardVector && f.copy(this.localForwardVector, b.localForwardVector),
                                this.localPosition = f.fromValues(0, 0),
                                b.localPosition && f.copy(this.localPosition, b.localPosition),
                                g.apply(this, a.chassisBody, a.groundBody),
                                this.equations.push(this.forwardEquation, this.sideEquation),
                                this.setBrakeForce(0)
                            }
                            var f = a("../math/vec2")
                              , g = (a("../utils/Utils"),
                            a("../constraints/Constraint"))
                              , h = a("../equations/FrictionEquation")
                              , i = a("../objects/Body");
                            b.exports = d,
                            d.prototype.addToWorld = function(a) {
                                this.world = a,
                                a.addBody(this.groundBody),
                                a.on("preStep", this.preStepCallback);
                                for (var b = 0; b < this.wheels.length; b++) {
                                    var c = this.wheels[b];
                                    a.addConstraint(c)
                                }
                            }
                            ,
                            d.prototype.removeFromWorld = function() {
                                var a = this.world;
                                a.removeBody(this.groundBody),
                                a.off("preStep", this.preStepCallback);
                                for (var b = 0; b < this.wheels.length; b++) {
                                    var c = this.wheels[b];
                                    a.removeConstraint(c)
                                }
                                this.world = null
                            }
                            ,
                            d.prototype.addWheel = function(a) {
                                var b = new e(this,a);
                                return this.wheels.push(b),
                                b
                            }
                            ,
                            d.prototype.update = function() {
                                for (var a = 0; a < this.wheels.length; a++)
                                    this.wheels[a].update()
                            }
                            ,
                            e.prototype = new g,
                            e.prototype.setBrakeForce = function(a) {
                                this.forwardEquation.setSlipForce(a)
                            }
                            ,
                            e.prototype.setSideFriction = function(a) {
                                this.sideEquation.setSlipForce(a)
                            }
                            ;
                            var j = f.create()
                              , k = f.create();
                            e.prototype.getSpeed = function() {
                                return this.vehicle.chassisBody.vectorToWorldFrame(k, this.localForwardVector),
                                this.vehicle.chassisBody.getVelocityAtPoint(j, k),
                                f.dot(j, k)
                            }
                            ;
                            var l = f.create();
                            e.prototype.update = function() {
                                this.vehicle.chassisBody.vectorToWorldFrame(this.forwardEquation.t, this.localForwardVector),
                                f.rotate(this.sideEquation.t, this.localForwardVector, Math.PI / 2),
                                this.vehicle.chassisBody.vectorToWorldFrame(this.sideEquation.t, this.sideEquation.t),
                                f.rotate(this.forwardEquation.t, this.forwardEquation.t, this.steerValue),
                                f.rotate(this.sideEquation.t, this.sideEquation.t, this.steerValue),
                                this.vehicle.chassisBody.toWorldFrame(this.forwardEquation.contactPointB, this.localPosition),
                                f.copy(this.sideEquation.contactPointB, this.forwardEquation.contactPointB),
                                this.vehicle.chassisBody.vectorToWorldFrame(this.forwardEquation.contactPointA, this.localPosition),
                                f.copy(this.sideEquation.contactPointA, this.forwardEquation.contactPointA),
                                f.normalize(l, this.forwardEquation.t),
                                f.scale(l, l, this.engineForce),
                                this.vehicle.chassisBody.applyForce(l, this.forwardEquation.contactPointA)
                            }
                        }
                        , {
                            "../constraints/Constraint": 14,
                            "../equations/FrictionEquation": 23,
                            "../math/vec2": 30,
                            "../objects/Body": 31,
                            "../utils/Utils": 57
                        }],
                        36: [function(a, b, c) {
                            var d = b.exports = {
                                AABB: a("./collision/AABB"),
                                AngleLockEquation: a("./equations/AngleLockEquation"),
                                Body: a("./objects/Body"),
                                Broadphase: a("./collision/Broadphase"),
                                Capsule: a("./shapes/Capsule"),
                                Circle: a("./shapes/Circle"),
                                Constraint: a("./constraints/Constraint"),
                                ContactEquation: a("./equations/ContactEquation"),
                                ContactEquationPool: a("./utils/ContactEquationPool"),
                                ContactMaterial: a("./material/ContactMaterial"),
                                Convex: a("./shapes/Convex"),
                                DistanceConstraint: a("./constraints/DistanceConstraint"),
                                Equation: a("./equations/Equation"),
                                EventEmitter: a("./events/EventEmitter"),
                                FrictionEquation: a("./equations/FrictionEquation"),
                                FrictionEquationPool: a("./utils/FrictionEquationPool"),
                                GearConstraint: a("./constraints/GearConstraint"),
                                GSSolver: a("./solver/GSSolver"),
                                Heightfield: a("./shapes/Heightfield"),
                                Line: a("./shapes/Line"),
                                LockConstraint: a("./constraints/LockConstraint"),
                                Material: a("./material/Material"),
                                Narrowphase: a("./collision/Narrowphase"),
                                NaiveBroadphase: a("./collision/NaiveBroadphase"),
                                Particle: a("./shapes/Particle"),
                                Plane: a("./shapes/Plane"),
                                Pool: a("./utils/Pool"),
                                RevoluteConstraint: a("./constraints/RevoluteConstraint"),
                                PrismaticConstraint: a("./constraints/PrismaticConstraint"),
                                Ray: a("./collision/Ray"),
                                RaycastResult: a("./collision/RaycastResult"),
                                Box: a("./shapes/Box"),
                                RotationalVelocityEquation: a("./equations/RotationalVelocityEquation"),
                                SAPBroadphase: a("./collision/SAPBroadphase"),
                                Shape: a("./shapes/Shape"),
                                Solver: a("./solver/Solver"),
                                Spring: a("./objects/Spring"),
                                TopDownVehicle: a("./objects/TopDownVehicle"),
                                LinearSpring: a("./objects/LinearSpring"),
                                RotationalSpring: a("./objects/RotationalSpring"),
                                Utils: a("./utils/Utils"),
                                World: a("./world/World"),
                                vec2: a("./math/vec2"),
                                version: a("../package.json").version
                            };
                            Object.defineProperty(d, "Rectangle", {
                                get: function() {
                                    return this.Box
                                }
                            })
                        }
                        , {
                            "../package.json": 6,
                            "./collision/AABB": 7,
                            "./collision/Broadphase": 8,
                            "./collision/NaiveBroadphase": 9,
                            "./collision/Narrowphase": 10,
                            "./collision/Ray": 11,
                            "./collision/RaycastResult": 12,
                            "./collision/SAPBroadphase": 13,
                            "./constraints/Constraint": 14,
                            "./constraints/DistanceConstraint": 15,
                            "./constraints/GearConstraint": 16,
                            "./constraints/LockConstraint": 17,
                            "./constraints/PrismaticConstraint": 18,
                            "./constraints/RevoluteConstraint": 19,
                            "./equations/AngleLockEquation": 20,
                            "./equations/ContactEquation": 21,
                            "./equations/Equation": 22,
                            "./equations/FrictionEquation": 23,
                            "./equations/RotationalVelocityEquation": 25,
                            "./events/EventEmitter": 26,
                            "./material/ContactMaterial": 27,
                            "./material/Material": 28,
                            "./math/vec2": 30,
                            "./objects/Body": 31,
                            "./objects/LinearSpring": 32,
                            "./objects/RotationalSpring": 33,
                            "./objects/Spring": 34,
                            "./objects/TopDownVehicle": 35,
                            "./shapes/Box": 37,
                            "./shapes/Capsule": 38,
                            "./shapes/Circle": 39,
                            "./shapes/Convex": 40,
                            "./shapes/Heightfield": 41,
                            "./shapes/Line": 42,
                            "./shapes/Particle": 43,
                            "./shapes/Plane": 44,
                            "./shapes/Shape": 45,
                            "./solver/GSSolver": 46,
                            "./solver/Solver": 47,
                            "./utils/ContactEquationPool": 48,
                            "./utils/FrictionEquationPool": 49,
                            "./utils/Pool": 55,
                            "./utils/Utils": 57,
                            "./world/World": 61
                        }],
                        37: [function(a, b, c) {
                            function d(a) {
                                "number" == typeof arguments[0] && "number" == typeof arguments[1] && (a = {
                                    width: arguments[0],
                                    height: arguments[1]
                                }),
                                a = a || {};
                                var b = this.width = a.width || 1
                                  , c = this.height = a.height || 1
                                  , d = [e.fromValues(-b / 2, -c / 2), e.fromValues(b / 2, -c / 2), e.fromValues(b / 2, c / 2), e.fromValues(-b / 2, c / 2)]
                                  , h = [e.fromValues(1, 0), e.fromValues(0, 1)];
                                a.vertices = d,
                                a.axes = h,
                                a.type = f.BOX,
                                g.call(this, a)
                            }
                            var e = a("../math/vec2")
                              , f = a("./Shape")
                              , g = a("./Convex");
                            b.exports = d,
                            d.prototype = new g,
                            d.prototype.constructor = d,
                            d.prototype.computeMomentOfInertia = function(a) {
                                var b = this.width
                                  , c = this.height;
                                return a * (c * c + b * b) / 12
                            }
                            ,
                            d.prototype.updateBoundingRadius = function() {
                                var a = this.width
                                  , b = this.height;
                                this.boundingRadius = Math.sqrt(a * a + b * b) / 2
                            }
                            ;
                            e.create(),
                            e.create(),
                            e.create(),
                            e.create();
                            d.prototype.computeAABB = function(a, b, c) {
                                a.setFromPoints(this.vertices, b, c, 0)
                            }
                            ,
                            d.prototype.updateArea = function() {
                                this.area = this.width * this.height
                            }
                        }
                        , {
                            "../math/vec2": 30,
                            "./Convex": 40,
                            "./Shape": 45
                        }],
                        38: [function(a, b, c) {
                            function d(a) {
                                "number" == typeof arguments[0] && "number" == typeof arguments[1] && (a = {
                                    length: arguments[0],
                                    radius: arguments[1]
                                }),
                                a = a || {},
                                this.length = a.length || 1,
                                this.radius = a.radius || 1,
                                a.type = e.CAPSULE,
                                e.call(this, a)
                            }
                            var e = a("./Shape")
                              , f = a("../math/vec2");
                            b.exports = d,
                            d.prototype = new e,
                            d.prototype.constructor = d,
                            d.prototype.computeMomentOfInertia = function(a) {
                                var b = this.radius
                                  , c = this.length + b
                                  , d = 2 * b;
                                return a * (d * d + c * c) / 12
                            }
                            ,
                            d.prototype.updateBoundingRadius = function() {
                                this.boundingRadius = this.radius + this.length / 2
                            }
                            ,
                            d.prototype.updateArea = function() {
                                this.area = Math.PI * this.radius * this.radius + 2 * this.radius * this.length
                            }
                            ;
                            var g = f.create();
                            d.prototype.computeAABB = function(a, b, c) {
                                var d = this.radius;
                                f.set(g, this.length / 2, 0),
                                0 !== c && f.rotate(g, g, c),
                                f.set(a.upperBound, Math.max(g[0] + d, -g[0] + d), Math.max(g[1] + d, -g[1] + d)),
                                f.set(a.lowerBound, Math.min(g[0] - d, -g[0] - d), Math.min(g[1] - d, -g[1] - d)),
                                f.add(a.lowerBound, a.lowerBound, b),
                                f.add(a.upperBound, a.upperBound, b)
                            }
                            ;
                            var h = f.create()
                              , i = f.create()
                              , j = f.create()
                              , k = f.create()
                              , l = f.fromValues(0, 1);
                            d.prototype.raycast = function(a, b, c, d) {
                                for (var e = b.from, g = b.to, m = (b.direction,
                                h), n = i, o = j, p = k, q = this.length / 2, r = 0; r < 2; r++) {
                                    var s = this.radius * (2 * r - 1);
                                    f.set(o, -q, s),
                                    f.set(p, q, s),
                                    f.toGlobalFrame(o, o, c, d),
                                    f.toGlobalFrame(p, p, c, d);
                                    var t = f.getLineSegmentsIntersectionFraction(e, g, o, p);
                                    if (t >= 0 && (f.rotate(n, l, d),
                                    f.scale(n, n, 2 * r - 1),
                                    b.reportIntersection(a, t, n, -1),
                                    a.shouldStop(b)))
                                        return
                                }
                                for (var u = Math.pow(this.radius, 2) + Math.pow(q, 2), r = 0; r < 2; r++) {
                                    f.set(o, q * (2 * r - 1), 0),
                                    f.toGlobalFrame(o, o, c, d);
                                    var v = Math.pow(g[0] - e[0], 2) + Math.pow(g[1] - e[1], 2)
                                      , w = 2 * ((g[0] - e[0]) * (e[0] - o[0]) + (g[1] - e[1]) * (e[1] - o[1]))
                                      , x = Math.pow(e[0] - o[0], 2) + Math.pow(e[1] - o[1], 2) - Math.pow(this.radius, 2)
                                      , t = Math.pow(w, 2) - 4 * v * x;
                                    if (!(t < 0))
                                        if (0 === t) {
                                            if (f.lerp(m, e, g, t),
                                            f.squaredDistance(m, c) > u && (f.sub(n, m, o),
                                            f.normalize(n, n),
                                            b.reportIntersection(a, t, n, -1),
                                            a.shouldStop(b)))
                                                return
                                        } else {
                                            var y = Math.sqrt(t)
                                              , z = 1 / (2 * v)
                                              , A = (-w - y) * z
                                              , B = (-w + y) * z;
                                            if (A >= 0 && A <= 1 && (f.lerp(m, e, g, A),
                                            f.squaredDistance(m, c) > u && (f.sub(n, m, o),
                                            f.normalize(n, n),
                                            b.reportIntersection(a, A, n, -1),
                                            a.shouldStop(b))))
                                                return;
                                            if (B >= 0 && B <= 1 && (f.lerp(m, e, g, B),
                                            f.squaredDistance(m, c) > u && (f.sub(n, m, o),
                                            f.normalize(n, n),
                                            b.reportIntersection(a, B, n, -1),
                                            a.shouldStop(b))))
                                                return
                                        }
                                }
                            }
                        }
                        , {
                            "../math/vec2": 30,
                            "./Shape": 45
                        }],
                        39: [function(a, b, c) {
                            function d(a) {
                                "number" == typeof arguments[0] && (a = {
                                    radius: arguments[0]
                                }),
                                a = a || {},
                                this.radius = a.radius || 1,
                                a.type = e.CIRCLE,
                                e.call(this, a)
                            }
                            var e = a("./Shape")
                              , f = a("../math/vec2");
                            b.exports = d,
                            d.prototype = new e,
                            d.prototype.constructor = d,
                            d.prototype.computeMomentOfInertia = function(a) {
                                var b = this.radius;
                                return a * b * b / 2
                            }
                            ,
                            d.prototype.updateBoundingRadius = function() {
                                this.boundingRadius = this.radius
                            }
                            ,
                            d.prototype.updateArea = function() {
                                this.area = Math.PI * this.radius * this.radius
                            }
                            ,
                            d.prototype.computeAABB = function(a, b, c) {
                                var d = this.radius;
                                f.set(a.upperBound, d, d),
                                f.set(a.lowerBound, -d, -d),
                                b && (f.add(a.lowerBound, a.lowerBound, b),
                                f.add(a.upperBound, a.upperBound, b))
                            }
                            ;
                            var g = f.create()
                              , h = f.create();
                            d.prototype.raycast = function(a, b, c, d) {
                                var e = b.from
                                  , i = b.to
                                  , j = this.radius
                                  , k = Math.pow(i[0] - e[0], 2) + Math.pow(i[1] - e[1], 2)
                                  , l = 2 * ((i[0] - e[0]) * (e[0] - c[0]) + (i[1] - e[1]) * (e[1] - c[1]))
                                  , m = Math.pow(e[0] - c[0], 2) + Math.pow(e[1] - c[1], 2) - Math.pow(j, 2)
                                  , n = Math.pow(l, 2) - 4 * k * m
                                  , o = g
                                  , p = h;
                                if (!(n < 0))
                                    if (0 === n)
                                        f.lerp(o, e, i, n),
                                        f.sub(p, o, c),
                                        f.normalize(p, p),
                                        b.reportIntersection(a, n, p, -1);
                                    else {
                                        var q = Math.sqrt(n)
                                          , r = 1 / (2 * k)
                                          , s = (-l - q) * r
                                          , t = (-l + q) * r;
                                        if (s >= 0 && s <= 1 && (f.lerp(o, e, i, s),
                                        f.sub(p, o, c),
                                        f.normalize(p, p),
                                        b.reportIntersection(a, s, p, -1),
                                        a.shouldStop(b)))
                                            return;
                                        t >= 0 && t <= 1 && (f.lerp(o, e, i, t),
                                        f.sub(p, o, c),
                                        f.normalize(p, p),
                                        b.reportIntersection(a, t, p, -1))
                                    }
                            }
                        }
                        , {
                            "../math/vec2": 30,
                            "./Shape": 45
                        }],
                        40: [function(a, b, c) {
                            function d(a) {
                                Array.isArray(arguments[0]) && (a = {
                                    vertices: arguments[0],
                                    axes: arguments[1]
                                }),
                                a = a || {},
                                this.vertices = [];
                                for (var b = void 0 !== a.vertices ? a.vertices : [], c = 0; c < b.length; c++) {
                                    var d = f.create();
                                    f.copy(d, b[c]),
                                    this.vertices.push(d)
                                }
                                if (this.axes = [],
                                a.axes)
                                    for (var c = 0; c < a.axes.length; c++) {
                                        var g = f.create();
                                        f.copy(g, a.axes[c]),
                                        this.axes.push(g)
                                    }
                                else
                                    for (var c = 0; c < this.vertices.length; c++) {
                                        var h = this.vertices[c]
                                          , i = this.vertices[(c + 1) % this.vertices.length]
                                          , j = f.create();
                                        f.sub(j, i, h),
                                        f.rotate90cw(j, j),
                                        f.normalize(j, j),
                                        this.axes.push(j)
                                    }
                                if (this.centerOfMass = f.fromValues(0, 0),
                                this.triangles = [],
                                this.vertices.length && (this.updateTriangles(),
                                this.updateCenterOfMass()),
                                this.boundingRadius = 0,
                                a.type = e.CONVEX,
                                e.call(this, a),
                                this.updateBoundingRadius(),
                                this.updateArea(),
                                this.area < 0)
                                    throw new Error("Convex vertices must be given in conter-clockwise winding.")
                            }
                            var e = a("./Shape")
                              , f = a("../math/vec2")
                              , g = a("../math/polyk");
                            a("poly-decomp");
                            b.exports = d,
                            d.prototype = new e,
                            d.prototype.constructor = d;
                            var h = f.create()
                              , i = f.create();
                            d.prototype.projectOntoLocalAxis = function(a, b) {
                                for (var c, d, e = null, g = null, a = h, i = 0; i < this.vertices.length; i++)
                                    c = this.vertices[i],
                                    d = f.dot(c, a),
                                    (null === e || d > e) && (e = d),
                                    (null === g || d < g) && (g = d);
                                if (g > e) {
                                    var j = g;
                                    g = e,
                                    e = j
                                }
                                f.set(b, g, e)
                            }
                            ,
                            d.prototype.projectOntoWorldAxis = function(a, b, c, d) {
                                var e = i;
                                this.projectOntoLocalAxis(a, d),
                                0 !== c ? f.rotate(e, a, c) : e = a;
                                var g = f.dot(b, e);
                                f.set(d, d[0] + g, d[1] + g)
                            }
                            ,
                            d.prototype.updateTriangles = function() {
                                this.triangles.length = 0;
                                for (var a = [], b = 0; b < this.vertices.length; b++) {
                                    var c = this.vertices[b];
                                    a.push(c[0], c[1])
                                }
                                for (var d = g.Triangulate(a), b = 0; b < d.length; b += 3) {
                                    var e = d[b]
                                      , f = d[b + 1]
                                      , h = d[b + 2];
                                    this.triangles.push([e, f, h])
                                }
                            }
                            ;
                            var j = f.create()
                              , k = f.create()
                              , l = f.create()
                              , m = f.create()
                              , n = f.create();
                            f.create(),
                            f.create(),
                            f.create(),
                            f.create();
                            d.prototype.updateCenterOfMass = function() {
                                var a = this.triangles
                                  , b = this.vertices
                                  , c = this.centerOfMass
                                  , e = j
                                  , g = l
                                  , h = m
                                  , i = n
                                  , o = k;
                                f.set(c, 0, 0);
                                for (var p = 0, q = 0; q !== a.length; q++) {
                                    var r = a[q]
                                      , g = b[r[0]]
                                      , h = b[r[1]]
                                      , i = b[r[2]];
                                    f.centroid(e, g, h, i);
                                    var s = d.triangleArea(g, h, i);
                                    p += s,
                                    f.scale(o, e, s),
                                    f.add(c, c, o)
                                }
                                f.scale(c, c, 1 / p)
                            }
                            ,
                            d.prototype.computeMomentOfInertia = function(a) {
                                for (var b = 0, c = 0, d = this.vertices.length, e = d - 1, g = 0; g < d; e = g,
                                g++) {
                                    var h = this.vertices[e]
                                      , i = this.vertices[g]
                                      , j = Math.abs(f.crossLength(h, i));
                                    b += j * (f.dot(i, i) + f.dot(i, h) + f.dot(h, h)),
                                    c += j
                                }
                                return a / 6 * (b / c)
                            }
                            ,
                            d.prototype.updateBoundingRadius = function() {
                                for (var a = this.vertices, b = 0, c = 0; c !== a.length; c++) {
                                    var d = f.squaredLength(a[c]);
                                    d > b && (b = d)
                                }
                                this.boundingRadius = Math.sqrt(b)
                            }
                            ,
                            d.triangleArea = function(a, b, c) {
                                return .5 * ((b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1]))
                            }
                            ,
                            d.prototype.updateArea = function() {
                                this.updateTriangles(),
                                this.area = 0;
                                for (var a = this.triangles, b = this.vertices, c = 0; c !== a.length; c++) {
                                    var e = a[c]
                                      , f = b[e[0]]
                                      , g = b[e[1]]
                                      , h = b[e[2]]
                                      , i = d.triangleArea(f, g, h);
                                    this.area += i
                                }
                            }
                            ,
                            d.prototype.computeAABB = function(a, b, c) {
                                a.setFromPoints(this.vertices, b, c, 0)
                            }
                            ;
                            var o = f.create()
                              , p = f.create()
                              , q = f.create();
                            d.prototype.raycast = function(a, b, c, d) {
                                var e = o
                                  , g = p
                                  , h = q
                                  , i = this.vertices;
                                f.toLocalFrame(e, b.from, c, d),
                                f.toLocalFrame(g, b.to, c, d);
                                for (var j = i.length, k = 0; k < j && !a.shouldStop(b); k++) {
                                    var l = i[k]
                                      , m = i[(k + 1) % j]
                                      , n = f.getLineSegmentsIntersectionFraction(e, g, l, m);
                                    n >= 0 && (f.sub(h, m, l),
                                    f.rotate(h, h, -Math.PI / 2 + d),
                                    f.normalize(h, h),
                                    b.reportIntersection(a, n, h, k))
                                }
                            }
                        }
                        , {
                            "../math/polyk": 29,
                            "../math/vec2": 30,
                            "./Shape": 45,
                            "poly-decomp": 5
                        }],
                        41: [function(a, b, c) {
                            function d(a) {
                                if (Array.isArray(arguments[0]) && (a = {
                                    heights: arguments[0]
                                },
                                "object" === e(arguments[1])))
                                    for (var b in arguments[1])
                                        a[b] = arguments[1][b];
                                a = a || {},
                                this.heights = a.heights ? a.heights.slice(0) : [],
                                this.maxValue = a.maxValue || null,
                                this.minValue = a.minValue || null,
                                this.elementWidth = a.elementWidth || .1,
                                void 0 !== a.maxValue && void 0 !== a.minValue || this.updateMaxMinValues(),
                                a.type = f.HEIGHTFIELD,
                                f.call(this, a)
                            }
                            var f = a("./Shape")
                              , g = a("../math/vec2");
                            a("../utils/Utils");
                            b.exports = d,
                            d.prototype = new f,
                            d.prototype.constructor = d,
                            d.prototype.updateMaxMinValues = function() {
                                for (var a = this.heights, b = a[0], c = a[0], d = 0; d !== a.length; d++) {
                                    var e = a[d];
                                    e > b && (b = e),
                                    e < c && (c = e)
                                }
                                this.maxValue = b,
                                this.minValue = c
                            }
                            ,
                            d.prototype.computeMomentOfInertia = function(a) {
                                return Number.MAX_VALUE
                            }
                            ,
                            d.prototype.updateBoundingRadius = function() {
                                this.boundingRadius = Number.MAX_VALUE
                            }
                            ,
                            d.prototype.updateArea = function() {
                                for (var a = this.heights, b = 0, c = 0; c < a.length - 1; c++)
                                    b += (a[c] + a[c + 1]) / 2 * this.elementWidth;
                                this.area = b
                            }
                            ;
                            var h = [g.create(), g.create(), g.create(), g.create()];
                            d.prototype.computeAABB = function(a, b, c) {
                                g.set(h[0], 0, this.maxValue),
                                g.set(h[1], this.elementWidth * this.heights.length, this.maxValue),
                                g.set(h[2], this.elementWidth * this.heights.length, this.minValue),
                                g.set(h[3], 0, this.minValue),
                                a.setFromPoints(h, b, c)
                            }
                            ,
                            d.prototype.getLineSegment = function(a, b, c) {
                                var d = this.heights
                                  , e = this.elementWidth;
                                g.set(a, c * e, d[c]),
                                g.set(b, (c + 1) * e, d[c + 1])
                            }
                            ,
                            d.prototype.getSegmentIndex = function(a) {
                                return Math.floor(a[0] / this.elementWidth)
                            }
                            ,
                            d.prototype.getClampedSegmentIndex = function(a) {
                                var b = this.getSegmentIndex(a);
                                return b = Math.min(this.heights.length, Math.max(b, 0))
                            }
                            ;
                            var i = (g.create(),
                            g.create())
                              , j = g.create()
                              , k = g.create()
                              , l = g.create()
                              , m = g.create();
                            g.fromValues(0, 1);
                            d.prototype.raycast = function(a, b, c, d) {
                                var e = b.from
                                  , f = b.to
                                  , h = (b.direction,
                                i)
                                  , n = j
                                  , o = k
                                  , p = l
                                  , q = m;
                                g.toLocalFrame(p, e, c, d),
                                g.toLocalFrame(q, f, c, d);
                                var r = this.getClampedSegmentIndex(p)
                                  , s = this.getClampedSegmentIndex(q);
                                if (r > s) {
                                    var t = r;
                                    r = s,
                                    s = t
                                }
                                for (var u = 0; u < this.heights.length - 1; u++) {
                                    this.getLineSegment(n, o, u);
                                    var v = g.getLineSegmentsIntersectionFraction(p, q, n, o);
                                    if (v >= 0 && (g.sub(h, o, n),
                                    g.rotate(h, h, d + Math.PI / 2),
                                    g.normalize(h, h),
                                    b.reportIntersection(a, v, h, -1),
                                    a.shouldStop(b)))
                                        return
                                }
                            }
                        }
                        , {
                            "../math/vec2": 30,
                            "../utils/Utils": 57,
                            "./Shape": 45
                        }],
                        42: [function(a, b, c) {
                            function d(a) {
                                "number" == typeof arguments[0] && (a = {
                                    length: arguments[0]
                                }),
                                a = a || {},
                                this.length = a.length || 1,
                                a.type = e.LINE,
                                e.call(this, a)
                            }
                            var e = a("./Shape")
                              , f = a("../math/vec2");
                            b.exports = d,
                            d.prototype = new e,
                            d.prototype.constructor = d,
                            d.prototype.computeMomentOfInertia = function(a) {
                                return a * Math.pow(this.length, 2) / 12
                            }
                            ,
                            d.prototype.updateBoundingRadius = function() {
                                this.boundingRadius = this.length / 2
                            }
                            ;
                            var g = [f.create(), f.create()];
                            d.prototype.computeAABB = function(a, b, c) {
                                var d = this.length / 2;
                                f.set(g[0], -d, 0),
                                f.set(g[1], d, 0),
                                a.setFromPoints(g, b, c, 0)
                            }
                            ;
                            var h = (f.create(),
                            f.create())
                              , i = f.create()
                              , j = f.create()
                              , k = f.fromValues(0, 1);
                            d.prototype.raycast = function(a, b, c, d) {
                                var e = b.from
                                  , g = b.to
                                  , l = i
                                  , m = j
                                  , n = this.length / 2;
                                f.set(l, -n, 0),
                                f.set(m, n, 0),
                                f.toGlobalFrame(l, l, c, d),
                                f.toGlobalFrame(m, m, c, d);
                                var o = f.getLineSegmentsIntersectionFraction(l, m, e, g);
                                if (o >= 0) {
                                    var p = h;
                                    f.rotate(p, k, d),
                                    b.reportIntersection(a, o, p, -1)
                                }
                            }
                        }
                        , {
                            "../math/vec2": 30,
                            "./Shape": 45
                        }],
                        43: [function(a, b, c) {
                            function d(a) {
                                a = a || {},
                                a.type = e.PARTICLE,
                                e.call(this, a)
                            }
                            var e = a("./Shape")
                              , f = a("../math/vec2");
                            b.exports = d,
                            d.prototype = new e,
                            d.prototype.constructor = d,
                            d.prototype.computeMomentOfInertia = function(a) {
                                return 0
                            }
                            ,
                            d.prototype.updateBoundingRadius = function() {
                                this.boundingRadius = 0
                            }
                            ,
                            d.prototype.computeAABB = function(a, b, c) {
                                f.copy(a.lowerBound, b),
                                f.copy(a.upperBound, b)
                            }
                        }
                        , {
                            "../math/vec2": 30,
                            "./Shape": 45
                        }],
                        44: [function(a, b, c) {
                            function d(a) {
                                a = a || {},
                                a.type = e.PLANE,
                                e.call(this, a)
                            }
                            var e = a("./Shape")
                              , f = a("../math/vec2");
                            a("../utils/Utils");
                            b.exports = d,
                            d.prototype = new e,
                            d.prototype.constructor = d,
                            d.prototype.computeMomentOfInertia = function(a) {
                                return 0
                            }
                            ,
                            d.prototype.updateBoundingRadius = function() {
                                this.boundingRadius = Number.MAX_VALUE
                            }
                            ,
                            d.prototype.computeAABB = function(a, b, c) {
                                var d = c % (2 * Math.PI)
                                  , e = f.set
                                  , g = a.lowerBound
                                  , h = a.upperBound;
                                e(g, -1e7, -1e7),
                                e(h, 1e7, 1e7),
                                0 === d ? h[1] = 0 : d === Math.PI / 2 ? g[0] = 0 : d === Math.PI ? g[1] = 0 : d === 3 * Math.PI / 2 && (h[0] = 0)
                            }
                            ,
                            d.prototype.updateArea = function() {
                                this.area = Number.MAX_VALUE
                            }
                            ;
                            var g = f.create()
                              , h = (f.create(),
                            f.create(),
                            f.create())
                              , i = f.create();
                            d.prototype.raycast = function(a, b, c, d) {
                                var e = b.from
                                  , j = b.to
                                  , k = b.direction
                                  , l = g
                                  , m = h
                                  , n = i;
                                f.set(m, 0, 1),
                                f.rotate(m, m, d),
                                f.sub(n, e, c);
                                var o = f.dot(n, m);
                                if (f.sub(n, j, c),
                                !(o * f.dot(n, m) > 0 || f.squaredDistance(e, j) < o * o)) {
                                    var p = f.dot(m, k);
                                    f.sub(l, e, c);
                                    var q = -f.dot(m, l) / p / b.length;
                                    b.reportIntersection(a, q, m, -1)
                                }
                            }
                        }
                        , {
                            "../math/vec2": 30,
                            "../utils/Utils": 57,
                            "./Shape": 45
                        }],
                        45: [function(a, b, c) {
                            function d(a) {
                                a = a || {},
                                this.body = null,
                                this.position = e.fromValues(0, 0),
                                a.position && e.copy(this.position, a.position),
                                this.angle = a.angle || 0,
                                this.type = a.type || 0,
                                this.id = d.idCounter++,
                                this.boundingRadius = 0,
                                this.collisionGroup = void 0 !== a.collisionGroup ? a.collisionGroup : 1,
                                this.collisionResponse = void 0 === a.collisionResponse || a.collisionResponse,
                                this.collisionMask = void 0 !== a.collisionMask ? a.collisionMask : 1,
                                this.material = a.material || null,
                                this.area = 0,
                                this.sensor = void 0 !== a.sensor && a.sensor,
                                this.type && this.updateBoundingRadius(),
                                this.updateArea()
                            }
                            b.exports = d;
                            var e = a("../math/vec2");
                            d.idCounter = 0,
                            d.CIRCLE = 1,
                            d.PARTICLE = 2,
                            d.PLANE = 4,
                            d.CONVEX = 8,
                            d.LINE = 16,
                            d.BOX = 32,
                            Object.defineProperty(d, "RECTANGLE", {
                                get: function() {
                                    return d.BOX
                                }
                            }),
                            d.CAPSULE = 64,
                            d.HEIGHTFIELD = 128,
                            d.prototype.computeMomentOfInertia = function(a) {}
                            ,
                            d.prototype.updateBoundingRadius = function() {}
                            ,
                            d.prototype.updateArea = function() {}
                            ,
                            d.prototype.computeAABB = function(a, b, c) {}
                            ,
                            d.prototype.raycast = function(a, b, c, d) {}
                        }
                        , {
                            "../math/vec2": 30
                        }],
                        46: [function(a, b, c) {
                            function d(a) {
                                g.call(this, a, g.GS),
                                a = a || {},
                                this.iterations = a.iterations || 10,
                                this.tolerance = a.tolerance || 1e-7,
                                this.arrayStep = 30,
                                this.lambda = new h.ARRAY_TYPE(this.arrayStep),
                                this.Bs = new h.ARRAY_TYPE(this.arrayStep),
                                this.invCs = new h.ARRAY_TYPE(this.arrayStep),
                                this.useZeroRHS = !1,
                                this.frictionIterations = void 0 !== a.frictionIterations ? 0 : a.frictionIterations,
                                this.usedIterations = 0
                            }
                            function e(a) {
                                for (var b = a.length; b--; )
                                    a[b] = 0
                            }
                            var f = a("../math/vec2")
                              , g = a("./Solver")
                              , h = a("../utils/Utils")
                              , i = a("../equations/FrictionEquation");
                            b.exports = d,
                            d.prototype = new g,
                            d.prototype.constructor = d,
                            d.prototype.solve = function(a, b) {
                                this.sortEquations();
                                var c = 0
                                  , g = this.iterations
                                  , j = this.frictionIterations
                                  , k = this.equations
                                  , l = k.length
                                  , m = Math.pow(this.tolerance * l, 2)
                                  , n = b.bodies
                                  , o = b.bodies.length
                                  , p = (f.add,
                                f.set,
                                this.useZeroRHS)
                                  , q = this.lambda;
                                if (this.usedIterations = 0,
                                l)
                                    for (var r = 0; r !== o; r++) {
                                        var s = n[r];
                                        s.updateSolveMassProperties()
                                    }
                                q.length < l && (q = this.lambda = new h.ARRAY_TYPE(l + this.arrayStep),
                                this.Bs = new h.ARRAY_TYPE(l + this.arrayStep),
                                this.invCs = new h.ARRAY_TYPE(l + this.arrayStep)),
                                e(q);
                                for (var t = this.invCs, u = this.Bs, q = this.lambda, r = 0; r !== k.length; r++) {
                                    var v = k[r];
                                    (v.timeStep !== a || v.needsUpdate) && (v.timeStep = a,
                                    v.update()),
                                    u[r] = v.computeB(v.a, v.b, a),
                                    t[r] = v.computeInvC(v.epsilon)
                                }
                                var v, w, r, x;
                                if (0 !== l) {
                                    for (r = 0; r !== o; r++) {
                                        var s = n[r];
                                        s.resetConstraintVelocity()
                                    }
                                    if (j) {
                                        for (c = 0; c !== j; c++) {
                                            for (w = 0,
                                            x = 0; x !== l; x++) {
                                                v = k[x];
                                                var y = d.iterateEquation(x, v, v.epsilon, u, t, q, p, a, c);
                                                w += Math.abs(y)
                                            }
                                            if (this.usedIterations++,
                                            w * w <= m)
                                                break
                                        }
                                        for (d.updateMultipliers(k, q, 1 / a),
                                        x = 0; x !== l; x++) {
                                            var z = k[x];
                                            if (z instanceof i) {
                                                for (var A = 0, B = 0; B !== z.contactEquations.length; B++)
                                                    A += z.contactEquations[B].multiplier;
                                                A *= z.frictionCoefficient / z.contactEquations.length,
                                                z.maxForce = A,
                                                z.minForce = -A
                                            }
                                        }
                                    }
                                    for (c = 0; c !== g; c++) {
                                        for (w = 0,
                                        x = 0; x !== l; x++) {
                                            v = k[x];
                                            var y = d.iterateEquation(x, v, v.epsilon, u, t, q, p, a, c);
                                            w += Math.abs(y)
                                        }
                                        if (this.usedIterations++,
                                        w * w <= m)
                                            break
                                    }
                                    for (r = 0; r !== o; r++)
                                        n[r].addConstraintVelocity();
                                    d.updateMultipliers(k, q, 1 / a)
                                }
                            }
                            ,
                            d.updateMultipliers = function(a, b, c) {
                                for (var d = a.length; d--; )
                                    a[d].multiplier = b[d] * c
                            }
                            ,
                            d.iterateEquation = function(a, b, c, d, e, f, g, h, i) {
                                var j = d[a]
                                  , k = e[a]
                                  , l = f[a]
                                  , m = b.computeGWlambda()
                                  , n = b.maxForce
                                  , o = b.minForce;
                                g && (j = 0);
                                var p = k * (j - m - c * l)
                                  , q = l + p;
                                return q < o * h ? p = o * h - l : q > n * h && (p = n * h - l),
                                f[a] += p,
                                b.addToWlambda(p),
                                p
                            }
                        }
                        , {
                            "../equations/FrictionEquation": 23,
                            "../math/vec2": 30,
                            "../utils/Utils": 57,
                            "./Solver": 47
                        }],
                        47: [function(a, b, c) {
                            function d(a, b) {
                                a = a || {},
                                e.call(this),
                                this.type = b,
                                this.equations = [],
                                this.equationSortFunction = a.equationSortFunction || !1
                            }
                            var e = (a("../utils/Utils"),
                            a("../events/EventEmitter"));
                            b.exports = d,
                            d.prototype = new e,
                            d.prototype.constructor = d,
                            d.prototype.solve = function(a, b) {
                                throw new Error("Solver.solve should be implemented by subclasses!")
                            }
                            ;
                            var f = {
                                bodies: []
                            };
                            d.prototype.solveIsland = function(a, b) {
                                this.removeAllEquations(),
                                b.equations.length && (this.addEquations(b.equations),
                                f.bodies.length = 0,
                                b.getBodies(f.bodies),
                                f.bodies.length && this.solve(a, f))
                            }
                            ,
                            d.prototype.sortEquations = function() {
                                this.equationSortFunction && this.equations.sort(this.equationSortFunction)
                            }
                            ,
                            d.prototype.addEquation = function(a) {
                                a.enabled && this.equations.push(a)
                            }
                            ,
                            d.prototype.addEquations = function(a) {
                                for (var b = 0, c = a.length; b !== c; b++) {
                                    var d = a[b];
                                    d.enabled && this.equations.push(d)
                                }
                            }
                            ,
                            d.prototype.removeEquation = function(a) {
                                var b = this.equations.indexOf(a);
                                -1 !== b && this.equations.splice(b, 1)
                            }
                            ,
                            d.prototype.removeAllEquations = function() {
                                this.equations.length = 0
                            }
                            ,
                            d.GS = 1,
                            d.ISLAND = 2
                        }
                        , {
                            "../events/EventEmitter": 26,
                            "../utils/Utils": 57
                        }],
                        48: [function(a, b, c) {
                            function d() {
                                f.apply(this, arguments)
                            }
                            var e = a("../equations/ContactEquation")
                              , f = a("./Pool");
                            b.exports = d,
                            d.prototype = new f,
                            d.prototype.constructor = d,
                            d.prototype.create = function() {
                                return new e
                            }
                            ,
                            d.prototype.destroy = function(a) {
                                return a.bodyA = a.bodyB = null,
                                this
                            }
                        }
                        , {
                            "../equations/ContactEquation": 21,
                            "./Pool": 55
                        }],
                        49: [function(a, b, c) {
                            function d() {
                                f.apply(this, arguments)
                            }
                            var e = a("../equations/FrictionEquation")
                              , f = a("./Pool");
                            b.exports = d,
                            d.prototype = new f,
                            d.prototype.constructor = d,
                            d.prototype.create = function() {
                                return new e
                            }
                            ,
                            d.prototype.destroy = function(a) {
                                return a.bodyA = a.bodyB = null,
                                this
                            }
                        }
                        , {
                            "../equations/FrictionEquation": 23,
                            "./Pool": 55
                        }],
                        50: [function(a, b, c) {
                            function d() {
                                f.apply(this, arguments)
                            }
                            var e = a("../world/IslandNode")
                              , f = a("./Pool");
                            b.exports = d,
                            d.prototype = new f,
                            d.prototype.constructor = d,
                            d.prototype.create = function() {
                                return new e
                            }
                            ,
                            d.prototype.destroy = function(a) {
                                return a.reset(),
                                this
                            }
                        }
                        , {
                            "../world/IslandNode": 60,
                            "./Pool": 55
                        }],
                        51: [function(a, b, c) {
                            function d() {
                                f.apply(this, arguments)
                            }
                            var e = a("../world/Island")
                              , f = a("./Pool");
                            b.exports = d,
                            d.prototype = new f,
                            d.prototype.constructor = d,
                            d.prototype.create = function() {
                                return new e
                            }
                            ,
                            d.prototype.destroy = function(a) {
                                return a.reset(),
                                this
                            }
                        }
                        , {
                            "../world/Island": 58,
                            "./Pool": 55
                        }],
                        52: [function(a, b, c) {
                            function d() {
                                this.overlappingShapesLastState = new e,
                                this.overlappingShapesCurrentState = new e,
                                this.recordPool = new f({
                                    size: 16
                                }),
                                this.tmpDict = new e,
                                this.tmpArray1 = []
                            }
                            var e = a("./TupleDictionary")
                              , f = (a("./OverlapKeeperRecord"),
                            a("./OverlapKeeperRecordPool"));
                            a("./Utils");
                            b.exports = d,
                            d.prototype.tick = function() {
                                for (var a = this.overlappingShapesLastState, b = this.overlappingShapesCurrentState, c = a.keys.length; c--; ) {
                                    var d = a.keys[c]
                                      , e = a.getByKey(d);
                                    b.getByKey(d);
                                    e && this.recordPool.release(e)
                                }
                                a.reset(),
                                a.copy(b),
                                b.reset()
                            }
                            ,
                            d.prototype.setOverlapping = function(a, b, c, d) {
                                var e = (this.overlappingShapesLastState,
                                this.overlappingShapesCurrentState);
                                if (!e.get(b.id, d.id)) {
                                    var f = this.recordPool.get();
                                    f.set(a, b, c, d),
                                    e.set(b.id, d.id, f)
                                }
                            }
                            ,
                            d.prototype.getNewOverlaps = function(a) {
                                return this.getDiff(this.overlappingShapesLastState, this.overlappingShapesCurrentState, a)
                            }
                            ,
                            d.prototype.getEndOverlaps = function(a) {
                                return this.getDiff(this.overlappingShapesCurrentState, this.overlappingShapesLastState, a)
                            }
                            ,
                            d.prototype.bodiesAreOverlapping = function(a, b) {
                                for (var c = this.overlappingShapesCurrentState, d = c.keys.length; d--; ) {
                                    var e = c.keys[d]
                                      , f = c.data[e];
                                    if (f.bodyA === a && f.bodyB === b || f.bodyA === b && f.bodyB === a)
                                        return !0
                                }
                                return !1
                            }
                            ,
                            d.prototype.getDiff = function(a, b, c) {
                                var c = c || []
                                  , d = a
                                  , e = b;
                                c.length = 0;
                                for (var f = e.keys.length; f--; ) {
                                    var g = e.keys[f]
                                      , h = e.data[g];
                                    if (!h)
                                        throw new Error("Key " + g + " had no data!");
                                    d.data[g] || c.push(h)
                                }
                                return c
                            }
                            ,
                            d.prototype.isNewOverlap = function(a, b) {
                                var c = 0 | a.id
                                  , d = 0 | b.id
                                  , e = this.overlappingShapesLastState
                                  , f = this.overlappingShapesCurrentState;
                                return !e.get(c, d) && !!f.get(c, d)
                            }
                            ,
                            d.prototype.getNewBodyOverlaps = function(a) {
                                this.tmpArray1.length = 0;
                                var b = this.getNewOverlaps(this.tmpArray1);
                                return this.getBodyDiff(b, a)
                            }
                            ,
                            d.prototype.getEndBodyOverlaps = function(a) {
                                this.tmpArray1.length = 0;
                                var b = this.getEndOverlaps(this.tmpArray1);
                                return this.getBodyDiff(b, a)
                            }
                            ,
                            d.prototype.getBodyDiff = function(a, b) {
                                b = b || [];
                                for (var c = this.tmpDict, d = a.length; d--; ) {
                                    var e = a[d];
                                    c.set(0 | e.bodyA.id, 0 | e.bodyB.id, e)
                                }
                                for (d = c.keys.length; d--; ) {
                                    var e = c.getByKey(c.keys[d]);
                                    e && b.push(e.bodyA, e.bodyB)
                                }
                                return c.reset(),
                                b
                            }
                        }
                        , {
                            "./OverlapKeeperRecord": 53,
                            "./OverlapKeeperRecordPool": 54,
                            "./TupleDictionary": 56,
                            "./Utils": 57
                        }],
                        53: [function(a, b, c) {
                            function d(a, b, c, d) {
                                this.shapeA = b,
                                this.shapeB = d,
                                this.bodyA = a,
                                this.bodyB = c
                            }
                            b.exports = d,
                            d.prototype.set = function(a, b, c, e) {
                                d.call(this, a, b, c, e)
                            }
                        }
                        , {}],
                        54: [function(a, b, c) {
                            function d() {
                                f.apply(this, arguments)
                            }
                            var e = a("./OverlapKeeperRecord")
                              , f = a("./Pool");
                            b.exports = d,
                            d.prototype = new f,
                            d.prototype.constructor = d,
                            d.prototype.create = function() {
                                return new e
                            }
                            ,
                            d.prototype.destroy = function(a) {
                                return a.bodyA = a.bodyB = a.shapeA = a.shapeB = null,
                                this
                            }
                        }
                        , {
                            "./OverlapKeeperRecord": 53,
                            "./Pool": 55
                        }],
                        55: [function(a, b, c) {
                            function d(a) {
                                a = a || {},
                                this.objects = [],
                                void 0 !== a.size && this.resize(a.size)
                            }
                            b.exports = d,
                            d.prototype.resize = function(a) {
                                for (var b = this.objects; b.length > a; )
                                    b.pop();
                                for (; b.length < a; )
                                    b.push(this.create());
                                return this
                            }
                            ,
                            d.prototype.get = function() {
                                var a = this.objects;
                                return a.length ? a.pop() : this.create()
                            }
                            ,
                            d.prototype.release = function(a) {
                                return this.destroy(a),
                                this.objects.push(a),
                                this
                            }
                        }
                        , {}],
                        56: [function(a, b, c) {
                            function d() {
                                this.data = {},
                                this.keys = []
                            }
                            var e = a("./Utils");
                            b.exports = d,
                            d.prototype.getKey = function(a, b) {
                                return a |= 0,
                                b |= 0,
                                (0 | a) == (0 | b) ? -1 : 0 | ((0 | a) > (0 | b) ? a << 16 | 65535 & b : b << 16 | 65535 & a)
                            }
                            ,
                            d.prototype.getByKey = function(a) {
                                return a |= 0,
                                this.data[a]
                            }
                            ,
                            d.prototype.get = function(a, b) {
                                return this.data[this.getKey(a, b)]
                            }
                            ,
                            d.prototype.set = function(a, b, c) {
                                if (!c)
                                    throw new Error("No data!");
                                var d = this.getKey(a, b);
                                return this.data[d] || this.keys.push(d),
                                this.data[d] = c,
                                d
                            }
                            ,
                            d.prototype.reset = function() {
                                for (var a = this.data, b = this.keys, c = b.length; c--; )
                                    delete a[b[c]];
                                b.length = 0
                            }
                            ,
                            d.prototype.copy = function(a) {
                                this.reset(),
                                e.appendArray(this.keys, a.keys);
                                for (var b = a.keys.length; b--; ) {
                                    var c = a.keys[b];
                                    this.data[c] = a.data[c]
                                }
                            }
                        }
                        , {
                            "./Utils": 57
                        }],
                        57: [function(a, b, c) {
                            function d() {}
                            b.exports = d,
                            d.appendArray = function(a, b) {
                                if (b.length < 15e4)
                                    a.push.apply(a, b);
                                else
                                    for (var c = 0, d = b.length; c !== d; ++c)
                                        a.push(b[c])
                            }
                            ,
                            d.splice = function(a, b, c) {
                                c = c || 1;
                                for (var d = b, e = a.length - c; d < e; d++)
                                    a[d] = a[d + c];
                                a.length = e
                            }
                            ;
                            var e = Array;
                            void 0 !== e ? d.ARRAY_TYPE = e : "undefined" != typeof Float32Array ? d.ARRAY_TYPE = Float32Array : d.ARRAY_TYPE = Array,
                            d.extend = function(a, b) {
                                for (var c in b)
                                    a[c] = b[c]
                            }
                            ,
                            d.defaults = function(a, b) {
                                a = a || {};
                                for (var c in b)
                                    c in a || (a[c] = b[c]);
                                return a
                            }
                        }
                        , {}],
                        58: [function(a, b, c) {
                            function d() {
                                this.equations = [],
                                this.bodies = []
                            }
                            var e = a("../objects/Body");
                            b.exports = d,
                            d.prototype.reset = function() {
                                this.equations.length = this.bodies.length = 0
                            }
                            ;
                            var f = [];
                            d.prototype.getBodies = function(a) {
                                var b = a || []
                                  , c = this.equations;
                                f.length = 0;
                                for (var d = 0; d !== c.length; d++) {
                                    var e = c[d];
                                    -1 === f.indexOf(e.bodyA.id) && (b.push(e.bodyA),
                                    f.push(e.bodyA.id)),
                                    -1 === f.indexOf(e.bodyB.id) && (b.push(e.bodyB),
                                    f.push(e.bodyB.id))
                                }
                                return b
                            }
                            ,
                            d.prototype.wantsToSleep = function() {
                                for (var a = 0; a < this.bodies.length; a++) {
                                    var b = this.bodies[a];
                                    if (b.type === e.DYNAMIC && !b.wantsToSleep)
                                        return !1
                                }
                                return !0
                            }
                            ,
                            d.prototype.sleep = function() {
                                for (var a = 0; a < this.bodies.length; a++) {
                                    this.bodies[a].sleep()
                                }
                                return !0
                            }
                        }
                        , {
                            "../objects/Body": 31
                        }],
                        59: [function(a, b, c) {
                            function d(a) {
                                this.nodePool = new e({
                                    size: 16
                                }),
                                this.islandPool = new f({
                                    size: 8
                                }),
                                this.equations = [],
                                this.islands = [],
                                this.nodes = [],
                                this.queue = []
                            }
                            var e = (a("../math/vec2"),
                            a("./Island"),
                            a("./IslandNode"),
                            a("./../utils/IslandNodePool"))
                              , f = a("./../utils/IslandPool")
                              , g = a("../objects/Body");
                            b.exports = d,
                            d.getUnvisitedNode = function(a) {
                                for (var b = a.length, c = 0; c !== b; c++) {
                                    var d = a[c];
                                    if (!d.visited && d.body.type === g.DYNAMIC)
                                        return d
                                }
                                return !1
                            }
                            ,
                            d.prototype.visit = function(a, b, c) {
                                b.push(a.body);
                                for (var d = a.equations.length, e = 0; e !== d; e++) {
                                    var f = a.equations[e];
                                    -1 === c.indexOf(f) && c.push(f)
                                }
                            }
                            ,
                            d.prototype.bfs = function(a, b, c) {
                                var e = this.queue;
                                for (e.length = 0,
                                e.push(a),
                                a.visited = !0,
                                this.visit(a, b, c); e.length; )
                                    for (var f, h = e.pop(); f = d.getUnvisitedNode(h.neighbors); )
                                        f.visited = !0,
                                        this.visit(f, b, c),
                                        f.body.type === g.DYNAMIC && e.push(f)
                            }
                            ,
                            d.prototype.split = function(a) {
                                for (var b = a.bodies, c = this.nodes, e = this.equations; c.length; )
                                    this.nodePool.release(c.pop());
                                for (var f = 0; f !== b.length; f++) {
                                    var g = this.nodePool.get();
                                    g.body = b[f],
                                    c.push(g)
                                }
                                for (var h = 0; h !== e.length; h++) {
                                    var i = e[h]
                                      , f = b.indexOf(i.bodyA)
                                      , j = b.indexOf(i.bodyB)
                                      , k = c[f]
                                      , l = c[j];
                                    k.neighbors.push(l),
                                    l.neighbors.push(k),
                                    k.equations.push(i),
                                    l.equations.push(i)
                                }
                                for (var m = this.islands, f = 0; f < m.length; f++)
                                    this.islandPool.release(m[f]);
                                m.length = 0;
                                for (var n; n = d.getUnvisitedNode(c); ) {
                                    var o = this.islandPool.get();
                                    this.bfs(n, o.bodies, o.equations),
                                    m.push(o)
                                }
                                return m
                            }
                        }
                        , {
                            "../math/vec2": 30,
                            "../objects/Body": 31,
                            "./../utils/IslandNodePool": 50,
                            "./../utils/IslandPool": 51,
                            "./Island": 58,
                            "./IslandNode": 60
                        }],
                        60: [function(a, b, c) {
                            function d(a) {
                                this.body = a,
                                this.neighbors = [],
                                this.equations = [],
                                this.visited = !1
                            }
                            b.exports = d,
                            d.prototype.reset = function() {
                                this.equations.length = 0,
                                this.neighbors.length = 0,
                                this.visited = !1,
                                this.body = null
                            }
                        }
                        , {}],
                        61: [function(a, b, c) {
                            function d(a) {
                                l.apply(this),
                                a = a || {},
                                this.springs = [],
                                this.bodies = [],
                                this.disabledBodyCollisionPairs = [],
                                this.solver = a.solver || new e,
                                this.narrowphase = new r(this),
                                this.islandManager = new u,
                                this.gravity = f.fromValues(0, -9.78),
                                a.gravity && f.copy(this.gravity, a.gravity),
                                this.frictionGravity = f.length(this.gravity) || 10,
                                this.useWorldGravityAsFrictionGravity = !0,
                                this.useFrictionGravityOnZeroGravity = !0,
                                this.broadphase = a.broadphase || new q,
                                this.broadphase.setWorld(this),
                                this.constraints = [],
                                this.defaultMaterial = new n,
                                this.defaultContactMaterial = new o(this.defaultMaterial,this.defaultMaterial),
                                this.lastTimeStep = 1 / 60,
                                this.applySpringForces = !0,
                                this.applyDamping = !0,
                                this.applyGravity = !0,
                                this.solveConstraints = !0,
                                this.contactMaterials = [],
                                this.time = 0,
                                this.accumulator = 0,
                                this.stepping = !1,
                                this.bodiesToBeRemoved = [],
                                this.islandSplit = void 0 === a.islandSplit || !!a.islandSplit,
                                this.emitImpactEvent = !0,
                                this._constraintIdCounter = 0,
                                this._bodyIdCounter = 0,
                                this.beforeIntegrateEvent = {
                                    type: "beforeIntegrate"
                                },
                                this.postStepEvent = {
                                    type: "postStep"
                                },
                                this.addBodyEvent = {
                                    type: "addBody",
                                    body: null
                                },
                                this.removeBodyEvent = {
                                    type: "removeBody",
                                    body: null
                                },
                                this.addSpringEvent = {
                                    type: "addSpring",
                                    spring: null
                                },
                                this.impactEvent = {
                                    type: "impact",
                                    bodyA: null,
                                    bodyB: null,
                                    shapeA: null,
                                    shapeB: null,
                                    contactEquation: null
                                },
                                this.postBroadphaseEvent = {
                                    type: "postBroadphase",
                                    pairs: null
                                },
                                this.sleepMode = d.NO_SLEEPING,
                                this.beginContactEvent = {
                                    type: "beginContact",
                                    shapeA: null,
                                    shapeB: null,
                                    bodyA: null,
                                    bodyB: null,
                                    contactEquations: []
                                },
                                this.endContactEvent = {
                                    type: "endContact",
                                    shapeA: null,
                                    shapeB: null,
                                    bodyA: null,
                                    bodyB: null
                                },
                                this.preSolveEvent = {
                                    type: "preSolve",
                                    contactEquations: null,
                                    frictionEquations: null
                                },
                                this.overlappingShapesLastState = {
                                    keys: []
                                },
                                this.overlappingShapesCurrentState = {
                                    keys: []
                                },
                                this.overlapKeeper = new t
                            }
                            var e = a("../solver/GSSolver")
                              , f = (a("../solver/Solver"),
                            a("../collision/Ray"),
                            a("../math/vec2"))
                              , g = a("../shapes/Circle")
                              , h = a("../shapes/Convex")
                              , i = (a("../shapes/Line"),
                            a("../shapes/Plane"))
                              , j = a("../shapes/Capsule")
                              , k = a("../shapes/Particle")
                              , l = a("../events/EventEmitter")
                              , m = a("../objects/Body")
                              , n = (a("../shapes/Shape"),
                            a("../objects/LinearSpring"),
                            a("../material/Material"))
                              , o = a("../material/ContactMaterial")
                              , p = (a("../constraints/DistanceConstraint"),
                            a("../constraints/Constraint"),
                            a("../constraints/LockConstraint"),
                            a("../constraints/RevoluteConstraint"),
                            a("../constraints/PrismaticConstraint"),
                            a("../constraints/GearConstraint"),
                            a("../../package.json"),
                            a("../collision/Broadphase"),
                            a("../collision/AABB"))
                              , q = a("../collision/SAPBroadphase")
                              , r = a("../collision/Narrowphase")
                              , s = a("../utils/Utils")
                              , t = a("../utils/OverlapKeeper")
                              , u = a("./IslandManager");
                            a("../objects/RotationalSpring");
                            b.exports = d,
                            d.prototype = new Object(l.prototype),
                            d.prototype.constructor = d,
                            d.NO_SLEEPING = 1,
                            d.BODY_SLEEPING = 2,
                            d.ISLAND_SLEEPING = 4,
                            d.prototype.addConstraint = function(a) {
                                this.constraints.push(a)
                            }
                            ,
                            d.prototype.addContactMaterial = function(a) {
                                this.contactMaterials.push(a)
                            }
                            ,
                            d.prototype.removeContactMaterial = function(a) {
                                var b = this.contactMaterials.indexOf(a);
                                -1 !== b && s.splice(this.contactMaterials, b, 1)
                            }
                            ,
                            d.prototype.getContactMaterial = function(a, b) {
                                for (var c = this.contactMaterials, d = 0, e = c.length; d !== e; d++) {
                                    var f = c[d];
                                    if (f.materialA.id === a.id && f.materialB.id === b.id || f.materialA.id === b.id && f.materialB.id === a.id)
                                        return f
                                }
                                return !1
                            }
                            ,
                            d.prototype.removeConstraint = function(a) {
                                var b = this.constraints.indexOf(a);
                                -1 !== b && s.splice(this.constraints, b, 1)
                            }
                            ;
                            var v = (f.create(),
                            f.create(),
                            f.create(),
                            f.create(),
                            f.create(),
                            f.create(),
                            f.create())
                              , w = f.fromValues(0, 0)
                              , x = f.fromValues(0, 0);
                            f.fromValues(0, 0),
                            f.fromValues(0, 0);
                            d.prototype.step = function(a, b, c) {
                                if (c = c || 10,
                                0 === (b = b || 0))
                                    this.internalStep(a),
                                    this.time += a;
                                else {
                                    this.accumulator += b;
                                    for (var d = 0; this.accumulator >= a && d < c; )
                                        this.internalStep(a),
                                        this.time += a,
                                        this.accumulator -= a,
                                        d++;
                                    for (var e = this.accumulator % a / a, g = 0, h = this.bodies.length; g < h; g++) {
                                        var i = this.bodies[g];
                                        f.lerp(i.interpolatedPosition, i.previousPosition, i.position, e),
                                        i.interpolatedAngle = i.previousAngle + e * (i.angle - i.previousAngle)
                                    }
                                }
                            }
                            ;
                            var y = [];
                            d.prototype.internalStep = function(a) {
                                this.stepping = !0;
                                var b = this.springs.length
                                  , c = this.springs
                                  , e = this.bodies
                                  , g = this.gravity
                                  , h = this.solver
                                  , i = this.bodies.length
                                  , j = this.broadphase
                                  , k = this.narrowphase
                                  , l = this.constraints
                                  , n = v
                                  , o = (f.scale,
                                f.add)
                                  , p = (f.rotate,
                                this.islandManager);
                                if (this.overlapKeeper.tick(),
                                this.lastTimeStep = a,
                                this.useWorldGravityAsFrictionGravity) {
                                    var q = f.length(this.gravity);
                                    0 === q && this.useFrictionGravityOnZeroGravity || (this.frictionGravity = q)
                                }
                                if (this.applyGravity)
                                    for (var r = 0; r !== i; r++) {
                                        var t = e[r]
                                          , u = t.force;
                                        t.type === m.DYNAMIC && t.sleepState !== m.SLEEPING && (f.scale(n, g, t.mass * t.gravityScale),
                                        o(u, u, n))
                                    }
                                if (this.applySpringForces)
                                    for (var r = 0; r !== b; r++) {
                                        var w = c[r];
                                        w.applyForce()
                                    }
                                if (this.applyDamping)
                                    for (var r = 0; r !== i; r++) {
                                        var t = e[r];
                                        t.type === m.DYNAMIC && t.applyDamping(a)
                                    }
                                for (var x = j.getCollisionPairs(this), z = this.disabledBodyCollisionPairs, r = z.length - 2; r >= 0; r -= 2)
                                    for (var A = x.length - 2; A >= 0; A -= 2)
                                        (z[r] === x[A] && z[r + 1] === x[A + 1] || z[r + 1] === x[A] && z[r] === x[A + 1]) && x.splice(A, 2);
                                var B = l.length;
                                for (r = 0; r !== B; r++) {
                                    var C = l[r];
                                    if (!C.collideConnected)
                                        for (var A = x.length - 2; A >= 0; A -= 2)
                                            (C.bodyA === x[A] && C.bodyB === x[A + 1] || C.bodyB === x[A] && C.bodyA === x[A + 1]) && x.splice(A, 2)
                                }
                                this.postBroadphaseEvent.pairs = x,
                                this.emit(this.postBroadphaseEvent),
                                this.postBroadphaseEvent.pairs = null,
                                k.reset(this);
                                for (var r = 0, D = x.length; r !== D; r += 2)
                                    for (var E = x[r], F = x[r + 1], G = 0, H = E.shapes.length; G !== H; G++)
                                        for (var I = E.shapes[G], J = I.position, K = I.angle, L = 0, M = F.shapes.length; L !== M; L++) {
                                            var N = F.shapes[L]
                                              , O = N.position
                                              , P = N.angle
                                              , Q = this.defaultContactMaterial;
                                            if (I.material && N.material) {
                                                var R = this.getContactMaterial(I.material, N.material);
                                                R && (Q = R)
                                            }
                                            this.runNarrowphase(k, E, I, J, K, F, N, O, P, Q, this.frictionGravity)
                                        }
                                for (var r = 0; r !== i; r++) {
                                    var S = e[r];
                                    S._wakeUpAfterNarrowphase && (S.wakeUp(),
                                    S._wakeUpAfterNarrowphase = !1)
                                }
                                if (this.has("endContact")) {
                                    this.overlapKeeper.getEndOverlaps(y);
                                    for (var T = this.endContactEvent, L = y.length; L--; ) {
                                        var U = y[L];
                                        T.shapeA = U.shapeA,
                                        T.shapeB = U.shapeB,
                                        T.bodyA = U.bodyA,
                                        T.bodyB = U.bodyB,
                                        this.emit(T)
                                    }
                                    y.length = 0
                                }
                                var V = this.preSolveEvent;
                                V.contactEquations = k.contactEquations,
                                V.frictionEquations = k.frictionEquations,
                                this.emit(V),
                                V.contactEquations = V.frictionEquations = null;
                                var B = l.length;
                                for (r = 0; r !== B; r++)
                                    l[r].update();
                                if (k.contactEquations.length || k.frictionEquations.length || B)
                                    if (this.islandSplit) {
                                        for (p.equations.length = 0,
                                        s.appendArray(p.equations, k.contactEquations),
                                        s.appendArray(p.equations, k.frictionEquations),
                                        r = 0; r !== B; r++)
                                            s.appendArray(p.equations, l[r].equations);
                                        p.split(this);
                                        for (var r = 0; r !== p.islands.length; r++) {
                                            var W = p.islands[r];
                                            W.equations.length && h.solveIsland(a, W)
                                        }
                                    } else {
                                        for (h.addEquations(k.contactEquations),
                                        h.addEquations(k.frictionEquations),
                                        r = 0; r !== B; r++)
                                            h.addEquations(l[r].equations);
                                        this.solveConstraints && h.solve(a, this),
                                        h.removeAllEquations()
                                    }
                                for (var r = 0; r !== i; r++) {
                                    var S = e[r];
                                    S.integrate(a)
                                }
                                for (var r = 0; r !== i; r++)
                                    e[r].setZeroForce();
                                if (this.emitImpactEvent && this.has("impact"))
                                    for (var X = this.impactEvent, r = 0; r !== k.contactEquations.length; r++) {
                                        var Y = k.contactEquations[r];
                                        Y.firstImpact && (X.bodyA = Y.bodyA,
                                        X.bodyB = Y.bodyB,
                                        X.shapeA = Y.shapeA,
                                        X.shapeB = Y.shapeB,
                                        X.contactEquation = Y,
                                        this.emit(X))
                                    }
                                if (this.sleepMode === d.BODY_SLEEPING)
                                    for (r = 0; r !== i; r++)
                                        e[r].sleepTick(this.time, !1, a);
                                else if (this.sleepMode === d.ISLAND_SLEEPING && this.islandSplit) {
                                    for (r = 0; r !== i; r++)
                                        e[r].sleepTick(this.time, !0, a);
                                    for (var r = 0; r < this.islandManager.islands.length; r++) {
                                        var W = this.islandManager.islands[r];
                                        W.wantsToSleep() && W.sleep()
                                    }
                                }
                                this.stepping = !1;
                                for (var Z = this.bodiesToBeRemoved, r = 0; r !== Z.length; r++)
                                    this.removeBody(Z[r]);
                                Z.length = 0,
                                this.emit(this.postStepEvent)
                            }
                            ,
                            d.prototype.runNarrowphase = function(a, b, c, d, e, g, h, i, j, k, l) {
                                if (0 != (c.collisionGroup & h.collisionMask) && 0 != (h.collisionGroup & c.collisionMask)) {
                                    f.rotate(w, d, b.angle),
                                    f.rotate(x, i, g.angle),
                                    f.add(w, w, b.position),
                                    f.add(x, x, g.position);
                                    var n = e + b.angle
                                      , o = j + g.angle;
                                    a.enableFriction = k.friction > 0,
                                    a.frictionCoefficient = k.friction;
                                    var p;
                                    p = b.type === m.STATIC || b.type === m.KINEMATIC ? g.mass : g.type === m.STATIC || g.type === m.KINEMATIC ? b.mass : b.mass * g.mass / (b.mass + g.mass),
                                    a.slipForce = k.friction * l * p,
                                    a.restitution = k.restitution,
                                    a.surfaceVelocity = k.surfaceVelocity,
                                    a.frictionStiffness = k.frictionStiffness,
                                    a.frictionRelaxation = k.frictionRelaxation,
                                    a.stiffness = k.stiffness,
                                    a.relaxation = k.relaxation,
                                    a.contactSkinSize = k.contactSkinSize,
                                    a.enabledEquations = b.collisionResponse && g.collisionResponse && c.collisionResponse && h.collisionResponse;
                                    var q = a[c.type | h.type]
                                      , r = 0;
                                    if (q) {
                                        var s = c.sensor || h.sensor
                                          , t = a.frictionEquations.length;
                                        r = c.type < h.type ? q.call(a, b, c, w, n, g, h, x, o, s) : q.call(a, g, h, x, o, b, c, w, n, s);
                                        var u = a.frictionEquations.length - t;
                                        if (r) {
                                            if (b.allowSleep && b.type === m.DYNAMIC && b.sleepState === m.SLEEPING && g.sleepState === m.AWAKE && g.type !== m.STATIC) {
                                                f.squaredLength(g.velocity) + Math.pow(g.angularVelocity, 2) >= 2 * Math.pow(g.sleepSpeedLimit, 2) && (b._wakeUpAfterNarrowphase = !0)
                                            }
                                            if (g.allowSleep && g.type === m.DYNAMIC && g.sleepState === m.SLEEPING && b.sleepState === m.AWAKE && b.type !== m.STATIC) {
                                                f.squaredLength(b.velocity) + Math.pow(b.angularVelocity, 2) >= 2 * Math.pow(b.sleepSpeedLimit, 2) && (g._wakeUpAfterNarrowphase = !0)
                                            }
                                            if (b.contactResponse && g.contactResponse && (this.overlapKeeper.setOverlapping(b, c, g, h),
                                            this.has("beginContact") && this.overlapKeeper.isNewOverlap(c, h))) {
                                                var v = this.beginContactEvent;
                                                if (v.shapeA = c,
                                                v.shapeB = h,
                                                v.bodyA = b,
                                                v.bodyB = g,
                                                v.contactEquations.length = 0,
                                                "number" == typeof r)
                                                    for (var y = a.contactEquations.length - r; y < a.contactEquations.length; y++)
                                                        v.contactEquations.push(a.contactEquations[y]);
                                                this.emit(v)
                                            }
                                            if ("number" == typeof r && u > 1)
                                                for (var y = a.frictionEquations.length - u; y < a.frictionEquations.length; y++) {
                                                    var z = a.frictionEquations[y];
                                                    z.setSlipForce(z.getSlipForce() / u)
                                                }
                                        }
                                    }
                                }
                            }
                            ,
                            d.prototype.addSpring = function(a) {
                                this.springs.push(a);
                                var b = this.addSpringEvent;
                                b.spring = a,
                                this.emit(b),
                                b.spring = null
                            }
                            ,
                            d.prototype.removeSpring = function(a) {
                                var b = this.springs.indexOf(a);
                                -1 !== b && s.splice(this.springs, b, 1)
                            }
                            ,
                            d.prototype.addBody = function(a) {
                                if (-1 === this.bodies.indexOf(a)) {
                                    this.bodies.push(a),
                                    a.world = this;
                                    var b = this.addBodyEvent;
                                    b.body = a,
                                    this.emit(b),
                                    b.body = null
                                }
                            }
                            ,
                            d.prototype.removeBody = function(a) {
                                if (this.stepping)
                                    this.bodiesToBeRemoved.push(a);
                                else {
                                    a.world = null;
                                    var b = this.bodies.indexOf(a);
                                    -1 !== b && (s.splice(this.bodies, b, 1),
                                    this.removeBodyEvent.body = a,
                                    a.resetConstraintVelocity(),
                                    this.emit(this.removeBodyEvent),
                                    this.removeBodyEvent.body = null)
                                }
                            }
                            ,
                            d.prototype.getBodyById = function(a) {
                                for (var b = this.bodies, c = 0; c < b.length; c++) {
                                    var d = b[c];
                                    if (d.id === a)
                                        return d
                                }
                                return !1
                            }
                            ,
                            d.prototype.disableBodyCollision = function(a, b) {
                                this.disabledBodyCollisionPairs.push(a, b)
                            }
                            ,
                            d.prototype.enableBodyCollision = function(a, b) {
                                for (var c = this.disabledBodyCollisionPairs, d = 0; d < c.length; d += 2)
                                    if (c[d] === a && c[d + 1] === b || c[d + 1] === a && c[d] === b)
                                        return void c.splice(d, 2)
                            }
                            ,
                            d.prototype.clear = function() {
                                this.time = 0,
                                this.solver && this.solver.equations.length && this.solver.removeAllEquations();
                                for (var a = this.constraints, b = a.length - 1; b >= 0; b--)
                                    this.removeConstraint(a[b]);
                                for (var c = this.bodies, b = c.length - 1; b >= 0; b--)
                                    this.removeBody(c[b]);
                                for (var e = this.springs, b = e.length - 1; b >= 0; b--)
                                    this.removeSpring(e[b]);
                                for (var f = this.contactMaterials, b = f.length - 1; b >= 0; b--)
                                    this.removeContactMaterial(f[b]);
                                d.apply(this)
                            }
                            ;
                            var z = f.create()
                              , A = (f.fromValues(0, 0),
                            f.fromValues(0, 0));
                            d.prototype.hitTest = function(a, b, c) {
                                c = c || 0;
                                var d = new m({
                                    position: a
                                })
                                  , e = new k
                                  , l = a
                                  , n = z
                                  , o = A;
                                d.addShape(e);
                                for (var p = this.narrowphase, q = [], r = 0, s = b.length; r !== s; r++)
                                    for (var t = b[r], u = 0, v = t.shapes.length; u !== v; u++) {
                                        var w = t.shapes[u];
                                        f.rotate(n, w.position, t.angle),
                                        f.add(n, n, t.position);
                                        var x = w.angle + t.angle;
                                        (w instanceof g && p.circleParticle(t, w, n, x, d, e, l, 0, !0) || w instanceof h && p.particleConvex(d, e, l, 0, t, w, n, x, !0) || w instanceof i && p.particlePlane(d, e, l, 0, t, w, n, x, !0) || w instanceof j && p.particleCapsule(d, e, l, 0, t, w, n, x, !0) || w instanceof k && f.squaredLength(f.sub(o, n, a)) < c * c) && q.push(t)
                                    }
                                return q
                            }
                            ,
                            d.prototype.setGlobalStiffness = function(a) {
                                for (var b = this.constraints, c = 0; c !== b.length; c++)
                                    for (var d = b[c], e = 0; e !== d.equations.length; e++) {
                                        var f = d.equations[e];
                                        f.stiffness = a,
                                        f.needsUpdate = !0
                                    }
                                for (var g = this.contactMaterials, c = 0; c !== g.length; c++) {
                                    var d = g[c];
                                    d.stiffness = d.frictionStiffness = a
                                }
                                var d = this.defaultContactMaterial;
                                d.stiffness = d.frictionStiffness = a
                            }
                            ,
                            d.prototype.setGlobalRelaxation = function(a) {
                                for (var b = 0; b !== this.constraints.length; b++)
                                    for (var c = this.constraints[b], d = 0; d !== c.equations.length; d++) {
                                        var e = c.equations[d];
                                        e.relaxation = a,
                                        e.needsUpdate = !0
                                    }
                                for (var b = 0; b !== this.contactMaterials.length; b++) {
                                    var c = this.contactMaterials[b];
                                    c.relaxation = c.frictionRelaxation = a
                                }
                                var c = this.defaultContactMaterial;
                                c.relaxation = c.frictionRelaxation = a
                            }
                            ;
                            var B = new p
                              , C = [];
                            d.prototype.raycast = function(a, b) {
                                return b.getAABB(B),
                                this.broadphase.aabbQuery(this, B, C),
                                b.intersectBodies(a, C),
                                C.length = 0,
                                a.hasHit()
                            }
                        }
                        , {
                            "../../package.json": 6,
                            "../collision/AABB": 7,
                            "../collision/Broadphase": 8,
                            "../collision/Narrowphase": 10,
                            "../collision/Ray": 11,
                            "../collision/SAPBroadphase": 13,
                            "../constraints/Constraint": 14,
                            "../constraints/DistanceConstraint": 15,
                            "../constraints/GearConstraint": 16,
                            "../constraints/LockConstraint": 17,
                            "../constraints/PrismaticConstraint": 18,
                            "../constraints/RevoluteConstraint": 19,
                            "../events/EventEmitter": 26,
                            "../material/ContactMaterial": 27,
                            "../material/Material": 28,
                            "../math/vec2": 30,
                            "../objects/Body": 31,
                            "../objects/LinearSpring": 32,
                            "../objects/RotationalSpring": 33,
                            "../shapes/Capsule": 38,
                            "../shapes/Circle": 39,
                            "../shapes/Convex": 40,
                            "../shapes/Line": 42,
                            "../shapes/Particle": 43,
                            "../shapes/Plane": 44,
                            "../shapes/Shape": 45,
                            "../solver/GSSolver": 46,
                            "../solver/Solver": 47,
                            "../utils/OverlapKeeper": 52,
                            "../utils/Utils": 57,
                            "./IslandManager": 59
                        }]
                    }, {}, [36])(36)
                })
            }
            ).call(this)
        }
        ).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
    }
    , {}],
    149: [function(a, b, c) {
        "use strict";
        !function() {
            function a() {
                this.bindings = [],
                this.add = this.add.bind(this),
                this.addOnce = this.addOnce.bind(this),
                this.dispatch = this.dispatch.bind(this),
                this.remove = this.remove.bind(this),
                this.removeAll = this.removeAll.bind(this)
            }
            a.prototype.add = function(a, b, c) {
                if (null == a || "function" != typeof a)
                    throw new Error("Invalid callback");
                c = c || !1,
                this.bindings.unshift({
                    callback: a,
                    scope: b,
                    addOnce: c
                })
            }
            ,
            a.prototype.addOnce = function(a, b) {
                this.add(a, b, !0)
            }
            ,
            a.prototype.dispatch = function() {
                for (var a, b = Array.prototype.slice.call(arguments), c = this.bindings.length - 1; c >= 0; c--)
                    a = this.bindings[c],
                    a.callback.apply(a.scope, b),
                    a.addOnce && this.bindings.splice(c, 1)
            }
            ,
            a.prototype.remove = function(a, b) {
                for (var c, d = this.bindings.length - 1; d >= 0; d--)
                    c = this.bindings[d],
                    c.callback == a && c.scope == b && this.bindings.splice(d, 1)
            }
            ,
            a.prototype.removeAll = function() {
                this.bindings = []
            }
            ,
            b.exports = a
        }()
    }
    , {}],
    150: [function(a, b, c) {
        "use strict";
        var d = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(a) {
            return typeof a
        }
        : function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
        ;
        !function(a, e) {
            "object" == (void 0 === c ? "undefined" : d(c)) && void 0 !== b ? b.exports = e() : "function" == typeof define && define.amd ? define(e) : a.sono = e()
        }(void 0, function() {
            function a(a, b) {
                return b = {
                    exports: {}
                },
                a(b, b.exports),
                b.exports
            }
            function b() {
                function a() {}
                function b() {
                    return {
                        value: 1,
                        defaultValue: 1,
                        linearRampToValueAtTime: a,
                        setValueAtTime: a,
                        exponentialRampToValueAtTime: a,
                        setTargetAtTime: a,
                        setValueCurveAtTime: a,
                        cancelScheduledValues: a
                    }
                }
                function c() {
                    return {
                        connect: a,
                        disconnect: a,
                        frequencyBinCount: 0,
                        smoothingTimeConstant: 0,
                        fftSize: 0,
                        minDecibels: 0,
                        maxDecibels: 0,
                        getByteTimeDomainData: a,
                        getByteFrequencyData: a,
                        getFloatTimeDomainData: a,
                        getFloatFrequencyData: a,
                        gain: b(),
                        panningModel: 0,
                        setPosition: a,
                        setOrientation: a,
                        setVelocity: a,
                        distanceModel: 0,
                        refDistance: 0,
                        maxDistance: 0,
                        rolloffFactor: 0,
                        coneInnerAngle: 360,
                        coneOuterAngle: 360,
                        coneOuterGain: 0,
                        type: 0,
                        frequency: b(),
                        Q: b(),
                        detune: b(),
                        delayTime: b(),
                        buffer: 0,
                        threshold: b(),
                        knee: b(),
                        ratio: b(),
                        attack: b(),
                        release: b(),
                        reduction: b(),
                        oversample: 0,
                        curve: 0,
                        sampleRate: 1,
                        length: 0,
                        duration: 0,
                        numberOfChannels: 0,
                        getChannelData: function() {
                            return []
                        },
                        copyFromChannel: a,
                        copyToChannel: a,
                        dopplerFactor: 0,
                        speedOfSound: 0,
                        start: a
                    }
                }
                var d = Date.now();
                return window.Uint8Array || (window.Uint8Array = window.Float32Array = Array),
                {
                    isFake: !0,
                    createAnalyser: c,
                    createBuffer: c,
                    createBufferSource: c,
                    createMediaElementSource: c,
                    createMediaStreamSource: c,
                    createBiquadFilter: c,
                    createChannelMerger: c,
                    createChannelSplitter: c,
                    createDynamicsCompressor: c,
                    createConvolver: c,
                    createDelay: c,
                    createGain: c,
                    createOscillator: c,
                    createPanner: c,
                    createScriptProcessor: c,
                    createWaveShaper: c,
                    destination: c,
                    listener: c(),
                    state: "",
                    get currentTime() {
                        return (Date.now() - d) / 1e3
                    }
                }
            }
            function c(a) {
                if ("string" != typeof a)
                    return "";
                if ("data:" === a.slice(0, 5)) {
                    var b = a.match(/data:audio\/(ogg|mp3|opus|wav|m4a)/i);
                    if (b && b.length > 1)
                        return b[1].toLowerCase()
                }
                a = a.split("?")[0],
                a = a.slice(a.lastIndexOf("/") + 1);
                var c = a.split(".");
                return 1 === c.length || "" === c[0] && 2 === c.length ? "" : c.pop().toLowerCase()
            }
            function e(a) {
                var b = void 0;
                if (Array.isArray(a))
                    for (var d = 0; d < a.length; d++) {
                        b = a[d];
                        var e = c(b);
                        if (cc.indexOf(e) > -1)
                            break
                    }
                else
                    "object" === (void 0 === a ? "undefined" : Zb(a)) && Object.keys(a).some(function(d) {
                        b = a[d];
                        var e = c(b);
                        return cc.indexOf(e) > -1
                    });
                return b || a
            }
            function f(a) {
                return !!(a && window.AudioBuffer && a instanceof window.AudioBuffer)
            }
            function g(a) {
                return !!(a && window.ArrayBuffer && a instanceof window.ArrayBuffer)
            }
            function h(a) {
                return !!(a && window.HTMLMediaElement && a instanceof window.HTMLMediaElement)
            }
            function i(a) {
                return !!(a && "function" == typeof a.getAudioTracks && a.getAudioTracks().length && window.MediaStreamTrack && a.getAudioTracks()[0]instanceof window.MediaStreamTrack)
            }
            function j(a) {
                return !(!a || "string" != typeof a || "sine" !== a && "square" !== a && "sawtooth" !== a && "triangle" !== a)
            }
            function k(a) {
                return !(!a || "string" != typeof a || !(a.indexOf(".") > -1 || "data:" === a.slice(0, 5)))
            }
            function l(a) {
                if (!a || h(a))
                    return !1;
                var b = a.src || a.url || a.data || a;
                return k(b) || g(b) || Array.isArray(b) && k(b[0])
            }
            function m(a, b) {
                function c(a, b) {
                    var c = void 0;
                    return a || 0 === a ? (r.some(function(b) {
                        return (b === a || b.id === a) && (c = b,
                        !0)
                    }),
                    c && b ? b(c) : c) : c
                }
                function d(a) {
                    return c(a, function(a) {
                        return r.splice(r.indexOf(a), 1)
                    }),
                    v
                }
                function e(a) {
                    return a.gain.disconnect(),
                    a.gain.connect(t),
                    r.push(a),
                    a.once("destroy", d),
                    v
                }
                function f(a, b) {
                    return r.forEach(function(c) {
                        return c.play(a, b)
                    }),
                    v
                }
                function g() {
                    return r.forEach(function(a) {
                        a.playing && a.pause()
                    }),
                    v
                }
                function h() {
                    return r.forEach(function(a) {
                        a.paused && a.play()
                    }),
                    v
                }
                function i() {
                    return r.forEach(function(a) {
                        return a.stop()
                    }),
                    v
                }
                function j(a) {
                    return r.forEach(function(b) {
                        return b.seek(a)
                    }),
                    v
                }
                function k() {
                    return u = v.volume,
                    v.volume = 0,
                    v
                }
                function l() {
                    return v.volume = u || 1,
                    v
                }
                function m(a) {
                    return v.volume = a,
                    v
                }
                function n(b, c) {
                    if (a) {
                        var d = t.gain
                          , e = a.currentTime;
                        d.cancelScheduledValues(e),
                        d.setValueAtTime(d.value, e),
                        d.linearRampToValueAtTime(b, e + c)
                    } else
                        r.forEach(function(a) {
                            return a.fade(b, c)
                        });
                    return v
                }
                function o() {
                    r.forEach(function(a) {
                        return a.load()
                    })
                }
                function p() {
                    r.forEach(function(a) {
                        return a.unload()
                    })
                }
                function q() {
                    for (; r.length; )
                        r.pop().destroy()
                }
                var r = []
                  , s = new hc(a)
                  , t = a.createGain()
                  , u = 1
                  , v = null;
                return a && (s.setSource(t),
                s.setDestination(b || a.destination)),
                v = {
                    add: e,
                    find: c,
                    remove: d,
                    play: f,
                    pause: g,
                    resume: h,
                    stop: i,
                    seek: j,
                    setVolume: m,
                    mute: k,
                    unMute: l,
                    fade: n,
                    load: o,
                    unload: p,
                    destroy: q,
                    gain: t,
                    get effects() {
                        return s._nodes
                    },
                    set effects(a) {
                        s.removeAll().add(a)
                    },
                    get fx() {
                        return this.effects
                    },
                    set fx(a) {
                        this.effects = a
                    },
                    get sounds() {
                        return r
                    },
                    get volume() {
                        return t.gain.value
                    },
                    set volume(b) {
                        isNaN(b) || (b = Math.min(Math.max(b, 0), 1),
                        a ? (t.gain.cancelScheduledValues(a.currentTime),
                        t.gain.value = b,
                        t.gain.setValueAtTime(b, a.currentTime)) : t.gain.value = b,
                        r.forEach(function(a) {
                            a.context || (a.groupVolume = b)
                        }))
                    }
                }
            }
            function n() {
                this._events = this._events || {},
                this._maxListeners = this._maxListeners || void 0
            }
            function o(a) {
                return "function" == typeof a
            }
            function p(a) {
                return "number" == typeof a
            }
            function q(a) {
                return "object" == (void 0 === a ? "undefined" : d(a)) && null !== a
            }
            function r(a) {
                return void 0 === a
            }
            function s(a, b) {
                function c() {
                    q.off("error"),
                    q.off("progress"),
                    q.off("complete"),
                    q.off("loaded"),
                    w && "function" == typeof w.removeEventListener && (w.removeEventListener("canplaythrough", i),
                    w.removeEventListener("error", f)),
                    u && (u.removeEventListener("progress", e),
                    u.removeEventListener("load", h),
                    u.removeEventListener("error", f))
                }
                function d(a) {
                    q.emit("progress", 1),
                    q.emit("loaded", a),
                    q.emit("complete", a),
                    c()
                }
                function e(a) {
                    a.lengthComputable && (r = a.loaded / a.total,
                    q.emit("progress", r))
                }
                function f(b) {
                    window.clearTimeout(v);
                    var d = b;
                    w && w.error && (d = "Media Error: " + p[w.error.code] + " " + a),
                    u && (d = "XHR Error: " + u.status + " " + u.statusText + " " + a),
                    q.emit("error", d),
                    c()
                }
                function g(a) {
                    s.decodeAudioData(a, function(a) {
                        w = a,
                        u = null,
                        r = 1,
                        d(a)
                    }, f)
                }
                function h() {
                    g(u.response)
                }
                function i() {
                    window.clearTimeout(v),
                    w && (r = 1,
                    d(w))
                }
                function j() {
                    c(),
                    u && 4 !== u.readyState && u.abort(),
                    u = null,
                    window.clearTimeout(v)
                }
                function k() {
                    j(),
                    u = null,
                    w = null,
                    s = null
                }
                function l() {
                    return a instanceof window.ArrayBuffer ? void g(a) : (u = new XMLHttpRequest,
                    u.open("GET", a, !0),
                    u.responseType = "arraybuffer",
                    u.addEventListener("progress", e),
                    u.addEventListener("load", h),
                    u.addEventListener("error", f),
                    void u.send())
                }
                function m() {
                    w && w.tagName || (w = document.createElement("audio")),
                    t || (window.clearTimeout(v),
                    v = window.setTimeout(i, 2e3),
                    w.addEventListener("canplaythrough", i, !1)),
                    w.addEventListener("error", f, !1),
                    w.preload = "auto",
                    w.src = a,
                    w.load(),
                    t && d(w)
                }
                function n() {
                    var a = !(arguments.length <= 0 || void 0 === arguments[0]) && arguments[0];
                    b && !a || (s ? l() : m())
                }
                function o(b) {
                    a = b,
                    n()
                }
                var p = ["", "ABORTED", "NETWORK", "DECODE", "SRC_NOT_SUPPORTED"]
                  , q = new kc
                  , r = 0
                  , s = void 0
                  , t = void 0
                  , u = void 0
                  , v = void 0
                  , w = void 0
                  , x = {
                    on: q.on.bind(q),
                    once: q.once.bind(q),
                    off: q.off.bind(q),
                    load: o,
                    start: n,
                    cancel: j,
                    destroy: k
                };
                return Object.defineProperties(x, {
                    data: {
                        get: function() {
                            return w
                        }
                    },
                    progress: {
                        get: function() {
                            return r
                        }
                    },
                    audioContext: {
                        set: function(a) {
                            s = a
                        }
                    },
                    isTouchLocked: {
                        set: function(a) {
                            t = a
                        }
                    }
                }),
                Object.freeze(x)
            }
            function t(a, b, c) {
                function d() {
                    return !r && b && (r = b.createBufferSource(),
                    r.buffer = a),
                    r
                }
                function e() {
                    if (r) {
                        r.onended = null;
                        try {
                            r.disconnect(),
                            r.stop(0)
                        } catch (a) {}
                        r = null
                    }
                    n = !1,
                    o = 0,
                    q = !1,
                    s = 0
                }
                function f() {
                    var a = b.currentTime - s;
                    e(),
                    o = a,
                    q = !1,
                    n = !0
                }
                function g() {
                    e(),
                    k = !0,
                    "function" == typeof l && l(j)
                }
                function h(a) {
                    var c = arguments.length <= 1 || void 0 === arguments[1] ? 0 : arguments[1];
                    if (!q) {
                        for (a = a ? b.currentTime + a : 0,
                        c && (o = 0),
                        o && (c = o); c > j.duration; )
                            c %= j.duration;
                        d(),
                        r.onended = g,
                        r.start(a, c),
                        r.loop = m,
                        r.playbackRate.value = p,
                        s = b.currentTime - c,
                        k = !1,
                        n = !1,
                        o = 0,
                        q = !0
                    }
                }
                function i() {
                    e(),
                    a = null,
                    b = null,
                    l = null,
                    r = null
                }
                var j = {}
                  , k = !1
                  , l = c
                  , m = !1
                  , n = !1
                  , o = 0
                  , p = 1
                  , q = !1
                  , r = null
                  , s = 0;
                return Object.defineProperties(j, {
                    play: {
                        value: h
                    },
                    pause: {
                        value: f
                    },
                    stop: {
                        value: e
                    },
                    destroy: {
                        value: i
                    },
                    currentTime: {
                        get: function() {
                            if (o)
                                return o;
                            if (s) {
                                var a = b.currentTime - s;
                                return a > j.duration && (a %= j.duration),
                                a
                            }
                            return 0
                        }
                    },
                    duration: {
                        get: function() {
                            return a ? a.duration : 0
                        }
                    },
                    ended: {
                        get: function() {
                            return k
                        }
                    },
                    loop: {
                        get: function() {
                            return m
                        },
                        set: function(a) {
                            m = !!a,
                            r && (r.loop = m)
                        }
                    },
                    paused: {
                        get: function() {
                            return n
                        }
                    },
                    playbackRate: {
                        get: function() {
                            return p
                        },
                        set: function(a) {
                            p = a,
                            r && (r.playbackRate.value = p)
                        }
                    },
                    playing: {
                        get: function() {
                            return q
                        }
                    },
                    progress: {
                        get: function() {
                            return j.duration ? j.currentTime / j.duration : 0
                        }
                    },
                    sourceNode: {
                        get: function() {
                            return d()
                        }
                    }
                }),
                Object.freeze(j)
            }
            function u(a, b, c) {
                if (lc)
                    return lc;
                a = a || 2,
                c = c || 44100,
                b = c || a;
                var d = window.OfflineAudioContext || window.webkitOfflineAudioContext;
                return lc = d ? new d(a,b,c) : null
            }
            function v(a) {
                if (!Xb || Xb.isFake)
                    return a;
                for (var b = a.numberOfChannels, c = Xb.createBuffer(b, a.length, a.sampleRate), d = 0; d < b; d++)
                    c.getChannelData(d).set(a.getChannelData(d));
                return c
            }
            function w(a) {
                for (var b = a.numberOfChannels, c = 0; c < b; c++)
                    Array.prototype.reverse.call(a.getChannelData(c));
                return a
            }
            function x(a, b, c, d, e) {
                Xb.isFake || (a.setValueAtTime(b, Xb.currentTime),
                e ? a.linearRampToValueAtTime(c, Xb.currentTime + d) : a.exponentialRampToValueAtTime(c, Xb.currentTime + d))
            }
            function y(a) {
                if (Xb.isFake)
                    return 0;
                var b = Xb.sampleRate / 2
                  , c = Math.log(b / 40) / Math.LN2;
                return b * Math.pow(2, c * (a - 1))
            }
            function z(a) {
                var b = arguments.length <= 1 || void 0 === arguments[1] ? ":" : arguments[1]
                  , c = Math.floor(a / 60)
                  , d = Math.floor(a % 3600 % 60);
                return (c < 10 ? "0" + c : c) + b + (d < 10 ? "0" + d : d)
            }
            function A(a) {
                return "number" == typeof a && !isNaN(a) && isFinite(a)
            }
            function B(a, b, c, d) {
                function e() {
                    return o
                }
                function f(a) {
                    a.stop(),
                    t || q.push(a)
                }
                function g(a) {
                    if (r.length > 1) {
                        var b = r.indexOf(a);
                        r.splice(b, 1)
                    }
                    f(a),
                    d()
                }
                function h() {
                    return r.length && (t || r[0].paused) ? r[0] : q.length > 0 ? q.pop() : (s++,
                    b.tagName ? new a(b.cloneNode(),c,g) : new a(b,c,g))
                }
                function i() {
                    var a = h();
                    o && a.sourceNode.connect(o),
                    a !== r[0] && r.push(a),
                    a.play()
                }
                function j() {
                    if (r.length)
                        for (r[0].stop(); r.length > 1; )
                            f(r.pop())
                }
                function k() {
                    r.forEach(function(a) {
                        return a.pause()
                    })
                }
                function l(a) {
                    j(),
                    q.length = 0,
                    r.length && r[0].load(a)
                }
                function m(a, b) {
                    r.forEach(function(c) {
                        return c.fade(a, b)
                    })
                }
                function n() {
                    for (; r.length; )
                        r.pop().destroy();
                    for (; q.length; )
                        q.pop().destroy();
                    o.disconnect()
                }
                var o = c ? c.createGain() : null
                  , p = {}
                  , q = []
                  , r = []
                  , s = 0
                  , t = !1;
                return Object.defineProperties(p, {
                    play: {
                        value: i
                    },
                    pause: {
                        value: k
                    },
                    stop: {
                        value: j
                    },
                    load: {
                        value: l
                    },
                    fade: {
                        value: m
                    },
                    destroy: {
                        value: n
                    },
                    currentTime: {
                        get: function() {
                            return r[0] && r[0].currentTime || 0
                        }
                    },
                    duration: {
                        get: function() {
                            return r[0] && r[0].duration || 0
                        }
                    },
                    ended: {
                        get: function() {
                            return r.every(function(a) {
                                return a.ended
                            })
                        }
                    },
                    info: {
                        get: function() {
                            return {
                                pooled: q.length,
                                active: r.length,
                                created: s
                            }
                        }
                    },
                    loop: {
                        get: function() {
                            return r[0] && r[0].loop
                        },
                        set: function(a) {
                            r.forEach(function(b) {
                                return b.loop = !!a
                            })
                        }
                    },
                    paused: {
                        get: function() {
                            return r[0] && r[0].paused
                        }
                    },
                    playbackRate: {
                        get: function() {
                            return r[0] && r[0].playbackRate
                        },
                        set: function(a) {
                            r.forEach(function(b) {
                                return b.playbackRate = a
                            })
                        }
                    },
                    playing: {
                        get: function() {
                            return r[0] && r[0].playing
                        }
                    },
                    progress: {
                        get: function() {
                            return r[0] && r[0].progress
                        }
                    },
                    singlePlay: {
                        get: function() {
                            return t
                        },
                        set: function(a) {
                            t = a
                        }
                    },
                    sourceNode: {
                        get: function() {
                            return e()
                        }
                    },
                    volume: {
                        get: function() {
                            return r[0] && r[0].volume
                        },
                        set: function(a) {
                            r.forEach(function(b) {
                                return b.volume = a
                            })
                        }
                    },
                    groupVolume: {
                        get: function() {
                            return r[0] && r[0].groupVolume
                        },
                        set: function(a) {
                            r[0] && !r[0].hasOwnProperty("groupVolume") || r.forEach(function(b) {
                                return b.groupVolume = a
                            })
                        }
                    }
                }),
                Object.freeze(p)
            }
            function C(a, b, c) {
                function d() {
                    return !v && b && (v = b.createMediaElementSource(a)),
                    v
                }
                function e(b) {
                    a.src = b,
                    a.load(),
                    n = !1,
                    s = !1,
                    u = !1
                }
                function f() {
                    a.removeEventListener("canplaythrough", f),
                    u && a.play()
                }
                function g() {
                    return r ? (a.currentTime = 0,
                    a.currentTime > 0 && a.load(),
                    void a.play()) : (n = !0,
                    s = !1,
                    u = !1,
                    void ("function" == typeof o && o(m)))
                }
                function h(b, c) {
                    clearTimeout(p),
                    a.volume = x * w,
                    a.playbackRate = t,
                    c && (a.currentTime = c),
                    b ? p = setTimeout(h, b) : a.play(),
                    n = !1,
                    s = !1,
                    u = !0,
                    a.removeEventListener("ended", g),
                    a.addEventListener("ended", g, !1),
                    a.readyState < 1 && (a.removeEventListener("canplaythrough", f),
                    a.addEventListener("canplaythrough", f, !1),
                    a.play())
                }
                function i() {
                    clearTimeout(p),
                    a && (a.pause(),
                    u = !1,
                    s = !0)
                }
                function j() {
                    if (clearTimeout(p),
                    a) {
                        a.pause();
                        try {
                            a.currentTime = 0,
                            a.currentTime > 0 && a.load()
                        } catch (a) {}
                        u = !1,
                        s = !1
                    }
                }
                function k(a, c) {
                    function d(a, b) {
                        q = window.setTimeout(function() {
                            return m.volume = m.volume + .2 * (a - m.volume),
                            Math.abs(m.volume - a) > .05 ? void d(a, b) : void (m.volume = a)
                        }, 1e3 * b)
                    }
                    return b ? m : (window.clearTimeout(q),
                    d(a, c / 10),
                    m)
                }
                function l() {
                    a.removeEventListener("ended", g),
                    a.removeEventListener("canplaythrough", f),
                    j(),
                    a = null,
                    b = null,
                    o = null,
                    v = null
                }
                var m = {}
                  , n = !1
                  , o = c
                  , p = void 0
                  , q = void 0
                  , r = !1
                  , s = !1
                  , t = 1
                  , u = !1
                  , v = null
                  , w = 1
                  , x = 1;
                return Object.defineProperties(m, {
                    play: {
                        value: h
                    },
                    pause: {
                        value: i
                    },
                    stop: {
                        value: j
                    },
                    load: {
                        value: e
                    },
                    fade: {
                        value: k
                    },
                    destroy: {
                        value: l
                    },
                    currentTime: {
                        get: function() {
                            return a ? a.currentTime : 0
                        }
                    },
                    duration: {
                        get: function() {
                            return a ? a.duration : 0
                        }
                    },
                    ended: {
                        get: function() {
                            return n
                        }
                    },
                    loop: {
                        get: function() {
                            return r
                        },
                        set: function(a) {
                            r = !!a
                        }
                    },
                    paused: {
                        get: function() {
                            return s
                        }
                    },
                    playbackRate: {
                        get: function() {
                            return t
                        },
                        set: function(b) {
                            t = b,
                            a && (a.playbackRate = t)
                        }
                    },
                    playing: {
                        get: function() {
                            return u
                        }
                    },
                    progress: {
                        get: function() {
                            return a && a.duration ? a.currentTime / a.duration : 0
                        }
                    },
                    sourceNode: {
                        get: function() {
                            return d()
                        }
                    },
                    volume: {
                        get: function() {
                            return x
                        },
                        set: function(b) {
                            window.clearTimeout(q),
                            x = b,
                            a && (a.volume = x * w)
                        }
                    },
                    groupVolume: {
                        get: function() {
                            return w
                        },
                        set: function(b) {
                            w = b,
                            a && (a.volume = x * w)
                        }
                    }
                }),
                Object.freeze(m)
            }
            function D(a, b) {
                function c() {
                    return !l && b && (l = b.createMediaStreamSource(a),
                    navigator.mozGetUserMedia && (window.mozHack = l)),
                    l
                }
                function d(a) {
                    a = a ? b.currentTime + a : 0,
                    c(),
                    l.start(a),
                    m = b.currentTime - j,
                    h = !1,
                    k = !0,
                    i = !1,
                    j = 0
                }
                function e() {
                    if (l) {
                        try {
                            l.stop(0)
                        } catch (a) {}
                        l = null
                    }
                    h = !0,
                    i = !1,
                    j = 0,
                    k = !1,
                    m = 0
                }
                function f() {
                    var a = b.currentTime - m;
                    e(),
                    j = a,
                    k = !1,
                    i = !0
                }
                function g() {
                    e(),
                    b = null,
                    l = null,
                    a = null,
                    window.mozHack = null
                }
                var h = !1
                  , i = !1
                  , j = 0
                  , k = !1
                  , l = null
                  , m = 0
                  , n = {
                    play: d,
                    pause: f,
                    stop: e,
                    destroy: g,
                    duration: 0,
                    progress: 0
                };
                return Object.defineProperties(n, {
                    currentTime: {
                        get: function() {
                            return j || (m ? b.currentTime - m : 0)
                        }
                    },
                    ended: {
                        get: function() {
                            return h
                        }
                    },
                    paused: {
                        get: function() {
                            return i
                        }
                    },
                    playing: {
                        get: function() {
                            return k
                        }
                    },
                    sourceNode: {
                        get: function() {
                            return c()
                        }
                    }
                }),
                Object.freeze(n)
            }
            function E(a, b) {
                function c() {
                    return !l && b && (l = b.createOscillator(),
                    l.type = a,
                    l.frequency.value = n),
                    l
                }
                function d(a) {
                    a = a || 0,
                    a && (a = b.currentTime + a),
                    c(),
                    l.start(a),
                    m = j ? b.currentTime - j : b.currentTime,
                    h = !1,
                    k = !0,
                    i = !1,
                    j = 0
                }
                function e() {
                    if (l) {
                        try {
                            l.stop(0)
                        } catch (a) {}
                        l = null
                    }
                    h = !0,
                    i = !1,
                    j = 0,
                    k = !1,
                    m = 0
                }
                function f() {
                    var a = b.currentTime - m;
                    e(),
                    j = a,
                    k = !1,
                    i = !0
                }
                function g() {
                    e(),
                    b = null,
                    l = null
                }
                var h = !1
                  , i = !1
                  , j = 0
                  , k = !1
                  , l = null
                  , m = 0
                  , n = 200
                  , o = null;
                return o = {
                    play: d,
                    pause: f,
                    stop: e,
                    destroy: g
                },
                Object.defineProperties(o, {
                    currentTime: {
                        get: function() {
                            return j || (m ? b.currentTime - m : 0)
                        }
                    },
                    duration: {
                        value: 0
                    },
                    ended: {
                        get: function() {
                            return h
                        }
                    },
                    frequency: {
                        get: function() {
                            return n
                        },
                        set: function(a) {
                            n = a,
                            l && (l.frequency.value = a)
                        }
                    },
                    paused: {
                        get: function() {
                            return i
                        }
                    },
                    playing: {
                        get: function() {
                            return k
                        }
                    },
                    progress: {
                        value: 0
                    },
                    sourceNode: {
                        get: function() {
                            return c()
                        }
                    }
                }),
                Object.freeze(o)
            }
            function F(a, b) {
                function c() {
                    e.length && (h = e.slice(0).sort(function(a, b) {
                        return b.duration - a.duration
                    })[0])
                }
                var d = new m(a,b)
                  , e = d.sounds
                  , f = 1
                  , g = !1
                  , h = void 0
                  , i = d.add;
                d.add = function(a) {
                    return i(a),
                    c(),
                    d
                }
                ;
                var j = d.rmeove;
                return d.remove = function(a) {
                    return j(a),
                    c(),
                    d
                }
                ,
                Object.defineProperties(d, {
                    currentTime: {
                        get: function() {
                            return h ? h.currentTime : 0
                        },
                        set: function(a) {
                            this.stop(),
                            this.play(0, a)
                        }
                    },
                    duration: {
                        get: function() {
                            return h ? h.duration : 0
                        }
                    },
                    loop: {
                        get: function() {
                            return g
                        },
                        set: function(a) {
                            g = !!a,
                            e.forEach(function(a) {
                                a.loop = g
                            })
                        }
                    },
                    paused: {
                        get: function() {
                            return !!h && h.paused
                        }
                    },
                    progress: {
                        get: function() {
                            return h ? h.progress : 0
                        }
                    },
                    playbackRate: {
                        get: function() {
                            return f
                        },
                        set: function(a) {
                            f = a,
                            e.forEach(function(a) {
                                a.playbackRate = f
                            })
                        }
                    },
                    playing: {
                        get: function() {
                            return !!h && h.playing
                        }
                    }
                }),
                d
            }
            function G(a) {
                a.VERSION,
                a.isSupported,
                a.hasWebAudio,
                a.isTouchLocked,
                a.context && a.context.state,
                a.file.extensions;
                if (navigator.userAgent.indexOf("Chrome") > -1)
                    ;
                else
                    window.console && window.console.log.call
            }
            function H(a) {
                return yc.find(a)
            }
            function I(a) {
                var b = new F(Xb,yc.gain);
                return a && a.forEach(function(a) {
                    return b.add(a)
                }),
                b
            }
            function J(a) {
                var b = gc.getSupportedFile(a.src || a.url || a.data || a)
                  , c = new nc(Object.assign({}, a || {}, {
                    src: b,
                    context: Xb,
                    destination: yc.gain
                }));
                return c.isTouchLocked = zc,
                a && (c.id = a.id || a.name || "",
                c.loop = !!a.loop,
                c.volume = a.volume,
                c.effects = a.effects || []),
                yc.add(c),
                c
            }
            function K(a, b) {
                var c = J(a).prepare();
                return b && b.add(c.loader),
                c
            }
            function L(a) {
                var b = a.src || a.url || a.data || a
                  , c = void 0
                  , d = void 0;
                if (gc.containsURL(b))
                    c = K(a),
                    d = c.loader;
                else {
                    if (!Array.isArray(b) || !gc.containsURL(b[0].src || b[0].url)) {
                        var e = "sono.load: No audio file URLs found in config.";
                        if (!a.onError)
                            throw new Error(e);
                        return a.onError("[ERROR] " + e),
                        null
                    }
                    c = [],
                    d = new s.Group,
                    b.forEach(function(a) {
                        return c.push(K(a, d))
                    })
                }
                return a.onProgress && d.on("progress", function(b) {
                    return a.onProgress(b)
                }),
                a.onComplete && d.once("complete", function() {
                    d.off("progress"),
                    a.onComplete(c)
                }),
                d.once("error", function(b) {
                    d.off("error"),
                    a.onError && a.onError(b)
                }),
                d.start(),
                c
            }
            function M(a) {
                if (gc.containsURL(a))
                    return L(a);
                var b = J(a);
                return b.data = a.data || a,
                b
            }
            function N(a) {
                return yc.find(a, function(a) {
                    return a.destroy()
                }),
                Ac
            }
            function O() {
                return yc.destroy(),
                Ac
            }
            function P() {
                return yc.mute(),
                Ac
            }
            function Q() {
                return yc.unMute(),
                Ac
            }
            function R(a, b) {
                return yc.fade(a, b),
                Ac
            }
            function S() {
                return yc.pause(),
                Ac
            }
            function T() {
                return yc.resume(),
                Ac
            }
            function U() {
                return yc.stop(),
                Ac
            }
            function V(a, b, c) {
                return yc.find(a, function(a) {
                    return a.play(b, c)
                }),
                Ac
            }
            function W(a) {
                return yc.find(a, function(a) {
                    return a.pause()
                }),
                Ac
            }
            function X(a) {
                return yc.find(a, function(a) {
                    return a.stop()
                }),
                Ac
            }
            function Y(a, b) {
                return (arguments.length <= 2 || void 0 === arguments[2] ? hc.prototype : arguments[2])[a] = b,
                Ac[a] = b,
                b
            }
            function Z(a) {
                var b = Math.log(a / 440) * Math.LOG2E * 12;
                return Math.round(b) + 69
            }
            function $(a) {
                return 440 * Math.pow(2, (a - 69) / 12)
            }
            function _(a, b) {
                return Math.floor(1200 * Math.log(a / $(b)) * Math.LOG2E)
            }
            function aa() {
                for (var a = null, b = arguments.length, c = Array(b), d = 0; d < b; d++)
                    c[d] = arguments[d];
                for (var e = 0; e < c.length; e++)
                    if (A(c[e])) {
                        a = c[e];
                        break
                    }
                return a
            }
            function ba(a) {
                var b = Math.log(Ic / Hc) / Math.LN2
                  , c = Math.pow(2, b * (a - 1));
                return Ic * c
            }
            function ca(a) {
                return void 0 !== a
            }
            function da(a) {
                var b = arguments.length <= 1 || void 0 === arguments[1] ? 0 : arguments[1];
                return A(a) ? a : b
            }
            function ea(a, b) {
                var c = a.x
                  , d = a.y
                  , e = a.z
                  , f = b.x
                  , g = b.y
                  , h = b.z;
                a.x = d * h - e * g,
                a.y = e * f - c * h,
                a.z = c * g - d * f
            }
            function fa(a) {
                if (0 === a.x && 0 === a.y && 0 === a.z)
                    return a;
                var b = Math.sqrt(a.x * a.x + a.y * a.y + a.z * a.z)
                  , c = 1 / b;
                return a.x *= c,
                a.y *= c,
                a.z *= c,
                a
            }
            function ga(a, b) {
                var c = Nc.get(b.x, b.y, b.z);
                ea(c, Oc),
                ea(c, b),
                fa(c),
                fa(b),
                a.setOrientation(b.x, b.y, b.z, c.x, c.y, c.z),
                Nc.dispose(b),
                Nc.dispose(c)
            }
            function ha(a, b) {
                a.setPosition(b.x, b.y, b.z),
                Nc.dispose(b)
            }
            function ia(a) {
                var b = a.time
                  , c = a.decay
                  , d = a.reverse
                  , e = a.buffer
                  , f = Ac.context.sampleRate
                  , g = Math.floor(f * b)
                  , h = void 0;
                h = e && e.length === g ? e : Ac.context.createBuffer(2, g, f);
                for (var i = h.getChannelData(0), j = h.getChannelData(1), k = void 0, l = void 0, m = 0; m < g; m++)
                    k = d ? g - m : m,
                    l = Math.pow(1 - k / g, c),
                    i[m] = (2 * Math.random() - 1) * l,
                    j[m] = (2 * Math.random() - 1) * l;
                return h
            }
            function ja(a, b, c) {
                function d(b) {
                    j = b,
                    a(j)
                }
                function e(a) {
                    b && "PermissionDeniedError" === a.name || "PERMISSION_DENIED" === a ? b() : c(a.message || a)
                }
                function f() {
                    return h ? (navigator.mediaDevices.getUserMedia ? navigator.mediaDevices.getUserMedia({
                        audio: !0
                    }).then(d).catch(e) : navigator.getUserMedia({
                        audio: !0
                    }, d, e),
                    i) : i
                }
                function g() {
                    return j.stop ? j.stop() : j.getAudioTracks()[0].stop(),
                    j = null,
                    i
                }
                navigator.getUserMedia = navigator.mediaDevices.getUserMedia || navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia,
                c = c || function(a) {}
                ;
                var h = !!navigator.getUserMedia
                  , i = {}
                  , j = null;
                return Object.assign(i, {
                    connect: f,
                    disconnect: g,
                    isSupported: h,
                    get stream() {
                        return j
                    }
                })
            }
            function ka() {
                function a(a, b) {
                    for (var c = new Float32Array(b), d = 0, e = 0; e < a.length; e++)
                        c.set(a[e], d),
                        d += a[e].length;
                    return c
                }
                function b() {
                    if (!g.length)
                        return Ac.context.createBuffer(2, f, Ac.context.sampleRate);
                    var b = g.length * f
                      , c = Ac.context.createBuffer(2, b, Ac.context.sampleRate);
                    return c.getChannelData(0).set(a(g, b)),
                    c.getChannelData(1).set(a(h, b)),
                    c
                }
                function c() {
                    k && (k.onaudioprocess = null,
                    n.disconnect(),
                    k.disconnect())
                }
                function d() {
                    c(),
                    k = Ac.context.createScriptProcessor(f, 2, 2),
                    n.connect(k),
                    k.connect(o),
                    k.connect(Ac.context.destination),
                    k.onaudioprocess = function(a) {
                        var b = a.inputBuffer.getChannelData(0)
                          , c = a.inputBuffer.getChannelData(1);
                        if (e) {
                            var d = a.outputBuffer.getChannelData(0)
                              , f = a.outputBuffer.getChannelData(1);
                            d.set(b),
                            f.set(c)
                        }
                        l && (g.push(new Float32Array(b)),
                        h.push(new Float32Array(c)))
                    }
                }
                var e = !(arguments.length <= 0 || void 0 === arguments[0]) && arguments[0]
                  , f = 4096
                  , g = []
                  , h = []
                  , i = 0
                  , j = 0
                  , k = null
                  , l = !1
                  , m = null
                  , n = Ac.context.createGain()
                  , o = Ac.context.createGain();
                o.gain.value = e ? 1 : 0;
                var p = {
                    _in: n,
                    _out: o,
                    connect: function(a) {
                        o.connect(a._in || a)
                    },
                    disconnect: function() {
                        for (var a = arguments.length, b = Array(a), c = 0; c < a; c++)
                            b[c] = arguments[c];
                        o.disconnect(b)
                    }
                };
                return {
                    start: function(a) {
                        a && (d(),
                        g.length = 0,
                        h.length = 0,
                        i = Ac.context.currentTime,
                        j = 0,
                        m = a,
                        a.effects.add(p),
                        l = !0)
                    },
                    stop: function() {
                        return m.effects.remove(p),
                        m = null,
                        j = Ac.context.currentTime,
                        l = !1,
                        c(),
                        b()
                    },
                    getDuration: function() {
                        return l ? Ac.context.currentTime - i : j - i
                    },
                    get isRecording() {
                        return l
                    }
                }
            }
            function la() {
                var a = void 0
                  , b = void 0;
                return function(c, d) {
                    if (!window.Float32Array || !window.AudioBuffer)
                        return [];
                    var e = a === c
                      , f = b && b.length === d;
                    if (e && f)
                        return b;
                    if (b && b.length === d || (b = new Float32Array(d)),
                    !c)
                        return b;
                    a = c;
                    for (var g = Math.floor(a.length / d), h = Math.max(Math.floor(g / 5), 1), i = 0, j = 0; j < a.numberOfChannels; j++)
                        for (var k = a.getChannelData(j), l = 0; l < d; l++)
                            for (var m = l * g, n = m + g; m < n; m += h) {
                                var o = k[m];
                                o < 0 && (o = -o),
                                o > b[l] && (b[l] = o),
                                o > i && (i = o)
                            }
                    for (var p = 1 / i, q = 0; q < b.length; q++)
                        b[q] *= p;
                    return b
                }
            }
            function ma(a) {
                function b() {
                    j ? (s.fillStyle = j,
                    s.fillRect(m, n, q, r)) : s.clearRect(m, n, q, r),
                    s.lineWidth = k,
                    t = null,
                    "function" != typeof i && (s.strokeStyle = i,
                    s.beginPath())
                }
                function c(a, b, c) {
                    if ("function" == typeof i) {
                        var d = i(a, b, c);
                        d !== t && (t = d,
                        s.stroke(),
                        s.strokeStyle = t,
                        s.beginPath())
                    }
                }
                function d(a, b, c) {
                    return "function" == typeof o ? o(a, b, c) : a
                }
                function e(b, c) {
                    return b && "function" == typeof b.waveform ? b.waveform(c) : b || (a.waveform ? a.waveform : a.sound ? a.sound.waveform(c) : null)
                }
                function f(a) {
                    if (b(),
                    "circular" === h) {
                        var f = e(a, 360)
                          , i = Math.floor(f.length * l)
                          , j = Wc / i
                          , o = void 0
                          , p = void 0
                          , t = void 0
                          , B = void 0;
                        for (u = 0; u < i; u++) {
                            var C = d(f[u], u, i);
                            c(u, i, C),
                            o = u * j - Vc,
                            B = Math.cos(o),
                            t = Math.sin(o),
                            "fill" === g && (v = z + y * B,
                            w = A + y * t,
                            s.moveTo(v, w)),
                            p = y + (x - y) * C,
                            v = z + p * B,
                            w = A + p * t,
                            "line" === g && 0 === u && s.moveTo(v, w),
                            s.lineTo(v, w)
                        }
                        "line" === g && s.closePath()
                    } else {
                        var D = e(a, q)
                          , E = Math.min(D.length, q - k / 2);
                        for (E = Math.floor(E * l),
                        u = 0; u < E; u++) {
                            var F = d(D[u], u, E);
                            c(u, E, F),
                            "line" === g && u > 0 && s.lineTo(v, w),
                            v = m + u,
                            w = n + r - Math.round(r * F),
                            w = Math.floor(Math.min(w, n + r - k / 2)),
                            "fill" === g ? (s.moveTo(v, w),
                            s.lineTo(v, n + r)) : s.lineTo(v, w)
                        }
                    }
                    s.stroke()
                }
                var g = a.style || "fill"
                  , h = a.shape || "linear"
                  , i = a.color || 0
                  , j = a.bgColor
                  , k = a.lineWidth || 1
                  , l = a.percent || 1
                  , m = a.x || 0
                  , n = a.y || 0
                  , o = a.transform
                  , p = a.canvas
                  , q = a.width || p && p.width
                  , r = a.height || p && p.height
                  , s = null
                  , t = void 0
                  , u = void 0
                  , v = void 0
                  , w = void 0
                  , x = void 0
                  , y = void 0
                  , z = void 0
                  , A = void 0;
                return p || a.context || (p = document.createElement("canvas"),
                q = q || p.width,
                r = r || p.height,
                p.width = r,
                p.height = r),
                "circular" === h && (x = a.radius || Math.min(r / 2, q / 2),
                y = a.innerRadius || x / 2,
                z = m + q / 2,
                A = n + r / 2),
                s = a.context || p.getContext("2d"),
                f.canvas = p,
                (a.waveform || a.sound) && f(),
                f
            }
            var na = a(function(a) {
                var b = a.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
                "number" == typeof __g && (__g = b)
            })
              , oa = a(function(a) {
                var b = a.exports = {
                    version: "2.4.0"
                };
                "number" == typeof __e && (__e = b)
            })
              , pa = function(a) {
                return "object" == (void 0 === a ? "undefined" : d(a)) ? null !== a : "function" == typeof a
            }
              , qa = pa
              , ra = function(a) {
                if (!qa(a))
                    throw TypeError(a + " is not an object!");
                return a
            }
              , sa = function(a) {
                try {
                    return !!a()
                } catch (a) {
                    return !0
                }
            }
              , ta = !sa(function() {
                return 7 != Object.defineProperty({}, "a", {
                    get: function() {
                        return 7
                    }
                }).a
            })
              , ua = pa
              , va = na.document
              , wa = ua(va) && ua(va.createElement)
              , xa = function(a) {
                return wa ? va.createElement(a) : {}
            }
              , ya = !ta && !sa(function() {
                return 7 != Object.defineProperty(xa("div"), "a", {
                    get: function() {
                        return 7
                    }
                }).a
            })
              , za = pa
              , Aa = function(a, b) {
                if (!za(a))
                    return a;
                var c, d;
                if (b && "function" == typeof (c = a.toString) && !za(d = c.call(a)))
                    return d;
                if ("function" == typeof (c = a.valueOf) && !za(d = c.call(a)))
                    return d;
                if (!b && "function" == typeof (c = a.toString) && !za(d = c.call(a)))
                    return d;
                throw TypeError("Can't convert object to primitive value")
            }
              , Ba = ra
              , Ca = ya
              , Da = Aa
              , Ea = Object.defineProperty
              , Fa = ta ? Object.defineProperty : function(a, b, c) {
                if (Ba(a),
                b = Da(b, !0),
                Ba(c),
                Ca)
                    try {
                        return Ea(a, b, c)
                    } catch (a) {}
                if ("get"in c || "set"in c)
                    throw TypeError("Accessors not supported!");
                return "value"in c && (a[b] = c.value),
                a
            }
              , Ga = {
                f: Fa
            }
              , Ha = function(a, b) {
                return {
                    enumerable: !(1 & a),
                    configurable: !(2 & a),
                    writable: !(4 & a),
                    value: b
                }
            }
              , Ia = Ga
              , Ja = Ha
              , Ka = ta ? function(a, b, c) {
                return Ia.f(a, b, Ja(1, c))
            }
            : function(a, b, c) {
                return a[b] = c,
                a
            }
              , La = {}.hasOwnProperty
              , Ma = function(a, b) {
                return La.call(a, b)
            }
              , Na = 0
              , Oa = Math.random()
              , Pa = function(a) {
                return "Symbol(".concat(void 0 === a ? "" : a, ")_", (++Na + Oa).toString(36))
            }
              , Qa = a(function(a) {
                var b = na
                  , c = Ka
                  , d = Ma
                  , e = Pa("src")
                  , f = "toString"
                  , g = Function[f]
                  , h = ("" + g).split(f);
                oa.inspectSource = function(a) {
                    return g.call(a)
                }
                ,
                (a.exports = function(a, f, g, i) {
                    var j = "function" == typeof g;
                    j && (d(g, "name") || c(g, "name", f)),
                    a[f] !== g && (j && (d(g, e) || c(g, e, a[f] ? "" + a[f] : h.join(String(f)))),
                    a === b ? a[f] = g : i ? a[f] ? a[f] = g : c(a, f, g) : (delete a[f],
                    c(a, f, g)))
                }
                )(Function.prototype, f, function() {
                    return "function" == typeof this && this[e] || g.call(this)
                })
            })
              , Ra = function(a) {
                if ("function" != typeof a)
                    throw TypeError(a + " is not a function!");
                return a
            }
              , Sa = Ra
              , Ta = function(a, b, c) {
                if (Sa(a),
                void 0 === b)
                    return a;
                switch (c) {
                case 1:
                    return function(c) {
                        return a.call(b, c)
                    }
                    ;
                case 2:
                    return function(c, d) {
                        return a.call(b, c, d)
                    }
                    ;
                case 3:
                    return function(c, d, e) {
                        return a.call(b, c, d, e)
                    }
                }
                return function() {
                    return a.apply(b, arguments)
                }
            }
              , Ua = na
              , Va = oa
              , Wa = Ka
              , Xa = Qa
              , Ya = Ta
              , Za = "prototype"
              , $a = function a(b, c, d) {
                var e, f, g, h, i = b & a.F, j = b & a.G, k = b & a.S, l = b & a.P, m = b & a.B, n = j ? Ua : k ? Ua[c] || (Ua[c] = {}) : (Ua[c] || {})[Za], o = j ? Va : Va[c] || (Va[c] = {}), p = o[Za] || (o[Za] = {});
                j && (d = c);
                for (e in d)
                    f = !i && n && void 0 !== n[e],
                    g = (f ? n : d)[e],
                    h = m && f ? Ya(g, Ua) : l && "function" == typeof g ? Ya(Function.call, g) : g,
                    n && Xa(n, e, g, b & a.U),
                    o[e] != g && Wa(o, e, h),
                    l && p[e] != g && (p[e] = g)
            };
            Ua.core = Va,
            $a.F = 1,
            $a.G = 2,
            $a.S = 4,
            $a.P = 8,
            $a.B = 16,
            $a.W = 32,
            $a.U = 64,
            $a.R = 128;
            var _a = $a
              , ab = {}.toString
              , bb = function(a) {
                return ab.call(a).slice(8, -1)
            }
              , cb = bb
              , db = Object("z").propertyIsEnumerable(0) ? Object : function(a) {
                return "String" == cb(a) ? a.split("") : Object(a)
            }
              , eb = function(a) {
                if (void 0 == a)
                    throw TypeError("Can't call method on  " + a);
                return a
            }
              , fb = db
              , gb = eb
              , hb = function(a) {
                return fb(gb(a))
            }
              , ib = Math.ceil
              , jb = Math.floor
              , kb = function(a) {
                return isNaN(a = +a) ? 0 : (a > 0 ? jb : ib)(a)
            }
              , lb = kb
              , mb = Math.min
              , nb = function(a) {
                return a > 0 ? mb(lb(a), 9007199254740991) : 0
            }
              , ob = kb
              , pb = Math.max
              , qb = Math.min
              , rb = function(a, b) {
                return a = ob(a),
                a < 0 ? pb(a + b, 0) : qb(a, b)
            }
              , sb = hb
              , tb = nb
              , ub = rb
              , vb = na
              , wb = "__core-js_shared__"
              , xb = vb[wb] || (vb[wb] = {})
              , yb = function(a) {
                return xb[a] || (xb[a] = {})
            }("keys")
              , zb = Pa
              , Ab = Ma
              , Bb = hb
              , Cb = function(a) {
                return function(b, c, d) {
                    var e, f = sb(b), g = tb(f.length), h = ub(d, g);
                    if (a && c != c) {
                        for (; g > h; )
                            if ((e = f[h++]) != e)
                                return !0
                    } else
                        for (; g > h; h++)
                            if ((a || h in f) && f[h] === c)
                                return a || h || 0;
                    return !a && -1
                }
            }(!1)
              , Db = function(a) {
                return yb[a] || (yb[a] = zb(a))
            }("IE_PROTO")
              , Eb = function(a, b) {
                var c, d = Bb(a), e = 0, f = [];
                for (c in d)
                    c != Db && Ab(d, c) && f.push(c);
                for (; b.length > e; )
                    Ab(d, c = b[e++]) && (~Cb(f, c) || f.push(c));
                return f
            }
              , Fb = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")
              , Gb = Eb
              , Hb = Fb
              , Ib = Object.keys || function(a) {
                return Gb(a, Hb)
            }
              , Jb = Object.getOwnPropertySymbols
              , Kb = {
                f: Jb
            }
              , Lb = {}.propertyIsEnumerable
              , Mb = {
                f: Lb
            }
              , Nb = eb
              , Ob = function(a) {
                return Object(Nb(a))
            }
              , Pb = Ib
              , Qb = Kb
              , Rb = Mb
              , Sb = Ob
              , Tb = db
              , Ub = Object.assign
              , Vb = !Ub || sa(function() {
                var a = {}
                  , b = {}
                  , c = Symbol()
                  , d = "abcdefghijklmnopqrst";
                return a[c] = 7,
                d.split("").forEach(function(a) {
                    b[a] = a
                }),
                7 != Ub({}, a)[c] || Object.keys(Ub({}, b)).join("") != d
            }) ? function(a, b) {
                for (var c = Sb(a), d = arguments.length, e = 1, f = Qb.f, g = Rb.f; d > e; )
                    for (var h, i = Tb(arguments[e++]), j = f ? Pb(i).concat(f(i)) : Pb(i), k = j.length, l = 0; k > l; )
                        g.call(i, h = j[l++]) && (c[h] = i[h]);
                return c
            }
            : Ub
              , Wb = _a;
            Wb(Wb.S + Wb.F, "Object", {
                assign: Vb
            });
            var Xb = function() {
                var a = window.AudioContext || window.webkitAudioContext || b
                  , c = new a;
                if (/(iPhone|iPad)/i.test(navigator.userAgent) && 44100 !== c.sampleRate) {
                    var d = c.createBuffer(1, 1, 44100)
                      , e = c.createBufferSource();
                    e.buffer = d,
                    e.connect(c.destination),
                    e.start(0),
                    e.disconnect(),
                    c.close(),
                    c = new a
                }
                return "suspended" === c.state && "function" == typeof c.resume && window.setTimeout(function() {
                    c.resume()
                }, 1e3),
                c
            }()
              , Yb = {};
            Yb.handlePageVisibility = function(a, b) {
                function c() {
                    document[d] ? a() : b()
                }
                var d = void 0
                  , e = void 0;
                void 0 !== document.hidden ? (d = "hidden",
                e = "visibilitychange") : void 0 !== document.mozHidden ? (d = "mozHidden",
                e = "mozvisibilitychange") : void 0 !== document.msHidden ? (d = "msHidden",
                e = "msvisibilitychange") : void 0 !== document.webkitHidden && (d = "webkitHidden",
                e = "webkitvisibilitychange"),
                void 0 !== e && document.addEventListener(e, c, !1)
            }
            ,
            Yb.handleTouchLock = function(a, b) {
                function c() {
                    a && "suspended" === a.state ? a.resume().then(function() {
                        var d = a.createBuffer(1, 1, 44100)
                          , e = a.createBufferSource();
                        e.buffer = d,
                        e.connect(a.destination),
                        e.start(0),
                        e.stop(0),
                        e.disconnect(),
                        document.body.removeEventListener("touchend", c),
                        b()
                    }) : (document.body.removeEventListener("touchend", c),
                    b())
                }
                var d = navigator.userAgent
                  , e = !!d.match(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|Windows Phone|SymbianOS/i);
                return e && document.body.addEventListener("touchend", c, !1),
                e
            }
            ;
            var Zb = "function" == typeof Symbol && "symbol" == d(Symbol.iterator) ? function(a) {
                return void 0 === a ? "undefined" : d(a)
            }
            : function(a) {
                return a && "function" == typeof Symbol && a.constructor === Symbol ? "symbol" : void 0 === a ? "undefined" : d(a)
            }
              , $b = function(a, b) {
                if (!(a instanceof b))
                    throw new TypeError("Cannot call a class as a function")
            }
              , _b = function() {
                function a(a, b) {
                    for (var c = 0; c < b.length; c++) {
                        var d = b[c];
                        d.enumerable = d.enumerable || !1,
                        d.configurable = !0,
                        "value"in d && (d.writable = !0),
                        Object.defineProperty(a, d.key, d)
                    }
                }
                return function(b, c, d) {
                    return c && a(b.prototype, c),
                    d && a(b, d),
                    b
                }
            }()
              , ac = function(a, b) {
                if ("function" != typeof b && null !== b)
                    throw new TypeError("Super expression must either be null or a function, not " + (void 0 === b ? "undefined" : d(b)));
                a.prototype = Object.create(b && b.prototype, {
                    constructor: {
                        value: a,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }),
                b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
            }
              , bc = function(a, b) {
                if (!a)
                    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return !b || "object" != (void 0 === b ? "undefined" : d(b)) && "function" != typeof b ? a : b
            }
              , cc = []
              , dc = {}
              , ec = [{
                ext: "ogg",
                type: 'audio/ogg; codecs="vorbis"'
            }, {
                ext: "mp3",
                type: "audio/mpeg;"
            }, {
                ext: "opus",
                type: 'audio/ogg; codecs="opus"'
            }, {
                ext: "wav",
                type: 'audio/wav; codecs="1"'
            }, {
                ext: "m4a",
                type: "audio/x-m4a;"
            }, {
                ext: "m4a",
                type: "audio/aac;"
            }]
              , fc = document.createElement("audio");
            fc && (ec.forEach(function(a) {
                var b = !!fc.canPlayType(a.type);
                b && -1 === cc.indexOf(a.ext) && cc.push(a.ext),
                dc[a.ext] = b
            }),
            fc = null);
            var gc = {
                canPlay: dc,
                containsURL: l,
                extensions: cc,
                getFileExtension: c,
                getSupportedFile: e,
                isAudioBuffer: f,
                isArrayBuffer: g,
                isMediaElement: h,
                isMediaStream: i,
                isOscillatorType: j,
                isURL: k
            }
              , hc = function() {
                function a(b) {
                    var c = this;
                    $b(this, a),
                    this.context = b,
                    this._destination = null,
                    this._source = null,
                    this._nodes = [],
                    this._nodes.has = function(a) {
                        return c.has(a)
                    }
                    ,
                    this._nodes.add = function(a) {
                        return c.add(a)
                    }
                    ,
                    this._nodes.remove = function(a) {
                        return c.remove(a)
                    }
                    ,
                    this._nodes.toggle = function(a, b) {
                        return c.toggle(a, b)
                    }
                    ,
                    this._nodes.removeAll = function() {
                        return c.removeAll()
                    }
                    ,
                    Object.keys(a.prototype).forEach(function(b) {
                        c._nodes.hasOwnProperty(b) || "function" != typeof a.prototype[b] || (c._nodes[b] = c[b].bind(c))
                    })
                }
                return a.prototype.setSource = function(a) {
                    return this._source = a,
                    this._updateConnections(),
                    a
                }
                ,
                a.prototype.setDestination = function(a) {
                    return this._connectToDestination(a),
                    a
                }
                ,
                a.prototype.has = function(a) {
                    return !!a && this._nodes.indexOf(a) > -1
                }
                ,
                a.prototype.add = function(a) {
                    if (!a)
                        return null;
                    if (this.has(a))
                        return a;
                    if (Array.isArray(a)) {
                        for (var b = void 0, c = 0; c < a.length; c++)
                            b = this.add(a[c]);
                        return b
                    }
                    return this._nodes.push(a),
                    this._updateConnections(),
                    a
                }
                ,
                a.prototype.remove = function(a) {
                    if (!a)
                        return null;
                    if (!this.has(a))
                        return a;
                    for (var b = this._nodes.length, c = 0; c < b; c++)
                        if (a === this._nodes[c]) {
                            this._nodes.splice(c, 1);
                            break
                        }
                    return a.disconnect(),
                    this._updateConnections(),
                    a
                }
                ,
                a.prototype.toggle = function(a, b) {
                    b = !!b;
                    var c = this.has(a);
                    return arguments.length > 1 && c === b ? this : (c ? this.remove(a) : this.add(a),
                    this)
                }
                ,
                a.prototype.removeAll = function() {
                    for (; this._nodes.length; ) {
                        this._nodes.pop().disconnect()
                    }
                    return this._updateConnections(),
                    this
                }
                ,
                a.prototype.destroy = function() {
                    this.removeAll(),
                    this.context = null,
                    this._destination = null,
                    this._source && this._source.disconnect(),
                    this._source = null
                }
                ,
                a.prototype._connect = function(a, b) {
                    a.disconnect(),
                    a.connect(b._in || b)
                }
                ,
                a.prototype._connectToDestination = function(a) {
                    var b = this._nodes[this._nodes.length - 1] || this._source;
                    b && this._connect(b, a),
                    this._destination = a
                }
                ,
                a.prototype._updateConnections = function() {
                    if (this._source) {
                        for (var a = void 0, b = void 0, c = 0; c < this._nodes.length; c++)
                            a = this._nodes[c],
                            b = 0 === c ? this._source : this._nodes[c - 1],
                            this._connect(b, a);
                        this._destination && this._connectToDestination(this._destination)
                    }
                }
                ,
                a
            }();
            m.Effects = hc;
            var ic = n;
            n.EventEmitter = n,
            n.prototype._events = void 0,
            n.prototype._maxListeners = void 0,
            n.defaultMaxListeners = 10,
            n.prototype.setMaxListeners = function(a) {
                if (!p(a) || a < 0 || isNaN(a))
                    throw TypeError("n must be a positive number");
                return this._maxListeners = a,
                this
            }
            ,
            n.prototype.emit = function(a) {
                var b, c, d, e, f, g;
                if (this._events || (this._events = {}),
                "error" === a && (!this._events.error || q(this._events.error) && !this._events.error.length)) {
                    if ((b = arguments[1])instanceof Error)
                        throw b;
                    var h = new Error('Uncaught, unspecified "error" event. (' + b + ")");
                    throw h.context = b,
                    h
                }
                if (c = this._events[a],
                r(c))
                    return !1;
                if (o(c))
                    switch (arguments.length) {
                    case 1:
                        c.call(this);
                        break;
                    case 2:
                        c.call(this, arguments[1]);
                        break;
                    case 3:
                        c.call(this, arguments[1], arguments[2]);
                        break;
                    default:
                        e = Array.prototype.slice.call(arguments, 1),
                        c.apply(this, e)
                    }
                else if (q(c))
                    for (e = Array.prototype.slice.call(arguments, 1),
                    g = c.slice(),
                    d = g.length,
                    f = 0; f < d; f++)
                        g[f].apply(this, e);
                return !0
            }
            ,
            n.prototype.addListener = function(a, b) {
                var c;
                if (!o(b))
                    throw TypeError("listener must be a function");
                return this._events || (this._events = {}),
                this._events.newListener && this.emit("newListener", a, o(b.listener) ? b.listener : b),
                this._events[a] ? q(this._events[a]) ? this._events[a].push(b) : this._events[a] = [this._events[a], b] : this._events[a] = b,
                q(this._events[a]) && !this._events[a].warned && (c = r(this._maxListeners) ? n.defaultMaxListeners : this._maxListeners) && c > 0 && this._events[a].length > c && (this._events[a].warned = !0,
                console.trace),
                this
            }
            ,
            n.prototype.on = n.prototype.addListener,
            n.prototype.once = function(a, b) {
                function c() {
                    this.removeListener(a, c),
                    d || (d = !0,
                    b.apply(this, arguments))
                }
                if (!o(b))
                    throw TypeError("listener must be a function");
                var d = !1;
                return c.listener = b,
                this.on(a, c),
                this
            }
            ,
            n.prototype.removeListener = function(a, b) {
                var c, d, e, f;
                if (!o(b))
                    throw TypeError("listener must be a function");
                if (!this._events || !this._events[a])
                    return this;
                if (c = this._events[a],
                e = c.length,
                d = -1,
                c === b || o(c.listener) && c.listener === b)
                    delete this._events[a],
                    this._events.removeListener && this.emit("removeListener", a, b);
                else if (q(c)) {
                    for (f = e; f-- > 0; )
                        if (c[f] === b || c[f].listener && c[f].listener === b) {
                            d = f;
                            break
                        }
                    if (d < 0)
                        return this;
                    1 === c.length ? (c.length = 0,
                    delete this._events[a]) : c.splice(d, 1),
                    this._events.removeListener && this.emit("removeListener", a, b)
                }
                return this
            }
            ,
            n.prototype.removeAllListeners = function(a) {
                var b, c;
                if (!this._events)
                    return this;
                if (!this._events.removeListener)
                    return 0 === arguments.length ? this._events = {} : this._events[a] && delete this._events[a],
                    this;
                if (0 === arguments.length) {
                    for (b in this._events)
                        "removeListener" !== b && this.removeAllListeners(b);
                    return this.removeAllListeners("removeListener"),
                    this._events = {},
                    this
                }
                if (c = this._events[a],
                o(c))
                    this.removeListener(a, c);
                else if (c)
                    for (; c.length; )
                        this.removeListener(a, c[c.length - 1]);
                return delete this._events[a],
                this
            }
            ,
            n.prototype.listeners = function(a) {
                return this._events && this._events[a] ? o(this._events[a]) ? [this._events[a]] : this._events[a].slice() : []
            }
            ,
            n.prototype.listenerCount = function(a) {
                if (this._events) {
                    var b = this._events[a];
                    if (o(b))
                        return 1;
                    if (b)
                        return b.length
                }
                return 0
            }
            ,
            n.listenerCount = function(a, b) {
                return a.listenerCount(b)
            }
            ;
            var jc = ic.EventEmitter
              , kc = function(a) {
                function b() {
                    return $b(this, b),
                    bc(this, a.call(this))
                }
                return ac(b, a),
                b.prototype.off = function(a, b) {
                    return b ? this.removeListener(a, b) : a ? this.removeAllListeners(a) : this.removeAllListeners()
                }
                ,
                b
            }(jc);
            s.Group = function() {
                function a(a) {
                    var b = j + a;
                    h.emit("progress", b / k)
                }
                function b() {
                    j++,
                    e(),
                    h.emit("progress", j / k),
                    d()
                }
                function c(a) {
                    e(),
                    h.emit("error", a),
                    d()
                }
                function d() {
                    return 0 === i.length ? (l = null,
                    void h.emit("complete")) : (l = i.pop(),
                    l.on("progress", a),
                    l.once("loaded", b),
                    l.once("error", c),
                    void l.start())
                }
                function e() {
                    l.off("progress", a),
                    l.off("loaded", b),
                    l.off("error", c)
                }
                function f(a) {
                    return i.push(a),
                    k++,
                    a
                }
                function g() {
                    k = i.length,
                    d()
                }
                var h = new kc
                  , i = []
                  , j = 0
                  , k = 0
                  , l = void 0;
                return Object.freeze({
                    on: h.on.bind(h),
                    once: h.once.bind(h),
                    off: h.off.bind(h),
                    add: f,
                    start: g
                })
            }
            ;
            var lc = void 0
              , mc = {
                getOfflineContext: u,
                cloneBuffer: v,
                reverseBuffer: w,
                ramp: x,
                getFrequency: y,
                timeCode: z
            }
              , nc = function(a) {
                function b(c) {
                    $b(this, b);
                    var d = bc(this, a.call(this));
                    return d.id = c.id || null,
                    d._context = c.context || Xb,
                    d._destination = c.destination || d._context.destination,
                    d._effects = new hc(d._context),
                    d._gain = d._context.createGain(),
                    d._config = c,
                    d._data = null,
                    d._isTouchLocked = !1,
                    d._loader = null,
                    d._loop = !1,
                    d._playbackRate = 1,
                    d._playWhenReady = null,
                    d._source = null,
                    d._wave = null,
                    d._effects.setDestination(d._gain),
                    d._gain.connect(d._destination),
                    d._onEnded = d._onEnded.bind(d),
                    d._onLoad = d._onLoad.bind(d),
                    d._onLoadError = d._onLoadError.bind(d),
                    d
                }
                return ac(b, a),
                b.prototype.prepare = function() {
                    var a = arguments.length <= 0 || void 0 === arguments[0] ? null : arguments[0]
                      , b = !(arguments.length <= 1 || void 0 === arguments[1]) && arguments[1]
                      , c = !b && !this._source && !!this._config.deferLoad;
                    if (a) {
                        var d = a.src || a.url || a.data || a
                          , e = gc.getSupportedFile(d) || this._config.src;
                        this._config = Object.assign(this._config, a, {
                            src: e
                        })
                    }
                    return this._source && this._data && this._data.tagName ? this._source.load(this._config.src) : (this._loader = new s(this._config.src,c),
                    this._loader.audioContext = this._config.asMediaElement || this._context.isFake ? null : this._context,
                    this._loader.isTouchLocked = this._isTouchLocked,
                    this._loader.once("loaded", this._onLoad),
                    this._loader.on("error", this._onLoadError)),
                    this
                }
                ,
                b.prototype.load = function() {
                    var a = arguments.length <= 0 || void 0 === arguments[0] ? null : arguments[0];
                    return this.stop(),
                    this._source = null,
                    this._loader && this._loader.destroy(),
                    this.prepare(a, !0),
                    this._loader.start(),
                    this
                }
                ,
                b.prototype.play = function(a, b) {
                    var c = this;
                    return !this._source || this._isTouchLocked ? (this._playWhenReady = function() {
                        c._source && c.play(a, b)
                    }
                    ,
                    this._config.deferLoad && (this._loader || this.prepare(null, !0),
                    this._loader.start(!0)),
                    this) : (this._playWhenReady = null,
                    this._effects.setSource(this._source.sourceNode),
                    this._context.isFake && (this.volume = this._gain.gain.value),
                    this._source.play(a, b),
                    this._source.hasOwnProperty("loop") && (this._source.loop = this._loop),
                    this.emit("play", this),
                    this)
                }
                ,
                b.prototype.pause = function() {
                    return this._source && this._source.pause(),
                    this.emit("pause", this),
                    this
                }
                ,
                b.prototype.stop = function(a) {
                    return this._source && this._source.stop(a || 0),
                    this.emit("stop", this),
                    this
                }
                ,
                b.prototype.seek = function(a) {
                    return this._source && (this._source.stop(),
                    this.play(0, this._source.duration * a)),
                    this
                }
                ,
                b.prototype.fade = function(a) {
                    var b = arguments.length <= 1 || void 0 === arguments[1] ? 1 : arguments[1];
                    if (!this._source)
                        return this;
                    var c = this._gain.gain;
                    if (this._context && !this._context.isFake) {
                        var d = this._context.currentTime;
                        c.cancelScheduledValues(d),
                        c.setValueAtTime(c.value, d),
                        c.linearRampToValueAtTime(a, d + b)
                    } else
                        "function" == typeof this._source.fade && (this._source.fade(a, b),
                        c.value = a);
                    return this.emit("fade", this, a),
                    this
                }
                ,
                b.prototype.unload = function() {
                    this._source && this._source.destroy(),
                    this._loader && this._loader.destroy(),
                    this._data = null,
                    this._playWhenReady = null,
                    this._source = null,
                    this._loader = null,
                    this._config.deferLoad = !0,
                    this.emit("unload", this)
                }
                ,
                b.prototype.reload = function() {
                    return this.load(null, !0)
                }
                ,
                b.prototype.destroy = function() {
                    this._source && this._source.destroy(),
                    this._effects && this._effects.destroy(),
                    this._gain && this._gain.disconnect(),
                    this._loader && (this._loader.off("loaded"),
                    this._loader.off("error"),
                    this._loader.destroy()),
                    this._gain = null,
                    this._context = null,
                    this._destination = null,
                    this._data = null,
                    this._playWhenReady = null,
                    this._source = null,
                    this._effects = null,
                    this._loader = null,
                    this._config = null,
                    this.emit("destroy", this),
                    this.off()
                }
                ,
                b.prototype.waveform = function(a) {
                    var b = this;
                    return this._wave || (this._wave = mc.waveform()),
                    this._data || this.once("ready", function() {
                        return b._wave(b._data, a)
                    }),
                    this._wave(this._data, a)
                }
                ,
                b.prototype._createSource = function(a) {
                    var b = gc.isAudioBuffer(a);
                    if (b || gc.isMediaElement(a)) {
                        var c = b ? t : C;
                        this._source = new B(c,a,this._context,this._onEnded),
                        this._source.singlePlay = !!this._config.singlePlay
                    } else if (gc.isMediaStream(a))
                        this._source = new D(a,this._context);
                    else {
                        if (!gc.isOscillatorType(a && a.type || a))
                            throw new Error("Cannot detect data type: " + a);
                        this._source = new E(a.type || a,this._context)
                    }
                    this._effects.setSource(this._source.sourceNode),
                    this.emit("ready", this),
                    this._playWhenReady && this._playWhenReady()
                }
                ,
                b.prototype._onEnded = function() {
                    this.emit("ended", this)
                }
                ,
                b.prototype._onLoad = function(a) {
                    this._data = a,
                    this.emit("loaded", this),
                    this._createSource(a)
                }
                ,
                b.prototype._onLoadError = function(a) {
                    this.emit("error", this, a)
                }
                ,
                _b(b, [{
                    key: "currentTime",
                    get: function() {
                        return this._source ? this._source.currentTime : 0
                    },
                    set: function(a) {
                        this._source && this._source.stop(),
                        this.play(0, a)
                    }
                }, {
                    key: "context",
                    get: function() {
                        return this._context
                    }
                }, {
                    key: "data",
                    get: function() {
                        return this._data
                    },
                    set: function(a) {
                        a && (this._data = a,
                        this._createSource(a))
                    }
                }, {
                    key: "duration",
                    get: function() {
                        return this._source ? this._source.duration : 0
                    }
                }, {
                    key: "effects",
                    get: function() {
                        return this._effects._nodes
                    },
                    set: function(a) {
                        this._effects.removeAll().add(a)
                    }
                }, {
                    key: "fx",
                    get: function() {
                        return this.effects
                    },
                    set: function(a) {
                        this.effects = a
                    }
                }, {
                    key: "ended",
                    get: function() {
                        return !!this._source && this._source.ended
                    }
                }, {
                    key: "frequency",
                    get: function() {
                        return this._source ? this._source.frequency : 0
                    },
                    set: function(a) {
                        this._source && this._source.hasOwnProperty("frequency") && (this._source.frequency = a)
                    }
                }, {
                    key: "gain",
                    get: function() {
                        return this._gain
                    }
                }, {
                    key: "groupVolume",
                    get: function() {
                        return this._source.groupVolume
                    },
                    set: function(a) {
                        this._source && this._source.hasOwnProperty("groupVolume") && (this._source.groupVolume = a)
                    }
                }, {
                    key: "isTouchLocked",
                    set: function(a) {
                        this._isTouchLocked = a,
                        this._loader && (this._loader.isTouchLocked = a),
                        !a && this._playWhenReady && this._playWhenReady()
                    }
                }, {
                    key: "loader",
                    get: function() {
                        return this._loader
                    }
                }, {
                    key: "loop",
                    get: function() {
                        return this._loop
                    },
                    set: function(a) {
                        this._loop = !!a,
                        this._source && this._source.hasOwnProperty("loop") && this._source.loop !== this._loop && (this._source.loop = this._loop)
                    }
                }, {
                    key: "singlePlay",
                    get: function() {
                        return this._config.singlePlay
                    },
                    set: function(a) {
                        this._config.singlePlay = a,
                        this._source.singlePlay = a
                    }
                }, {
                    key: "config",
                    get: function() {
                        return this._config
                    }
                }, {
                    key: "paused",
                    get: function() {
                        return !!this._source && this._source.paused
                    }
                }, {
                    key: "playing",
                    get: function() {
                        return !!this._source && this._source.playing
                    }
                }, {
                    key: "playbackRate",
                    get: function() {
                        return this._playbackRate
                    },
                    set: function(a) {
                        this._playbackRate = a,
                        this._source && (this._source.playbackRate = a)
                    }
                }, {
                    key: "progress",
                    get: function() {
                        return this._source ? this._source.progress || 0 : 0
                    }
                }, {
                    key: "sourceInfo",
                    get: function() {
                        return this._source && this._source.info ? this._source.info : {}
                    }
                }, {
                    key: "sourceNode",
                    get: function() {
                        return this._source ? this._source.sourceNode : null
                    }
                }, {
                    key: "volume",
                    get: function() {
                        return this._gain.gain.value
                    },
                    set: function(a) {
                        if (A(a)) {
                            a = Math.min(Math.max(a, 0), 1);
                            var b = this._gain.gain;
                            if (this._context && !this._context.isFake) {
                                var c = this._context.currentTime;
                                b.cancelScheduledValues(c),
                                b.value = a,
                                b.setValueAtTime(a, c)
                            } else
                                b.value = a,
                                this._source && this._source.hasOwnProperty("volume") && (this._source.volume = a)
                        }
                    }
                }, {
                    key: "userData",
                    get: function() {
                        return {}
                    }
                }]),
                b
            }(kc);
            nc.__source = {
                BufferSource: t,
                MediaSource: C,
                MicrophoneSource: D,
                OscillatorSource: E
            };
            var oc, pc, qc, rc, sc, tc, uc, vc, wc, xc, yc = new m(Xb,Xb.destination), zc = Yb.handleTouchLock(Xb, function() {
                zc = !1,
                yc.sounds.forEach(function(a) {
                    return a.isTouchLocked = !1
                })
            });
            !function() {
                function a() {
                    yc.sounds.forEach(function(a) {
                        a.playing && (a.pause(),
                        c.push(a))
                    })
                }
                function b() {
                    for (; c.length; )
                        c.pop().play()
                }
                var c = [];
                Yb.handlePageVisibility(a, b)
            }();
            var Ac = (wc = {
                canPlay: gc.canPlay,
                context: Xb,
                create: M,
                createGroup: I,
                createSound: M,
                destroyAll: O,
                destroy: N,
                effects: yc.effects,
                extensions: gc.extensions,
                fade: R,
                file: gc,
                gain: yc.gain,
                getOfflineContext: mc.getOfflineContext,
                get: H,
                getSound: H,
                group: I,
                hasWebAudio: !Xb.isFake,
                isSupported: gc.extensions.length > 0,
                load: L,
                log: function() {
                    return G(Ac)
                },
                mute: P,
                pause: W,
                pauseAll: S,
                play: V,
                register: Y,
                resumeAll: T,
                stop: X,
                stopAll: U,
                unMute: Q,
                utils: mc,
                VERSION: "2.0.0"
            },
            oc = "effects",
            xc = {},
            xc[oc] = xc[oc] || {},
            xc[oc].get = function() {
                return yc.effects
            }
            ,
            pc = "effects",
            xc[pc] = xc[pc] || {},
            xc[pc].set = function(a) {
                yc.effects.removeAll().add(a)
            }
            ,
            qc = "fx",
            xc[qc] = xc[qc] || {},
            xc[qc].get = function() {
                return this.effects
            }
            ,
            rc = "fx",
            xc[rc] = xc[rc] || {},
            xc[rc].set = function(a) {
                this.effects = a
            }
            ,
            sc = "isTouchLocked",
            xc[sc] = xc[sc] || {},
            xc[sc].get = function() {
                return zc
            }
            ,
            tc = "sounds",
            xc[tc] = xc[tc] || {},
            xc[tc].get = function() {
                return yc.sounds.slice(0)
            }
            ,
            uc = "volume",
            xc[uc] = xc[uc] || {},
            xc[uc].get = function() {
                return yc.volume
            }
            ,
            vc = "volume",
            xc[vc] = xc[vc] || {},
            xc[vc].set = function(a) {
                yc.volume = a
            }
            ,
            wc.__test = {
                Effects: hc,
                Group: m,
                Sound: nc
            },
            function(a, b) {
                for (var c in b) {
                    var d = b[c];
                    d.configurable = d.enumerable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, c, d)
                }
            }(wc, xc),
            wc)
              , Bc = function() {
                function a() {
                    var b = arguments.length <= 0 || void 0 === arguments[0] ? null : arguments[0];
                    $b(this, a),
                    this._in = b || this.context.createGain(),
                    this._out = b || this.context.createGain(),
                    b && (this._node = b)
                }
                return a.prototype.connect = function(a) {
                    this._out.connect(a._in || a)
                }
                ,
                a.prototype.disconnect = function() {
                    for (var a = arguments.length, b = Array(a), c = 0; c < a; c++)
                        b[c] = arguments[c];
                    this._out.disconnect(b)
                }
                ,
                a.prototype.setSafeParamValue = function(a, b) {
                    A(b) && (a.value = b)
                }
                ,
                a.prototype.update = function() {
                    throw new Error("update must be overridden")
                }
                ,
                _b(a, [{
                    key: "context",
                    get: function() {
                        return Xb
                    }
                }, {
                    key: "numberOfInputs",
                    get: function() {
                        return 1
                    }
                }, {
                    key: "numberOfOutputs",
                    get: function() {
                        return 1
                    }
                }, {
                    key: "channelCount",
                    get: function() {
                        return 1
                    }
                }, {
                    key: "channelCountMode",
                    get: function() {
                        return "max"
                    }
                }, {
                    key: "channelInterpretation",
                    get: function() {
                        return "speakers"
                    }
                }]),
                a
            }()
              , Cc = function(a) {
                function b() {
                    var c = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0]
                      , d = c.fftSize
                      , e = void 0 === d ? 2048 : d
                      , f = c.minDecibels
                      , g = void 0 === f ? -100 : f
                      , h = c.maxDecibels
                      , i = void 0 === h ? -30 : h
                      , j = c.smoothing
                      , k = void 0 === j ? .9 : j
                      , l = c.useFloats
                      , m = void 0 !== l && l;
                    $b(this, b);
                    var n = bc(this, a.call(this, Ac.context.createAnalyser()));
                    return n._useFloats = !!m,
                    n._waveform = null,
                    n._frequencies = null,
                    n._node.fftSize = e,
                    n.update({
                        minDecibels: g,
                        maxDecibels: i,
                        smoothing: k
                    }),
                    n
                }
                return ac(b, a),
                b.prototype.update = function(a) {
                    var b = a.minDecibels
                      , c = a.maxDecibels
                      , d = a.smoothing;
                    A(d) && (this._node.smoothingTimeConstant = d),
                    A(b) && (this._node.minDecibels = b),
                    A(c) && (this._node.maxDecibels = c)
                }
                ,
                b.prototype.getWaveform = function() {
                    var a = this._useFloats && this._node.getFloatTimeDomainData;
                    return this._waveform || (this._waveform = this._createArray(a, this._node.fftSize)),
                    a ? this._node.getFloatTimeDomainData(this._waveform) : this._node.getByteTimeDomainData(this._waveform),
                    this._waveform
                }
                ,
                b.prototype.getFrequencies = function() {
                    var a = this._useFloats && this._node.getFloatFrequencyData;
                    return this._frequencies || (this._frequencies = this._createArray(a, this._node.frequencyBinCount)),
                    a ? this._node.getFloatFrequencyData(this._frequencies) : this._node.getByteFrequencyData(this._frequencies),
                    this._frequencies
                }
                ,
                b.prototype.getAmplitude = function(a) {
                    this._amplitudeWorker || this._createAmplitudeAnalyser(),
                    this._amplitudeCallback = a || this._amplitudeCallback;
                    var b = new Float32Array(this._node.fftSize);
                    b.set(this.getFrequencies(!0)),
                    this._amplitudeWorker.postMessage({
                        sum: 0,
                        length: b.byteLength,
                        numSamples: this._node.fftSize / 2,
                        b: b.buffer
                    }, [b.buffer])
                }
                ,
                b.prototype.getPitch = function(a) {
                    this._pitchWorker || this._createPitchAnalyser(),
                    this._pitchCallback = a || this._pitchCallback;
                    var b = new Float32Array(this._node.fftSize);
                    b.set(this.getWaveform(!0)),
                    this._pitchWorker.postMessage({
                        sampleRate: Ac.context.sampleRate,
                        b: b.buffer
                    }, [b.buffer])
                }
                ,
                b.prototype._createArray = function(a, b) {
                    return a ? new Float32Array(b) : new Uint8Array(b)
                }
                ,
                b.prototype._createAmplitudeAnalyser = function() {
                    var a = this
                      , b = new Blob(["onmessage = function(e) {\n                var data = e.data;\n                var f = new Float32Array(data.b);\n                for (var i = 0; i < f.length; i++) {\n                    data.sum += f[i];\n                }\n                data.sum /= f.length;\n                postMessage(Math.max(1.0 - (data.sum / data.numSamples * -1.0), 0));\n            };"])
                      , c = URL.createObjectURL(b);
                    this._amplitudeWorker = new Worker(c),
                    this._amplitudeWorker.onmessage = function(b) {
                        a._amplitudeCallback && a._amplitudeCallback(b.data)
                    }
                }
                ,
                b.prototype._createPitchAnalyser = function() {
                    var a = this
                      , b = new Blob(["onmessage = function(e) {\n                var data = e.data;\n                var sampleRate = data.sampleRate;\n                var buf = new Float32Array(data.b);\n                var SIZE = buf.length;\n                var MAX_SAMPLES = Math.floor(SIZE / 2);\n                var bestOffset = -1;\n                var bestCorrel = 0;\n                var rms = 0;\n                var foundGoodCorrelation = false;\n                var correls = new Array(MAX_SAMPLES);\n                for (var i = 0; i < SIZE; i++) {\n                    var val = buf[i];\n                    rms += val * val;\n                }\n                rms = Math.sqrt(rms / SIZE);\n                if (rms < 0.01) {\n                    postMessage(-1);\n                } else {\n                    var lastCorrelation = 1;\n                    for (var offset = 0; offset < MAX_SAMPLES; offset++) {\n                        var correl = 0;\n                        for (var i = 0; i < MAX_SAMPLES; i++) {\n                            correl += Math.abs(buf[i] - buf[i + offset]);\n                        }\n                        correl = 1 - correl / MAX_SAMPLES;\n                        correls[offset] = correl;\n                        if (correl > 0.9 && correl > lastCorrelation) {\n                            foundGoodCorrelation = true;\n                            if (correl > bestCorrel) {\n                                bestCorrel = correl;\n                                bestOffset = offset;\n                            }\n                        } else if (foundGoodCorrelation) {\n                            var shift = (correls[bestOffset + 1] - correls[bestOffset - 1]) / correls[bestOffset];\n                            postMessage(sampleRate / (bestOffset + 8 * shift));\n                        }\n                        lastCorrelation = correl;\n                    }\n                    if (bestCorrel > 0.01) {\n                        postMessage(sampleRate / bestOffset);\n                    } else {\n                        postMessage(-1);\n                    }\n                }\n            };"])
                      , c = URL.createObjectURL(b);
                    this._pitchWorker = new Worker(c);
                    var d = ["C", "C#", "D", "D#", "E", "F", "F#", "G", "G#", "A", "A#", "B"]
                      , e = {
                        hertz: 0,
                        note: "",
                        noteIndex: 0,
                        detuneCents: 0,
                        detune: ""
                    };
                    this._pitchWorker.onmessage = function(b) {
                        if (a._pitchCallback) {
                            var c = b.data;
                            if (-1 !== c) {
                                var f = Z(c)
                                  , g = _(c, f);
                                e.hertz = c,
                                e.noteIndex = f % 12,
                                e.note = d[f % 12],
                                e.detuneCents = g,
                                e.detune = 0 === g ? "" : g < 0 ? "flat" : "sharp"
                            }
                            a._pitchCallback(e)
                        }
                    }
                }
                ,
                _b(b, [{
                    key: "frequencyBinCount",
                    get: function() {
                        return this._node.frequencyBinCount
                    }
                }, {
                    key: "maxDecibels",
                    get: function() {
                        return this._node.maxDecibels
                    },
                    set: function(a) {
                        A(a) && (this._node.maxDecibels = a)
                    }
                }, {
                    key: "minDecibels",
                    get: function() {
                        return this._node.minDecibels
                    },
                    set: function(a) {
                        A(a) && (this._node.minDecibels = a)
                    }
                }, {
                    key: "smoothing",
                    get: function() {
                        return this._node.smoothingTimeConstant
                    },
                    set: function(a) {
                        A(a) && (this._node.smoothingTimeConstant = a)
                    }
                }]),
                b
            }(Bc);
            Ac.register("analyser", function(a) {
                return new Cc(a)
            });
            var Dc = function(a) {
                function b() {
                    var c = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0]
                      , d = c.attack
                      , e = void 0 === d ? .003 : d
                      , f = c.knee
                      , g = void 0 === f ? 30 : f
                      , h = c.ratio
                      , i = void 0 === h ? 12 : h
                      , j = c.release
                      , k = void 0 === j ? .25 : j
                      , l = c.threshold
                      , m = void 0 === l ? -24 : l;
                    $b(this, b);
                    var n = bc(this, a.call(this, Ac.context.createDynamicsCompressor()));
                    return n.update({
                        threshold: m,
                        knee: g,
                        ratio: i,
                        attack: e,
                        release: k
                    }),
                    n
                }
                return ac(b, a),
                b.prototype.update = function(a) {
                    this.setSafeParamValue(this._node.threshold, a.threshold),
                    this.setSafeParamValue(this._node.knee, a.knee),
                    this.setSafeParamValue(this._node.ratio, a.ratio),
                    this.setSafeParamValue(this._node.attack, a.attack),
                    this.setSafeParamValue(this._node.release, a.release)
                }
                ,
                _b(b, [{
                    key: "threshold",
                    get: function() {
                        return this._node.threshold.value
                    },
                    set: function(a) {
                        this.setSafeParamValue(this._node.threshold, a)
                    }
                }, {
                    key: "knee",
                    get: function() {
                        return this._node.knee.value
                    },
                    set: function(a) {
                        this.setSafeParamValue(this._node.knee, a)
                    }
                }, {
                    key: "ratio",
                    get: function() {
                        return this._node.ratio.value
                    },
                    set: function(a) {
                        this.setSafeParamValue(this._node.ratio, a)
                    }
                }, {
                    key: "attack",
                    get: function() {
                        return this._node.attack.value
                    },
                    set: function(a) {
                        this.setSafeParamValue(this._node.attack, a)
                    }
                }, {
                    key: "release",
                    get: function() {
                        return this._node.release.value
                    },
                    set: function(a) {
                        this.setSafeParamValue(this._node.release, a)
                    }
                }]),
                b
            }(Bc);
            Ac.register("compressor", function(a) {
                return new Dc(a)
            });
            var Ec = function(a) {
                function b() {
                    var c = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0]
                      , d = c.impulse;
                    $b(this, b);
                    var e = bc(this, a.call(this));
                    return e._node = Ac.context.createConvolver(),
                    e._in.connect(e._out),
                    e._loader = null,
                    e.update({
                        impulse: d
                    }),
                    e
                }
                return ac(b, a),
                b.prototype._load = function(a) {
                    var b = this;
                    Ac.context.isFake || (this._loader && this._loader.destroy(),
                    this._loader = new s(a),
                    this._loader.audioContext = Ac.context,
                    this._loader.once("complete", function(a) {
                        return b.update({
                            impulse: a
                        })
                    }),
                    this._loader.once("error", function(a) {}),
                    this._loader.start())
                }
                ,
                b.prototype.update = function(a) {
                    var b = this
                      , c = a.impulse;
                    return c ? gc.isAudioBuffer(c) ? (this._node.buffer = c,
                    this._in.disconnect(),
                    this._in.connect(this._node),
                    this._node.connect(this._out),
                    this) : c instanceof nc ? (c.data ? this.update({
                        impulse: c.data
                    }) : c.once("ready", function(a) {
                        return b.update({
                            impulse: a.data
                        })
                    }),
                    this) : ((gc.isURL(c) || gc.isArrayBuffer(c)) && this._load(c),
                    this) : this
                }
                ,
                _b(b, [{
                    key: "impulse",
                    get: function() {
                        return this._node.buffer
                    },
                    set: function(a) {
                        this.update({
                            impulse: a
                        })
                    }
                }]),
                b
            }(Bc);
            Ac.register("convolver", function(a) {
                return new Ec(a)
            });
            var Fc = function(a) {
                function b() {
                    var c = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0]
                      , d = c.level
                      , e = void 0 === d ? 1 : d
                      , f = c.samples
                      , g = void 0 === f ? 22050 : f
                      , h = c.oversample
                      , i = void 0 === h ? "none" : h;
                    $b(this, b);
                    var j = bc(this, a.call(this, Ac.context.createWaveShaper()));
                    return j._node.oversample = i || "none",
                    j._samples = g || 22050,
                    j._curve = new Float32Array(j._samples),
                    j._level,
                    j.update({
                        level: e
                    }),
                    j
                }
                return ac(b, a),
                b.prototype.update = function(a) {
                    var b = a.level;
                    if (b !== this._level && A(b)) {
                        if (b <= 0)
                            return void (this._node.curve = null);
                        for (var c = 100 * b, d = Math.PI / 180, e = 2 / this._samples, f = void 0, g = 0; g < this._samples; ++g)
                            f = g * e - 1,
                            this._curve[g] = (3 + c) * f * 20 * d / (Math.PI + c * Math.abs(f));
                        this._level = b,
                        this._node.curve = this._curve
                    }
                }
                ,
                _b(b, [{
                    key: "level",
                    get: function() {
                        return this._level
                    },
                    set: function(a) {
                        this.update({
                            level: a
                        })
                    }
                }]),
                b
            }(Bc);
            Ac.register("distortion", function(a) {
                return new Fc(a)
            });
            var Gc = function(a) {
                function b() {
                    var c = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0]
                      , d = c.delay
                      , e = void 0 === d ? .5 : d
                      , f = c.feedback
                      , g = void 0 === f ? .5 : f;
                    $b(this, b);
                    var h = bc(this, a.call(this));
                    return h._delay = h.context.createDelay(),
                    h._feedback = h.context.createGain(),
                    h._in.connect(h._delay),
                    h._in.connect(h._out),
                    h._delay.connect(h._feedback),
                    h._feedback.connect(h._delay),
                    h._feedback.connect(h._out),
                    h.delay = e,
                    h.feedback = g,
                    h
                }
                return ac(b, a),
                b.prototype.update = function(a) {
                    this.delay = a.delay,
                    this.feedback = a.feedback
                }
                ,
                _b(b, [{
                    key: "delay",
                    get: function() {
                        return this._delay.delayTime.value
                    },
                    set: function(a) {
                        this.setSafeParamValue(this._delay.delayTime, a)
                    }
                }, {
                    key: "feedback",
                    get: function() {
                        return this._feedback.gain.value
                    },
                    set: function(a) {
                        this.setSafeParamValue(this._feedback.gain, a)
                    }
                }]),
                b
            }(Bc);
            Ac.register("echo", function(a) {
                return new Gc(a)
            });
            var Hc = 40
              , Ic = Ac.context.sampleRate / 2
              , Jc = function(a) {
                function b() {
                    var c = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0]
                      , d = c.type
                      , e = void 0 === d ? "lowpass" : d
                      , f = c.frequency
                      , g = void 0 === f ? 1e3 : f
                      , h = c.detune
                      , i = void 0 === h ? 0 : h
                      , j = c.q
                      , k = void 0 === j ? 0 : j
                      , l = c.gain
                      , m = void 0 === l ? 1 : l
                      , n = c.peak
                      , o = void 0 === n ? 0 : n
                      , p = c.boost
                      , q = void 0 === p ? 0 : p
                      , r = c.width
                      , s = void 0 === r ? 100 : r
                      , t = c.sharpness
                      , u = void 0 === t ? 0 : t;
                    $b(this, b);
                    var v = bc(this, a.call(this, Ac.context.createBiquadFilter()));
                    return v._node.type = e,
                    v.update({
                        frequency: g,
                        gain: m,
                        detune: i,
                        q: k,
                        peak: o,
                        boost: q,
                        width: s,
                        sharpness: u
                    }),
                    v
                }
                return ac(b, a),
                b.prototype.update = function(a) {
                    this.setSafeParamValue(this._node.frequency, a.frequency),
                    this.setSafeParamValue(this._node.gain, aa(a.boost, a.gain)),
                    this.setSafeParamValue(this._node.detune, a.detune);
                    var b = aa(a.peak, a.width, a.sharpness, a.q);
                    this.setSafeParamValue(this._node.Q, b)
                }
                ,
                b.prototype.setByPercent = function(a) {
                    var b = a.percent
                      , c = void 0 === b ? .5 : b;
                    this.update({
                        frequency: ba(c)
                    })
                }
                ,
                _b(b, [{
                    key: "type",
                    get: function() {
                        return this._node.type
                    }
                }, {
                    key: "frequency",
                    get: function() {
                        return this._node.frequency.value
                    },
                    set: function(a) {
                        this.setSafeParamValue(this._node.frequency, a)
                    }
                }, {
                    key: "q",
                    get: function() {
                        return this._node.Q.value
                    },
                    set: function(a) {
                        this.setSafeParamValue(this._node.Q, a)
                    }
                }, {
                    key: "Q",
                    get: function() {
                        return this.q
                    },
                    set: function(a) {
                        this.q = a
                    }
                }, {
                    key: "peak",
                    get: function() {
                        return this.q
                    },
                    set: function(a) {
                        this.q = a
                    }
                }, {
                    key: "boost",
                    get: function() {
                        return this.q
                    },
                    set: function(a) {
                        this.q = a
                    }
                }, {
                    key: "width",
                    get: function() {
                        return this.q
                    },
                    set: function(a) {
                        this.q = a
                    }
                }, {
                    key: "sharpness",
                    get: function() {
                        return this.q
                    },
                    set: function(a) {
                        this.q = a
                    }
                }, {
                    key: "gain",
                    get: function() {
                        return this._node.gain.value
                    },
                    set: function(a) {
                        this.setSafeParamValue(this._node.gain, a)
                    }
                }, {
                    key: "detune",
                    get: function() {
                        return this._node.detune.value
                    },
                    set: function(a) {
                        this.setSafeParamValue(this._node.detune, a)
                    }
                }]),
                b
            }(Bc);
            Ac.register("lowpass", function() {
                var a = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0]
                  , b = a.frequency
                  , c = a.peak
                  , d = a.q;
                return new Jc({
                    type: "lowpass",
                    frequency: b,
                    peak: c,
                    q: d
                })
            }),
            Ac.register("highpass", function() {
                var a = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0]
                  , b = a.frequency
                  , c = a.peak
                  , d = a.q;
                return new Jc({
                    type: "highpass",
                    frequency: b,
                    peak: c,
                    q: d
                })
            }),
            Ac.register("lowshelf", function() {
                var a = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0]
                  , b = a.frequency
                  , c = a.boost
                  , d = a.gain;
                return new Jc({
                    type: "lowshelf",
                    frequency: b,
                    boost: c,
                    gain: d,
                    q: 0
                })
            }),
            Ac.register("highshelf", function() {
                var a = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0]
                  , b = a.frequency
                  , c = a.boost
                  , d = a.gain;
                return new Jc({
                    type: "highshelf",
                    frequency: b,
                    boost: c,
                    gain: d,
                    q: 0
                })
            }),
            Ac.register("peaking", function() {
                var a = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0]
                  , b = a.frequency
                  , c = a.width
                  , d = a.boost
                  , e = a.gain
                  , f = a.q;
                return new Jc({
                    type: "peaking",
                    frequency: b,
                    width: c,
                    boost: d,
                    gain: e,
                    q: f
                })
            }),
            Ac.register("bandpass", function() {
                var a = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0]
                  , b = a.frequency
                  , c = a.width
                  , d = a.q;
                return new Jc({
                    type: "bandpass",
                    frequency: b,
                    width: c,
                    q: d
                })
            }),
            Ac.register("notch", function() {
                var a = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0]
                  , b = a.frequency
                  , c = a.width
                  , d = a.gain
                  , e = a.q;
                return new Jc({
                    type: "notch",
                    frequency: b,
                    width: c,
                    gain: d,
                    q: e
                })
            }),
            Ac.register("allpass", function() {
                var a = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0]
                  , b = a.frequency
                  , c = a.sharpness
                  , d = a.q;
                return new Jc({
                    type: "allpass",
                    frequency: b,
                    sharpness: c,
                    q: d
                })
            }),
            Ac.register("filter", function(a) {
                return new Jc(a)
            });
            var Kc = function(a) {
                function b() {
                    var c = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0]
                      , d = c.delay
                      , e = void 0 === d ? .005 : d
                      , f = c.feedback
                      , g = void 0 === f ? .5 : f
                      , h = c.frequency
                      , i = void 0 === h ? .002 : h
                      , j = c.gain
                      , k = void 0 === j ? .25 : j;
                    $b(this, b);
                    var l = bc(this, a.call(this));
                    return l._delay = Ac.context.createDelay(),
                    l._feedback = Ac.context.createGain(),
                    l._lfo = Ac.context.createOscillator(),
                    l._gain = Ac.context.createGain(),
                    l._lfo.type = "sine",
                    l._in.connect(l._out),
                    l._in.connect(l._delay),
                    l._delay.connect(l._out),
                    l._delay.connect(l._feedback),
                    l._feedback.connect(l._in),
                    l._lfo.connect(l._gain),
                    l._gain.connect(l._delay.delayTime),
                    l._lfo.start(0),
                    l.update({
                        delay: e,
                        feedback: g,
                        frequency: i,
                        gain: k
                    }),
                    l
                }
                return ac(b, a),
                b.prototype.update = function(a) {
                    this.delay = a.delay,
                    this.frequency = a.frequency,
                    this.gain = a.gain,
                    this.feedback = a.feedback
                }
                ,
                _b(b, [{
                    key: "delay",
                    get: function() {
                        return this._delay.delayTime.value
                    },
                    set: function(a) {
                        this.setSafeParamValue(this._delay.delayTime, a)
                    }
                }, {
                    key: "frequency",
                    get: function() {
                        return this._lfo.frequency.value
                    },
                    set: function(a) {
                        this.setSafeParamValue(this._lfo.frequency, a)
                    }
                }, {
                    key: "gain",
                    get: function() {
                        return this._gain.gain.value
                    },
                    set: function(a) {
                        this.setSafeParamValue(this._gain.gain, a)
                    }
                }, {
                    key: "feedback",
                    get: function() {
                        return this._feedback.gain.value
                    },
                    set: function(a) {
                        this.setSafeParamValue(this._feedback.gain, a)
                    }
                }]),
                b
            }(Bc);
            Ac.register("monoFlanger", function(a) {
                return new Kc(a)
            });
            var Lc = function(a) {
                function b() {
                    var c = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0]
                      , d = c.delay
                      , e = void 0 === d ? .003 : d
                      , f = c.feedback
                      , g = void 0 === f ? .5 : f
                      , h = c.frequency
                      , i = void 0 === h ? .5 : h
                      , j = c.gain
                      , k = void 0 === j ? .005 : j;
                    $b(this, b);
                    var l = bc(this, a.call(this));
                    return l._splitter = Ac.context.createChannelSplitter(2),
                    l._merger = Ac.context.createChannelMerger(2),
                    l._feedbackL = Ac.context.createGain(),
                    l._feedbackR = Ac.context.createGain(),
                    l._lfo = Ac.context.createOscillator(),
                    l._lfoGainL = Ac.context.createGain(),
                    l._lfoGainR = Ac.context.createGain(),
                    l._delayL = Ac.context.createDelay(),
                    l._delayR = Ac.context.createDelay(),
                    l._lfo.type = "sine",
                    l._in.connect(l._splitter),
                    l._splitter.connect(l._delayL, 0),
                    l._splitter.connect(l._delayR, 1),
                    l._delayL.connect(l._feedbackL),
                    l._delayR.connect(l._feedbackR),
                    l._feedbackL.connect(l._delayR),
                    l._feedbackR.connect(l._delayL),
                    l._delayL.connect(l._merger, 0, 0),
                    l._delayR.connect(l._merger, 0, 1),
                    l._merger.connect(l._out),
                    l._in.connect(l._out),
                    l._lfo.connect(l._lfoGainL),
                    l._lfo.connect(l._lfoGainR),
                    l._lfoGainL.connect(l._delayL.delayTime),
                    l._lfoGainR.connect(l._delayR.delayTime),
                    l._lfo.start(0),
                    l.update({
                        delay: e,
                        feedback: g,
                        frequency: i,
                        gain: k
                    }),
                    l
                }
                return ac(b, a),
                b.prototype.update = function(a) {
                    this.delay = a.delay,
                    this.frequency = a.frequency,
                    this.gain = a.gain,
                    this.feedback = a.feedback
                }
                ,
                _b(b, [{
                    key: "delay",
                    get: function() {
                        return this._delayL.delayTime.value
                    },
                    set: function(a) {
                        this.setSafeParamValue(this._delayL.delayTime, a),
                        this._delayR.delayTime.value = this._delayL.delayTime.value
                    }
                }, {
                    key: "frequency",
                    get: function() {
                        return this._lfo.frequency.value
                    },
                    set: function(a) {
                        this.setSafeParamValue(this._lfo.frequency, a)
                    }
                }, {
                    key: "gain",
                    get: function() {
                        return this._lfoGainL.gain.value
                    },
                    set: function(a) {
                        this.setSafeParamValue(this._lfoGainL.gain, a),
                        this._lfoGainR.gain.value = 0 - this._lfoGainL.gain.value
                    }
                }, {
                    key: "feedback",
                    get: function() {
                        return this._feedbackL.gain.value
                    },
                    set: function(a) {
                        this.setSafeParamValue(this._feedbackL.gain, a),
                        this._feedbackR.gain.value = this._feedbackL.gain.value
                    }
                }]),
                b
            }(Bc);
            Ac.register("stereoFlanger", function(a) {
                return new Lc(a)
            }),
            Ac.register("flanger", function() {
                var a = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0];
                return a.stereo ? new Lc(a) : new Kc(a)
            });
            var Mc = {
                panningModel: "HRTF",
                distanceModel: "linear",
                refDistance: 1,
                maxDistance: 1e3,
                rolloffFactor: 1,
                coneInnerAngle: 360,
                coneOuterAngle: 0,
                coneOuterGain: 0
            }
              , Nc = {
                pool: [],
                get: function(a, b, c) {
                    var d = this.pool.length ? this.pool.pop() : {
                        x: 0,
                        y: 0,
                        z: 0
                    };
                    return void 0 !== a && isNaN(a) && "x"in a && "y"in a && "z"in a ? (d.x = da(a.x),
                    d.y = da(a.y),
                    d.z = da(a.z)) : (d.x = da(a),
                    d.y = da(b),
                    d.z = da(c)),
                    d
                },
                dispose: function(a) {
                    this.pool.push(a)
                }
            }
              , Oc = Nc.get(0, 1, 0)
              , Pc = Math.PI / 4
              , Qc = Math.PI / 2
              , Rc = function(a) {
                function b() {
                    var c = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0]
                      , d = c.panningModel
                      , e = c.distanceModel
                      , f = c.refDistance
                      , g = c.maxDistance
                      , h = c.rolloffFactor
                      , i = c.coneInnerAngle
                      , j = c.coneOuterAngle
                      , k = c.coneOuterGain;
                    $b(this, b);
                    var l = bc(this, a.call(this, Ac.context.createPanner()));
                    return l._node.panningModel = d || Mc.panningModel,
                    l._node.distanceModel = e || Mc.distanceModel,
                    l._node.refDistance = ca(f) ? f : Mc.refDistance,
                    l._node.maxDistance = ca(g) ? g : Mc.maxDistance,
                    l._node.rolloffFactor = ca(h) ? h : Mc.rolloffFactor,
                    l._node.coneInnerAngle = ca(i) ? i : Mc.coneInnerAngle,
                    l._node.coneOuterAngle = ca(j) ? j : Mc.coneOuterAngle,
                    l._node.coneOuterGain = ca(k) ? k : Mc.coneOuterGain,
                    l._node.setPosition(0, 0, 0),
                    l._node.setOrientation(1, 0, 0),
                    l.set(0),
                    l
                }
                return ac(b, a),
                b.prototype.update = function(a) {
                    var b = a.x
                      , c = a.y
                      , d = a.z
                      , e = Nc.get(b, c, d);
                    !A(b) || A(c) || A(d) || (b = e.x,
                    b > 1 && (b = 1),
                    b < -1 && (b = -1),
                    b *= Pc,
                    d = b + Qc,
                    d > Qc && (d = Math.PI - d),
                    e.x = Math.sin(b),
                    e.y = 0,
                    e.z = Math.sin(d)),
                    ha(this._node, e)
                }
                ,
                b.prototype.setPosition = function(a, b, c) {
                    ha(this._node, Nc.get(a, b, c))
                }
                ,
                b.prototype.setOrientation = function(a, b, c) {
                    ga(this._node, Nc.get(a, b, c))
                }
                ,
                b.prototype.setListenerPosition = function(a, b, c) {
                    ha(Ac.context.listener, Nc.get(a, b, c))
                }
                ,
                b.prototype.setListenerOrientation = function(a, b, c) {
                    ga(Ac.context.listener, Nc.get(a, b, c))
                }
                ,
                b.prototype.set = function(a, b, c) {
                    return this.update({
                        x: a,
                        y: b,
                        z: c
                    })
                }
                ,
                _b(b, [{
                    key: "defaults",
                    get: function() {
                        return Mc
                    },
                    set: function(a) {
                        Object.assign(Mc, a)
                    }
                }]),
                b
            }(Bc)
              , Sc = Ac.register("panner", function(a) {
                return new Rc(a)
            });
            Object.defineProperties(Sc, {
                defaults: {
                    get: function() {
                        return Mc
                    },
                    set: function(a) {
                        return Object.assign(Mc, a)
                    }
                },
                setListenerPosition: {
                    value: function(a, b, c) {
                        return ha(Ac.context.listener, Nc.get(a, b, c))
                    }
                },
                setListenerOrientation: {
                    value: function(a, b, c) {
                        return ga(Ac.context.listener, Nc.get(a, b, c))
                    }
                }
            });
            var Tc = function(a) {
                function b() {
                    var c = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0]
                      , d = c.stages
                      , e = void 0 === d ? 8 : d
                      , f = c.feedback
                      , g = void 0 === f ? .5 : f
                      , h = c.frequency
                      , i = void 0 === h ? .5 : h
                      , j = c.gain
                      , k = void 0 === j ? 300 : j;
                    $b(this, b);
                    var l = bc(this, a.call(this));
                    l._stages = e || 8,
                    l._feedback = Ac.context.createGain(),
                    l._lfo = Ac.context.createOscillator(),
                    l._lfoGain = Ac.context.createGain(),
                    l._lfo.type = "sine";
                    for (var m = [], n = 0; n < l._stages; n++) {
                        var o = Ac.context.createBiquadFilter();
                        o.type = "allpass",
                        o.frequency.value = 1e3 * n,
                        n > 0 && m[n - 1].connect(o),
                        l._lfoGain.connect(o.frequency),
                        m.push(o)
                    }
                    var p = m[0]
                      , q = m[m.length - 1];
                    return l._in.connect(p),
                    l._in.connect(l._out),
                    q.connect(l._out),
                    q.connect(l._feedback),
                    l._feedback.connect(p),
                    l._lfo.connect(l._lfoGain),
                    l._lfo.start(0),
                    l.update({
                        frequency: i,
                        gain: k,
                        feedback: g
                    }),
                    l
                }
                return ac(b, a),
                b.prototype.update = function(a) {
                    this.frequency = a.frequency,
                    this.gain = a.gain,
                    this.feedback = a.feedback
                }
                ,
                _b(b, [{
                    key: "stages",
                    get: function() {
                        return this._stages
                    }
                }, {
                    key: "frequency",
                    get: function() {
                        return this._lfo.frequency.value
                    },
                    set: function(a) {
                        this.setSafeParamValue(this._lfo.frequency, a)
                    }
                }, {
                    key: "gain",
                    get: function() {
                        return this._lfoGain.gain.value
                    },
                    set: function(a) {
                        this.setSafeParamValue(this._lfoGain.gain, a)
                    }
                }, {
                    key: "feedback",
                    get: function() {
                        return this._feedback.gain.value
                    },
                    set: function(a) {
                        this.setSafeParamValue(this._feedback.gain, a)
                    }
                }]),
                b
            }(Bc);
            Ac.register("phaser", function(a) {
                return new Tc(a)
            });
            var Uc = function(a) {
                function b() {
                    var c = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0]
                      , d = c.time
                      , e = void 0 === d ? 1 : d
                      , f = c.decay
                      , g = void 0 === f ? 5 : f
                      , h = c.reverse
                      , i = void 0 !== h && h;
                    $b(this, b);
                    var j = bc(this, a.call(this));
                    return j._length = 0,
                    j._impulseResponse = null,
                    j._convolver = j.context.createConvolver(),
                    j._in.connect(j._convolver),
                    j._in.connect(j._out),
                    j._convolver.connect(j._out),
                    j._opts = {},
                    j.update({
                        time: e,
                        decay: g,
                        reverse: i
                    }),
                    j
                }
                return ac(b, a),
                b.prototype.update = function(a) {
                    var b = a.time
                      , c = a.decay
                      , d = a.reverse
                      , e = !1;
                    b !== this._opts.time && A(b) && (this._opts.time = b,
                    e = !0),
                    c !== this._opts.decay && A(c) && (this._opts.decay = c,
                    e = !0),
                    ca(d) && d !== this._reverse && (this._opts.reverse = d,
                    e = !0),
                    e && (this._opts.buffer = b <= 0 ? null : ia(this._opts),
                    this._convolver.buffer = this._opts.buffer)
                }
                ,
                _b(b, [{
                    key: "time",
                    get: function() {
                        return this._opts.time
                    },
                    set: function(a) {
                        this.update({
                            time: a
                        })
                    }
                }, {
                    key: "decay",
                    get: function() {
                        return this._opts.decay
                    },
                    set: function(a) {
                        this.update({
                            decay: a
                        })
                    }
                }, {
                    key: "reverse",
                    get: function() {
                        return this._opts.reverse
                    },
                    set: function(a) {
                        this.update({
                            reverse: a
                        })
                    }
                }]),
                b
            }(Bc);
            Ac.register("reverb", function(a) {
                return new Uc(a)
            }),
            Ac.register("microphone", ja, Ac.utils),
            Ac.register("recorder", ka, Ac.utils),
            Ac.register("waveform", la, Ac.utils);
            var Vc = Math.PI / 2
              , Wc = 2 * Math.PI;
            return Ac.register("waveformer", ma, Ac.utils),
            Ac
        })
    }
    , {}],
    151: [function(a, b, c) {
        "use strict";
        var d = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(a) {
            return typeof a
        }
        : function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
        ;
        !function(a, e) {
            "object" === (void 0 === c ? "undefined" : d(c)) && void 0 !== b ? b.exports = e() : "function" == typeof define && define.amd ? define(e) : a.Stats = e()
        }(void 0, function() {
            var a = function a() {
                function b(a) {
                    return e.appendChild(a.dom),
                    a
                }
                function c(a) {
                    for (var b = 0; b < e.children.length; b++)
                        e.children[b].style.display = b === a ? "block" : "none";
                    d = a
                }
                var d = 0
                  , e = document.createElement("div");
                e.style.cssText = "position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",
                e.addEventListener("click", function(a) {
                    a.preventDefault(),
                    c(++d % e.children.length)
                }, !1);
                var f = (performance || Date).now()
                  , g = f
                  , h = 0
                  , i = b(new a.Panel("FPS","#0ff","#002"))
                  , j = b(new a.Panel("MS","#0f0","#020"));
                if (self.performance && self.performance.memory)
                    var k = b(new a.Panel("MB","#f08","#201"));
                return c(0),
                {
                    REVISION: 16,
                    dom: e,
                    addPanel: b,
                    showPanel: c,
                    begin: function() {
                        f = (performance || Date).now()
                    },
                    end: function() {
                        h++;
                        var a = (performance || Date).now();
                        if (j.update(a - f, 200),
                        a > g + 1e3 && (i.update(1e3 * h / (a - g), 100),
                        g = a,
                        h = 0,
                        k)) {
                            var b = performance.memory;
                            k.update(b.usedJSHeapSize / 1048576, b.jsHeapSizeLimit / 1048576)
                        }
                        return a
                    },
                    update: function() {
                        f = this.end()
                    },
                    domElement: e,
                    setMode: c
                }
            };
            return a.Panel = function(a, b, c) {
                var d = 1 / 0
                  , e = 0
                  , f = Math.round
                  , g = f(window.devicePixelRatio || 1)
                  , h = 80 * g
                  , i = 48 * g
                  , j = 3 * g
                  , k = 2 * g
                  , l = 3 * g
                  , m = 15 * g
                  , n = 74 * g
                  , o = 30 * g
                  , p = document.createElement("canvas");
                p.width = h,
                p.height = i,
                p.style.cssText = "width:80px;height:48px";
                var q = p.getContext("2d");
                return q.font = "bold " + 9 * g + "px Helvetica,Arial,sans-serif",
                q.textBaseline = "top",
                q.fillStyle = c,
                q.fillRect(0, 0, h, i),
                q.fillStyle = b,
                q.fillText(a, j, k),
                q.fillRect(l, m, n, o),
                q.fillStyle = c,
                q.globalAlpha = .9,
                q.fillRect(l, m, n, o),
                {
                    dom: p,
                    update: function(i, r) {
                        d = Math.min(d, i),
                        e = Math.max(e, i),
                        q.fillStyle = c,
                        q.globalAlpha = 1,
                        q.fillRect(0, 0, h, m),
                        q.fillStyle = b,
                        q.fillText(f(i) + " " + a + " (" + f(d) + "-" + f(e) + ")", j, k),
                        q.drawImage(p, l + g, m, n - g, o, l, m, n - g, o),
                        q.fillRect(l + n - g, m, g, o),
                        q.fillStyle = c,
                        q.globalAlpha = .9,
                        q.fillRect(l + n - g, m, g, f((1 - i / r) * o))
                    }
                }
            }
            ,
            a
        })
    }
    , {}],
    152: [function(a, b, c) {
        "use strict";
        var d = a("three")
          , e = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(d);
        e.OrbitControls = function(a, b) {
            function c() {
                return 2 * Math.PI / 60 / 60 * I.autoRotateSpeed
            }
            function d() {
                return Math.pow(.95, I.zoomSpeed)
            }
            function f(a) {
                Q.theta -= a
            }
            function g(a) {
                Q.phi -= a
            }
            function h(a) {
                I.object instanceof e.PerspectiveCamera ? R /= a : I.object instanceof e.OrthographicCamera ? (I.object.zoom = Math.max(I.minZoom, Math.min(I.maxZoom, I.object.zoom * a)),
                I.object.updateProjectionMatrix(),
                T = !0) : I.enableZoom = !1
            }
            function i(a) {
                I.object instanceof e.PerspectiveCamera ? R *= a : I.object instanceof e.OrthographicCamera ? (I.object.zoom = Math.max(I.minZoom, Math.min(I.maxZoom, I.object.zoom / a)),
                I.object.updateProjectionMatrix(),
                T = !0) : I.enableZoom = !1
            }
            function j(a) {
                U.set(a.clientX, a.clientY)
            }
            function k(a) {
                $.set(a.clientX, a.clientY)
            }
            function l(a) {
                X.set(a.clientX, a.clientY)
            }
            function m(a) {
                V.set(a.clientX, a.clientY),
                W.subVectors(V, U);
                var b = I.domElement === document ? I.domElement.body : I.domElement;
                f(2 * Math.PI * W.x / b.clientWidth * I.rotateSpeed),
                g(2 * Math.PI * W.y / b.clientHeight * I.rotateSpeed),
                U.copy(V),
                I.update()
            }
            function n(a) {
                _.set(a.clientX, a.clientY),
                aa.subVectors(_, $),
                aa.y > 0 ? h(d()) : aa.y < 0 && i(d()),
                $.copy(_),
                I.update()
            }
            function o(a) {
                Y.set(a.clientX, a.clientY),
                Z.subVectors(Y, X),
                da(Z.x, Z.y),
                X.copy(Y),
                I.update()
            }
            function p(a) {}
            function q(a) {
                a.deltaY < 0 ? i(d()) : a.deltaY > 0 && h(d()),
                I.update()
            }
            function r(a) {
                switch (a.keyCode) {
                case I.keys.UP:
                    da(0, I.keyPanSpeed),
                    I.update();
                    break;
                case I.keys.BOTTOM:
                    da(0, -I.keyPanSpeed),
                    I.update();
                    break;
                case I.keys.LEFT:
                    da(I.keyPanSpeed, 0),
                    I.update();
                    break;
                case I.keys.RIGHT:
                    da(-I.keyPanSpeed, 0),
                    I.update()
                }
            }
            function s(a) {
                U.set(a.touches[0].pageX, a.touches[0].pageY)
            }
            function t(a) {
                var b = a.touches[0].pageX - a.touches[1].pageX
                  , c = a.touches[0].pageY - a.touches[1].pageY
                  , d = Math.sqrt(b * b + c * c);
                $.set(0, d)
            }
            function u(a) {
                X.set(a.touches[0].pageX, a.touches[0].pageY)
            }
            function v(a) {
                V.set(a.touches[0].pageX, a.touches[0].pageY),
                W.subVectors(V, U);
                var b = I.domElement === document ? I.domElement.body : I.domElement;
                f(2 * Math.PI * W.x / b.clientWidth * I.rotateSpeed),
                g(2 * Math.PI * W.y / b.clientHeight * I.rotateSpeed),
                U.copy(V),
                I.update()
            }
            function w(a) {
                var b = a.touches[0].pageX - a.touches[1].pageX
                  , c = a.touches[0].pageY - a.touches[1].pageY
                  , e = Math.sqrt(b * b + c * c);
                _.set(0, e),
                aa.subVectors(_, $),
                aa.y > 0 ? i(d()) : aa.y < 0 && h(d()),
                $.copy(_),
                I.update()
            }
            function x(a) {
                Y.set(a.touches[0].pageX, a.touches[0].pageY),
                Z.subVectors(Y, X),
                da(Z.x, Z.y),
                X.copy(Y),
                I.update()
            }
            function y(a) {}
            function z(a) {
                if (!1 !== I.enabled) {
                    if (a.preventDefault(),
                    a.button === I.mouseButtons.ORBIT) {
                        if (!1 === I.enableRotate)
                            return;
                        j(a),
                        N = M.ROTATE
                    } else if (a.button === I.mouseButtons.ZOOM) {
                        if (!1 === I.enableZoom)
                            return;
                        k(a),
                        N = M.DOLLY
                    } else if (a.button === I.mouseButtons.PAN) {
                        if (!1 === I.enablePan)
                            return;
                        l(a),
                        N = M.PAN
                    }
                    N !== M.NONE && (document.addEventListener("mousemove", A, !1),
                    document.addEventListener("mouseup", B, !1),
                    I.dispatchEvent(K))
                }
            }
            function A(a) {
                if (!1 !== I.enabled)
                    if (a.preventDefault(),
                    N === M.ROTATE) {
                        if (!1 === I.enableRotate)
                            return;
                        m(a)
                    } else if (N === M.DOLLY) {
                        if (!1 === I.enableZoom)
                            return;
                        n(a)
                    } else if (N === M.PAN) {
                        if (!1 === I.enablePan)
                            return;
                        o(a)
                    }
            }
            function B(a) {
                !1 !== I.enabled && (p(a),
                document.removeEventListener("mousemove", A, !1),
                document.removeEventListener("mouseup", B, !1),
                I.dispatchEvent(L),
                N = M.NONE)
            }
            function C(a) {
                !1 === I.enabled || !1 === I.enableZoom || N !== M.NONE && N !== M.ROTATE || (a.preventDefault(),
                a.stopPropagation(),
                q(a),
                I.dispatchEvent(K),
                I.dispatchEvent(L))
            }
            function D(a) {
                !1 !== I.enabled && !1 !== I.enableKeys && !1 !== I.enablePan && r(a)
            }
            function E(a) {
                if (!1 !== I.enabled) {
                    switch (a.touches.length) {
                    case 1:
                        if (!1 === I.enableRotate)
                            return;
                        s(a),
                        N = M.TOUCH_ROTATE;
                        break;
                    case 2:
                        if (!1 === I.enableZoom)
                            return;
                        t(a),
                        N = M.TOUCH_DOLLY;
                        break;
                    case 3:
                        if (!1 === I.enablePan)
                            return;
                        u(a),
                        N = M.TOUCH_PAN;
                        break;
                    default:
                        N = M.NONE
                    }
                    N !== M.NONE && I.dispatchEvent(K)
                }
            }
            function F(a) {
                if (!1 !== I.enabled)
                    switch (a.preventDefault(),
                    a.stopPropagation(),
                    a.touches.length) {
                    case 1:
                        if (!1 === I.enableRotate)
                            return;
                        if (N !== M.TOUCH_ROTATE)
                            return;
                        v(a);
                        break;
                    case 2:
                        if (!1 === I.enableZoom)
                            return;
                        if (N !== M.TOUCH_DOLLY)
                            return;
                        w(a);
                        break;
                    case 3:
                        if (!1 === I.enablePan)
                            return;
                        if (N !== M.TOUCH_PAN)
                            return;
                        x(a);
                        break;
                    default:
                        N = M.NONE
                    }
            }
            function G(a) {
                !1 !== I.enabled && (y(a),
                I.dispatchEvent(L),
                N = M.NONE)
            }
            function H(a) {
                a.preventDefault()
            }
            this.object = a,
            this.domElement = void 0 !== b ? b : document,
            this.enabled = !0,
            this.target = new e.Vector3,
            this.minDistance = 0,
            this.maxDistance = 1 / 0,
            this.minZoom = 0,
            this.maxZoom = 1 / 0,
            this.minPolarAngle = 0,
            this.maxPolarAngle = Math.PI,
            this.minAzimuthAngle = -1 / 0,
            this.maxAzimuthAngle = 1 / 0,
            this.enableDamping = !1,
            this.dampingFactor = .25,
            this.enableZoom = !0,
            this.zoomSpeed = 1,
            this.enableRotate = !0,
            this.rotateSpeed = 1,
            this.enablePan = !0,
            this.keyPanSpeed = 7,
            this.autoRotate = !1,
            this.autoRotateSpeed = 2,
            this.enableKeys = !0,
            this.keys = {
                LEFT: 37,
                UP: 38,
                RIGHT: 39,
                BOTTOM: 40
            },
            this.mouseButtons = {
                ORBIT: e.MOUSE.LEFT,
                ZOOM: e.MOUSE.MIDDLE,
                PAN: e.MOUSE.RIGHT
            },
            this.target0 = this.target.clone(),
            this.position0 = this.object.position.clone(),
            this.zoom0 = this.object.zoom,
            this.getPolarAngle = function() {
                return P.phi
            }
            ,
            this.getAzimuthalAngle = function() {
                return P.theta
            }
            ,
            this.reset = function() {
                I.target.copy(I.target0),
                I.object.position.copy(I.position0),
                I.object.zoom = I.zoom0,
                I.object.updateProjectionMatrix(),
                I.dispatchEvent(J),
                I.update(),
                N = M.NONE
            }
            ,
            this.update = function() {
                var b = new e.Vector3
                  , d = (new e.Quaternion).setFromUnitVectors(a.up, new e.Vector3(0,1,0))
                  , g = d.clone().inverse()
                  , h = new e.Vector3
                  , i = new e.Quaternion;
                return function() {
                    var a = I.object.position;
                    return b.copy(a).sub(I.target),
                    b.applyQuaternion(d),
                    P.setFromVector3(b),
                    I.autoRotate && N === M.NONE && f(c()),
                    P.theta += Q.theta,
                    P.phi += Q.phi,
                    P.theta = Math.max(I.minAzimuthAngle, Math.min(I.maxAzimuthAngle, P.theta)),
                    P.phi = Math.max(I.minPolarAngle, Math.min(I.maxPolarAngle, P.phi)),
                    P.makeSafe(),
                    P.radius *= R,
                    P.radius = Math.max(I.minDistance, Math.min(I.maxDistance, P.radius)),
                    I.target.add(S),
                    b.setFromSpherical(P),
                    b.applyQuaternion(g),
                    a.copy(I.target).add(b),
                    I.object.lookAt(I.target),
                    !0 === I.enableDamping ? (Q.theta *= 1 - I.dampingFactor,
                    Q.phi *= 1 - I.dampingFactor) : Q.set(0, 0, 0),
                    R = 1,
                    S.set(0, 0, 0),
                    !!(T || h.distanceToSquared(I.object.position) > O || 8 * (1 - i.dot(I.object.quaternion)) > O) && (I.dispatchEvent(J),
                    h.copy(I.object.position),
                    i.copy(I.object.quaternion),
                    T = !1,
                    !0)
                }
            }(),
            this.dispose = function() {
                I.domElement.removeEventListener("contextmenu", H, !1),
                I.domElement.removeEventListener("mousedown", z, !1),
                I.domElement.removeEventListener("wheel", C, !1),
                I.domElement.removeEventListener("touchstart", E, !1),
                I.domElement.removeEventListener("touchend", G, !1),
                I.domElement.removeEventListener("touchmove", F, !1),
                document.removeEventListener("mousemove", A, !1),
                document.removeEventListener("mouseup", B, !1),
                window.removeEventListener("keydown", D, !1)
            }
            ;
            var I = this
              , J = {
                type: "change"
            }
              , K = {
                type: "start"
            }
              , L = {
                type: "end"
            }
              , M = {
                NONE: -1,
                ROTATE: 0,
                DOLLY: 1,
                PAN: 2,
                TOUCH_ROTATE: 3,
                TOUCH_DOLLY: 4,
                TOUCH_PAN: 5
            }
              , N = M.NONE
              , O = 1e-6
              , P = new e.Spherical
              , Q = new e.Spherical
              , R = 1
              , S = new e.Vector3
              , T = !1
              , U = new e.Vector2
              , V = new e.Vector2
              , W = new e.Vector2
              , X = new e.Vector2
              , Y = new e.Vector2
              , Z = new e.Vector2
              , $ = new e.Vector2
              , _ = new e.Vector2
              , aa = new e.Vector2
              , ba = function() {
                var a = new e.Vector3;
                return function(b, c) {
                    a.setFromMatrixColumn(c, 0),
                    a.multiplyScalar(-b),
                    S.add(a)
                }
            }()
              , ca = function() {
                var a = new e.Vector3;
                return function(b, c) {
                    a.setFromMatrixColumn(c, 1),
                    a.multiplyScalar(b),
                    S.add(a)
                }
            }()
              , da = function() {
                var a = new e.Vector3;
                return function(b, c) {
                    var d = I.domElement === document ? I.domElement.body : I.domElement;
                    if (I.object instanceof e.PerspectiveCamera) {
                        var f = I.object.position;
                        a.copy(f).sub(I.target);
                        var g = a.length();
                        g *= Math.tan(I.object.fov / 2 * Math.PI / 180),
                        ba(2 * b * g / d.clientHeight, I.object.matrix),
                        ca(2 * c * g / d.clientHeight, I.object.matrix)
                    } else
                        I.object instanceof e.OrthographicCamera ? (ba(b * (I.object.right - I.object.left) / I.object.zoom / d.clientWidth, I.object.matrix),
                        ca(c * (I.object.top - I.object.bottom) / I.object.zoom / d.clientHeight, I.object.matrix)) : I.enablePan = !1
                }
            }();
            I.domElement.addEventListener("contextmenu", H, !1),
            I.domElement.addEventListener("mousedown", z, !1),
            I.domElement.addEventListener("wheel", C, !1),
            I.domElement.addEventListener("touchstart", E, !1),
            I.domElement.addEventListener("touchend", G, !1),
            I.domElement.addEventListener("touchmove", F, !1),
            window.addEventListener("keydown", D, !1),
            this.update()
        }
        ,
        e.OrbitControls.prototype = Object.create(e.EventDispatcher.prototype),
        e.OrbitControls.prototype.constructor = e.OrbitControls,
        Object.defineProperties(e.OrbitControls.prototype, {
            center: {
                get: function() {
                    return this.target
                }
            },
            noZoom: {
                get: function() {
                    return !this.enableZoom
                },
                set: function(a) {
                    this.enableZoom = !a
                }
            },
            noRotate: {
                get: function() {
                    return !this.enableRotate
                },
                set: function(a) {
                    this.enableRotate = !a
                }
            },
            noPan: {
                get: function() {
                    return !this.enablePan
                },
                set: function(a) {
                    this.enablePan = !a
                }
            },
            noKeys: {
                get: function() {
                    return !this.enableKeys
                },
                set: function(a) {
                    this.enableKeys = !a
                }
            },
            staticMoving: {
                get: function() {
                    return !this.enableDamping
                },
                set: function(a) {
                    this.enableDamping = !a
                }
            },
            dynamicDampingFactor: {
                get: function() {
                    return this.dampingFactor
                },
                set: function(a) {
                    this.dampingFactor = a
                }
            }
        })
    }
    , {
        three: 10
    }],
    153: [function(a, b, c) {
        "use strict";
        var d = a("three")
          , e = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(d);
        e.DDSLoader = function() {
            this._parser = e.DDSLoader.parse
        }
        ,
        e.DDSLoader.prototype = Object.create(e.CompressedTextureLoader.prototype),
        e.DDSLoader.prototype.constructor = e.DDSLoader,
        e.DDSLoader.parse = function(a, b) {
            function c(a) {
                return a.charCodeAt(0) + (a.charCodeAt(1) << 8) + (a.charCodeAt(2) << 16) + (a.charCodeAt(3) << 24)
            }
            var d = {
                mipmaps: [],
                width: 0,
                height: 0,
                format: null,
                mipmapCount: 1
            }
              , f = c("DXT1")
              , g = c("DXT3")
              , h = c("DXT5")
              , i = c("ETC1")
              , j = c("ATCA")
              , k = new Int32Array(a,0,31);
            if (542327876 !== k[0])
                return d;
            if (4 & !k[20])
                return d;
            var l, m = k[21], n = !1;
            switch (m) {
            case f:
                l = 8,
                d.format = e.RGB_S3TC_DXT1_Format;
                break;
            case g:
                l = 16,
                d.format = e.RGBA_S3TC_DXT3_Format;
                break;
            case h:
                l = 16,
                d.format = e.RGBA_S3TC_DXT5_Format;
                break;
            case j:
                l = 16,
                d.format = e.RGBA_ATC_EXPLICIT_ALPHA_Format;
                break;
            case i:
                l = 8,
                d.format = e.RGB_ETC1_Format;
                break;
            default:
                if (!(32 === k[22] && 16711680 & k[23] && 65280 & k[24] && 255 & k[25] && 4278190080 & k[26]))
                    return d;
                n = !0,
                l = 64,
                d.format = e.RGBAFormat
            }
            d.mipmapCount = 1,
            131072 & k[2] && !1 !== b && (d.mipmapCount = Math.max(1, k[7]));
            var o = k[28];
            if (d.isCubemap = !!(512 & o),
            d.isCubemap && (!(1024 & o) || !(2048 & o) || !(4096 & o) || !(8192 & o) || !(16384 & o) || !(32768 & o)))
                return d;
            d.width = k[4],
            d.height = k[3];
            for (var p = k[1] + 4, q = d.isCubemap ? 6 : 1, r = 0; r < q; r++)
                for (var s = d.width, t = d.height, u = 0; u < d.mipmapCount; u++) {
                    if (n)
                        var v = function(a, b, c, d) {
                            for (var e = c * d * 4, f = new Uint8Array(a,b,e), g = new Uint8Array(e), h = 0, i = 0, j = 0; j < d; j++)
                                for (var k = 0; k < c; k++) {
                                    var l = f[i];
                                    i++;
                                    var m = f[i];
                                    i++;
                                    var n = f[i];
                                    i++;
                                    var o = f[i];
                                    i++,
                                    g[h] = n,
                                    h++,
                                    g[h] = m,
                                    h++,
                                    g[h] = l,
                                    h++,
                                    g[h] = o,
                                    h++
                                }
                            return g
                        }(a, p, s, t)
                          , w = v.length;
                    else
                        var w = Math.max(4, s) / 4 * Math.max(4, t) / 4 * l
                          , v = new Uint8Array(a,p,w);
                    var x = {
                        data: v,
                        width: s,
                        height: t
                    };
                    d.mipmaps.push(x),
                    p += w,
                    s = Math.max(s >> 1, 1),
                    t = Math.max(t >> 1, 1)
                }
            return d
        }
    }
    , {
        three: 10
    }],
    154: [function(a, b, c) {
        "use strict";
        var d = a("three")
          , e = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(d)
          , f = a("utils/Device")
          , g = function(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }(f);
        e.GLTFLoader = function() {
            function a(a) {
                this.manager = void 0 !== a ? a : e.DefaultLoadingManager
            }
            function b() {
                var a = {};
                return {
                    get: function(b) {
                        return a[b]
                    },
                    add: function(b, c) {
                        a[b] = c
                    },
                    remove: function(b) {
                        delete a[b]
                    },
                    removeAll: function() {
                        a = {}
                    },
                    update: function(b, c) {
                        b.updateMatrixWorld(),
                        c.updateMatrixWorld(),
                        c.matrixWorldInverse.getInverse(c.matrixWorld);
                        for (var d in a) {
                            var e = a[d];
                            e.update && e.update(b, c)
                        }
                    }
                }
            }
            function c(a, b) {
                var c = {}
                  , d = a.material.uniforms;
                for (var f in d) {
                    var g = d[f];
                    if (g.semantic) {
                        var h = g.node
                          , i = a;
                        h && (i = b[h]),
                        c[f] = {
                            semantic: g.semantic,
                            sourceNode: i,
                            targetNode: a,
                            uniform: g
                        }
                    }
                }
                this.boundUniforms = c,
                this._m4 = new e.Matrix4
            }
            function d(a) {
                this.name = o.KHR_MATERIALS_COMMON,
                this.lights = {};
                var b = a.extensions && a.extensions[o.KHR_MATERIALS_COMMON].lights;
                for (var c in b) {
                    var d, f = b[c], g = f[f.type], h = (new e.Color).fromArray(g.color);
                    switch (f.type) {
                    case "directional":
                        d = new e.DirectionalLight(h),
                        d.position.set(0, 0, 1);
                        break;
                    case "point":
                        d = new e.PointLight(h);
                        break;
                    case "spot":
                        d = new e.SpotLight(h),
                        d.position.set(0, 0, 1);
                        break;
                    case "ambient":
                        d = new e.AmbientLight(h)
                    }
                    d && (this.lights[c] = d)
                }
            }
            function f(a) {
                this.name = o.KHR_BINARY_GLTF;
                var b = new DataView(a,0,q)
                  , c = {
                    magic: j(new Uint8Array(a.slice(0, 4))),
                    version: b.getUint32(4, !0),
                    length: b.getUint32(8, !0),
                    contentLength: b.getUint32(12, !0),
                    contentFormat: b.getUint32(16, !0)
                };
                for (var d in p) {
                    var e = p[d];
                    if (c[d] !== e)
                        throw new Error('Unsupported glTF-Binary header: Expected "%s" to be "%s".',d,e)
                }
                var f = new Uint8Array(a,q,c.contentLength);
                this.header = c,
                this.content = j(f),
                this.body = a.slice(q + c.contentLength, c.length)
            }
            function h(a, b, c) {
                if (!a)
                    return Promise.resolve();
                var d, e = [];
                if ("[object Array]" === Object.prototype.toString.call(a)) {
                    d = [];
                    for (var f = a.length, g = 0; g < f; g++) {
                        var h = b.call(c || this, a[g], g);
                        h && (e.push(h),
                        h instanceof Promise ? h.then(function(a, b) {
                            d[g] = b
                        }
                        .bind(this, i)) : d[g] = h)
                    }
                } else {
                    d = {};
                    for (var i in a)
                        if (a.hasOwnProperty(i)) {
                            var h = b.call(c || this, a[i], i);
                            h && (e.push(h),
                            h instanceof Promise ? h.then(function(a, b) {
                                d[a] = b
                            }
                            .bind(this, i)) : d[i] = h)
                        }
                }
                return Promise.all(e).then(function() {
                    return d
                })
            }
            function i(a, b) {
                return "string" != typeof a || "" === a ? "" : /^https?:\/\//i.test(a) ? a : /^data:.*,.*$/i.test(a) ? a : (b || "") + a
            }
            function j(a) {
                for (var b = "", c = 0; c < a.length; c++)
                    b += String.fromCharCode(a[c]);
                return b
            }
            function k(a, b) {
                var c = {};
                for (var d in b.attributes) {
                    var e = b.attributes[d]
                      , f = b.parameters[e]
                      , g = f.type
                      , h = f.semantic;
                    c[d] = {
                        type: g,
                        semantic: h
                    }
                }
                var i = b.parameters
                  , j = b.attributes
                  , k = {};
                for (var d in c) {
                    var e = j[d]
                      , l = i[e]
                      , h = l.semantic;
                    h && (k[d] = l)
                }
                for (var e in k) {
                    var f = k[e]
                      , h = f.semantic
                      , m = new RegExp("\\b" + e + "\\b","g");
                    switch (h) {
                    case "POSITION":
                        a = a.replace(m, "position");
                        break;
                    case "NORMAL":
                        a = a.replace(m, "normal");
                        break;
                    case "TEXCOORD_0":
                    case "TEXCOORD0":
                    case "TEXCOORD":
                        a = a.replace(m, "uv");
                        break;
                    case "COLOR_0":
                    case "COLOR0":
                    case "COLOR":
                        a = a.replace(m, "color");
                        break;
                    case "WEIGHT":
                        a = a.replace(m, "skinWeight");
                        break;
                    case "JOINT":
                        a = a.replace(m, "skinIndex")
                    }
                }
                return a
            }
            function l() {
                return new e.MeshPhongMaterial({
                    color: 0,
                    emissive: 8947848,
                    specular: 0,
                    shininess: 0,
                    transparent: !1,
                    depthTest: !0,
                    side: e.FrontSide
                })
            }
            function m(a) {
                this.isDeferredShaderMaterial = !0,
                this.params = a
            }
            function n(a, c, d) {
                this.json = a || {},
                this.extensions = c || {},
                this.options = d || {},
                this.cache = new b
            }
            a.prototype = {
                constructor: a,
                load: function(a, b, c, d) {
                    var f = this
                      , g = this.path && "string" == typeof this.path ? this.path : e.Loader.prototype.extractUrlBase(a)
                      , h = new e.FileLoader(f.manager);
                    h.setResponseType("arraybuffer"),
                    h.load(a, function(a) {
                        f.parse(a, b, g)
                    }, c, d)
                },
                setCrossOrigin: function(a) {
                    this.crossOrigin = a
                },
                setPath: function(a) {
                    this.path = a
                },
                parse: function(a, b, c) {
                    var e, g = {};
                    j(new Uint8Array(a,0,4)) === p.magic ? (g[o.KHR_BINARY_GLTF] = new f(a),
                    e = g[o.KHR_BINARY_GLTF].content) : e = j(new Uint8Array(a));
                    var h = JSON.parse(e);
                    h.extensionsUsed && h.extensionsUsed.indexOf(o.KHR_MATERIALS_COMMON) >= 0 && (g[o.KHR_MATERIALS_COMMON] = new d(h)),
                    new n(h,g,{
                        path: c || this.path,
                        crossOrigin: this.crossOrigin
                    }).parse(function(a, c, d, e) {
                        b({
                            scene: a,
                            scenes: c,
                            cameras: d,
                            animations: e
                        })
                    })
                }
            },
            a.Shaders = new b,
            c.prototype.update = function(a, b) {
                var c = this.boundUniforms;
                for (var d in c) {
                    var e = c[d];
                    switch (e.semantic) {
                    case "MODELVIEW":
                        var f = e.uniform.value;
                        f.multiplyMatrices(b.matrixWorldInverse, e.sourceNode.matrixWorld);
                        break;
                    case "MODELVIEWINVERSETRANSPOSE":
                        var g = e.uniform.value;
                        this._m4.multiplyMatrices(b.matrixWorldInverse, e.sourceNode.matrixWorld),
                        g.getNormalMatrix(this._m4);
                        break;
                    case "PROJECTION":
                        var f = e.uniform.value;
                        f.copy(b.projectionMatrix);
                        break;
                    case "JOINTMATRIX":
                        for (var h = e.uniform.value, i = 0; i < h.length; i++)
                            h[i].getInverse(e.sourceNode.matrixWorld).multiply(e.targetNode.skeleton.bones[i].matrixWorld).multiply(e.targetNode.skeleton.boneInverses[i]).multiply(e.targetNode.bindMatrix)
                    }
                }
            }
            ,
            a.Animations = {
                update: function() {}
            };
            var o = {
                KHR_BINARY_GLTF: "KHR_binary_glTF",
                KHR_MATERIALS_COMMON: "KHR_materials_common"
            }
              , p = {
                magic: "glTF",
                version: 1,
                contentFormat: 0
            }
              , q = 20;
            f.prototype.loadShader = function(a, b) {
                var c = b[a.extensions[o.KHR_BINARY_GLTF].bufferView];
                return j(new Uint8Array(c))
            }
            ,
            f.prototype.loadTextureSourceUri = function(a, b) {
                var c = a.extensions[o.KHR_BINARY_GLTF]
                  , d = b[c.bufferView]
                  , e = j(new Uint8Array(d));
                return "data:" + c.mimeType + ";base64," + btoa(e)
            }
            ;
            var r = {
                FLOAT: 5126,
                FLOAT_MAT3: 35675,
                FLOAT_MAT4: 35676,
                FLOAT_VEC2: 35664,
                FLOAT_VEC3: 35665,
                FLOAT_VEC4: 35666,
                LINEAR: 9729,
                REPEAT: 10497,
                SAMPLER_2D: 35678,
                TRIANGLES: 4,
                LINES: 1,
                UNSIGNED_BYTE: 5121,
                UNSIGNED_SHORT: 5123,
                VERTEX_SHADER: 35633,
                FRAGMENT_SHADER: 35632
            }
              , s = {
                5126: Number,
                35675: e.Matrix3,
                35676: e.Matrix4,
                35664: e.Vector2,
                35665: e.Vector3,
                35666: e.Vector4,
                35678: e.Texture
            }
              , t = {
                5120: Int8Array,
                5121: Uint8Array,
                5122: Int16Array,
                5123: Uint16Array,
                5125: Uint32Array,
                5126: Float32Array
            }
              , u = {
                9728: e.NearestFilter,
                9729: e.LinearFilter,
                9984: e.NearestMipMapNearestFilter,
                9985: e.LinearMipMapNearestFilter,
                9986: e.NearestMipMapLinearFilter,
                9987: e.LinearMipMapLinearFilter
            }
              , v = {
                33071: e.ClampToEdgeWrapping,
                33648: e.MirroredRepeatWrapping,
                10497: e.RepeatWrapping
            }
              , w = {
                6406: e.AlphaFormat,
                6407: e.RGBFormat,
                6408: e.RGBAFormat,
                6409: e.LuminanceFormat,
                6410: e.LuminanceAlphaFormat
            }
              , x = {
                5121: e.UnsignedByteType,
                32819: e.UnsignedShort4444Type,
                32820: e.UnsignedShort5551Type,
                33635: e.UnsignedShort565Type
            }
              , y = {
                1028: e.BackSide,
                1029: e.FrontSide
            }
              , z = {
                512: e.NeverDepth,
                513: e.LessDepth,
                514: e.EqualDepth,
                515: e.LessEqualDepth,
                516: e.GreaterEqualDepth,
                517: e.NotEqualDepth,
                518: e.GreaterEqualDepth,
                519: e.AlwaysDepth
            }
              , A = {
                32774: e.AddEquation,
                32778: e.SubtractEquation,
                32779: e.ReverseSubtractEquation
            }
              , B = {
                0: e.ZeroFactor,
                1: e.OneFactor,
                768: e.SrcColorFactor,
                769: e.OneMinusSrcColorFactor,
                770: e.SrcAlphaFactor,
                771: e.OneMinusSrcAlphaFactor,
                772: e.DstAlphaFactor,
                773: e.OneMinusDstAlphaFactor,
                774: e.DstColorFactor,
                775: e.OneMinusDstColorFactor,
                776: e.SrcAlphaSaturateFactor
            }
              , C = {
                SCALAR: 1,
                VEC2: 2,
                VEC3: 3,
                VEC4: 4,
                MAT2: 4,
                MAT3: 9,
                MAT4: 16
            }
              , D = {
                scale: "scale",
                translation: "position",
                rotation: "quaternion"
            }
              , E = {
                LINEAR: e.InterpolateLinear,
                STEP: e.InterpolateDiscrete
            }
              , F = {
                2884: "CULL_FACE",
                2929: "DEPTH_TEST",
                3042: "BLEND",
                3089: "SCISSOR_TEST",
                32823: "POLYGON_OFFSET_FILL",
                32926: "SAMPLE_ALPHA_TO_COVERAGE"
            };
            return m.prototype.create = function() {
                var a = e.UniformsUtils.clone(this.params.uniforms);
                for (var b in this.params.uniforms) {
                    var c = this.params.uniforms[b];
                    c.value instanceof e.Texture && (a[b].value = c.value,
                    a[b].value.needsUpdate = !0),
                    a[b].semantic = c.semantic,
                    a[b].node = c.node
                }
                return this.params.uniforms = a,
                new e.RawShaderMaterial(this.params)
            }
            ,
            n.prototype._withDependencies = function(a) {
                for (var b = {}, c = 0; c < a.length; c++) {
                    var d = a[c]
                      , e = "load" + d.charAt(0).toUpperCase() + d.slice(1)
                      , f = this.cache.get(d);
                    if (void 0 !== f)
                        b[d] = f;
                    else if (this[e]) {
                        var g = this[e]();
                        this.cache.add(d, g),
                        b[d] = g
                    }
                }
                return h(b, function(a) {
                    return a
                })
            }
            ,
            n.prototype.parse = function(a) {
                var b = this.json;
                this.cache.removeAll(),
                this._withDependencies(["scenes", "cameras", "animations"]).then(function(c) {
                    var d = c.scenes[b.scene]
                      , e = [];
                    for (var f in c.scenes)
                        e.push(c.scenes[f]);
                    var g = [];
                    for (var f in c.cameras) {
                        var h = c.cameras[f];
                        g.push(h)
                    }
                    var i = [];
                    for (var f in c.animations)
                        i.push(c.animations[f]);
                    a(d, e, g, i)
                })
            }
            ,
            n.prototype.loadShaders = function() {
                var a = this.json
                  , b = this.extensions
                  , c = this.options;
                return this._withDependencies(["bufferViews"]).then(function(d) {
                    return h(a.shaders, function(a) {
                        return a.extensions && a.extensions[o.KHR_BINARY_GLTF] ? b[o.KHR_BINARY_GLTF].loadShader(a, d.bufferViews) : new Promise(function(b) {
                            var d = new e.FileLoader;
                            d.setResponseType("text"),
                            d.load(i(a.uri, c.path), function(a) {
                                b(a)
                            })
                        }
                        )
                    })
                })
            }
            ,
            n.prototype.loadBuffers = function() {
                var a = this.json
                  , b = this.extensions;
                this.options;
                return h(a.buffers, function(a, c) {
                    return "binary_glTF" === c ? b[o.KHR_BINARY_GLTF].body : "arraybuffer" === a.type || void 0 === a.type ? new Promise(function(a) {
                        var b = "gltf.buffer_combined";
                        g.default.mobile && (b += ".mobile"),
                        a(app.game.assets[b])
                    }
                    ) : void 0
                })
            }
            ,
            n.prototype.loadBufferViews = function() {
                var a = this.json;
                return this._withDependencies(["buffers"]).then(function(b) {
                    return h(a.bufferViews, function(a) {
                        return b.buffers[a.buffer].slice(a.byteOffset, a.byteOffset + a.byteLength)
                    })
                })
            }
            ,
            n.prototype.loadAccessors = function() {
                var a = this.json;
                return this._withDependencies(["bufferViews"]).then(function(b) {
                    return h(a.accessors, function(a) {
                        var c = b.bufferViews[a.bufferView]
                          , d = C[a.type]
                          , f = t[a.componentType]
                          , g = f.BYTES_PER_ELEMENT
                          , h = g * d;
                        if (a.byteStride && a.byteStride !== h) {
                            var i = new f(c)
                              , j = new e.InterleavedBuffer(i,a.byteStride / g);
                            return new e.InterleavedBufferAttribute(j,d,a.byteOffset / g)
                        }
                        return i = new f(c,a.byteOffset,a.count * d),
                        new e.BufferAttribute(i,d)
                    })
                })
            }
            ,
            n.prototype.loadTextures = function() {
                var a = this.json
                  , b = this.extensions
                  , c = this.options;
                return this._withDependencies(["bufferViews"]).then(function(d) {
                    return h(a.textures, function(f) {
                        if (f.source)
                            return new Promise(function(g) {
                                var h = a.images[f.source]
                                  , j = h.uri;
                                h.extensions && h.extensions[o.KHR_BINARY_GLTF] && (j = b[o.KHR_BINARY_GLTF].loadTextureSourceUri(h, d.bufferViews));
                                var k = e.Loader.Handlers.get(j);
                                null === k && (k = new e.TextureLoader),
                                k.setCrossOrigin(c.crossOrigin),
                                k.load(i(j, c.path), function(b) {
                                    if (b.flipY = !1,
                                    void 0 !== f.name && (b.name = f.name),
                                    b.format = void 0 !== f.format ? w[f.format] : e.RGBAFormat,
                                    void 0 !== f.internalFormat && (b.format,
                                    f.internalFormat),
                                    b.type = void 0 !== f.type ? x[f.type] : e.UnsignedByteType,
                                    f.sampler) {
                                        var c = a.samplers[f.sampler];
                                        b.magFilter = u[c.magFilter],
                                        b.minFilter = u[c.minFilter],
                                        b.wrapS = v[c.wrapS],
                                        b.wrapT = v[c.wrapT]
                                    }
                                    g(b)
                                }, void 0, function() {
                                    g()
                                })
                            }
                            )
                    })
                })
            }
            ,
            n.prototype.loadMaterials = function() {
                var a = this.json;
                return this._withDependencies(["shaders", "textures"]).then(function(b) {
                    return h(a.materials, function(c) {
                        var d, f, g = {}, h = {};
                        if (c.extensions && c.extensions[o.KHR_MATERIALS_COMMON] && (f = c.extensions[o.KHR_MATERIALS_COMMON]),
                        f) {
                            switch (f.technique) {
                            case "BLINN":
                            case "PHONG":
                                d = e.MeshPhongMaterial;
                                break;
                            case "LAMBERT":
                                d = e.MeshLambertMaterial;
                                break;
                            case "CONSTANT":
                            default:
                                d = e.MeshBasicMaterial
                            }
                            Object.assign(g, f.values),
                            (f.doubleSided || g.doubleSided) && (h.side = e.DoubleSide),
                            (f.transparent || g.transparent) && (h.transparent = !0,
                            h.opacity = void 0 !== g.transparency ? g.transparency : 1)
                        } else if (void 0 === c.technique)
                            d = e.MeshPhongMaterial,
                            Object.assign(g, c.values);
                        else {
                            d = m;
                            var i = a.techniques[c.technique];
                            h.uniforms = {};
                            var j = a.programs[i.program];
                            if (j) {
                                h.fragmentShader = b.shaders[j.fragmentShader],
                                h.fragmentShader || (d = e.MeshPhongMaterial);
                                var l = b.shaders[j.vertexShader];
                                l || (d = e.MeshPhongMaterial),
                                h.vertexShader = k(l, i);
                                var n = i.uniforms;
                                for (var p in n) {
                                    var q = n[p]
                                      , t = i.parameters[q]
                                      , u = t.type;
                                    if (!s[u])
                                        throw new Error("Unknown shader uniform param type: " + u);
                                    var v, w = t.count;
                                    void 0 !== c.values && (v = c.values[q]);
                                    var x = new s[u]
                                      , C = t.semantic
                                      , D = t.node;
                                    switch (u) {
                                    case r.FLOAT:
                                        x = t.value,
                                        "transparency" == q && (h.transparent = !0),
                                        void 0 !== v && (x = v);
                                        break;
                                    case r.FLOAT_VEC2:
                                    case r.FLOAT_VEC3:
                                    case r.FLOAT_VEC4:
                                    case r.FLOAT_MAT3:
                                        t && t.value && x.fromArray(t.value),
                                        v && x.fromArray(v);
                                        break;
                                    case r.FLOAT_MAT2:
                                        break;
                                    case r.FLOAT_MAT4:
                                        if (w) {
                                            x = new Array(w);
                                            for (var E = 0; E < w; E++)
                                                x[E] = new s[u];
                                            if (t && t.value) {
                                                var G = t.value;
                                                x.fromArray(G)
                                            }
                                            v && x.fromArray(v)
                                        } else {
                                            if (t && t.value) {
                                                var H = t.value;
                                                x.fromArray(H)
                                            }
                                            v && x.fromArray(v)
                                        }
                                        break;
                                    case r.SAMPLER_2D:
                                        x = void 0 !== v ? b.textures[v] : void 0 !== t.value ? b.textures[t.value] : null
                                    }
                                    h.uniforms[p] = {
                                        value: x,
                                        semantic: C,
                                        node: D
                                    }
                                }
                                for (var I = i.states || {}, J = I.enable || [], K = I.functions || {}, L = !1, M = !1, N = !1, O = 0, P = J.length; O < P; O++) {
                                    var Q = J[O];
                                    switch (F[Q]) {
                                    case "CULL_FACE":
                                        L = !0;
                                        break;
                                    case "DEPTH_TEST":
                                        M = !0;
                                        break;
                                    case "BLEND":
                                        N = !0;
                                        break;
                                    case "SCISSOR_TEST":
                                    case "POLYGON_OFFSET_FILL":
                                    case "SAMPLE_ALPHA_TO_COVERAGE":
                                        break;
                                    default:
                                        throw new Error("Unknown technique.states.enable: " + Q)
                                    }
                                }
                                h.side = L ? void 0 !== K.cullFace ? y[K.cullFace] : e.FrontSide : e.DoubleSide,
                                h.depthTest = M,
                                h.depthFunc = void 0 !== K.depthFunc ? z[K.depthFunc] : e.LessDepth,
                                h.depthWrite = void 0 === K.depthMask || K.depthMask[0],
                                h.blending = N ? e.CustomBlending : e.NoBlending,
                                h.transparent = N;
                                var R = K.blendEquationSeparate;
                                void 0 !== R ? (h.blendEquation = A[R[0]],
                                h.blendEquationAlpha = A[R[1]]) : (h.blendEquation = e.AddEquation,
                                h.blendEquationAlpha = e.AddEquation);
                                var S = K.blendFuncSeparate;
                                void 0 !== S ? (h.blendSrc = B[S[0]],
                                h.blendDst = B[S[1]],
                                h.blendSrcAlpha = B[S[2]],
                                h.blendDstAlpha = B[S[3]]) : (h.blendSrc = e.OneFactor,
                                h.blendDst = e.ZeroFactor,
                                h.blendSrcAlpha = e.OneFactor,
                                h.blendDstAlpha = e.ZeroFactor)
                            }
                        }
                        Array.isArray(g.diffuse) && (h.color = (new e.Color).fromArray(g.diffuse)),
                        delete h.diffuse,
                        "string" == typeof g.reflective && (h.envMap = b.textures[g.reflective]),
                        "string" == typeof g.bump && (h.bumpMap = b.textures[g.bump]),
                        Array.isArray(g.emission) ? d === e.MeshBasicMaterial ? h.color = (new e.Color).fromArray(g.emission) : h.emissive = (new e.Color).fromArray(g.emission) : "string" == typeof g.emission && (d === e.MeshBasicMaterial ? h.map = b.textures[g.emission] : h.emissiveMap = b.textures[g.emission]),
                        Array.isArray(g.specular) ? h.specular = (new e.Color).fromArray(g.specular) : "string" == typeof g.specular && (h.specularMap = b.textures[g.specular]),
                        void 0 !== g.shininess && (h.shininess = g.shininess);
                        var T = new d(h);
                        return void 0 !== c.name && (T.name = c.name),
                        T
                    })
                })
            }
            ,
            n.prototype.loadMeshes = function() {
                var a = this.json;
                return this._withDependencies(["accessors", "materials"]).then(function(b) {
                    return h(a.meshes, function(a) {
                        var c = new e.Object3D;
                        void 0 !== a.name && (c.name = a.name),
                        a.extras && (c.userData = a.extras);
                        var d = a.primitives;
                        for (var f in d) {
                            var g = d[f];
                            if (g.mode === r.TRIANGLES || void 0 === g.mode) {
                                var h = new e.BufferGeometry
                                  , i = g.attributes;
                                for (var j in i) {
                                    var k = i[j];
                                    if (!k)
                                        return;
                                    var m = b.accessors[k];
                                    switch (j) {
                                    case "POSITION":
                                        h.addAttribute("position", m);
                                        break;
                                    case "NORMAL":
                                        h.addAttribute("normal", m);
                                        break;
                                    case "TEXCOORD_0":
                                    case "TEXCOORD0":
                                    case "TEXCOORD":
                                        h.addAttribute("uv", m);
                                        break;
                                    case "COLOR_0":
                                    case "COLOR0":
                                    case "COLOR":
                                        h.addAttribute("color", m);
                                        break;
                                    case "WEIGHT":
                                        h.addAttribute("skinWeight", m);
                                        break;
                                    case "JOINT":
                                        h.addAttribute("skinIndex", m)
                                    }
                                }
                                g.indices && h.setIndex(b.accessors[g.indices]);
                                var n = void 0 !== b.materials ? b.materials[g.material] : l()
                                  , o = new e.Mesh(h,n);
                                o.castShadow = !0,
                                o.name = "0" === f ? c.name : c.name + f,
                                g.extras && (o.userData = g.extras),
                                c.add(o)
                            } else if (g.mode === r.LINES) {
                                var h = new e.BufferGeometry
                                  , i = g.attributes;
                                for (var j in i) {
                                    var k = i[j];
                                    if (!k)
                                        return;
                                    var m = b.accessors[k];
                                    switch (j) {
                                    case "POSITION":
                                        h.addAttribute("position", m);
                                        break;
                                    case "COLOR_0":
                                    case "COLOR0":
                                    case "COLOR":
                                        h.addAttribute("color", m)
                                    }
                                }
                                var o, n = b.materials[g.material];
                                g.indices ? (h.setIndex(b.accessors[g.indices]),
                                o = new e.LineSegments(h,n)) : o = new e.Line(h,n),
                                o.name = "0" === f ? c.name : c.name + f,
                                g.extras && (o.userData = g.extras),
                                c.add(o)
                            }
                        }
                        return c
                    })
                })
            }
            ,
            n.prototype.loadCameras = function() {
                return h(this.json.cameras, function(a) {
                    if ("perspective" == a.type && a.perspective) {
                        var b = a.perspective.yfov
                          , c = a.perspective.xfov
                          , d = a.perspective.aspect_ratio || 1;
                        c = void 0 === c && b ? b * d : c;
                        var f = new e.PerspectiveCamera(e.Math.radToDeg(c),d,a.perspective.znear || 1,a.perspective.zfar || 2e6);
                        return void 0 !== a.name && (f.name = a.name),
                        a.extras && (f.userData = a.extras),
                        f
                    }
                    if ("orthographic" == a.type && a.orthographic) {
                        var f = new e.OrthographicCamera(window.innerWidth / -2,window.innerWidth / 2,window.innerHeight / 2,window.innerHeight / -2,a.orthographic.znear,a.orthographic.zfar);
                        return void 0 !== a.name && (f.name = a.name),
                        a.extras && (f.userData = a.extras),
                        f
                    }
                })
            }
            ,
            n.prototype.loadSkins = function() {
                var a = this.json;
                return this._withDependencies(["accessors"]).then(function(b) {
                    return h(a.skins, function(a) {
                        return {
                            bindShapeMatrix: (new e.Matrix4).fromArray(a.bindShapeMatrix),
                            jointNames: a.jointNames,
                            inverseBindMatrices: b.accessors[a.inverseBindMatrices]
                        }
                    })
                })
            }
            ,
            n.prototype.loadAnimations = function() {
                var a = this.json;
                return this._withDependencies(["accessors", "nodes"]).then(function(b) {
                    return h(a.animations, function(a, c) {
                        var d = [];
                        for (var f in a.channels) {
                            var g = a.channels[f]
                              , h = a.samplers[g.sampler];
                            if (h) {
                                var i = g.target
                                  , j = i.id
                                  , k = void 0 !== a.parameters ? a.parameters[h.input] : h.input
                                  , l = void 0 !== a.parameters ? a.parameters[h.output] : h.output
                                  , m = b.accessors[k]
                                  , n = b.accessors[l]
                                  , o = b.nodes[j];
                                if (o) {
                                    o.updateMatrix(),
                                    o.matrixAutoUpdate = !0;
                                    var p = D[i.path] === D.rotation ? e.QuaternionKeyframeTrack : e.VectorKeyframeTrack
                                      , q = o.name ? o.name : o.uuid;
                                    d.push(new p(q + "." + D[i.path],e.AnimationUtils.arraySlice(m.array, 0),e.AnimationUtils.arraySlice(n.array, 0),E[h.interpolation]))
                                }
                            }
                        }
                        return new e.AnimationClip("animation_" + c,void 0,d)
                    })
                })
            }
            ,
            n.prototype.loadNodes = function() {
                var a = this.json
                  , b = this.extensions
                  , c = this;
                return h(a.nodes, function(a) {
                    var b, c = new e.Matrix4;
                    return a.jointName ? (b = new e.Bone,
                    b.name = void 0 !== a.name ? a.name : a.jointName,
                    b.jointName = a.jointName) : (b = new e.Object3D,
                    void 0 !== a.name && (b.name = a.name)),
                    a.extras && (b.userData = a.extras),
                    void 0 !== a.matrix ? (c.fromArray(a.matrix),
                    b.applyMatrix(c)) : (void 0 !== a.translation && b.position.fromArray(a.translation),
                    void 0 !== a.rotation && b.quaternion.fromArray(a.rotation),
                    void 0 !== a.scale && b.scale.fromArray(a.scale)),
                    b
                }).then(function(d) {
                    return c._withDependencies(["meshes", "skins", "cameras"]).then(function(c) {
                        return h(d, function(f, g) {
                            var h = a.nodes[g];
                            if (void 0 !== h.meshes)
                                for (var i in h.meshes) {
                                    var j = h.meshes[i]
                                      , k = c.meshes[j];
                                    if (void 0 !== k)
                                        for (var l in k.children) {
                                            var m, n = k.children[l], p = n.material, q = n.geometry, r = n.userData, s = n.name;
                                            switch (p.isDeferredShaderMaterial ? p = m = p.create() : m = p,
                                            n.type) {
                                            case "LineSegments":
                                                n = new e.LineSegments(q,m);
                                                break;
                                            case "Line":
                                                n = new e.Line(q,m);
                                                break;
                                            default:
                                                n = new e.Mesh(q,m)
                                            }
                                            n.castShadow = !0,
                                            n.userData = r,
                                            n.name = s;
                                            var t;
                                            if (h.skin && (t = c.skins[h.skin]),
                                            t) {
                                                var u = q
                                                  , m = p;
                                                m.skinning = !0,
                                                n = new e.SkinnedMesh(u,m,!1),
                                                n.castShadow = !0,
                                                n.userData = r,
                                                n.name = s;
                                                for (var v = [], w = [], x = 0, y = t.jointNames.length; x < y; x++) {
                                                    var z = t.jointNames[x]
                                                      , A = function(a) {
                                                        for (var b = Object.keys(d), c = 0, e = b.length; c < e; c++) {
                                                            var f = d[b[c]];
                                                            if (f.jointName === a)
                                                                return f
                                                        }
                                                        return null
                                                    }(z);
                                                    if (A) {
                                                        v.push(A);
                                                        var B = t.inverseBindMatrices.array
                                                          , C = (new e.Matrix4).fromArray(B, 16 * x);
                                                        w.push(C)
                                                    }
                                                }
                                                n.bind(new e.Skeleton(v,w,!1), t.bindShapeMatrix);
                                                !function b(c, e, f) {
                                                    var g = c[f];
                                                    if (void 0 !== g)
                                                        for (var h = 0, i = g.length; h < i; h++) {
                                                            var j = g[h]
                                                              , k = d[j]
                                                              , l = a.nodes[j];
                                                            void 0 !== k && !0 === k.isBone && void 0 !== l && (e.add(k),
                                                            b(l, k, "children"))
                                                        }
                                                }(h, n, "skeletons")
                                            }
                                            f.add(n)
                                        }
                                }
                            if (void 0 !== h.camera) {
                                var D = c.cameras[h.camera];
                                f.add(D)
                            }
                            if (h.extensions && h.extensions[o.KHR_MATERIALS_COMMON] && h.extensions[o.KHR_MATERIALS_COMMON].light) {
                                var E = b[o.KHR_MATERIALS_COMMON].lights
                                  , F = E[h.extensions[o.KHR_MATERIALS_COMMON].light];
                                f.add(F)
                            }
                            return f
                        })
                    })
                })
            }
            ,
            n.prototype.loadScenes = function() {
                function b(a, c, e) {
                    var f = e[a];
                    c.add(f);
                    var g = d.nodes[a];
                    if (g.children)
                        for (var h = g.children, i = 0, j = h.length; i < j; i++) {
                            var k = h[i];
                            b(k, f, e)
                        }
                }
                var d = this.json;
                return this._withDependencies(["nodes"]).then(function(f) {
                    return h(d.scenes, function(d) {
                        var g = new e.Scene;
                        void 0 !== d.name && (g.name = d.name),
                        d.extras && (g.userData = d.extras);
                        for (var h = d.nodes, i = 0, j = h.length; i < j; i++) {
                            b(h[i], g, f.nodes)
                        }
                        return g.traverse(function(b) {
                            if (b.material && b.material.isRawShaderMaterial) {
                                var d = new c(b,f.nodes);
                                a.Shaders.add(b.uuid, d)
                            }
                        }),
                        g
                    })
                })
            }
            ,
            a
        }()
    }
    , {
        three: 10,
        "utils/Device": 135
    }],
    155: [function(a, b, c) {
        "use strict";
        var d = a("three")
          , e = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(d);
        e.PVRLoader = function(a) {
            this.manager = void 0 !== a ? a : e.DefaultLoadingManager,
            this._parser = e.PVRLoader.parse
        }
        ,
        e.PVRLoader.prototype = Object.create(e.CompressedTextureLoader.prototype),
        e.PVRLoader.prototype.constructor = e.PVRLoader,
        e.PVRLoader.parse = function(a, b) {
            var c = new Uint32Array(a,0,13)
              , d = {
                buffer: a,
                header: c,
                loadMipmaps: b
            };
            if (55727696 === c[0])
                return e.PVRLoader._parseV3(d);
            if (559044176 === c[11])
                return e.PVRLoader._parseV2(d);
            throw new Error("[THREE.PVRLoader] Unknown PVR format")
        }
        ,
        e.PVRLoader._parseV3 = function(a) {
            var b, c, d = a.header, f = d[12], g = d[2], h = d[6], i = d[7], j = (d[9],
            d[10]), k = d[11];
            switch (g) {
            case 0:
                b = 2,
                c = e.RGB_PVRTC_2BPPV1_Format;
                break;
            case 1:
                b = 2,
                c = e.RGBA_PVRTC_2BPPV1_Format;
                break;
            case 2:
                b = 4,
                c = e.RGB_PVRTC_4BPPV1_Format;
                break;
            case 3:
                b = 4,
                c = e.RGBA_PVRTC_4BPPV1_Format;
                break;
            default:
                throw new Error("pvrtc - unsupported PVR format " + g)
            }
            return a.dataPtr = 52 + f,
            a.bpp = b,
            a.format = c,
            a.width = i,
            a.height = h,
            a.numSurfaces = j,
            a.numMipmaps = k,
            a.isCubemap = 6 === j,
            e.PVRLoader._extract(a)
        }
        ,
        e.PVRLoader._parseV2 = function(a) {
            var b, c, d = a.header, f = d[0], g = d[1], h = d[2], i = d[3], j = d[4], b = (d[5],
            d[6]), k = (d[7],
            d[8],
            d[9],
            d[10]), l = (d[11],
            d[12]), m = 255 & j, n = k > 0;
            if (25 === m)
                c = n ? e.RGBA_PVRTC_4BPPV1_Format : e.RGB_PVRTC_4BPPV1_Format,
                b = 4;
            else {
                if (24 !== m)
                    throw new Error("pvrtc - unknown format " + m);
                c = n ? e.RGBA_PVRTC_2BPPV1_Format : e.RGB_PVRTC_2BPPV1_Format,
                b = 2
            }
            return a.dataPtr = f,
            a.bpp = b,
            a.format = c,
            a.width = h,
            a.height = g,
            a.numSurfaces = l,
            a.numMipmaps = i + 1,
            a.isCubemap = 6 === l,
            e.PVRLoader._extract(a)
        }
        ,
        e.PVRLoader._extract = function(a) {
            var b = {
                mipmaps: [],
                width: a.width,
                height: a.height,
                format: a.format,
                mipmapCount: a.numMipmaps,
                isCubemap: a.isCubemap
            }
              , c = a.buffer
              , d = a.dataPtr
              , e = a.bpp
              , f = a.numSurfaces
              , g = 0
              , h = 0
              , i = 0
              , j = 0
              , k = 0
              , l = 0;
            2 === e ? (i = 8,
            j = 4) : (i = 4,
            j = 4),
            h = i * j * e / 8,
            b.mipmaps.length = a.numMipmaps * f;
            for (var m = 0; m < a.numMipmaps; ) {
                var n = a.width >> m
                  , o = a.height >> m;
                k = n / i,
                l = o / j,
                k < 2 && (k = 2),
                l < 2 && (l = 2),
                g = k * l * h;
                for (var p = 0; p < f; p++) {
                    var q = new Uint8Array(c,d,g)
                      , r = {
                        data: q,
                        width: n,
                        height: o
                    };
                    b.mipmaps[p * a.numMipmaps + m] = r,
                    d += g
                }
                m++
            }
            return b
        }
    }
    , {
        three: 10
    }],
    156: [function(a, b, c) {
        "use strict";
        var d = a("three")
          , e = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(d);
        e.EffectComposer = function(a, b) {
            if (this.renderer = a,
            void 0 === b) {
                var c = {
                    minFilter: e.LinearFilter,
                    magFilter: e.LinearFilter,
                    format: e.RGBAFormat,
                    stencilBuffer: !1
                }
                  , d = a.getSize();
                b = new e.WebGLRenderTarget(d.width,d.height,c)
            }
            this.renderTarget1 = b,
            this.renderTarget2 = b.clone(),
            this.writeBuffer = this.renderTarget1,
            this.readBuffer = this.renderTarget2,
            this.passes = [],
            e.CopyShader,
            this.copyPass = new e.ShaderPass(e.CopyShader)
        }
        ,
        Object.assign(e.EffectComposer.prototype, {
            swapBuffers: function() {
                var a = this.readBuffer;
                this.readBuffer = this.writeBuffer,
                this.writeBuffer = a
            },
            addPass: function(a) {
                this.passes.push(a);
                var b = this.renderer.getSize();
                a.setSize(b.width, b.height)
            },
            insertPass: function(a, b) {
                this.passes.splice(b, 0, a)
            },
            render: function(a) {
                var b, c, d = !1, f = this.passes.length;
                for (c = 0; c < f; c++)
                    if (b = this.passes[c],
                    !1 !== b.enabled) {
                        if (b.render(this.renderer, this.writeBuffer, this.readBuffer, a, d),
                        b.needsSwap) {
                            if (d) {
                                var g = this.renderer.context;
                                g.stencilFunc(g.NOTEQUAL, 1, 4294967295),
                                this.copyPass.render(this.renderer, this.writeBuffer, this.readBuffer, a),
                                g.stencilFunc(g.EQUAL, 1, 4294967295)
                            }
                            this.swapBuffers()
                        }
                        void 0 !== e.MaskPass && (b instanceof e.MaskPass ? d = !0 : b instanceof e.ClearMaskPass && (d = !1))
                    }
            },
            reset: function(a) {
                if (void 0 === a) {
                    var b = this.renderer.getSize();
                    a = this.renderTarget1.clone(),
                    a.setSize(b.width, b.height)
                }
                this.renderTarget1.dispose(),
                this.renderTarget2.dispose(),
                this.renderTarget1 = a,
                this.renderTarget2 = a.clone(),
                this.writeBuffer = this.renderTarget1,
                this.readBuffer = this.renderTarget2
            },
            setSize: function(a, b) {
                this.renderTarget1.setSize(a, b),
                this.renderTarget2.setSize(a, b);
                for (var c = 0; c < this.passes.length; c++)
                    this.passes[c].setSize(a, b)
            }
        }),
        e.Pass = function() {
            this.enabled = !0,
            this.needsSwap = !0,
            this.clear = !1,
            this.renderToScreen = !1
        }
        ,
        Object.assign(e.Pass.prototype, {
            setSize: function(a, b) {},
            render: function(a, b, c, d, e) {}
        })
    }
    , {
        three: 10
    }],
    157: [function(a, b, c) {
        "use strict";
        var d = a("three")
          , e = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(d);
        e.MaskPass = function(a, b) {
            e.Pass.call(this),
            this.scene = a,
            this.camera = b,
            this.clear = !0,
            this.needsSwap = !1,
            this.inverse = !1
        }
        ,
        e.MaskPass.prototype = Object.assign(Object.create(e.Pass.prototype), {
            constructor: e.MaskPass,
            render: function(a, b, c, d, e) {
                var f = a.context
                  , g = a.state;
                g.buffers.color.setMask(!1),
                g.buffers.depth.setMask(!1),
                g.buffers.color.setLocked(!0),
                g.buffers.depth.setLocked(!0);
                var h, i;
                this.inverse ? (h = 0,
                i = 1) : (h = 1,
                i = 0),
                g.buffers.stencil.setTest(!0),
                g.buffers.stencil.setOp(f.REPLACE, f.REPLACE, f.REPLACE),
                g.buffers.stencil.setFunc(f.ALWAYS, h, 4294967295),
                g.buffers.stencil.setClear(i),
                a.render(this.scene, this.camera, c, this.clear),
                a.render(this.scene, this.camera, b, this.clear),
                g.buffers.color.setLocked(!1),
                g.buffers.depth.setLocked(!1),
                g.buffers.stencil.setFunc(f.EQUAL, 1, 4294967295),
                g.buffers.stencil.setOp(f.KEEP, f.KEEP, f.KEEP)
            }
        }),
        e.ClearMaskPass = function() {
            e.Pass.call(this),
            this.needsSwap = !1
        }
        ,
        e.ClearMaskPass.prototype = Object.create(e.Pass.prototype),
        Object.assign(e.ClearMaskPass.prototype, {
            render: function(a, b, c, d, e) {
                a.state.buffers.stencil.setTest(!1)
            }
        })
    }
    , {
        three: 10
    }],
    158: [function(a, b, c) {
        "use strict";
        var d = a("three")
          , e = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(d);
        e.RenderPass = function(a, b, c, d, f) {
            e.Pass.call(this),
            this.scene = a,
            this.camera = b,
            this.overrideMaterial = c,
            this.clearColor = d,
            this.clearAlpha = void 0 !== f ? f : 0,
            this.clear = !0,
            this.clearDepth = !1,
            this.needsSwap = !1
        }
        ,
        e.RenderPass.prototype = Object.assign(Object.create(e.Pass.prototype), {
            constructor: e.RenderPass,
            render: function(a, b, c, d, e) {
                var f = a.autoClear;
                a.autoClear = !1,
                this.scene.overrideMaterial = this.overrideMaterial;
                var g, h;
                this.clearColor && (g = a.getClearColor().getHex(),
                h = a.getClearAlpha(),
                a.setClearColor(this.clearColor, this.clearAlpha)),
                this.clearDepth && a.clearDepth(),
                a.render(this.scene, this.camera, this.renderToScreen ? null : c, this.clear),
                this.clearColor && a.setClearColor(g, h),
                this.scene.overrideMaterial = null,
                a.autoClear = f
            }
        })
    }
    , {
        three: 10
    }],
    159: [function(a, b, c) {
        "use strict";
        var d = a("three")
          , e = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(d);
        e.ShaderPass = function(a, b) {
            e.Pass.call(this),
            this.textureID = void 0 !== b ? b : "tDiffuse",
            a instanceof e.ShaderMaterial ? (this.uniforms = a.uniforms,
            this.material = a) : a && (this.uniforms = e.UniformsUtils.clone(a.uniforms),
            this.material = new e.ShaderMaterial({
                defines: a.defines || {},
                uniforms: this.uniforms,
                vertexShader: a.vertexShader,
                fragmentShader: a.fragmentShader
            })),
            this.camera = new e.OrthographicCamera(-1,1,1,-1,0,1),
            this.scene = new e.Scene,
            this.quad = new e.Mesh(new e.PlaneBufferGeometry(2,2),null),
            this.quad.frustumCulled = !1,
            this.scene.add(this.quad)
        }
        ,
        e.ShaderPass.prototype = Object.assign(Object.create(e.Pass.prototype), {
            constructor: e.ShaderPass,
            render: function(a, b, c, d, e) {
                this.uniforms[this.textureID] && (this.uniforms[this.textureID].value = c.texture),
                this.quad.material = this.material,
                this.renderToScreen ? a.render(this.scene, this.camera) : a.render(this.scene, this.camera, b, this.clear)
            }
        })
    }
    , {
        three: 10
    }],
    160: [function(a, b, c) {
        "use strict";
        var d = a("three")
          , e = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }(d);
        e.ConvolutionShader = {
            defines: {
                KERNEL_SIZE_FLOAT: "25.0",
                KERNEL_SIZE_INT: "25"
            },
            uniforms: {
                tDiffuse: {
                    value: null
                },
                uImageIncrement: {
                    value: new e.Vector2(.001953125,0)
                },
                cKernel: {
                    value: []
                }
            },
            vertexShader: ["uniform vec2 uImageIncrement;", "varying vec2 vUv;", "void main() {", "vUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;", "gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"),
            fragmentShader: ["uniform float cKernel[ KERNEL_SIZE_INT ];", "uniform sampler2D tDiffuse;", "uniform vec2 uImageIncrement;", "varying vec2 vUv;", "void main() {", "vec2 imageCoord = vUv;", "vec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );", "for( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {", "sum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];", "imageCoord += uImageIncrement;", "}", "gl_FragColor = sum;", "}"].join("\n"),
            buildKernel: function(a) {
                var b, c, d, e, f = 2 * Math.ceil(3 * a) + 1;
                for (f > 25 && (f = 25),
                e = .5 * (f - 1),
                c = new Array(f),
                d = 0,
                b = 0; b < f; ++b)
                    c[b] = function(a, b) {
                        return Math.exp(-a * a / (2 * b * b))
                    }(b - e, a),
                    d += c[b];
                for (b = 0; b < f; ++b)
                    c[b] /= d;
                return c
            }
        }
    }
    , {
        three: 10
    }],
    161: [function(a, b, c) {
        "use strict";
        var d = a("three");
        ((function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }
        )(d)).CopyShader = {
            uniforms: {
                tDiffuse: {
                    value: null
                },
                opacity: {
                    value: 1
                }
            },
            vertexShader: ["varying vec2 vUv;", "void main() {", "vUv = uv;", "gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"),
            fragmentShader: ["uniform float opacity;", "uniform sampler2D tDiffuse;", "varying vec2 vUv;", "void main() {", "vec4 texel = texture2D( tDiffuse, vUv );", "gl_FragColor = opacity * texel;", "}"].join("\n")
        }
    }
    , {
        three: 10
    }],
    162: [function(a, b, c) {
        "use strict";
        var d = a("three");
        ((function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }
        )(d)).HorizontalTiltShiftShader = {
            uniforms: {
                tDiffuse: {
                    value: null
                },
                h: {
                    value: 1 / 512
                },
                r: {
                    value: .35
                }
            },
            vertexShader: ["varying vec2 vUv;", "void main() {", "vUv = uv;", "gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"),
            fragmentShader: ["uniform sampler2D tDiffuse;", "uniform float h;", "uniform float r;", "varying vec2 vUv;", "void main() {", "vec4 sum = vec4( 0.0 );", "float hh = h * abs( r - vUv.y );", "sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;", "sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;", "sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;", "sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;", "sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;", "sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;", "sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;", "sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;", "sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;", "gl_FragColor = sum;", "}"].join("\n")
        }
    }
    , {
        three: 10
    }],
    163: [function(a, b, c) {
        "use strict";
        var d = a("three");
        ((function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }
        )(d)).VerticalTiltShiftShader = {
            uniforms: {
                tDiffuse: {
                    value: null
                },
                v: {
                    value: 1 / 512
                },
                r: {
                    value: .35
                }
            },
            vertexShader: ["varying vec2 vUv;", "void main() {", "vUv = uv;", "gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"),
            fragmentShader: ["uniform sampler2D tDiffuse;", "uniform float v;", "uniform float r;", "varying vec2 vUv;", "void main() {", "vec4 sum = vec4( 0.0 );", "float vv = v * abs( r - vUv.y );", "sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;", "sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;", "sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;", "sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;", "sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;", "sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;", "sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;", "sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;", "sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;", "gl_FragColor = sum;", "}"].join("\n")
        }
    }
    , {
        three: 10
    }]
}, {}, [12]);
